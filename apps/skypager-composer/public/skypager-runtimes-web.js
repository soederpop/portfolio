(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["skypager"] = factory();
	else
		root["skypager"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 172);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, module) {var __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright JS Foundation and other contributors <https://js.foundation/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
;
(function () {
  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
  var undefined;
  /** Used as the semantic version number. */

  var VERSION = '4.17.11';
  /** Used as the size to enable large array optimizations. */

  var LARGE_ARRAY_SIZE = 200;
  /** Error message constants. */

  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
      FUNC_ERROR_TEXT = 'Expected a function';
  /** Used to stand-in for `undefined` hash values. */

  var HASH_UNDEFINED = '__lodash_hash_undefined__';
  /** Used as the maximum memoize cache size. */

  var MAX_MEMOIZE_SIZE = 500;
  /** Used as the internal argument placeholder. */

  var PLACEHOLDER = '__lodash_placeholder__';
  /** Used to compose bitmasks for cloning. */

  var CLONE_DEEP_FLAG = 1,
      CLONE_FLAT_FLAG = 2,
      CLONE_SYMBOLS_FLAG = 4;
  /** Used to compose bitmasks for value comparisons. */

  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;
  /** Used to compose bitmasks for function metadata. */

  var WRAP_BIND_FLAG = 1,
      WRAP_BIND_KEY_FLAG = 2,
      WRAP_CURRY_BOUND_FLAG = 4,
      WRAP_CURRY_FLAG = 8,
      WRAP_CURRY_RIGHT_FLAG = 16,
      WRAP_PARTIAL_FLAG = 32,
      WRAP_PARTIAL_RIGHT_FLAG = 64,
      WRAP_ARY_FLAG = 128,
      WRAP_REARG_FLAG = 256,
      WRAP_FLIP_FLAG = 512;
  /** Used as default options for `_.truncate`. */

  var DEFAULT_TRUNC_LENGTH = 30,
      DEFAULT_TRUNC_OMISSION = '...';
  /** Used to detect hot functions by number of calls within a span of milliseconds. */

  var HOT_COUNT = 800,
      HOT_SPAN = 16;
  /** Used to indicate the type of lazy iteratees. */

  var LAZY_FILTER_FLAG = 1,
      LAZY_MAP_FLAG = 2,
      LAZY_WHILE_FLAG = 3;
  /** Used as references for various `Number` constants. */

  var INFINITY = 1 / 0,
      MAX_SAFE_INTEGER = 9007199254740991,
      MAX_INTEGER = 1.7976931348623157e+308,
      NAN = 0 / 0;
  /** Used as references for the maximum length and index of an array. */

  var MAX_ARRAY_LENGTH = 4294967295,
      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;
  /** Used to associate wrap methods with their bit flags. */

  var wrapFlags = [['ary', WRAP_ARY_FLAG], ['bind', WRAP_BIND_FLAG], ['bindKey', WRAP_BIND_KEY_FLAG], ['curry', WRAP_CURRY_FLAG], ['curryRight', WRAP_CURRY_RIGHT_FLAG], ['flip', WRAP_FLIP_FLAG], ['partial', WRAP_PARTIAL_FLAG], ['partialRight', WRAP_PARTIAL_RIGHT_FLAG], ['rearg', WRAP_REARG_FLAG]];
  /** `Object#toString` result references. */

  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      asyncTag = '[object AsyncFunction]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      domExcTag = '[object DOMException]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      nullTag = '[object Null]',
      objectTag = '[object Object]',
      promiseTag = '[object Promise]',
      proxyTag = '[object Proxy]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]',
      undefinedTag = '[object Undefined]',
      weakMapTag = '[object WeakMap]',
      weakSetTag = '[object WeakSet]';
  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';
  /** Used to match empty string literals in compiled template source. */

  var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
  /** Used to match HTML entities and HTML characters. */

  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
      reUnescapedHtml = /[&<>"']/g,
      reHasEscapedHtml = RegExp(reEscapedHtml.source),
      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
  /** Used to match template delimiters. */

  var reEscape = /<%-([\s\S]+?)%>/g,
      reEvaluate = /<%([\s\S]+?)%>/g,
      reInterpolate = /<%=([\s\S]+?)%>/g;
  /** Used to match property names within property paths. */

  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/,
      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
  /**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */

  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
      reHasRegExpChar = RegExp(reRegExpChar.source);
  /** Used to match leading and trailing whitespace. */

  var reTrim = /^\s+|\s+$/g,
      reTrimStart = /^\s+/,
      reTrimEnd = /\s+$/;
  /** Used to match wrap detail comments. */

  var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
      reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
      reSplitDetails = /,? & /;
  /** Used to match words composed of alphanumeric characters. */

  var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
  /** Used to match backslashes in property paths. */

  var reEscapeChar = /\\(\\)?/g;
  /**
   * Used to match
   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
   */

  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
  /** Used to match `RegExp` flags from their coerced string values. */

  var reFlags = /\w*$/;
  /** Used to detect bad signed hexadecimal string values. */

  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
  /** Used to detect binary string values. */

  var reIsBinary = /^0b[01]+$/i;
  /** Used to detect host constructors (Safari). */

  var reIsHostCtor = /^\[object .+?Constructor\]$/;
  /** Used to detect octal string values. */

  var reIsOctal = /^0o[0-7]+$/i;
  /** Used to detect unsigned integer values. */

  var reIsUint = /^(?:0|[1-9]\d*)$/;
  /** Used to match Latin Unicode letters (excluding mathematical operators). */

  var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
  /** Used to ensure capturing order of template delimiters. */

  var reNoMatch = /($^)/;
  /** Used to match unescaped characters in compiled string literals. */

  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;
  /** Used to compose unicode character classes. */

  var rsAstralRange = "\\ud800-\\udfff",
      rsComboMarksRange = "\\u0300-\\u036f",
      reComboHalfMarksRange = "\\ufe20-\\ufe2f",
      rsComboSymbolsRange = "\\u20d0-\\u20ff",
      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
      rsDingbatRange = "\\u2700-\\u27bf",
      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
      rsPunctuationRange = "\\u2000-\\u206f",
      rsSpaceRange = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",
      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
      rsVarRange = "\\ufe0e\\ufe0f",
      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
  /** Used to compose unicode capture groups. */

  var rsApos = "['\u2019]",
      rsAstral = '[' + rsAstralRange + ']',
      rsBreak = '[' + rsBreakRange + ']',
      rsCombo = '[' + rsComboRange + ']',
      rsDigits = '\\d+',
      rsDingbat = '[' + rsDingbatRange + ']',
      rsLower = '[' + rsLowerRange + ']',
      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
      rsFitz = "\\ud83c[\\udffb-\\udfff]",
      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
      rsNonAstral = '[^' + rsAstralRange + ']',
      rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}",
      rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]",
      rsUpper = '[' + rsUpperRange + ']',
      rsZWJ = "\\u200d";
  /** Used to compose unicode regexes. */

  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
      reOptMod = rsModifier + '?',
      rsOptVar = '[' + rsVarRange + ']?',
      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
      rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
      rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
      rsSeq = rsOptVar + reOptMod + rsOptJoin,
      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';
  /** Used to match apostrophes. */

  var reApos = RegExp(rsApos, 'g');
  /**
   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
   */

  var reComboMark = RegExp(rsCombo, 'g');
  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */

  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');
  /** Used to match complex or compound words. */

  var reUnicodeWord = RegExp([rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')', rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')', rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower, rsUpper + '+' + rsOptContrUpper, rsOrdUpper, rsOrdLower, rsDigits, rsEmoji].join('|'), 'g');
  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */

  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + ']');
  /** Used to detect strings that need a more robust regexp to match words. */

  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
  /** Used to assign default `context` object properties. */

  var contextProps = ['Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array', 'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object', 'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array', 'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap', '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'];
  /** Used to make template sourceURLs easier to identify. */

  var templateCounter = -1;
  /** Used to identify `toStringTag` values of typed arrays. */

  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
  /** Used to identify `toStringTag` values supported by `_.clone`. */

  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
  /** Used to map Latin Unicode letters to basic Latin letters. */

  var deburredLetters = {
    // Latin-1 Supplement block.
    '\xc0': 'A',
    '\xc1': 'A',
    '\xc2': 'A',
    '\xc3': 'A',
    '\xc4': 'A',
    '\xc5': 'A',
    '\xe0': 'a',
    '\xe1': 'a',
    '\xe2': 'a',
    '\xe3': 'a',
    '\xe4': 'a',
    '\xe5': 'a',
    '\xc7': 'C',
    '\xe7': 'c',
    '\xd0': 'D',
    '\xf0': 'd',
    '\xc8': 'E',
    '\xc9': 'E',
    '\xca': 'E',
    '\xcb': 'E',
    '\xe8': 'e',
    '\xe9': 'e',
    '\xea': 'e',
    '\xeb': 'e',
    '\xcc': 'I',
    '\xcd': 'I',
    '\xce': 'I',
    '\xcf': 'I',
    '\xec': 'i',
    '\xed': 'i',
    '\xee': 'i',
    '\xef': 'i',
    '\xd1': 'N',
    '\xf1': 'n',
    '\xd2': 'O',
    '\xd3': 'O',
    '\xd4': 'O',
    '\xd5': 'O',
    '\xd6': 'O',
    '\xd8': 'O',
    '\xf2': 'o',
    '\xf3': 'o',
    '\xf4': 'o',
    '\xf5': 'o',
    '\xf6': 'o',
    '\xf8': 'o',
    '\xd9': 'U',
    '\xda': 'U',
    '\xdb': 'U',
    '\xdc': 'U',
    '\xf9': 'u',
    '\xfa': 'u',
    '\xfb': 'u',
    '\xfc': 'u',
    '\xdd': 'Y',
    '\xfd': 'y',
    '\xff': 'y',
    '\xc6': 'Ae',
    '\xe6': 'ae',
    '\xde': 'Th',
    '\xfe': 'th',
    '\xdf': 'ss',
    // Latin Extended-A block.
    "\u0100": 'A',
    "\u0102": 'A',
    "\u0104": 'A',
    "\u0101": 'a',
    "\u0103": 'a',
    "\u0105": 'a',
    "\u0106": 'C',
    "\u0108": 'C',
    "\u010A": 'C',
    "\u010C": 'C',
    "\u0107": 'c',
    "\u0109": 'c',
    "\u010B": 'c',
    "\u010D": 'c',
    "\u010E": 'D',
    "\u0110": 'D',
    "\u010F": 'd',
    "\u0111": 'd',
    "\u0112": 'E',
    "\u0114": 'E',
    "\u0116": 'E',
    "\u0118": 'E',
    "\u011A": 'E',
    "\u0113": 'e',
    "\u0115": 'e',
    "\u0117": 'e',
    "\u0119": 'e',
    "\u011B": 'e',
    "\u011C": 'G',
    "\u011E": 'G',
    "\u0120": 'G',
    "\u0122": 'G',
    "\u011D": 'g',
    "\u011F": 'g',
    "\u0121": 'g',
    "\u0123": 'g',
    "\u0124": 'H',
    "\u0126": 'H',
    "\u0125": 'h',
    "\u0127": 'h',
    "\u0128": 'I',
    "\u012A": 'I',
    "\u012C": 'I',
    "\u012E": 'I',
    "\u0130": 'I',
    "\u0129": 'i',
    "\u012B": 'i',
    "\u012D": 'i',
    "\u012F": 'i',
    "\u0131": 'i',
    "\u0134": 'J',
    "\u0135": 'j',
    "\u0136": 'K',
    "\u0137": 'k',
    "\u0138": 'k',
    "\u0139": 'L',
    "\u013B": 'L',
    "\u013D": 'L',
    "\u013F": 'L',
    "\u0141": 'L',
    "\u013A": 'l',
    "\u013C": 'l',
    "\u013E": 'l',
    "\u0140": 'l',
    "\u0142": 'l',
    "\u0143": 'N',
    "\u0145": 'N',
    "\u0147": 'N',
    "\u014A": 'N',
    "\u0144": 'n',
    "\u0146": 'n',
    "\u0148": 'n',
    "\u014B": 'n',
    "\u014C": 'O',
    "\u014E": 'O',
    "\u0150": 'O',
    "\u014D": 'o',
    "\u014F": 'o',
    "\u0151": 'o',
    "\u0154": 'R',
    "\u0156": 'R',
    "\u0158": 'R',
    "\u0155": 'r',
    "\u0157": 'r',
    "\u0159": 'r',
    "\u015A": 'S',
    "\u015C": 'S',
    "\u015E": 'S',
    "\u0160": 'S',
    "\u015B": 's',
    "\u015D": 's',
    "\u015F": 's',
    "\u0161": 's',
    "\u0162": 'T',
    "\u0164": 'T',
    "\u0166": 'T',
    "\u0163": 't',
    "\u0165": 't',
    "\u0167": 't',
    "\u0168": 'U',
    "\u016A": 'U',
    "\u016C": 'U',
    "\u016E": 'U',
    "\u0170": 'U',
    "\u0172": 'U',
    "\u0169": 'u',
    "\u016B": 'u',
    "\u016D": 'u',
    "\u016F": 'u',
    "\u0171": 'u',
    "\u0173": 'u',
    "\u0174": 'W',
    "\u0175": 'w',
    "\u0176": 'Y',
    "\u0177": 'y',
    "\u0178": 'Y',
    "\u0179": 'Z',
    "\u017B": 'Z',
    "\u017D": 'Z',
    "\u017A": 'z',
    "\u017C": 'z',
    "\u017E": 'z',
    "\u0132": 'IJ',
    "\u0133": 'ij',
    "\u0152": 'Oe',
    "\u0153": 'oe',
    "\u0149": "'n",
    "\u017F": 's'
  };
  /** Used to map characters to HTML entities. */

  var htmlEscapes = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#39;'
  };
  /** Used to map HTML entities to characters. */

  var htmlUnescapes = {
    '&amp;': '&',
    '&lt;': '<',
    '&gt;': '>',
    '&quot;': '"',
    '&#39;': "'"
  };
  /** Used to escape characters for inclusion in compiled string literals. */

  var stringEscapes = {
    '\\': '\\',
    "'": "'",
    '\n': 'n',
    '\r': 'r',
    "\u2028": 'u2028',
    "\u2029": 'u2029'
  };
  /** Built-in method references without a dependency on `root`. */

  var freeParseFloat = parseFloat,
      freeParseInt = parseInt;
  /** Detect free variable `global` from Node.js. */

  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
  /** Detect free variable `self`. */

  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
  /** Used as a reference to the global object. */

  var root = freeGlobal || freeSelf || Function('return this')();
  /** Detect free variable `exports`. */

  var freeExports =  true && exports && !exports.nodeType && exports;
  /** Detect free variable `module`. */

  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
  /** Detect the popular CommonJS extension `module.exports`. */

  var moduleExports = freeModule && freeModule.exports === freeExports;
  /** Detect free variable `process` from Node.js. */

  var freeProcess = moduleExports && freeGlobal.process;
  /** Used to access faster Node.js helpers. */

  var nodeUtil = function () {
    try {
      // Use `util.types` for Node.js 10+.
      var types = freeModule && freeModule.require && freeModule.require('util').types;

      if (types) {
        return types;
      } // Legacy `process.binding('util')` for Node.js < 10.


      return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {}
  }();
  /* Node.js helper references. */


  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
      nodeIsDate = nodeUtil && nodeUtil.isDate,
      nodeIsMap = nodeUtil && nodeUtil.isMap,
      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
      nodeIsSet = nodeUtil && nodeUtil.isSet,
      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
  /*--------------------------------------------------------------------------*/

  /**
   * A faster alternative to `Function#apply`, this function invokes `func`
   * with the `this` binding of `thisArg` and the arguments of `args`.
   *
   * @private
   * @param {Function} func The function to invoke.
   * @param {*} thisArg The `this` binding of `func`.
   * @param {Array} args The arguments to invoke `func` with.
   * @returns {*} Returns the result of `func`.
   */

  function apply(func, thisArg, args) {
    switch (args.length) {
      case 0:
        return func.call(thisArg);

      case 1:
        return func.call(thisArg, args[0]);

      case 2:
        return func.call(thisArg, args[0], args[1]);

      case 3:
        return func.call(thisArg, args[0], args[1], args[2]);
    }

    return func.apply(thisArg, args);
  }
  /**
   * A specialized version of `baseAggregator` for arrays.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} setter The function to set `accumulator` values.
   * @param {Function} iteratee The iteratee to transform keys.
   * @param {Object} accumulator The initial aggregated object.
   * @returns {Function} Returns `accumulator`.
   */


  function arrayAggregator(array, setter, iteratee, accumulator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      var value = array[index];
      setter(accumulator, value, iteratee(value), array);
    }

    return accumulator;
  }
  /**
   * A specialized version of `_.forEach` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */


  function arrayEach(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (iteratee(array[index], index, array) === false) {
        break;
      }
    }

    return array;
  }
  /**
   * A specialized version of `_.forEachRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */


  function arrayEachRight(array, iteratee) {
    var length = array == null ? 0 : array.length;

    while (length--) {
      if (iteratee(array[length], length, array) === false) {
        break;
      }
    }

    return array;
  }
  /**
   * A specialized version of `_.every` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if all elements pass the predicate check,
   *  else `false`.
   */


  function arrayEvery(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (!predicate(array[index], index, array)) {
        return false;
      }
    }

    return true;
  }
  /**
   * A specialized version of `_.filter` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */


  function arrayFilter(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];

      if (predicate(value, index, array)) {
        result[resIndex++] = value;
      }
    }

    return result;
  }
  /**
   * A specialized version of `_.includes` for arrays without support for
   * specifying an index to search from.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */


  function arrayIncludes(array, value) {
    var length = array == null ? 0 : array.length;
    return !!length && baseIndexOf(array, value, 0) > -1;
  }
  /**
   * This function is like `arrayIncludes` except that it accepts a comparator.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */


  function arrayIncludesWith(array, value, comparator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (comparator(value, array[index])) {
        return true;
      }
    }

    return false;
  }
  /**
   * A specialized version of `_.map` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   */


  function arrayMap(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length,
        result = Array(length);

    while (++index < length) {
      result[index] = iteratee(array[index], index, array);
    }

    return result;
  }
  /**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */


  function arrayPush(array, values) {
    var index = -1,
        length = values.length,
        offset = array.length;

    while (++index < length) {
      array[offset + index] = values[index];
    }

    return array;
  }
  /**
   * A specialized version of `_.reduce` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the first element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */


  function arrayReduce(array, iteratee, accumulator, initAccum) {
    var index = -1,
        length = array == null ? 0 : array.length;

    if (initAccum && length) {
      accumulator = array[++index];
    }

    while (++index < length) {
      accumulator = iteratee(accumulator, array[index], index, array);
    }

    return accumulator;
  }
  /**
   * A specialized version of `_.reduceRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the last element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */


  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
    var length = array == null ? 0 : array.length;

    if (initAccum && length) {
      accumulator = array[--length];
    }

    while (length--) {
      accumulator = iteratee(accumulator, array[length], length, array);
    }

    return accumulator;
  }
  /**
   * A specialized version of `_.some` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if any element passes the predicate check,
   *  else `false`.
   */


  function arraySome(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (predicate(array[index], index, array)) {
        return true;
      }
    }

    return false;
  }
  /**
   * Gets the size of an ASCII `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */


  var asciiSize = baseProperty('length');
  /**
   * Converts an ASCII `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */

  function asciiToArray(string) {
    return string.split('');
  }
  /**
   * Splits an ASCII `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */


  function asciiWords(string) {
    return string.match(reAsciiWord) || [];
  }
  /**
   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
   * without support for iteratee shorthands, which iterates over `collection`
   * using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the found element or its key, else `undefined`.
   */


  function baseFindKey(collection, predicate, eachFunc) {
    var result;
    eachFunc(collection, function (value, key, collection) {
      if (predicate(value, key, collection)) {
        result = key;
        return false;
      }
    });
    return result;
  }
  /**
   * The base implementation of `_.findIndex` and `_.findLastIndex` without
   * support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {number} fromIndex The index to search from.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */


  function baseFindIndex(array, predicate, fromIndex, fromRight) {
    var length = array.length,
        index = fromIndex + (fromRight ? 1 : -1);

    while (fromRight ? index-- : ++index < length) {
      if (predicate(array[index], index, array)) {
        return index;
      }
    }

    return -1;
  }
  /**
   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */


  function baseIndexOf(array, value, fromIndex) {
    return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);
  }
  /**
   * This function is like `baseIndexOf` except that it accepts a comparator.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */


  function baseIndexOfWith(array, value, fromIndex, comparator) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (comparator(array[index], value)) {
        return index;
      }
    }

    return -1;
  }
  /**
   * The base implementation of `_.isNaN` without support for number objects.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
   */


  function baseIsNaN(value) {
    return value !== value;
  }
  /**
   * The base implementation of `_.mean` and `_.meanBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the mean.
   */


  function baseMean(array, iteratee) {
    var length = array == null ? 0 : array.length;
    return length ? baseSum(array, iteratee) / length : NAN;
  }
  /**
   * The base implementation of `_.property` without support for deep paths.
   *
   * @private
   * @param {string} key The key of the property to get.
   * @returns {Function} Returns the new accessor function.
   */


  function baseProperty(key) {
    return function (object) {
      return object == null ? undefined : object[key];
    };
  }
  /**
   * The base implementation of `_.propertyOf` without support for deep paths.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Function} Returns the new accessor function.
   */


  function basePropertyOf(object) {
    return function (key) {
      return object == null ? undefined : object[key];
    };
  }
  /**
   * The base implementation of `_.reduce` and `_.reduceRight`, without support
   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} accumulator The initial value.
   * @param {boolean} initAccum Specify using the first or last element of
   *  `collection` as the initial value.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the accumulated value.
   */


  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
    eachFunc(collection, function (value, index, collection) {
      accumulator = initAccum ? (initAccum = false, value) : iteratee(accumulator, value, index, collection);
    });
    return accumulator;
  }
  /**
   * The base implementation of `_.sortBy` which uses `comparer` to define the
   * sort order of `array` and replaces criteria objects with their corresponding
   * values.
   *
   * @private
   * @param {Array} array The array to sort.
   * @param {Function} comparer The function to define sort order.
   * @returns {Array} Returns `array`.
   */


  function baseSortBy(array, comparer) {
    var length = array.length;
    array.sort(comparer);

    while (length--) {
      array[length] = array[length].value;
    }

    return array;
  }
  /**
   * The base implementation of `_.sum` and `_.sumBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the sum.
   */


  function baseSum(array, iteratee) {
    var result,
        index = -1,
        length = array.length;

    while (++index < length) {
      var current = iteratee(array[index]);

      if (current !== undefined) {
        result = result === undefined ? current : result + current;
      }
    }

    return result;
  }
  /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */


  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }

    return result;
  }
  /**
   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
   * of key-value pairs for `object` corresponding to the property names of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the key-value pairs.
   */


  function baseToPairs(object, props) {
    return arrayMap(props, function (key) {
      return [key, object[key]];
    });
  }
  /**
   * The base implementation of `_.unary` without support for storing metadata.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @returns {Function} Returns the new capped function.
   */


  function baseUnary(func) {
    return function (value) {
      return func(value);
    };
  }
  /**
   * The base implementation of `_.values` and `_.valuesIn` which creates an
   * array of `object` property values corresponding to the property names
   * of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the array of property values.
   */


  function baseValues(object, props) {
    return arrayMap(props, function (key) {
      return object[key];
    });
  }
  /**
   * Checks if a `cache` value for `key` exists.
   *
   * @private
   * @param {Object} cache The cache to query.
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */


  function cacheHas(cache, key) {
    return cache.has(key);
  }
  /**
   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the first unmatched string symbol.
   */


  function charsStartIndex(strSymbols, chrSymbols) {
    var index = -1,
        length = strSymbols.length;

    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}

    return index;
  }
  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the last unmatched string symbol.
   */


  function charsEndIndex(strSymbols, chrSymbols) {
    var index = strSymbols.length;

    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}

    return index;
  }
  /**
   * Gets the number of `placeholder` occurrences in `array`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} placeholder The placeholder to search for.
   * @returns {number} Returns the placeholder count.
   */


  function countHolders(array, placeholder) {
    var length = array.length,
        result = 0;

    while (length--) {
      if (array[length] === placeholder) {
        ++result;
      }
    }

    return result;
  }
  /**
   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
   * letters to basic Latin letters.
   *
   * @private
   * @param {string} letter The matched letter to deburr.
   * @returns {string} Returns the deburred letter.
   */


  var deburrLetter = basePropertyOf(deburredLetters);
  /**
   * Used by `_.escape` to convert characters to HTML entities.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */

  var escapeHtmlChar = basePropertyOf(htmlEscapes);
  /**
   * Used by `_.template` to escape characters for inclusion in compiled string literals.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */

  function escapeStringChar(chr) {
    return '\\' + stringEscapes[chr];
  }
  /**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */


  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }
  /**
   * Checks if `string` contains Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
   */


  function hasUnicode(string) {
    return reHasUnicode.test(string);
  }
  /**
   * Checks if `string` contains a word composed of Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a word is found, else `false`.
   */


  function hasUnicodeWord(string) {
    return reHasUnicodeWord.test(string);
  }
  /**
   * Converts `iterator` to an array.
   *
   * @private
   * @param {Object} iterator The iterator to convert.
   * @returns {Array} Returns the converted array.
   */


  function iteratorToArray(iterator) {
    var data,
        result = [];

    while (!(data = iterator.next()).done) {
      result.push(data.value);
    }

    return result;
  }
  /**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */


  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);
    map.forEach(function (value, key) {
      result[++index] = [key, value];
    });
    return result;
  }
  /**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */


  function overArg(func, transform) {
    return function (arg) {
      return func(transform(arg));
    };
  }
  /**
   * Replaces all `placeholder` elements in `array` with an internal placeholder
   * and returns an array of their indexes.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {*} placeholder The placeholder to replace.
   * @returns {Array} Returns the new array of placeholder indexes.
   */


  function replaceHolders(array, placeholder) {
    var index = -1,
        length = array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];

      if (value === placeholder || value === PLACEHOLDER) {
        array[index] = PLACEHOLDER;
        result[resIndex++] = index;
      }
    }

    return result;
  }
  /**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */


  function setToArray(set) {
    var index = -1,
        result = Array(set.size);
    set.forEach(function (value) {
      result[++index] = value;
    });
    return result;
  }
  /**
   * Converts `set` to its value-value pairs.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the value-value pairs.
   */


  function setToPairs(set) {
    var index = -1,
        result = Array(set.size);
    set.forEach(function (value) {
      result[++index] = [value, value];
    });
    return result;
  }
  /**
   * A specialized version of `_.indexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */


  function strictIndexOf(array, value, fromIndex) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }

    return -1;
  }
  /**
   * A specialized version of `_.lastIndexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */


  function strictLastIndexOf(array, value, fromIndex) {
    var index = fromIndex + 1;

    while (index--) {
      if (array[index] === value) {
        return index;
      }
    }

    return index;
  }
  /**
   * Gets the number of symbols in `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the string size.
   */


  function stringSize(string) {
    return hasUnicode(string) ? unicodeSize(string) : asciiSize(string);
  }
  /**
   * Converts `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */


  function stringToArray(string) {
    return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);
  }
  /**
   * Used by `_.unescape` to convert HTML entities to characters.
   *
   * @private
   * @param {string} chr The matched character to unescape.
   * @returns {string} Returns the unescaped character.
   */


  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);
  /**
   * Gets the size of a Unicode `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */

  function unicodeSize(string) {
    var result = reUnicode.lastIndex = 0;

    while (reUnicode.test(string)) {
      ++result;
    }

    return result;
  }
  /**
   * Converts a Unicode `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */


  function unicodeToArray(string) {
    return string.match(reUnicode) || [];
  }
  /**
   * Splits a Unicode `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */


  function unicodeWords(string) {
    return string.match(reUnicodeWord) || [];
  }
  /*--------------------------------------------------------------------------*/

  /**
   * Create a new pristine `lodash` function using the `context` object.
   *
   * @static
   * @memberOf _
   * @since 1.1.0
   * @category Util
   * @param {Object} [context=root] The context object.
   * @returns {Function} Returns a new `lodash` function.
   * @example
   *
   * _.mixin({ 'foo': _.constant('foo') });
   *
   * var lodash = _.runInContext();
   * lodash.mixin({ 'bar': lodash.constant('bar') });
   *
   * _.isFunction(_.foo);
   * // => true
   * _.isFunction(_.bar);
   * // => false
   *
   * lodash.isFunction(lodash.foo);
   * // => false
   * lodash.isFunction(lodash.bar);
   * // => true
   *
   * // Create a suped-up `defer` in Node.js.
   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
   */


  var runInContext = function runInContext(context) {
    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));
    /** Built-in constructor references. */

    var Array = context.Array,
        Date = context.Date,
        Error = context.Error,
        Function = context.Function,
        Math = context.Math,
        Object = context.Object,
        RegExp = context.RegExp,
        String = context.String,
        TypeError = context.TypeError;
    /** Used for built-in method references. */

    var arrayProto = Array.prototype,
        funcProto = Function.prototype,
        objectProto = Object.prototype;
    /** Used to detect overreaching core-js shims. */

    var coreJsData = context['__core-js_shared__'];
    /** Used to resolve the decompiled source of functions. */

    var funcToString = funcProto.toString;
    /** Used to check objects for own properties. */

    var hasOwnProperty = objectProto.hasOwnProperty;
    /** Used to generate unique IDs. */

    var idCounter = 0;
    /** Used to detect methods masquerading as native. */

    var maskSrcKey = function () {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
      return uid ? 'Symbol(src)_1.' + uid : '';
    }();
    /**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
     * of values.
     */


    var nativeObjectToString = objectProto.toString;
    /** Used to infer the `Object` constructor. */

    var objectCtorString = funcToString.call(Object);
    /** Used to restore the original `_` reference in `_.noConflict`. */

    var oldDash = root._;
    /** Used to detect if a method is native. */

    var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
    /** Built-in value references. */

    var Buffer = moduleExports ? context.Buffer : undefined,
        Symbol = context.Symbol,
        Uint8Array = context.Uint8Array,
        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
        getPrototype = overArg(Object.getPrototypeOf, Object),
        objectCreate = Object.create,
        propertyIsEnumerable = objectProto.propertyIsEnumerable,
        splice = arrayProto.splice,
        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,
        symIterator = Symbol ? Symbol.iterator : undefined,
        symToStringTag = Symbol ? Symbol.toStringTag : undefined;

    var defineProperty = function () {
      try {
        var func = getNative(Object, 'defineProperty');
        func({}, '', {});
        return func;
      } catch (e) {}
    }();
    /** Mocked built-ins. */


    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
        ctxNow = Date && Date.now !== root.Date.now && Date.now,
        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;
    /* Built-in method references for those with the same name as other `lodash` methods. */

    var nativeCeil = Math.ceil,
        nativeFloor = Math.floor,
        nativeGetSymbols = Object.getOwnPropertySymbols,
        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
        nativeIsFinite = context.isFinite,
        nativeJoin = arrayProto.join,
        nativeKeys = overArg(Object.keys, Object),
        nativeMax = Math.max,
        nativeMin = Math.min,
        nativeNow = Date.now,
        nativeParseInt = context.parseInt,
        nativeRandom = Math.random,
        nativeReverse = arrayProto.reverse;
    /* Built-in method references that are verified to be native. */

    var DataView = getNative(context, 'DataView'),
        Map = getNative(context, 'Map'),
        Promise = getNative(context, 'Promise'),
        Set = getNative(context, 'Set'),
        WeakMap = getNative(context, 'WeakMap'),
        nativeCreate = getNative(Object, 'create');
    /** Used to store function metadata. */

    var metaMap = WeakMap && new WeakMap();
    /** Used to lookup unminified function names. */

    var realNames = {};
    /** Used to detect maps, sets, and weakmaps. */

    var dataViewCtorString = toSource(DataView),
        mapCtorString = toSource(Map),
        promiseCtorString = toSource(Promise),
        setCtorString = toSource(Set),
        weakMapCtorString = toSource(WeakMap);
    /** Used to convert symbols to primitives and strings. */

    var symbolProto = Symbol ? Symbol.prototype : undefined,
        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
        symbolToString = symbolProto ? symbolProto.toString : undefined;
    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object which wraps `value` to enable implicit method
     * chain sequences. Methods that operate on and return arrays, collections,
     * and functions can be chained together. Methods that retrieve a single value
     * or may return a primitive value will automatically end the chain sequence
     * and return the unwrapped value. Otherwise, the value must be unwrapped
     * with `_#value`.
     *
     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
     * enabled using `_.chain`.
     *
     * The execution of chained methods is lazy, that is, it's deferred until
     * `_#value` is implicitly or explicitly called.
     *
     * Lazy evaluation allows several methods to support shortcut fusion.
     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
     * the creation of intermediate arrays and can greatly reduce the number of
     * iteratee executions. Sections of a chain sequence qualify for shortcut
     * fusion if the section is applied to an array and iteratees accept only
     * one argument. The heuristic for whether a section qualifies for shortcut
     * fusion is subject to change.
     *
     * Chaining is supported in custom builds as long as the `_#value` method is
     * directly or indirectly included in the build.
     *
     * In addition to lodash methods, wrappers have `Array` and `String` methods.
     *
     * The wrapper `Array` methods are:
     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
     *
     * The wrapper `String` methods are:
     * `replace` and `split`
     *
     * The wrapper methods that support shortcut fusion are:
     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
     *
     * The chainable wrapper methods are:
     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
     * `zipObject`, `zipObjectDeep`, and `zipWith`
     *
     * The wrapper methods that are **not** chainable by default are:
     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
     * `upperFirst`, `value`, and `words`
     *
     * @name _
     * @constructor
     * @category Seq
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // Returns an unwrapped value.
     * wrapped.reduce(_.add);
     * // => 6
     *
     * // Returns a wrapped value.
     * var squares = wrapped.map(square);
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */

    function lodash(value) {
      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
        if (value instanceof LodashWrapper) {
          return value;
        }

        if (hasOwnProperty.call(value, '__wrapped__')) {
          return wrapperClone(value);
        }
      }

      return new LodashWrapper(value);
    }
    /**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} proto The object to inherit from.
     * @returns {Object} Returns the new object.
     */


    var baseCreate = function () {
      function object() {}

      return function (proto) {
        if (!isObject(proto)) {
          return {};
        }

        if (objectCreate) {
          return objectCreate(proto);
        }

        object.prototype = proto;
        var result = new object();
        object.prototype = undefined;
        return result;
      };
    }();
    /**
     * The function whose prototype chain sequence wrappers inherit from.
     *
     * @private
     */


    function baseLodash() {} // No operation performed.

    /**
     * The base constructor for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap.
     * @param {boolean} [chainAll] Enable explicit method chain sequences.
     */


    function LodashWrapper(value, chainAll) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__chain__ = !!chainAll;
      this.__index__ = 0;
      this.__values__ = undefined;
    }
    /**
     * By default, the template delimiters used by lodash are like those in
     * embedded Ruby (ERB) as well as ES2015 template strings. Change the
     * following template settings to use alternative delimiters.
     *
     * @static
     * @memberOf _
     * @type {Object}
     */


    lodash.templateSettings = {
      /**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'escape': reEscape,

      /**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'evaluate': reEvaluate,

      /**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'interpolate': reInterpolate,

      /**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type {string}
       */
      'variable': '',

      /**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type {Object}
       */
      'imports': {
        /**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type {Function}
         */
        '_': lodash
      }
    }; // Ensure wrappers are instances of `baseLodash`.

    lodash.prototype = baseLodash.prototype;
    lodash.prototype.constructor = lodash;
    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
    LodashWrapper.prototype.constructor = LodashWrapper;
    /*------------------------------------------------------------------------*/

    /**
     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
     *
     * @private
     * @constructor
     * @param {*} value The value to wrap.
     */

    function LazyWrapper(value) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__dir__ = 1;
      this.__filtered__ = false;
      this.__iteratees__ = [];
      this.__takeCount__ = MAX_ARRAY_LENGTH;
      this.__views__ = [];
    }
    /**
     * Creates a clone of the lazy wrapper object.
     *
     * @private
     * @name clone
     * @memberOf LazyWrapper
     * @returns {Object} Returns the cloned `LazyWrapper` object.
     */


    function lazyClone() {
      var result = new LazyWrapper(this.__wrapped__);
      result.__actions__ = copyArray(this.__actions__);
      result.__dir__ = this.__dir__;
      result.__filtered__ = this.__filtered__;
      result.__iteratees__ = copyArray(this.__iteratees__);
      result.__takeCount__ = this.__takeCount__;
      result.__views__ = copyArray(this.__views__);
      return result;
    }
    /**
     * Reverses the direction of lazy iteration.
     *
     * @private
     * @name reverse
     * @memberOf LazyWrapper
     * @returns {Object} Returns the new reversed `LazyWrapper` object.
     */


    function lazyReverse() {
      if (this.__filtered__) {
        var result = new LazyWrapper(this);
        result.__dir__ = -1;
        result.__filtered__ = true;
      } else {
        result = this.clone();
        result.__dir__ *= -1;
      }

      return result;
    }
    /**
     * Extracts the unwrapped value from its lazy wrapper.
     *
     * @private
     * @name value
     * @memberOf LazyWrapper
     * @returns {*} Returns the unwrapped value.
     */


    function lazyValue() {
      var array = this.__wrapped__.value(),
          dir = this.__dir__,
          isArr = isArray(array),
          isRight = dir < 0,
          arrLength = isArr ? array.length : 0,
          view = getView(0, arrLength, this.__views__),
          start = view.start,
          end = view.end,
          length = end - start,
          index = isRight ? end : start - 1,
          iteratees = this.__iteratees__,
          iterLength = iteratees.length,
          resIndex = 0,
          takeCount = nativeMin(length, this.__takeCount__);

      if (!isArr || !isRight && arrLength == length && takeCount == length) {
        return baseWrapperValue(array, this.__actions__);
      }

      var result = [];

      outer: while (length-- && resIndex < takeCount) {
        index += dir;
        var iterIndex = -1,
            value = array[index];

        while (++iterIndex < iterLength) {
          var data = iteratees[iterIndex],
              iteratee = data.iteratee,
              type = data.type,
              computed = iteratee(value);

          if (type == LAZY_MAP_FLAG) {
            value = computed;
          } else if (!computed) {
            if (type == LAZY_FILTER_FLAG) {
              continue outer;
            } else {
              break outer;
            }
          }
        }

        result[resIndex++] = value;
      }

      return result;
    } // Ensure `LazyWrapper` is an instance of `baseLodash`.


    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
    LazyWrapper.prototype.constructor = LazyWrapper;
    /*------------------------------------------------------------------------*/

    /**
     * Creates a hash object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */

    function Hash(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;
      this.clear();

      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    /**
     * Removes all key-value entries from the hash.
     *
     * @private
     * @name clear
     * @memberOf Hash
     */


    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }
    /**
     * Removes `key` and its value from the hash.
     *
     * @private
     * @name delete
     * @memberOf Hash
     * @param {Object} hash The hash to modify.
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */


    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }
    /**
     * Gets the hash value for `key`.
     *
     * @private
     * @name get
     * @memberOf Hash
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */


    function hashGet(key) {
      var data = this.__data__;

      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? undefined : result;
      }

      return hasOwnProperty.call(data, key) ? data[key] : undefined;
    }
    /**
     * Checks if a hash value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Hash
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */


    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
    }
    /**
     * Sets the hash `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Hash
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the hash instance.
     */


    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;
      return this;
    } // Add methods to `Hash`.


    Hash.prototype.clear = hashClear;
    Hash.prototype['delete'] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;
    /*------------------------------------------------------------------------*/

    /**
     * Creates an list cache object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */

    function ListCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;
      this.clear();

      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    /**
     * Removes all key-value entries from the list cache.
     *
     * @private
     * @name clear
     * @memberOf ListCache
     */


    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }
    /**
     * Removes `key` and its value from the list cache.
     *
     * @private
     * @name delete
     * @memberOf ListCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */


    function listCacheDelete(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        return false;
      }

      var lastIndex = data.length - 1;

      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }

      --this.size;
      return true;
    }
    /**
     * Gets the list cache value for `key`.
     *
     * @private
     * @name get
     * @memberOf ListCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */


    function listCacheGet(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);
      return index < 0 ? undefined : data[index][1];
    }
    /**
     * Checks if a list cache value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf ListCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */


    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }
    /**
     * Sets the list cache `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf ListCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the list cache instance.
     */


    function listCacheSet(key, value) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }

      return this;
    } // Add methods to `ListCache`.


    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype['delete'] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;
    /*------------------------------------------------------------------------*/

    /**
     * Creates a map cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */

    function MapCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;
      this.clear();

      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    /**
     * Removes all key-value entries from the map.
     *
     * @private
     * @name clear
     * @memberOf MapCache
     */


    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        'hash': new Hash(),
        'map': new (Map || ListCache)(),
        'string': new Hash()
      };
    }
    /**
     * Removes `key` and its value from the map.
     *
     * @private
     * @name delete
     * @memberOf MapCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */


    function mapCacheDelete(key) {
      var result = getMapData(this, key)['delete'](key);
      this.size -= result ? 1 : 0;
      return result;
    }
    /**
     * Gets the map value for `key`.
     *
     * @private
     * @name get
     * @memberOf MapCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */


    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }
    /**
     * Checks if a map value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf MapCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */


    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }
    /**
     * Sets the map `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf MapCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the map cache instance.
     */


    function mapCacheSet(key, value) {
      var data = getMapData(this, key),
          size = data.size;
      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    } // Add methods to `MapCache`.


    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype['delete'] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;
    /*------------------------------------------------------------------------*/

    /**
     *
     * Creates an array cache object to store unique values.
     *
     * @private
     * @constructor
     * @param {Array} [values] The values to cache.
     */

    function SetCache(values) {
      var index = -1,
          length = values == null ? 0 : values.length;
      this.__data__ = new MapCache();

      while (++index < length) {
        this.add(values[index]);
      }
    }
    /**
     * Adds `value` to the array cache.
     *
     * @private
     * @name add
     * @memberOf SetCache
     * @alias push
     * @param {*} value The value to cache.
     * @returns {Object} Returns the cache instance.
     */


    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);

      return this;
    }
    /**
     * Checks if `value` is in the array cache.
     *
     * @private
     * @name has
     * @memberOf SetCache
     * @param {*} value The value to search for.
     * @returns {number} Returns `true` if `value` is found, else `false`.
     */


    function setCacheHas(value) {
      return this.__data__.has(value);
    } // Add methods to `SetCache`.


    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;
    /*------------------------------------------------------------------------*/

    /**
     * Creates a stack cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */

    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }
    /**
     * Removes all key-value entries from the stack.
     *
     * @private
     * @name clear
     * @memberOf Stack
     */


    function stackClear() {
      this.__data__ = new ListCache();
      this.size = 0;
    }
    /**
     * Removes `key` and its value from the stack.
     *
     * @private
     * @name delete
     * @memberOf Stack
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */


    function stackDelete(key) {
      var data = this.__data__,
          result = data['delete'](key);
      this.size = data.size;
      return result;
    }
    /**
     * Gets the stack value for `key`.
     *
     * @private
     * @name get
     * @memberOf Stack
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */


    function stackGet(key) {
      return this.__data__.get(key);
    }
    /**
     * Checks if a stack value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Stack
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */


    function stackHas(key) {
      return this.__data__.has(key);
    }
    /**
     * Sets the stack `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Stack
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the stack cache instance.
     */


    function stackSet(key, value) {
      var data = this.__data__;

      if (data instanceof ListCache) {
        var pairs = data.__data__;

        if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }

        data = this.__data__ = new MapCache(pairs);
      }

      data.set(key, value);
      this.size = data.size;
      return this;
    } // Add methods to `Stack`.


    Stack.prototype.clear = stackClear;
    Stack.prototype['delete'] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;
    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of the enumerable property names of the array-like `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @param {boolean} inherited Specify returning inherited property names.
     * @returns {Array} Returns the array of property names.
     */

    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value),
          isArg = !isArr && isArguments(value),
          isBuff = !isArr && !isArg && isBuffer(value),
          isType = !isArr && !isArg && !isBuff && isTypedArray(value),
          skipIndexes = isArr || isArg || isBuff || isType,
          result = skipIndexes ? baseTimes(value.length, String) : [],
          length = result.length;

      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.
        key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.
        isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.
        isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.
        isIndex(key, length)))) {
          result.push(key);
        }
      }

      return result;
    }
    /**
     * A specialized version of `_.sample` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @returns {*} Returns the random element.
     */


    function arraySample(array) {
      var length = array.length;
      return length ? array[baseRandom(0, length - 1)] : undefined;
    }
    /**
     * A specialized version of `_.sampleSize` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */


    function arraySampleSize(array, n) {
      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
    }
    /**
     * A specialized version of `_.shuffle` for arrays.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */


    function arrayShuffle(array) {
      return shuffleSelf(copyArray(array));
    }
    /**
     * This function is like `assignValue` except that it doesn't assign
     * `undefined` values.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */


    function assignMergeValue(object, key, value) {
      if (value !== undefined && !eq(object[key], value) || value === undefined && !(key in object)) {
        baseAssignValue(object, key, value);
      }
    }
    /**
     * Assigns `value` to `key` of `object` if the existing value is not equivalent
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */


    function assignValue(object, key, value) {
      var objValue = object[key];

      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === undefined && !(key in object)) {
        baseAssignValue(object, key, value);
      }
    }
    /**
     * Gets the index at which the `key` is found in `array` of key-value pairs.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {*} key The key to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */


    function assocIndexOf(array, key) {
      var length = array.length;

      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }

      return -1;
    }
    /**
     * Aggregates elements of `collection` on `accumulator` with keys transformed
     * by `iteratee` and values set by `setter`.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform keys.
     * @param {Object} accumulator The initial aggregated object.
     * @returns {Function} Returns `accumulator`.
     */


    function baseAggregator(collection, setter, iteratee, accumulator) {
      baseEach(collection, function (value, key, collection) {
        setter(accumulator, value, iteratee(value), collection);
      });
      return accumulator;
    }
    /**
     * The base implementation of `_.assign` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */


    function baseAssign(object, source) {
      return object && copyObject(source, keys(source), object);
    }
    /**
     * The base implementation of `_.assignIn` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */


    function baseAssignIn(object, source) {
      return object && copyObject(source, keysIn(source), object);
    }
    /**
     * The base implementation of `assignValue` and `assignMergeValue` without
     * value checks.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */


    function baseAssignValue(object, key, value) {
      if (key == '__proto__' && defineProperty) {
        defineProperty(object, key, {
          'configurable': true,
          'enumerable': true,
          'value': value,
          'writable': true
        });
      } else {
        object[key] = value;
      }
    }
    /**
     * The base implementation of `_.at` without support for individual paths.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {string[]} paths The property paths to pick.
     * @returns {Array} Returns the picked elements.
     */


    function baseAt(object, paths) {
      var index = -1,
          length = paths.length,
          result = Array(length),
          skip = object == null;

      while (++index < length) {
        result[index] = skip ? undefined : get(object, paths[index]);
      }

      return result;
    }
    /**
     * The base implementation of `_.clamp` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     */


    function baseClamp(number, lower, upper) {
      if (number === number) {
        if (upper !== undefined) {
          number = number <= upper ? number : upper;
        }

        if (lower !== undefined) {
          number = number >= lower ? number : lower;
        }
      }

      return number;
    }
    /**
     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
     * traversed objects.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Deep clone
     *  2 - Flatten inherited properties
     *  4 - Clone symbols
     * @param {Function} [customizer] The function to customize cloning.
     * @param {string} [key] The key of `value`.
     * @param {Object} [object] The parent object of `value`.
     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
     * @returns {*} Returns the cloned value.
     */


    function baseClone(value, bitmask, customizer, key, object, stack) {
      var result,
          isDeep = bitmask & CLONE_DEEP_FLAG,
          isFlat = bitmask & CLONE_FLAT_FLAG,
          isFull = bitmask & CLONE_SYMBOLS_FLAG;

      if (customizer) {
        result = object ? customizer(value, key, object, stack) : customizer(value);
      }

      if (result !== undefined) {
        return result;
      }

      if (!isObject(value)) {
        return value;
      }

      var isArr = isArray(value);

      if (isArr) {
        result = initCloneArray(value);

        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag(value),
            isFunc = tag == funcTag || tag == genTag;

        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }

        if (tag == objectTag || tag == argsTag || isFunc && !object) {
          result = isFlat || isFunc ? {} : initCloneObject(value);

          if (!isDeep) {
            return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object ? value : {};
          }

          result = initCloneByTag(value, tag, isDeep);
        }
      } // Check for circular references and return its corresponding clone.


      stack || (stack = new Stack());
      var stacked = stack.get(value);

      if (stacked) {
        return stacked;
      }

      stack.set(value, result);

      if (isSet(value)) {
        value.forEach(function (subValue) {
          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
        });
        return result;
      }

      if (isMap(value)) {
        value.forEach(function (subValue, key) {
          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
        });
        return result;
      }

      var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;
      var props = isArr ? undefined : keysFunc(value);
      arrayEach(props || value, function (subValue, key) {
        if (props) {
          key = subValue;
          subValue = value[key];
        } // Recursively populate clone (susceptible to call stack limits).


        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
      });
      return result;
    }
    /**
     * The base implementation of `_.conforms` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     */


    function baseConforms(source) {
      var props = keys(source);
      return function (object) {
        return baseConformsTo(object, source, props);
      };
    }
    /**
     * The base implementation of `_.conformsTo` which accepts `props` to check.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     */


    function baseConformsTo(object, source, props) {
      var length = props.length;

      if (object == null) {
        return !length;
      }

      object = Object(object);

      while (length--) {
        var key = props[length],
            predicate = source[key],
            value = object[key];

        if (value === undefined && !(key in object) || !predicate(value)) {
          return false;
        }
      }

      return true;
    }
    /**
     * The base implementation of `_.delay` and `_.defer` which accepts `args`
     * to provide to `func`.
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {Array} args The arguments to provide to `func`.
     * @returns {number|Object} Returns the timer id or timeout object.
     */


    function baseDelay(func, wait, args) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }

      return setTimeout(function () {
        func.apply(undefined, args);
      }, wait);
    }
    /**
     * The base implementation of methods like `_.difference` without support
     * for excluding multiple arrays or iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Array} values The values to exclude.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     */


    function baseDifference(array, values, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          isCommon = true,
          length = array.length,
          result = [],
          valuesLength = values.length;

      if (!length) {
        return result;
      }

      if (iteratee) {
        values = arrayMap(values, baseUnary(iteratee));
      }

      if (comparator) {
        includes = arrayIncludesWith;
        isCommon = false;
      } else if (values.length >= LARGE_ARRAY_SIZE) {
        includes = cacheHas;
        isCommon = false;
        values = new SetCache(values);
      }

      outer: while (++index < length) {
        var value = array[index],
            computed = iteratee == null ? value : iteratee(value);
        value = comparator || value !== 0 ? value : 0;

        if (isCommon && computed === computed) {
          var valuesIndex = valuesLength;

          while (valuesIndex--) {
            if (values[valuesIndex] === computed) {
              continue outer;
            }
          }

          result.push(value);
        } else if (!includes(values, computed, comparator)) {
          result.push(value);
        }
      }

      return result;
    }
    /**
     * The base implementation of `_.forEach` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */


    var baseEach = createBaseEach(baseForOwn);
    /**
     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */

    var baseEachRight = createBaseEach(baseForOwnRight, true);
    /**
     * The base implementation of `_.every` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`
     */

    function baseEvery(collection, predicate) {
      var result = true;
      baseEach(collection, function (value, index, collection) {
        result = !!predicate(value, index, collection);
        return result;
      });
      return result;
    }
    /**
     * The base implementation of methods like `_.max` and `_.min` which accepts a
     * `comparator` to determine the extremum value.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The iteratee invoked per iteration.
     * @param {Function} comparator The comparator used to compare values.
     * @returns {*} Returns the extremum value.
     */


    function baseExtremum(array, iteratee, comparator) {
      var index = -1,
          length = array.length;

      while (++index < length) {
        var value = array[index],
            current = iteratee(value);

        if (current != null && (computed === undefined ? current === current && !isSymbol(current) : comparator(current, computed))) {
          var computed = current,
              result = value;
        }
      }

      return result;
    }
    /**
     * The base implementation of `_.fill` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     */


    function baseFill(array, value, start, end) {
      var length = array.length;
      start = toInteger(start);

      if (start < 0) {
        start = -start > length ? 0 : length + start;
      }

      end = end === undefined || end > length ? length : toInteger(end);

      if (end < 0) {
        end += length;
      }

      end = start > end ? 0 : toLength(end);

      while (start < end) {
        array[start++] = value;
      }

      return array;
    }
    /**
     * The base implementation of `_.filter` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     */


    function baseFilter(collection, predicate) {
      var result = [];
      baseEach(collection, function (value, index, collection) {
        if (predicate(value, index, collection)) {
          result.push(value);
        }
      });
      return result;
    }
    /**
     * The base implementation of `_.flatten` with support for restricting flattening.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {number} depth The maximum recursion depth.
     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
     * @param {Array} [result=[]] The initial result value.
     * @returns {Array} Returns the new flattened array.
     */


    function baseFlatten(array, depth, predicate, isStrict, result) {
      var index = -1,
          length = array.length;
      predicate || (predicate = isFlattenable);
      result || (result = []);

      while (++index < length) {
        var value = array[index];

        if (depth > 0 && predicate(value)) {
          if (depth > 1) {
            // Recursively flatten arrays (susceptible to call stack limits).
            baseFlatten(value, depth - 1, predicate, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }

      return result;
    }
    /**
     * The base implementation of `baseForOwn` which iterates over `object`
     * properties returned by `keysFunc` and invokes `iteratee` for each property.
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */


    var baseFor = createBaseFor();
    /**
     * This function is like `baseFor` except that it iterates over properties
     * in the opposite order.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */

    var baseForRight = createBaseFor(true);
    /**
     * The base implementation of `_.forOwn` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */

    function baseForOwn(object, iteratee) {
      return object && baseFor(object, iteratee, keys);
    }
    /**
     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */


    function baseForOwnRight(object, iteratee) {
      return object && baseForRight(object, iteratee, keys);
    }
    /**
     * The base implementation of `_.functions` which creates an array of
     * `object` function property names filtered from `props`.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Array} props The property names to filter.
     * @returns {Array} Returns the function names.
     */


    function baseFunctions(object, props) {
      return arrayFilter(props, function (key) {
        return isFunction(object[key]);
      });
    }
    /**
     * The base implementation of `_.get` without support for default values.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @returns {*} Returns the resolved value.
     */


    function baseGet(object, path) {
      path = castPath(path, object);
      var index = 0,
          length = path.length;

      while (object != null && index < length) {
        object = object[toKey(path[index++])];
      }

      return index && index == length ? object : undefined;
    }
    /**
     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @param {Function} symbolsFunc The function to get the symbols of `object`.
     * @returns {Array} Returns the array of property names and symbols.
     */


    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }
    /**
     * The base implementation of `getTag` without fallbacks for buggy environments.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */


    function baseGetTag(value) {
      if (value == null) {
        return value === undefined ? undefinedTag : nullTag;
      }

      return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
    }
    /**
     * The base implementation of `_.gt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     */


    function baseGt(value, other) {
      return value > other;
    }
    /**
     * The base implementation of `_.has` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */


    function baseHas(object, key) {
      return object != null && hasOwnProperty.call(object, key);
    }
    /**
     * The base implementation of `_.hasIn` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */


    function baseHasIn(object, key) {
      return object != null && key in Object(object);
    }
    /**
     * The base implementation of `_.inRange` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to check.
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     */


    function baseInRange(number, start, end) {
      return number >= nativeMin(start, end) && number < nativeMax(start, end);
    }
    /**
     * The base implementation of methods like `_.intersection`, without support
     * for iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of shared values.
     */


    function baseIntersection(arrays, iteratee, comparator) {
      var includes = comparator ? arrayIncludesWith : arrayIncludes,
          length = arrays[0].length,
          othLength = arrays.length,
          othIndex = othLength,
          caches = Array(othLength),
          maxLength = Infinity,
          result = [];

      while (othIndex--) {
        var array = arrays[othIndex];

        if (othIndex && iteratee) {
          array = arrayMap(array, baseUnary(iteratee));
        }

        maxLength = nativeMin(array.length, maxLength);
        caches[othIndex] = !comparator && (iteratee || length >= 120 && array.length >= 120) ? new SetCache(othIndex && array) : undefined;
      }

      array = arrays[0];
      var index = -1,
          seen = caches[0];

      outer: while (++index < length && result.length < maxLength) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;
        value = comparator || value !== 0 ? value : 0;

        if (!(seen ? cacheHas(seen, computed) : includes(result, computed, comparator))) {
          othIndex = othLength;

          while (--othIndex) {
            var cache = caches[othIndex];

            if (!(cache ? cacheHas(cache, computed) : includes(arrays[othIndex], computed, comparator))) {
              continue outer;
            }
          }

          if (seen) {
            seen.push(computed);
          }

          result.push(value);
        }
      }

      return result;
    }
    /**
     * The base implementation of `_.invert` and `_.invertBy` which inverts
     * `object` with values transformed by `iteratee` and set by `setter`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform values.
     * @param {Object} accumulator The initial inverted object.
     * @returns {Function} Returns `accumulator`.
     */


    function baseInverter(object, setter, iteratee, accumulator) {
      baseForOwn(object, function (value, key, object) {
        setter(accumulator, iteratee(value), key, object);
      });
      return accumulator;
    }
    /**
     * The base implementation of `_.invoke` without support for individual
     * method arguments.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {Array} args The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     */


    function baseInvoke(object, path, args) {
      path = castPath(path, object);
      object = parent(object, path);
      var func = object == null ? object : object[toKey(last(path))];
      return func == null ? undefined : apply(func, object, args);
    }
    /**
     * The base implementation of `_.isArguments`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     */


    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }
    /**
     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     */


    function baseIsArrayBuffer(value) {
      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
    }
    /**
     * The base implementation of `_.isDate` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     */


    function baseIsDate(value) {
      return isObjectLike(value) && baseGetTag(value) == dateTag;
    }
    /**
     * The base implementation of `_.isEqual` which supports partial comparisons
     * and tracks traversed objects.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Unordered comparison
     *  2 - Partial comparison
     * @param {Function} [customizer] The function to customize comparisons.
     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */


    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }

      if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
        return value !== value && other !== other;
      }

      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }
    /**
     * A specialized version of `baseIsEqual` for arrays and objects which performs
     * deep comparisons and tracks traversed objects enabling objects with circular
     * references to be compared.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */


    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object),
          othIsArr = isArray(other),
          objTag = objIsArr ? arrayTag : getTag(object),
          othTag = othIsArr ? arrayTag : getTag(other);
      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;
      var objIsObj = objTag == objectTag,
          othIsObj = othTag == objectTag,
          isSameTag = objTag == othTag;

      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }

        objIsArr = true;
        objIsObj = false;
      }

      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack());
        return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }

      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object,
              othUnwrapped = othIsWrapped ? other.value() : other;
          stack || (stack = new Stack());
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }

      if (!isSameTag) {
        return false;
      }

      stack || (stack = new Stack());
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }
    /**
     * The base implementation of `_.isMap` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     */


    function baseIsMap(value) {
      return isObjectLike(value) && getTag(value) == mapTag;
    }
    /**
     * The base implementation of `_.isMatch` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Array} matchData The property names, values, and compare flags to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     */


    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length,
          length = index,
          noCustomizer = !customizer;

      if (object == null) {
        return !length;
      }

      object = Object(object);

      while (index--) {
        var data = matchData[index];

        if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
          return false;
        }
      }

      while (++index < length) {
        data = matchData[index];
        var key = data[0],
            objValue = object[key],
            srcValue = data[1];

        if (noCustomizer && data[2]) {
          if (objValue === undefined && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack();

          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }

          if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {
            return false;
          }
        }
      }

      return true;
    }
    /**
     * The base implementation of `_.isNative` without bad shim checks.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     */


    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }

      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }
    /**
     * The base implementation of `_.isRegExp` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     */


    function baseIsRegExp(value) {
      return isObjectLike(value) && baseGetTag(value) == regexpTag;
    }
    /**
     * The base implementation of `_.isSet` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     */


    function baseIsSet(value) {
      return isObjectLike(value) && getTag(value) == setTag;
    }
    /**
     * The base implementation of `_.isTypedArray` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     */


    function baseIsTypedArray(value) {
      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }
    /**
     * The base implementation of `_.iteratee`.
     *
     * @private
     * @param {*} [value=_.identity] The value to convert to an iteratee.
     * @returns {Function} Returns the iteratee.
     */


    function baseIteratee(value) {
      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
      if (typeof value == 'function') {
        return value;
      }

      if (value == null) {
        return identity;
      }

      if (typeof value == 'object') {
        return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
      }

      return property(value);
    }
    /**
     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */


    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }

      var result = [];

      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != 'constructor') {
          result.push(key);
        }
      }

      return result;
    }
    /**
     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */


    function baseKeysIn(object) {
      if (!isObject(object)) {
        return nativeKeysIn(object);
      }

      var isProto = isPrototype(object),
          result = [];

      for (var key in object) {
        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
          result.push(key);
        }
      }

      return result;
    }
    /**
     * The base implementation of `_.lt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     */


    function baseLt(value, other) {
      return value < other;
    }
    /**
     * The base implementation of `_.map` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     */


    function baseMap(collection, iteratee) {
      var index = -1,
          result = isArrayLike(collection) ? Array(collection.length) : [];
      baseEach(collection, function (value, key, collection) {
        result[++index] = iteratee(value, key, collection);
      });
      return result;
    }
    /**
     * The base implementation of `_.matches` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     */


    function baseMatches(source) {
      var matchData = getMatchData(source);

      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }

      return function (object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }
    /**
     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
     *
     * @private
     * @param {string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */


    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }

      return function (object) {
        var objValue = get(object, path);
        return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }
    /**
     * The base implementation of `_.merge` without support for multiple sources.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} [customizer] The function to customize merged values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */


    function baseMerge(object, source, srcIndex, customizer, stack) {
      if (object === source) {
        return;
      }

      baseFor(source, function (srcValue, key) {
        if (isObject(srcValue)) {
          stack || (stack = new Stack());
          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
        } else {
          var newValue = customizer ? customizer(safeGet(object, key), srcValue, key + '', object, source, stack) : undefined;

          if (newValue === undefined) {
            newValue = srcValue;
          }

          assignMergeValue(object, key, newValue);
        }
      }, keysIn);
    }
    /**
     * A specialized version of `baseMerge` for arrays and objects which performs
     * deep merges and tracks traversed objects enabling objects with circular
     * references to be merged.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {string} key The key of the value to merge.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} mergeFunc The function to merge values.
     * @param {Function} [customizer] The function to customize assigned values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */


    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
      var objValue = safeGet(object, key),
          srcValue = safeGet(source, key),
          stacked = stack.get(srcValue);

      if (stacked) {
        assignMergeValue(object, key, stacked);
        return;
      }

      var newValue = customizer ? customizer(objValue, srcValue, key + '', object, source, stack) : undefined;
      var isCommon = newValue === undefined;

      if (isCommon) {
        var isArr = isArray(srcValue),
            isBuff = !isArr && isBuffer(srcValue),
            isTyped = !isArr && !isBuff && isTypedArray(srcValue);
        newValue = srcValue;

        if (isArr || isBuff || isTyped) {
          if (isArray(objValue)) {
            newValue = objValue;
          } else if (isArrayLikeObject(objValue)) {
            newValue = copyArray(objValue);
          } else if (isBuff) {
            isCommon = false;
            newValue = cloneBuffer(srcValue, true);
          } else if (isTyped) {
            isCommon = false;
            newValue = cloneTypedArray(srcValue, true);
          } else {
            newValue = [];
          }
        } else if (isPlainObject(srcValue) || isArguments(srcValue)) {
          newValue = objValue;

          if (isArguments(objValue)) {
            newValue = toPlainObject(objValue);
          } else if (!isObject(objValue) || isFunction(objValue)) {
            newValue = initCloneObject(srcValue);
          }
        } else {
          isCommon = false;
        }
      }

      if (isCommon) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, newValue);
        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
        stack['delete'](srcValue);
      }

      assignMergeValue(object, key, newValue);
    }
    /**
     * The base implementation of `_.nth` which doesn't coerce arguments.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {number} n The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     */


    function baseNth(array, n) {
      var length = array.length;

      if (!length) {
        return;
      }

      n += n < 0 ? length : 0;
      return isIndex(n, length) ? array[n] : undefined;
    }
    /**
     * The base implementation of `_.orderBy` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
     * @param {string[]} orders The sort orders of `iteratees`.
     * @returns {Array} Returns the new sorted array.
     */


    function baseOrderBy(collection, iteratees, orders) {
      var index = -1;
      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));
      var result = baseMap(collection, function (value, key, collection) {
        var criteria = arrayMap(iteratees, function (iteratee) {
          return iteratee(value);
        });
        return {
          'criteria': criteria,
          'index': ++index,
          'value': value
        };
      });
      return baseSortBy(result, function (object, other) {
        return compareMultiple(object, other, orders);
      });
    }
    /**
     * The base implementation of `_.pick` without support for individual
     * property identifiers.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @returns {Object} Returns the new object.
     */


    function basePick(object, paths) {
      return basePickBy(object, paths, function (value, path) {
        return hasIn(object, path);
      });
    }
    /**
     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @param {Function} predicate The function invoked per property.
     * @returns {Object} Returns the new object.
     */


    function basePickBy(object, paths, predicate) {
      var index = -1,
          length = paths.length,
          result = {};

      while (++index < length) {
        var path = paths[index],
            value = baseGet(object, path);

        if (predicate(value, path)) {
          baseSet(result, castPath(path, object), value);
        }
      }

      return result;
    }
    /**
     * A specialized version of `baseProperty` which supports deep paths.
     *
     * @private
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     */


    function basePropertyDeep(path) {
      return function (object) {
        return baseGet(object, path);
      };
    }
    /**
     * The base implementation of `_.pullAllBy` without support for iteratee
     * shorthands.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     */


    function basePullAll(array, values, iteratee, comparator) {
      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
          index = -1,
          length = values.length,
          seen = array;

      if (array === values) {
        values = copyArray(values);
      }

      if (iteratee) {
        seen = arrayMap(array, baseUnary(iteratee));
      }

      while (++index < length) {
        var fromIndex = 0,
            value = values[index],
            computed = iteratee ? iteratee(value) : value;

        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
          if (seen !== array) {
            splice.call(seen, fromIndex, 1);
          }

          splice.call(array, fromIndex, 1);
        }
      }

      return array;
    }
    /**
     * The base implementation of `_.pullAt` without support for individual
     * indexes or capturing the removed elements.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {number[]} indexes The indexes of elements to remove.
     * @returns {Array} Returns `array`.
     */


    function basePullAt(array, indexes) {
      var length = array ? indexes.length : 0,
          lastIndex = length - 1;

      while (length--) {
        var index = indexes[length];

        if (length == lastIndex || index !== previous) {
          var previous = index;

          if (isIndex(index)) {
            splice.call(array, index, 1);
          } else {
            baseUnset(array, index);
          }
        }
      }

      return array;
    }
    /**
     * The base implementation of `_.random` without support for returning
     * floating-point numbers.
     *
     * @private
     * @param {number} lower The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the random number.
     */


    function baseRandom(lower, upper) {
      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
    }
    /**
     * The base implementation of `_.range` and `_.rangeRight` which doesn't
     * coerce arguments.
     *
     * @private
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @param {number} step The value to increment or decrement by.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the range of numbers.
     */


    function baseRange(start, end, step, fromRight) {
      var index = -1,
          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
          result = Array(length);

      while (length--) {
        result[fromRight ? length : ++index] = start;
        start += step;
      }

      return result;
    }
    /**
     * The base implementation of `_.repeat` which doesn't coerce arguments.
     *
     * @private
     * @param {string} string The string to repeat.
     * @param {number} n The number of times to repeat the string.
     * @returns {string} Returns the repeated string.
     */


    function baseRepeat(string, n) {
      var result = '';

      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
        return result;
      } // Leverage the exponentiation by squaring algorithm for a faster repeat.
      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.


      do {
        if (n % 2) {
          result += string;
        }

        n = nativeFloor(n / 2);

        if (n) {
          string += string;
        }
      } while (n);

      return result;
    }
    /**
     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     */


    function baseRest(func, start) {
      return setToString(overRest(func, start, identity), func + '');
    }
    /**
     * The base implementation of `_.sample`.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     */


    function baseSample(collection) {
      return arraySample(values(collection));
    }
    /**
     * The base implementation of `_.sampleSize` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */


    function baseSampleSize(collection, n) {
      var array = values(collection);
      return shuffleSelf(array, baseClamp(n, 0, array.length));
    }
    /**
     * The base implementation of `_.set`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */


    function baseSet(object, path, value, customizer) {
      if (!isObject(object)) {
        return object;
      }

      path = castPath(path, object);
      var index = -1,
          length = path.length,
          lastIndex = length - 1,
          nested = object;

      while (nested != null && ++index < length) {
        var key = toKey(path[index]),
            newValue = value;

        if (index != lastIndex) {
          var objValue = nested[key];
          newValue = customizer ? customizer(objValue, key, nested) : undefined;

          if (newValue === undefined) {
            newValue = isObject(objValue) ? objValue : isIndex(path[index + 1]) ? [] : {};
          }
        }

        assignValue(nested, key, newValue);
        nested = nested[key];
      }

      return object;
    }
    /**
     * The base implementation of `setData` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */


    var baseSetData = !metaMap ? identity : function (func, data) {
      metaMap.set(func, data);
      return func;
    };
    /**
     * The base implementation of `setToString` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */

    var baseSetToString = !defineProperty ? identity : function (func, string) {
      return defineProperty(func, 'toString', {
        'configurable': true,
        'enumerable': false,
        'value': constant(string),
        'writable': true
      });
    };
    /**
     * The base implementation of `_.shuffle`.
     *
     * @private
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */

    function baseShuffle(collection) {
      return shuffleSelf(values(collection));
    }
    /**
     * The base implementation of `_.slice` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */


    function baseSlice(array, start, end) {
      var index = -1,
          length = array.length;

      if (start < 0) {
        start = -start > length ? 0 : length + start;
      }

      end = end > length ? length : end;

      if (end < 0) {
        end += length;
      }

      length = start > end ? 0 : end - start >>> 0;
      start >>>= 0;
      var result = Array(length);

      while (++index < length) {
        result[index] = array[index + start];
      }

      return result;
    }
    /**
     * The base implementation of `_.some` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     */


    function baseSome(collection, predicate) {
      var result;
      baseEach(collection, function (value, index, collection) {
        result = predicate(value, index, collection);
        return !result;
      });
      return !!result;
    }
    /**
     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
     * performs a binary search of `array` to determine the index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */


    function baseSortedIndex(array, value, retHighest) {
      var low = 0,
          high = array == null ? low : array.length;

      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
        while (low < high) {
          var mid = low + high >>> 1,
              computed = array[mid];

          if (computed !== null && !isSymbol(computed) && (retHighest ? computed <= value : computed < value)) {
            low = mid + 1;
          } else {
            high = mid;
          }
        }

        return high;
      }

      return baseSortedIndexBy(array, value, identity, retHighest);
    }
    /**
     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
     * which invokes `iteratee` for `value` and each element of `array` to compute
     * their sort ranking. The iteratee is invoked with one argument; (value).
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} iteratee The iteratee invoked per element.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */


    function baseSortedIndexBy(array, value, iteratee, retHighest) {
      value = iteratee(value);
      var low = 0,
          high = array == null ? 0 : array.length,
          valIsNaN = value !== value,
          valIsNull = value === null,
          valIsSymbol = isSymbol(value),
          valIsUndefined = value === undefined;

      while (low < high) {
        var mid = nativeFloor((low + high) / 2),
            computed = iteratee(array[mid]),
            othIsDefined = computed !== undefined,
            othIsNull = computed === null,
            othIsReflexive = computed === computed,
            othIsSymbol = isSymbol(computed);

        if (valIsNaN) {
          var setLow = retHighest || othIsReflexive;
        } else if (valIsUndefined) {
          setLow = othIsReflexive && (retHighest || othIsDefined);
        } else if (valIsNull) {
          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
        } else if (valIsSymbol) {
          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
        } else if (othIsNull || othIsSymbol) {
          setLow = false;
        } else {
          setLow = retHighest ? computed <= value : computed < value;
        }

        if (setLow) {
          low = mid + 1;
        } else {
          high = mid;
        }
      }

      return nativeMin(high, MAX_ARRAY_INDEX);
    }
    /**
     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
     * support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */


    function baseSortedUniq(array, iteratee) {
      var index = -1,
          length = array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        if (!index || !eq(computed, seen)) {
          var seen = computed;
          result[resIndex++] = value === 0 ? 0 : value;
        }
      }

      return result;
    }
    /**
     * The base implementation of `_.toNumber` which doesn't ensure correct
     * conversions of binary, hexadecimal, or octal string values.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     */


    function baseToNumber(value) {
      if (typeof value == 'number') {
        return value;
      }

      if (isSymbol(value)) {
        return NAN;
      }

      return +value;
    }
    /**
     * The base implementation of `_.toString` which doesn't convert nullish
     * values to empty strings.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {string} Returns the string.
     */


    function baseToString(value) {
      // Exit early for strings to avoid a performance hit in some environments.
      if (typeof value == 'string') {
        return value;
      }

      if (isArray(value)) {
        // Recursively convert values (susceptible to call stack limits).
        return arrayMap(value, baseToString) + '';
      }

      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : '';
      }

      var result = value + '';
      return result == '0' && 1 / value == -INFINITY ? '-0' : result;
    }
    /**
     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */


    function baseUniq(array, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          length = array.length,
          isCommon = true,
          result = [],
          seen = result;

      if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
      } else if (length >= LARGE_ARRAY_SIZE) {
        var set = iteratee ? null : createSet(array);

        if (set) {
          return setToArray(set);
        }

        isCommon = false;
        includes = cacheHas;
        seen = new SetCache();
      } else {
        seen = iteratee ? [] : result;
      }

      outer: while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;
        value = comparator || value !== 0 ? value : 0;

        if (isCommon && computed === computed) {
          var seenIndex = seen.length;

          while (seenIndex--) {
            if (seen[seenIndex] === computed) {
              continue outer;
            }
          }

          if (iteratee) {
            seen.push(computed);
          }

          result.push(value);
        } else if (!includes(seen, computed, comparator)) {
          if (seen !== result) {
            seen.push(computed);
          }

          result.push(value);
        }
      }

      return result;
    }
    /**
     * The base implementation of `_.unset`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The property path to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     */


    function baseUnset(object, path) {
      path = castPath(path, object);
      object = parent(object, path);
      return object == null || delete object[toKey(last(path))];
    }
    /**
     * The base implementation of `_.update`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to update.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */


    function baseUpdate(object, path, updater, customizer) {
      return baseSet(object, path, updater(baseGet(object, path)), customizer);
    }
    /**
     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
     * without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {Function} predicate The function invoked per iteration.
     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the slice of `array`.
     */


    function baseWhile(array, predicate, isDrop, fromRight) {
      var length = array.length,
          index = fromRight ? length : -1;

      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}

      return isDrop ? baseSlice(array, fromRight ? 0 : index, fromRight ? index + 1 : length) : baseSlice(array, fromRight ? index + 1 : 0, fromRight ? length : index);
    }
    /**
     * The base implementation of `wrapperValue` which returns the result of
     * performing a sequence of actions on the unwrapped `value`, where each
     * successive action is supplied the return value of the previous.
     *
     * @private
     * @param {*} value The unwrapped value.
     * @param {Array} actions Actions to perform to resolve the unwrapped value.
     * @returns {*} Returns the resolved value.
     */


    function baseWrapperValue(value, actions) {
      var result = value;

      if (result instanceof LazyWrapper) {
        result = result.value();
      }

      return arrayReduce(actions, function (result, action) {
        return action.func.apply(action.thisArg, arrayPush([result], action.args));
      }, result);
    }
    /**
     * The base implementation of methods like `_.xor`, without support for
     * iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of values.
     */


    function baseXor(arrays, iteratee, comparator) {
      var length = arrays.length;

      if (length < 2) {
        return length ? baseUniq(arrays[0]) : [];
      }

      var index = -1,
          result = Array(length);

      while (++index < length) {
        var array = arrays[index],
            othIndex = -1;

        while (++othIndex < length) {
          if (othIndex != index) {
            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
          }
        }
      }

      return baseUniq(baseFlatten(result, 1), iteratee, comparator);
    }
    /**
     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
     *
     * @private
     * @param {Array} props The property identifiers.
     * @param {Array} values The property values.
     * @param {Function} assignFunc The function to assign values.
     * @returns {Object} Returns the new object.
     */


    function baseZipObject(props, values, assignFunc) {
      var index = -1,
          length = props.length,
          valsLength = values.length,
          result = {};

      while (++index < length) {
        var value = index < valsLength ? values[index] : undefined;
        assignFunc(result, props[index], value);
      }

      return result;
    }
    /**
     * Casts `value` to an empty array if it's not an array like object.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Array|Object} Returns the cast array-like object.
     */


    function castArrayLikeObject(value) {
      return isArrayLikeObject(value) ? value : [];
    }
    /**
     * Casts `value` to `identity` if it's not a function.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Function} Returns cast function.
     */


    function castFunction(value) {
      return typeof value == 'function' ? value : identity;
    }
    /**
     * Casts `value` to a path array if it's not one.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {Object} [object] The object to query keys on.
     * @returns {Array} Returns the cast property path array.
     */


    function castPath(value, object) {
      if (isArray(value)) {
        return value;
      }

      return isKey(value, object) ? [value] : stringToPath(toString(value));
    }
    /**
     * A `baseRest` alias which can be replaced with `identity` by module
     * replacement plugins.
     *
     * @private
     * @type {Function}
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */


    var castRest = baseRest;
    /**
     * Casts `array` to a slice if it's needed.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {number} start The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the cast slice.
     */

    function castSlice(array, start, end) {
      var length = array.length;
      end = end === undefined ? length : end;
      return !start && end >= length ? array : baseSlice(array, start, end);
    }
    /**
     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
     *
     * @private
     * @param {number|Object} id The timer id or timeout object of the timer to clear.
     */


    var clearTimeout = ctxClearTimeout || function (id) {
      return root.clearTimeout(id);
    };
    /**
     * Creates a clone of  `buffer`.
     *
     * @private
     * @param {Buffer} buffer The buffer to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Buffer} Returns the cloned buffer.
     */


    function cloneBuffer(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }

      var length = buffer.length,
          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
      buffer.copy(result);
      return result;
    }
    /**
     * Creates a clone of `arrayBuffer`.
     *
     * @private
     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
     * @returns {ArrayBuffer} Returns the cloned array buffer.
     */


    function cloneArrayBuffer(arrayBuffer) {
      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
      return result;
    }
    /**
     * Creates a clone of `dataView`.
     *
     * @private
     * @param {Object} dataView The data view to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned data view.
     */


    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }
    /**
     * Creates a clone of `regexp`.
     *
     * @private
     * @param {Object} regexp The regexp to clone.
     * @returns {Object} Returns the cloned regexp.
     */


    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }
    /**
     * Creates a clone of the `symbol` object.
     *
     * @private
     * @param {Object} symbol The symbol object to clone.
     * @returns {Object} Returns the cloned symbol object.
     */


    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }
    /**
     * Creates a clone of `typedArray`.
     *
     * @private
     * @param {Object} typedArray The typed array to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned typed array.
     */


    function cloneTypedArray(typedArray, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }
    /**
     * Compares values to sort them in ascending order.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {number} Returns the sort order indicator for `value`.
     */


    function compareAscending(value, other) {
      if (value !== other) {
        var valIsDefined = value !== undefined,
            valIsNull = value === null,
            valIsReflexive = value === value,
            valIsSymbol = isSymbol(value);
        var othIsDefined = other !== undefined,
            othIsNull = other === null,
            othIsReflexive = other === other,
            othIsSymbol = isSymbol(other);

        if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) {
          return 1;
        }

        if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) {
          return -1;
        }
      }

      return 0;
    }
    /**
     * Used by `_.orderBy` to compare multiple properties of a value to another
     * and stable sort them.
     *
     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
     * specify an order of "desc" for descending or "asc" for ascending sort order
     * of corresponding values.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {boolean[]|string[]} orders The order to sort by for each property.
     * @returns {number} Returns the sort order indicator for `object`.
     */


    function compareMultiple(object, other, orders) {
      var index = -1,
          objCriteria = object.criteria,
          othCriteria = other.criteria,
          length = objCriteria.length,
          ordersLength = orders.length;

      while (++index < length) {
        var result = compareAscending(objCriteria[index], othCriteria[index]);

        if (result) {
          if (index >= ordersLength) {
            return result;
          }

          var order = orders[index];
          return result * (order == 'desc' ? -1 : 1);
        }
      } // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
      // that causes it, under certain circumstances, to provide the same value for
      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
      // for more details.
      //
      // This also ensures a stable sort in V8 and other engines.
      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.


      return object.index - other.index;
    }
    /**
     * Creates an array that is the composition of partially applied arguments,
     * placeholders, and provided arguments into a single array of arguments.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to prepend to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */


    function composeArgs(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersLength = holders.length,
          leftIndex = -1,
          leftLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(leftLength + rangeLength),
          isUncurried = !isCurried;

      while (++leftIndex < leftLength) {
        result[leftIndex] = partials[leftIndex];
      }

      while (++argsIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[holders[argsIndex]] = args[argsIndex];
        }
      }

      while (rangeLength--) {
        result[leftIndex++] = args[argsIndex++];
      }

      return result;
    }
    /**
     * This function is like `composeArgs` except that the arguments composition
     * is tailored for `_.partialRight`.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to append to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */


    function composeArgsRight(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersIndex = -1,
          holdersLength = holders.length,
          rightIndex = -1,
          rightLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(rangeLength + rightLength),
          isUncurried = !isCurried;

      while (++argsIndex < rangeLength) {
        result[argsIndex] = args[argsIndex];
      }

      var offset = argsIndex;

      while (++rightIndex < rightLength) {
        result[offset + rightIndex] = partials[rightIndex];
      }

      while (++holdersIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[offset + holders[holdersIndex]] = args[argsIndex++];
        }
      }

      return result;
    }
    /**
     * Copies the values of `source` to `array`.
     *
     * @private
     * @param {Array} source The array to copy values from.
     * @param {Array} [array=[]] The array to copy values to.
     * @returns {Array} Returns `array`.
     */


    function copyArray(source, array) {
      var index = -1,
          length = source.length;
      array || (array = Array(length));

      while (++index < length) {
        array[index] = source[index];
      }

      return array;
    }
    /**
     * Copies properties of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy properties from.
     * @param {Array} props The property identifiers to copy.
     * @param {Object} [object={}] The object to copy properties to.
     * @param {Function} [customizer] The function to customize copied values.
     * @returns {Object} Returns `object`.
     */


    function copyObject(source, props, object, customizer) {
      var isNew = !object;
      object || (object = {});
      var index = -1,
          length = props.length;

      while (++index < length) {
        var key = props[index];
        var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined;

        if (newValue === undefined) {
          newValue = source[key];
        }

        if (isNew) {
          baseAssignValue(object, key, newValue);
        } else {
          assignValue(object, key, newValue);
        }
      }

      return object;
    }
    /**
     * Copies own symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */


    function copySymbols(source, object) {
      return copyObject(source, getSymbols(source), object);
    }
    /**
     * Copies own and inherited symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */


    function copySymbolsIn(source, object) {
      return copyObject(source, getSymbolsIn(source), object);
    }
    /**
     * Creates a function like `_.groupBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} [initializer] The accumulator object initializer.
     * @returns {Function} Returns the new aggregator function.
     */


    function createAggregator(setter, initializer) {
      return function (collection, iteratee) {
        var func = isArray(collection) ? arrayAggregator : baseAggregator,
            accumulator = initializer ? initializer() : {};
        return func(collection, setter, getIteratee(iteratee, 2), accumulator);
      };
    }
    /**
     * Creates a function like `_.assign`.
     *
     * @private
     * @param {Function} assigner The function to assign values.
     * @returns {Function} Returns the new assigner function.
     */


    function createAssigner(assigner) {
      return baseRest(function (object, sources) {
        var index = -1,
            length = sources.length,
            customizer = length > 1 ? sources[length - 1] : undefined,
            guard = length > 2 ? sources[2] : undefined;
        customizer = assigner.length > 3 && typeof customizer == 'function' ? (length--, customizer) : undefined;

        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          customizer = length < 3 ? undefined : customizer;
          length = 1;
        }

        object = Object(object);

        while (++index < length) {
          var source = sources[index];

          if (source) {
            assigner(object, source, index, customizer);
          }
        }

        return object;
      });
    }
    /**
     * Creates a `baseEach` or `baseEachRight` function.
     *
     * @private
     * @param {Function} eachFunc The function to iterate over a collection.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */


    function createBaseEach(eachFunc, fromRight) {
      return function (collection, iteratee) {
        if (collection == null) {
          return collection;
        }

        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }

        var length = collection.length,
            index = fromRight ? length : -1,
            iterable = Object(collection);

        while (fromRight ? index-- : ++index < length) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }

        return collection;
      };
    }
    /**
     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */


    function createBaseFor(fromRight) {
      return function (object, iteratee, keysFunc) {
        var index = -1,
            iterable = Object(object),
            props = keysFunc(object),
            length = props.length;

        while (length--) {
          var key = props[fromRight ? length : ++index];

          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }

        return object;
      };
    }
    /**
     * Creates a function that wraps `func` to invoke it with the optional `this`
     * binding of `thisArg`.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @returns {Function} Returns the new wrapped function.
     */


    function createBind(func, bitmask, thisArg) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
        return fn.apply(isBind ? thisArg : this, arguments);
      }

      return wrapper;
    }
    /**
     * Creates a function like `_.lowerFirst`.
     *
     * @private
     * @param {string} methodName The name of the `String` case method to use.
     * @returns {Function} Returns the new case function.
     */


    function createCaseFirst(methodName) {
      return function (string) {
        string = toString(string);
        var strSymbols = hasUnicode(string) ? stringToArray(string) : undefined;
        var chr = strSymbols ? strSymbols[0] : string.charAt(0);
        var trailing = strSymbols ? castSlice(strSymbols, 1).join('') : string.slice(1);
        return chr[methodName]() + trailing;
      };
    }
    /**
     * Creates a function like `_.camelCase`.
     *
     * @private
     * @param {Function} callback The function to combine each word.
     * @returns {Function} Returns the new compounder function.
     */


    function createCompounder(callback) {
      return function (string) {
        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
      };
    }
    /**
     * Creates a function that produces an instance of `Ctor` regardless of
     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
     *
     * @private
     * @param {Function} Ctor The constructor to wrap.
     * @returns {Function} Returns the new wrapped function.
     */


    function createCtor(Ctor) {
      return function () {
        // Use a `switch` statement to work with class constructors. See
        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
        // for more details.
        var args = arguments;

        switch (args.length) {
          case 0:
            return new Ctor();

          case 1:
            return new Ctor(args[0]);

          case 2:
            return new Ctor(args[0], args[1]);

          case 3:
            return new Ctor(args[0], args[1], args[2]);

          case 4:
            return new Ctor(args[0], args[1], args[2], args[3]);

          case 5:
            return new Ctor(args[0], args[1], args[2], args[3], args[4]);

          case 6:
            return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);

          case 7:
            return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
        }

        var thisBinding = baseCreate(Ctor.prototype),
            result = Ctor.apply(thisBinding, args); // Mimic the constructor's `return` behavior.
        // See https://es5.github.io/#x13.2.2 for more details.

        return isObject(result) ? result : thisBinding;
      };
    }
    /**
     * Creates a function that wraps `func` to enable currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {number} arity The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */


    function createCurry(func, bitmask, arity) {
      var Ctor = createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length,
            placeholder = getHolder(wrapper);

        while (index--) {
          args[index] = arguments[index];
        }

        var holders = length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder ? [] : replaceHolders(args, placeholder);
        length -= holders.length;

        if (length < arity) {
          return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, undefined, args, holders, undefined, undefined, arity - length);
        }

        var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
        return apply(fn, this, args);
      }

      return wrapper;
    }
    /**
     * Creates a `_.find` or `_.findLast` function.
     *
     * @private
     * @param {Function} findIndexFunc The function to find the collection index.
     * @returns {Function} Returns the new find function.
     */


    function createFind(findIndexFunc) {
      return function (collection, predicate, fromIndex) {
        var iterable = Object(collection);

        if (!isArrayLike(collection)) {
          var iteratee = getIteratee(predicate, 3);
          collection = keys(collection);

          predicate = function predicate(key) {
            return iteratee(iterable[key], key, iterable);
          };
        }

        var index = findIndexFunc(collection, predicate, fromIndex);
        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
      };
    }
    /**
     * Creates a `_.flow` or `_.flowRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new flow function.
     */


    function createFlow(fromRight) {
      return flatRest(function (funcs) {
        var length = funcs.length,
            index = length,
            prereq = LodashWrapper.prototype.thru;

        if (fromRight) {
          funcs.reverse();
        }

        while (index--) {
          var func = funcs[index];

          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }

          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
            var wrapper = new LodashWrapper([], true);
          }
        }

        index = wrapper ? index : length;

        while (++index < length) {
          func = funcs[index];
          var funcName = getFuncName(func),
              data = funcName == 'wrapper' ? getData(func) : undefined;

          if (data && isLaziable(data[0]) && data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) && !data[4].length && data[9] == 1) {
            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
          } else {
            wrapper = func.length == 1 && isLaziable(func) ? wrapper[funcName]() : wrapper.thru(func);
          }
        }

        return function () {
          var args = arguments,
              value = args[0];

          if (wrapper && args.length == 1 && isArray(value)) {
            return wrapper.plant(value).value();
          }

          var index = 0,
              result = length ? funcs[index].apply(this, args) : value;

          while (++index < length) {
            result = funcs[index].call(this, result);
          }

          return result;
        };
      });
    }
    /**
     * Creates a function that wraps `func` to invoke it with optional `this`
     * binding of `thisArg`, partial application, and currying.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [partialsRight] The arguments to append to those provided
     *  to the new function.
     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */


    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
      var isAry = bitmask & WRAP_ARY_FLAG,
          isBind = bitmask & WRAP_BIND_FLAG,
          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
          isFlip = bitmask & WRAP_FLIP_FLAG,
          Ctor = isBindKey ? undefined : createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length;

        while (index--) {
          args[index] = arguments[index];
        }

        if (isCurried) {
          var placeholder = getHolder(wrapper),
              holdersCount = countHolders(args, placeholder);
        }

        if (partials) {
          args = composeArgs(args, partials, holders, isCurried);
        }

        if (partialsRight) {
          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
        }

        length -= holdersCount;

        if (isCurried && length < arity) {
          var newHolders = replaceHolders(args, placeholder);
          return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, thisArg, args, newHolders, argPos, ary, arity - length);
        }

        var thisBinding = isBind ? thisArg : this,
            fn = isBindKey ? thisBinding[func] : func;
        length = args.length;

        if (argPos) {
          args = reorder(args, argPos);
        } else if (isFlip && length > 1) {
          args.reverse();
        }

        if (isAry && ary < length) {
          args.length = ary;
        }

        if (this && this !== root && this instanceof wrapper) {
          fn = Ctor || createCtor(fn);
        }

        return fn.apply(thisBinding, args);
      }

      return wrapper;
    }
    /**
     * Creates a function like `_.invertBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} toIteratee The function to resolve iteratees.
     * @returns {Function} Returns the new inverter function.
     */


    function createInverter(setter, toIteratee) {
      return function (object, iteratee) {
        return baseInverter(object, setter, toIteratee(iteratee), {});
      };
    }
    /**
     * Creates a function that performs a mathematical operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @param {number} [defaultValue] The value used for `undefined` arguments.
     * @returns {Function} Returns the new mathematical operation function.
     */


    function createMathOperation(operator, defaultValue) {
      return function (value, other) {
        var result;

        if (value === undefined && other === undefined) {
          return defaultValue;
        }

        if (value !== undefined) {
          result = value;
        }

        if (other !== undefined) {
          if (result === undefined) {
            return other;
          }

          if (typeof value == 'string' || typeof other == 'string') {
            value = baseToString(value);
            other = baseToString(other);
          } else {
            value = baseToNumber(value);
            other = baseToNumber(other);
          }

          result = operator(value, other);
        }

        return result;
      };
    }
    /**
     * Creates a function like `_.over`.
     *
     * @private
     * @param {Function} arrayFunc The function to iterate over iteratees.
     * @returns {Function} Returns the new over function.
     */


    function createOver(arrayFunc) {
      return flatRest(function (iteratees) {
        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
        return baseRest(function (args) {
          var thisArg = this;
          return arrayFunc(iteratees, function (iteratee) {
            return apply(iteratee, thisArg, args);
          });
        });
      });
    }
    /**
     * Creates the padding for `string` based on `length`. The `chars` string
     * is truncated if the number of characters exceeds `length`.
     *
     * @private
     * @param {number} length The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padding for `string`.
     */


    function createPadding(length, chars) {
      chars = chars === undefined ? ' ' : baseToString(chars);
      var charsLength = chars.length;

      if (charsLength < 2) {
        return charsLength ? baseRepeat(chars, length) : chars;
      }

      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
      return hasUnicode(chars) ? castSlice(stringToArray(result), 0, length).join('') : result.slice(0, length);
    }
    /**
     * Creates a function that wraps `func` to invoke it with the `this` binding
     * of `thisArg` and `partials` prepended to the arguments it receives.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {Array} partials The arguments to prepend to those provided to
     *  the new function.
     * @returns {Function} Returns the new wrapped function.
     */


    function createPartial(func, bitmask, thisArg, partials) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var argsIndex = -1,
            argsLength = arguments.length,
            leftIndex = -1,
            leftLength = partials.length,
            args = Array(leftLength + argsLength),
            fn = this && this !== root && this instanceof wrapper ? Ctor : func;

        while (++leftIndex < leftLength) {
          args[leftIndex] = partials[leftIndex];
        }

        while (argsLength--) {
          args[leftIndex++] = arguments[++argsIndex];
        }

        return apply(fn, isBind ? thisArg : this, args);
      }

      return wrapper;
    }
    /**
     * Creates a `_.range` or `_.rangeRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new range function.
     */


    function createRange(fromRight) {
      return function (start, end, step) {
        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
          end = step = undefined;
        } // Ensure the sign of `-0` is preserved.


        start = toFinite(start);

        if (end === undefined) {
          end = start;
          start = 0;
        } else {
          end = toFinite(end);
        }

        step = step === undefined ? start < end ? 1 : -1 : toFinite(step);
        return baseRange(start, end, step, fromRight);
      };
    }
    /**
     * Creates a function that performs a relational operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @returns {Function} Returns the new relational operation function.
     */


    function createRelationalOperation(operator) {
      return function (value, other) {
        if (!(typeof value == 'string' && typeof other == 'string')) {
          value = toNumber(value);
          other = toNumber(other);
        }

        return operator(value, other);
      };
    }
    /**
     * Creates a function that wraps `func` to continue currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {Function} wrapFunc The function to create the `func` wrapper.
     * @param {*} placeholder The placeholder value.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */


    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
      var isCurry = bitmask & WRAP_CURRY_FLAG,
          newHolders = isCurry ? holders : undefined,
          newHoldersRight = isCurry ? undefined : holders,
          newPartials = isCurry ? partials : undefined,
          newPartialsRight = isCurry ? undefined : partials;
      bitmask |= isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG;
      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
      }

      var newData = [func, bitmask, thisArg, newPartials, newHolders, newPartialsRight, newHoldersRight, argPos, ary, arity];
      var result = wrapFunc.apply(undefined, newData);

      if (isLaziable(func)) {
        setData(result, newData);
      }

      result.placeholder = placeholder;
      return setWrapToString(result, func, bitmask);
    }
    /**
     * Creates a function like `_.round`.
     *
     * @private
     * @param {string} methodName The name of the `Math` method to use when rounding.
     * @returns {Function} Returns the new round function.
     */


    function createRound(methodName) {
      var func = Math[methodName];
      return function (number, precision) {
        number = toNumber(number);
        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);

        if (precision) {
          // Shift with exponential notation to avoid floating-point issues.
          // See [MDN](https://mdn.io/round#Examples) for more details.
          var pair = (toString(number) + 'e').split('e'),
              value = func(pair[0] + 'e' + (+pair[1] + precision));
          pair = (toString(value) + 'e').split('e');
          return +(pair[0] + 'e' + (+pair[1] - precision));
        }

        return func(number);
      };
    }
    /**
     * Creates a set object of `values`.
     *
     * @private
     * @param {Array} values The values to add to the set.
     * @returns {Object} Returns the new set.
     */


    var createSet = !(Set && 1 / setToArray(new Set([, -0]))[1] == INFINITY) ? noop : function (values) {
      return new Set(values);
    };
    /**
     * Creates a `_.toPairs` or `_.toPairsIn` function.
     *
     * @private
     * @param {Function} keysFunc The function to get the keys of a given object.
     * @returns {Function} Returns the new pairs function.
     */

    function createToPairs(keysFunc) {
      return function (object) {
        var tag = getTag(object);

        if (tag == mapTag) {
          return mapToArray(object);
        }

        if (tag == setTag) {
          return setToPairs(object);
        }

        return baseToPairs(object, keysFunc(object));
      };
    }
    /**
     * Creates a function that either curries or invokes `func` with optional
     * `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags.
     *    1 - `_.bind`
     *    2 - `_.bindKey`
     *    4 - `_.curry` or `_.curryRight` of a bound function
     *    8 - `_.curry`
     *   16 - `_.curryRight`
     *   32 - `_.partial`
     *   64 - `_.partialRight`
     *  128 - `_.rearg`
     *  256 - `_.ary`
     *  512 - `_.flip`
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to be partially applied.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */


    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;

      if (!isBindKey && typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }

      var length = partials ? partials.length : 0;

      if (!length) {
        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
        partials = holders = undefined;
      }

      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
      arity = arity === undefined ? arity : toInteger(arity);
      length -= holders ? holders.length : 0;

      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
        var partialsRight = partials,
            holdersRight = holders;
        partials = holders = undefined;
      }

      var data = isBindKey ? undefined : getData(func);
      var newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];

      if (data) {
        mergeData(newData, data);
      }

      func = newData[0];
      bitmask = newData[1];
      thisArg = newData[2];
      partials = newData[3];
      holders = newData[4];
      arity = newData[9] = newData[9] === undefined ? isBindKey ? 0 : func.length : nativeMax(newData[9] - length, 0);

      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
      }

      if (!bitmask || bitmask == WRAP_BIND_FLAG) {
        var result = createBind(func, bitmask, thisArg);
      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
        result = createCurry(func, bitmask, arity);
      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
        result = createPartial(func, bitmask, thisArg, partials);
      } else {
        result = createHybrid.apply(undefined, newData);
      }

      var setter = data ? baseSetData : setData;
      return setWrapToString(setter(result, newData), func, bitmask);
    }
    /**
     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
     * of source objects to the destination object for all destination properties
     * that resolve to `undefined`.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to assign.
     * @param {Object} object The parent object of `objValue`.
     * @returns {*} Returns the value to assign.
     */


    function customDefaultsAssignIn(objValue, srcValue, key, object) {
      if (objValue === undefined || eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key)) {
        return srcValue;
      }

      return objValue;
    }
    /**
     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
     * objects into destination objects that are passed thru.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to merge.
     * @param {Object} object The parent object of `objValue`.
     * @param {Object} source The parent object of `srcValue`.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     * @returns {*} Returns the value to assign.
     */


    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
      if (isObject(objValue) && isObject(srcValue)) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, objValue);
        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
        stack['delete'](srcValue);
      }

      return objValue;
    }
    /**
     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
     * objects.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {string} key The key of the property to inspect.
     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
     */


    function customOmitClone(value) {
      return isPlainObject(value) ? undefined : value;
    }
    /**
     * A specialized version of `baseIsEqualDeep` for arrays with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Array} array The array to compare.
     * @param {Array} other The other array to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `array` and `other` objects.
     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
     */


    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          arrLength = array.length,
          othLength = other.length;

      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      } // Assume cyclic values are equal.


      var stacked = stack.get(array);

      if (stacked && stack.get(other)) {
        return stacked == other;
      }

      var index = -1,
          result = true,
          seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;
      stack.set(array, other);
      stack.set(other, array); // Ignore non-index properties.

      while (++index < arrLength) {
        var arrValue = array[index],
            othValue = other[index];

        if (customizer) {
          var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
        }

        if (compared !== undefined) {
          if (compared) {
            continue;
          }

          result = false;
          break;
        } // Recursively compare arrays (susceptible to call stack limits).


        if (seen) {
          if (!arraySome(other, function (othValue, othIndex) {
            if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
            result = false;
            break;
          }
        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
          result = false;
          break;
        }
      }

      stack['delete'](array);
      stack['delete'](other);
      return result;
    }
    /**
     * A specialized version of `baseIsEqualDeep` for comparing objects of
     * the same `toStringTag`.
     *
     * **Note:** This function only supports comparing values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {string} tag The `toStringTag` of the objects to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */


    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
            return false;
          }

          object = object.buffer;
          other = other.buffer;

        case arrayBufferTag:
          if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
            return false;
          }

          return true;

        case boolTag:
        case dateTag:
        case numberTag:
          // Coerce booleans to `1` or `0` and dates to milliseconds.
          // Invalid dates are coerced to `NaN`.
          return eq(+object, +other);

        case errorTag:
          return object.name == other.name && object.message == other.message;

        case regexpTag:
        case stringTag:
          // Coerce regexes to strings and treat strings, primitives and objects,
          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
          // for more details.
          return object == other + '';

        case mapTag:
          var convert = mapToArray;

        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);

          if (object.size != other.size && !isPartial) {
            return false;
          } // Assume cyclic values are equal.


          var stacked = stack.get(object);

          if (stacked) {
            return stacked == other;
          }

          bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).

          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack['delete'](object);
          return result;

        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }

      }

      return false;
    }
    /**
     * A specialized version of `baseIsEqualDeep` for objects with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */


    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          objProps = getAllKeys(object),
          objLength = objProps.length,
          othProps = getAllKeys(other),
          othLength = othProps.length;

      if (objLength != othLength && !isPartial) {
        return false;
      }

      var index = objLength;

      while (index--) {
        var key = objProps[index];

        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      } // Assume cyclic values are equal.


      var stacked = stack.get(object);

      if (stacked && stack.get(other)) {
        return stacked == other;
      }

      var result = true;
      stack.set(object, other);
      stack.set(other, object);
      var skipCtor = isPartial;

      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key],
            othValue = other[key];

        if (customizer) {
          var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
        } // Recursively compare objects (susceptible to call stack limits).


        if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
          result = false;
          break;
        }

        skipCtor || (skipCtor = key == 'constructor');
      }

      if (result && !skipCtor) {
        var objCtor = object.constructor,
            othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.

        if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {
          result = false;
        }
      }

      stack['delete'](object);
      stack['delete'](other);
      return result;
    }
    /**
     * A specialized version of `baseRest` which flattens the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */


    function flatRest(func) {
      return setToString(overRest(func, undefined, flatten), func + '');
    }
    /**
     * Creates an array of own enumerable property names and symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */


    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }
    /**
     * Creates an array of own and inherited enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */


    function getAllKeysIn(object) {
      return baseGetAllKeys(object, keysIn, getSymbolsIn);
    }
    /**
     * Gets metadata for `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {*} Returns the metadata for `func`.
     */


    var getData = !metaMap ? noop : function (func) {
      return metaMap.get(func);
    };
    /**
     * Gets the name of `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {string} Returns the function name.
     */

    function getFuncName(func) {
      var result = func.name + '',
          array = realNames[result],
          length = hasOwnProperty.call(realNames, result) ? array.length : 0;

      while (length--) {
        var data = array[length],
            otherFunc = data.func;

        if (otherFunc == null || otherFunc == func) {
          return data.name;
        }
      }

      return result;
    }
    /**
     * Gets the argument placeholder value for `func`.
     *
     * @private
     * @param {Function} func The function to inspect.
     * @returns {*} Returns the placeholder value.
     */


    function getHolder(func) {
      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
      return object.placeholder;
    }
    /**
     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
     * this function returns the custom method, otherwise it returns `baseIteratee`.
     * If arguments are provided, the chosen function is invoked with them and
     * its result is returned.
     *
     * @private
     * @param {*} [value] The value to convert to an iteratee.
     * @param {number} [arity] The arity of the created iteratee.
     * @returns {Function} Returns the chosen function or its result.
     */


    function getIteratee() {
      var result = lodash.iteratee || iteratee;
      result = result === iteratee ? baseIteratee : result;
      return arguments.length ? result(arguments[0], arguments[1]) : result;
    }
    /**
     * Gets the data for `map`.
     *
     * @private
     * @param {Object} map The map to query.
     * @param {string} key The reference key.
     * @returns {*} Returns the map data.
     */


    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;
    }
    /**
     * Gets the property names, values, and compare flags of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the match data of `object`.
     */


    function getMatchData(object) {
      var result = keys(object),
          length = result.length;

      while (length--) {
        var key = result[length],
            value = object[key];
        result[length] = [key, value, isStrictComparable(value)];
      }

      return result;
    }
    /**
     * Gets the native function at `key` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the method to get.
     * @returns {*} Returns the function if it's native, else `undefined`.
     */


    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : undefined;
    }
    /**
     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the raw `toStringTag`.
     */


    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag),
          tag = value[symToStringTag];

      try {
        value[symToStringTag] = undefined;
        var unmasked = true;
      } catch (e) {}

      var result = nativeObjectToString.call(value);

      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }

      return result;
    }
    /**
     * Creates an array of the own enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */


    var getSymbols = !nativeGetSymbols ? stubArray : function (object) {
      if (object == null) {
        return [];
      }

      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function (symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };
    /**
     * Creates an array of the own and inherited enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */

    var getSymbolsIn = !nativeGetSymbols ? stubArray : function (object) {
      var result = [];

      while (object) {
        arrayPush(result, getSymbols(object));
        object = getPrototype(object);
      }

      return result;
    };
    /**
     * Gets the `toStringTag` of `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */

    var getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.

    if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {
      getTag = function getTag(value) {
        var result = baseGetTag(value),
            Ctor = result == objectTag ? value.constructor : undefined,
            ctorString = Ctor ? toSource(Ctor) : '';

        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString:
              return dataViewTag;

            case mapCtorString:
              return mapTag;

            case promiseCtorString:
              return promiseTag;

            case setCtorString:
              return setTag;

            case weakMapCtorString:
              return weakMapTag;
          }
        }

        return result;
      };
    }
    /**
     * Gets the view, applying any `transforms` to the `start` and `end` positions.
     *
     * @private
     * @param {number} start The start of the view.
     * @param {number} end The end of the view.
     * @param {Array} transforms The transformations to apply to the view.
     * @returns {Object} Returns an object containing the `start` and `end`
     *  positions of the view.
     */


    function getView(start, end, transforms) {
      var index = -1,
          length = transforms.length;

      while (++index < length) {
        var data = transforms[index],
            size = data.size;

        switch (data.type) {
          case 'drop':
            start += size;
            break;

          case 'dropRight':
            end -= size;
            break;

          case 'take':
            end = nativeMin(end, start + size);
            break;

          case 'takeRight':
            start = nativeMax(start, end - size);
            break;
        }
      }

      return {
        'start': start,
        'end': end
      };
    }
    /**
     * Extracts wrapper details from the `source` body comment.
     *
     * @private
     * @param {string} source The source to inspect.
     * @returns {Array} Returns the wrapper details.
     */


    function getWrapDetails(source) {
      var match = source.match(reWrapDetails);
      return match ? match[1].split(reSplitDetails) : [];
    }
    /**
     * Checks if `path` exists on `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @param {Function} hasFunc The function to check properties.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     */


    function hasPath(object, path, hasFunc) {
      path = castPath(path, object);
      var index = -1,
          length = path.length,
          result = false;

      while (++index < length) {
        var key = toKey(path[index]);

        if (!(result = object != null && hasFunc(object, key))) {
          break;
        }

        object = object[key];
      }

      if (result || ++index != length) {
        return result;
      }

      length = object == null ? 0 : object.length;
      return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
    }
    /**
     * Initializes an array clone.
     *
     * @private
     * @param {Array} array The array to clone.
     * @returns {Array} Returns the initialized clone.
     */


    function initCloneArray(array) {
      var length = array.length,
          result = new array.constructor(length); // Add properties assigned by `RegExp#exec`.

      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
        result.index = array.index;
        result.input = array.input;
      }

      return result;
    }
    /**
     * Initializes an object clone.
     *
     * @private
     * @param {Object} object The object to clone.
     * @returns {Object} Returns the initialized clone.
     */


    function initCloneObject(object) {
      return typeof object.constructor == 'function' && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};
    }
    /**
     * Initializes an object clone based on its `toStringTag`.
     *
     * **Note:** This function only supports cloning values with tags of
     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
     *
     * @private
     * @param {Object} object The object to clone.
     * @param {string} tag The `toStringTag` of the object to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the initialized clone.
     */


    function initCloneByTag(object, tag, isDeep) {
      var Ctor = object.constructor;

      switch (tag) {
        case arrayBufferTag:
          return cloneArrayBuffer(object);

        case boolTag:
        case dateTag:
          return new Ctor(+object);

        case dataViewTag:
          return cloneDataView(object, isDeep);

        case float32Tag:
        case float64Tag:
        case int8Tag:
        case int16Tag:
        case int32Tag:
        case uint8Tag:
        case uint8ClampedTag:
        case uint16Tag:
        case uint32Tag:
          return cloneTypedArray(object, isDeep);

        case mapTag:
          return new Ctor();

        case numberTag:
        case stringTag:
          return new Ctor(object);

        case regexpTag:
          return cloneRegExp(object);

        case setTag:
          return new Ctor();

        case symbolTag:
          return cloneSymbol(object);
      }
    }
    /**
     * Inserts wrapper `details` in a comment at the top of the `source` body.
     *
     * @private
     * @param {string} source The source to modify.
     * @returns {Array} details The details to insert.
     * @returns {string} Returns the modified source.
     */


    function insertWrapDetails(source, details) {
      var length = details.length;

      if (!length) {
        return source;
      }

      var lastIndex = length - 1;
      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
      details = details.join(length > 2 ? ', ' : ' ');
      return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
    }
    /**
     * Checks if `value` is a flattenable `arguments` object or array.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
     */


    function isFlattenable(value) {
      return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
    }
    /**
     * Checks if `value` is a valid array-like index.
     *
     * @private
     * @param {*} value The value to check.
     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
     */


    function isIndex(value, length) {
      var type = typeof value;
      length = length == null ? MAX_SAFE_INTEGER : length;
      return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
    }
    /**
     * Checks if the given arguments are from an iteratee call.
     *
     * @private
     * @param {*} value The potential iteratee value argument.
     * @param {*} index The potential iteratee index or key argument.
     * @param {*} object The potential iteratee object argument.
     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
     *  else `false`.
     */


    function isIterateeCall(value, index, object) {
      if (!isObject(object)) {
        return false;
      }

      var type = typeof index;

      if (type == 'number' ? isArrayLike(object) && isIndex(index, object.length) : type == 'string' && index in object) {
        return eq(object[index], value);
      }

      return false;
    }
    /**
     * Checks if `value` is a property name and not a property path.
     *
     * @private
     * @param {*} value The value to check.
     * @param {Object} [object] The object to query keys on.
     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
     */


    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }

      var type = typeof value;

      if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {
        return true;
      }

      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
    }
    /**
     * Checks if `value` is suitable for use as unique object key.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
     */


    function isKeyable(value) {
      var type = typeof value;
      return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;
    }
    /**
     * Checks if `func` has a lazy counterpart.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
     *  else `false`.
     */


    function isLaziable(func) {
      var funcName = getFuncName(func),
          other = lodash[funcName];

      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
        return false;
      }

      if (func === other) {
        return true;
      }

      var data = getData(other);
      return !!data && func === data[0];
    }
    /**
     * Checks if `func` has its source masked.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
     */


    function isMasked(func) {
      return !!maskSrcKey && maskSrcKey in func;
    }
    /**
     * Checks if `func` is capable of being masked.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
     */


    var isMaskable = coreJsData ? isFunction : stubFalse;
    /**
     * Checks if `value` is likely a prototype object.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
     */

    function isPrototype(value) {
      var Ctor = value && value.constructor,
          proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;
      return value === proto;
    }
    /**
     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` if suitable for strict
     *  equality comparisons, else `false`.
     */


    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }
    /**
     * A specialized version of `matchesProperty` for source values suitable
     * for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {string} key The key of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */


    function matchesStrictComparable(key, srcValue) {
      return function (object) {
        if (object == null) {
          return false;
        }

        return object[key] === srcValue && (srcValue !== undefined || key in Object(object));
      };
    }
    /**
     * A specialized version of `_.memoize` which clears the memoized function's
     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
     *
     * @private
     * @param {Function} func The function to have its output memoized.
     * @returns {Function} Returns the new memoized function.
     */


    function memoizeCapped(func) {
      var result = memoize(func, function (key) {
        if (cache.size === MAX_MEMOIZE_SIZE) {
          cache.clear();
        }

        return key;
      });
      var cache = result.cache;
      return result;
    }
    /**
     * Merges the function metadata of `source` into `data`.
     *
     * Merging metadata reduces the number of wrappers used to invoke a function.
     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
     * may be applied regardless of execution order. Methods like `_.ary` and
     * `_.rearg` modify function arguments, making the order in which they are
     * executed important, preventing the merging of metadata. However, we make
     * an exception for a safe combined case where curried functions have `_.ary`
     * and or `_.rearg` applied.
     *
     * @private
     * @param {Array} data The destination metadata.
     * @param {Array} source The source metadata.
     * @returns {Array} Returns `data`.
     */


    function mergeData(data, source) {
      var bitmask = data[1],
          srcBitmask = source[1],
          newBitmask = bitmask | srcBitmask,
          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);
      var isCombo = srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_CURRY_FLAG || srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_REARG_FLAG && data[7].length <= source[8] || srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG) && source[7].length <= source[8] && bitmask == WRAP_CURRY_FLAG; // Exit early if metadata can't be merged.

      if (!(isCommon || isCombo)) {
        return data;
      } // Use source `thisArg` if available.


      if (srcBitmask & WRAP_BIND_FLAG) {
        data[2] = source[2]; // Set when currying a bound function.

        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
      } // Compose partial arguments.


      var value = source[3];

      if (value) {
        var partials = data[3];
        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
      } // Compose partial right arguments.


      value = source[5];

      if (value) {
        partials = data[5];
        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
      } // Use source `argPos` if available.


      value = source[7];

      if (value) {
        data[7] = value;
      } // Use source `ary` if it's smaller.


      if (srcBitmask & WRAP_ARY_FLAG) {
        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
      } // Use source `arity` if one is not provided.


      if (data[9] == null) {
        data[9] = source[9];
      } // Use source `func` and merge bitmasks.


      data[0] = source[0];
      data[1] = newBitmask;
      return data;
    }
    /**
     * This function is like
     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * except that it includes inherited enumerable properties.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */


    function nativeKeysIn(object) {
      var result = [];

      if (object != null) {
        for (var key in Object(object)) {
          result.push(key);
        }
      }

      return result;
    }
    /**
     * Converts `value` to a string using `Object.prototype.toString`.
     *
     * @private
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     */


    function objectToString(value) {
      return nativeObjectToString.call(value);
    }
    /**
     * A specialized version of `baseRest` which transforms the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @param {Function} transform The rest array transform.
     * @returns {Function} Returns the new function.
     */


    function overRest(func, start, transform) {
      start = nativeMax(start === undefined ? func.length - 1 : start, 0);
      return function () {
        var args = arguments,
            index = -1,
            length = nativeMax(args.length - start, 0),
            array = Array(length);

        while (++index < length) {
          array[index] = args[start + index];
        }

        index = -1;
        var otherArgs = Array(start + 1);

        while (++index < start) {
          otherArgs[index] = args[index];
        }

        otherArgs[start] = transform(array);
        return apply(func, this, otherArgs);
      };
    }
    /**
     * Gets the parent value at `path` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array} path The path to get the parent value of.
     * @returns {*} Returns the parent value.
     */


    function parent(object, path) {
      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
    }
    /**
     * Reorder `array` according to the specified indexes where the element at
     * the first index is assigned as the first element, the element at
     * the second index is assigned as the second element, and so on.
     *
     * @private
     * @param {Array} array The array to reorder.
     * @param {Array} indexes The arranged array indexes.
     * @returns {Array} Returns `array`.
     */


    function reorder(array, indexes) {
      var arrLength = array.length,
          length = nativeMin(indexes.length, arrLength),
          oldArray = copyArray(array);

      while (length--) {
        var index = indexes[length];
        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
      }

      return array;
    }
    /**
     * Gets the value at `key`, unless `key` is "__proto__".
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the property to get.
     * @returns {*} Returns the property value.
     */


    function safeGet(object, key) {
      if (key == '__proto__') {
        return;
      }

      return object[key];
    }
    /**
     * Sets metadata for `func`.
     *
     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
     * period of time, it will trip its breaker and transition to an identity
     * function to avoid garbage collection pauses in V8. See
     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
     * for more details.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */


    var setData = shortOut(baseSetData);
    /**
     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @returns {number|Object} Returns the timer id or timeout object.
     */

    var setTimeout = ctxSetTimeout || function (func, wait) {
      return root.setTimeout(func, wait);
    };
    /**
     * Sets the `toString` method of `func` to return `string`.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */


    var setToString = shortOut(baseSetToString);
    /**
     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
     * with wrapper details in a comment at the top of the source body.
     *
     * @private
     * @param {Function} wrapper The function to modify.
     * @param {Function} reference The reference function.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Function} Returns `wrapper`.
     */

    function setWrapToString(wrapper, reference, bitmask) {
      var source = reference + '';
      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
    }
    /**
     * Creates a function that'll short out and invoke `identity` instead
     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
     * milliseconds.
     *
     * @private
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new shortable function.
     */


    function shortOut(func) {
      var count = 0,
          lastCalled = 0;
      return function () {
        var stamp = nativeNow(),
            remaining = HOT_SPAN - (stamp - lastCalled);
        lastCalled = stamp;

        if (remaining > 0) {
          if (++count >= HOT_COUNT) {
            return arguments[0];
          }
        } else {
          count = 0;
        }

        return func.apply(undefined, arguments);
      };
    }
    /**
     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @param {number} [size=array.length] The size of `array`.
     * @returns {Array} Returns `array`.
     */


    function shuffleSelf(array, size) {
      var index = -1,
          length = array.length,
          lastIndex = length - 1;
      size = size === undefined ? length : size;

      while (++index < size) {
        var rand = baseRandom(index, lastIndex),
            value = array[rand];
        array[rand] = array[index];
        array[index] = value;
      }

      array.length = size;
      return array;
    }
    /**
     * Converts `string` to a property path array.
     *
     * @private
     * @param {string} string The string to convert.
     * @returns {Array} Returns the property path array.
     */


    var stringToPath = memoizeCapped(function (string) {
      var result = [];

      if (string.charCodeAt(0) === 46
      /* . */
      ) {
          result.push('');
        }

      string.replace(rePropName, function (match, number, quote, subString) {
        result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);
      });
      return result;
    });
    /**
     * Converts `value` to a string key if it's not a string or symbol.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {string|symbol} Returns the key.
     */

    function toKey(value) {
      if (typeof value == 'string' || isSymbol(value)) {
        return value;
      }

      var result = value + '';
      return result == '0' && 1 / value == -INFINITY ? '-0' : result;
    }
    /**
     * Converts `func` to its source code.
     *
     * @private
     * @param {Function} func The function to convert.
     * @returns {string} Returns the source code.
     */


    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {}

        try {
          return func + '';
        } catch (e) {}
      }

      return '';
    }
    /**
     * Updates wrapper `details` based on `bitmask` flags.
     *
     * @private
     * @returns {Array} details The details to modify.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Array} Returns `details`.
     */


    function updateWrapDetails(details, bitmask) {
      arrayEach(wrapFlags, function (pair) {
        var value = '_.' + pair[0];

        if (bitmask & pair[1] && !arrayIncludes(details, value)) {
          details.push(value);
        }
      });
      return details.sort();
    }
    /**
     * Creates a clone of `wrapper`.
     *
     * @private
     * @param {Object} wrapper The wrapper to clone.
     * @returns {Object} Returns the cloned wrapper.
     */


    function wrapperClone(wrapper) {
      if (wrapper instanceof LazyWrapper) {
        return wrapper.clone();
      }

      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
      result.__actions__ = copyArray(wrapper.__actions__);
      result.__index__ = wrapper.__index__;
      result.__values__ = wrapper.__values__;
      return result;
    }
    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of elements split into groups the length of `size`.
     * If `array` can't be split evenly, the final chunk will be the remaining
     * elements.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to process.
     * @param {number} [size=1] The length of each chunk
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the new array of chunks.
     * @example
     *
     * _.chunk(['a', 'b', 'c', 'd'], 2);
     * // => [['a', 'b'], ['c', 'd']]
     *
     * _.chunk(['a', 'b', 'c', 'd'], 3);
     * // => [['a', 'b', 'c'], ['d']]
     */


    function chunk(array, size, guard) {
      if (guard ? isIterateeCall(array, size, guard) : size === undefined) {
        size = 1;
      } else {
        size = nativeMax(toInteger(size), 0);
      }

      var length = array == null ? 0 : array.length;

      if (!length || size < 1) {
        return [];
      }

      var index = 0,
          resIndex = 0,
          result = Array(nativeCeil(length / size));

      while (index < length) {
        result[resIndex++] = baseSlice(array, index, index += size);
      }

      return result;
    }
    /**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""`, `undefined`, and `NaN` are falsey.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to compact.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */


    function compact(array) {
      var index = -1,
          length = array == null ? 0 : array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index];

        if (value) {
          result[resIndex++] = value;
        }
      }

      return result;
    }
    /**
     * Creates a new array concatenating `array` with any additional arrays
     * and/or values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to concatenate.
     * @param {...*} [values] The values to concatenate.
     * @returns {Array} Returns the new concatenated array.
     * @example
     *
     * var array = [1];
     * var other = _.concat(array, 2, [3], [[4]]);
     *
     * console.log(other);
     * // => [1, 2, 3, [4]]
     *
     * console.log(array);
     * // => [1]
     */


    function concat() {
      var length = arguments.length;

      if (!length) {
        return [];
      }

      var args = Array(length - 1),
          array = arguments[0],
          index = length;

      while (index--) {
        args[index - 1] = arguments[index];
      }

      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
    }
    /**
     * Creates an array of `array` values not included in the other given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * **Note:** Unlike `_.pullAll`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.without, _.xor
     * @example
     *
     * _.difference([2, 1], [2, 3]);
     * // => [1]
     */


    var difference = baseRest(function (array, values) {
      return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true)) : [];
    });
    /**
     * This method is like `_.difference` except that it accepts `iteratee` which
     * is invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */

    var differenceBy = baseRest(function (array, values) {
      var iteratee = last(values);

      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }

      return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2)) : [];
    });
    /**
     * This method is like `_.difference` except that it accepts `comparator`
     * which is invoked to compare elements of `array` to `values`. The order and
     * references of result values are determined by the first array. The comparator
     * is invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     *
     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }]
     */

    var differenceWith = baseRest(function (array, values) {
      var comparator = last(values);

      if (isArrayLikeObject(comparator)) {
        comparator = undefined;
      }

      return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator) : [];
    });
    /**
     * Creates a slice of `array` with `n` elements dropped from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.drop([1, 2, 3]);
     * // => [2, 3]
     *
     * _.drop([1, 2, 3], 2);
     * // => [3]
     *
     * _.drop([1, 2, 3], 5);
     * // => []
     *
     * _.drop([1, 2, 3], 0);
     * // => [1, 2, 3]
     */

    function drop(array, n, guard) {
      var length = array == null ? 0 : array.length;

      if (!length) {
        return [];
      }

      n = guard || n === undefined ? 1 : toInteger(n);
      return baseSlice(array, n < 0 ? 0 : n, length);
    }
    /**
     * Creates a slice of `array` with `n` elements dropped from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.dropRight([1, 2, 3]);
     * // => [1, 2]
     *
     * _.dropRight([1, 2, 3], 2);
     * // => [1]
     *
     * _.dropRight([1, 2, 3], 5);
     * // => []
     *
     * _.dropRight([1, 2, 3], 0);
     * // => [1, 2, 3]
     */


    function dropRight(array, n, guard) {
      var length = array == null ? 0 : array.length;

      if (!length) {
        return [];
      }

      n = guard || n === undefined ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }
    /**
     * Creates a slice of `array` excluding elements dropped from the end.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.dropRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropRightWhile(users, ['active', false]);
     * // => objects for ['barney']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropRightWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */


    function dropRightWhile(array, predicate) {
      return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true, true) : [];
    }
    /**
     * Creates a slice of `array` excluding elements dropped from the beginning.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.dropWhile(users, function(o) { return !o.active; });
     * // => objects for ['pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropWhile(users, ['active', false]);
     * // => objects for ['pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */


    function dropWhile(array, predicate) {
      return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true) : [];
    }
    /**
     * Fills elements of `array` with `value` from `start` up to, but not
     * including, `end`.
     *
     * **Note:** This method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Array
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.fill(array, 'a');
     * console.log(array);
     * // => ['a', 'a', 'a']
     *
     * _.fill(Array(3), 2);
     * // => [2, 2, 2]
     *
     * _.fill([4, 6, 8, 10], '*', 1, 3);
     * // => [4, '*', '*', 10]
     */


    function fill(array, value, start, end) {
      var length = array == null ? 0 : array.length;

      if (!length) {
        return [];
      }

      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
        start = 0;
        end = length;
      }

      return baseFill(array, value, start, end);
    }
    /**
     * This method is like `_.find` except that it returns the index of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.findIndex(users, function(o) { return o.user == 'barney'; });
     * // => 0
     *
     * // The `_.matches` iteratee shorthand.
     * _.findIndex(users, { 'user': 'fred', 'active': false });
     * // => 1
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findIndex(users, ['active', false]);
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.findIndex(users, 'active');
     * // => 2
     */


    function findIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;

      if (!length) {
        return -1;
      }

      var index = fromIndex == null ? 0 : toInteger(fromIndex);

      if (index < 0) {
        index = nativeMax(length + index, 0);
      }

      return baseFindIndex(array, getIteratee(predicate, 3), index);
    }
    /**
     * This method is like `_.findIndex` except that it iterates over elements
     * of `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
     * // => 2
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
     * // => 0
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastIndex(users, ['active', false]);
     * // => 2
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastIndex(users, 'active');
     * // => 0
     */


    function findLastIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;

      if (!length) {
        return -1;
      }

      var index = length - 1;

      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = fromIndex < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
      }

      return baseFindIndex(array, getIteratee(predicate, 3), index, true);
    }
    /**
     * Flattens `array` a single level deep.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flatten([1, [2, [3, [4]], 5]]);
     * // => [1, 2, [3, [4]], 5]
     */


    function flatten(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, 1) : [];
    }
    /**
     * Recursively flattens `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flattenDeep([1, [2, [3, [4]], 5]]);
     * // => [1, 2, 3, 4, 5]
     */


    function flattenDeep(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, INFINITY) : [];
    }
    /**
     * Recursively flatten `array` up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * var array = [1, [2, [3, [4]], 5]];
     *
     * _.flattenDepth(array, 1);
     * // => [1, 2, [3, [4]], 5]
     *
     * _.flattenDepth(array, 2);
     * // => [1, 2, 3, [4], 5]
     */


    function flattenDepth(array, depth) {
      var length = array == null ? 0 : array.length;

      if (!length) {
        return [];
      }

      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(array, depth);
    }
    /**
     * The inverse of `_.toPairs`; this method returns an object composed
     * from key-value `pairs`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} pairs The key-value pairs.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.fromPairs([['a', 1], ['b', 2]]);
     * // => { 'a': 1, 'b': 2 }
     */


    function fromPairs(pairs) {
      var index = -1,
          length = pairs == null ? 0 : pairs.length,
          result = {};

      while (++index < length) {
        var pair = pairs[index];
        result[pair[0]] = pair[1];
      }

      return result;
    }
    /**
     * Gets the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias first
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the first element of `array`.
     * @example
     *
     * _.head([1, 2, 3]);
     * // => 1
     *
     * _.head([]);
     * // => undefined
     */


    function head(array) {
      return array && array.length ? array[0] : undefined;
    }
    /**
     * Gets the index at which the first occurrence of `value` is found in `array`
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. If `fromIndex` is negative, it's used as the
     * offset from the end of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.indexOf([1, 2, 1, 2], 2);
     * // => 1
     *
     * // Search from the `fromIndex`.
     * _.indexOf([1, 2, 1, 2], 2, 2);
     * // => 3
     */


    function indexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;

      if (!length) {
        return -1;
      }

      var index = fromIndex == null ? 0 : toInteger(fromIndex);

      if (index < 0) {
        index = nativeMax(length + index, 0);
      }

      return baseIndexOf(array, value, index);
    }
    /**
     * Gets all but the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     */


    function initial(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 0, -1) : [];
    }
    /**
     * Creates an array of unique values that are included in all given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersection([2, 1], [2, 3]);
     * // => [2]
     */


    var intersection = baseRest(function (arrays) {
      var mapped = arrayMap(arrays, castArrayLikeObject);
      return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped) : [];
    });
    /**
     * This method is like `_.intersection` except that it accepts `iteratee`
     * which is invoked for each element of each `arrays` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [2.1]
     *
     * // The `_.property` iteratee shorthand.
     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }]
     */

    var intersectionBy = baseRest(function (arrays) {
      var iteratee = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      if (iteratee === last(mapped)) {
        iteratee = undefined;
      } else {
        mapped.pop();
      }

      return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, getIteratee(iteratee, 2)) : [];
    });
    /**
     * This method is like `_.intersection` except that it accepts `comparator`
     * which is invoked to compare elements of `arrays`. The order and references
     * of result values are determined by the first array. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.intersectionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }]
     */

    var intersectionWith = baseRest(function (arrays) {
      var comparator = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);
      comparator = typeof comparator == 'function' ? comparator : undefined;

      if (comparator) {
        mapped.pop();
      }

      return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, undefined, comparator) : [];
    });
    /**
     * Converts all elements in `array` into a string separated by `separator`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to convert.
     * @param {string} [separator=','] The element separator.
     * @returns {string} Returns the joined string.
     * @example
     *
     * _.join(['a', 'b', 'c'], '~');
     * // => 'a~b~c'
     */

    function join(array, separator) {
      return array == null ? '' : nativeJoin.call(array, separator);
    }
    /**
     * Gets the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the last element of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     */


    function last(array) {
      var length = array == null ? 0 : array.length;
      return length ? array[length - 1] : undefined;
    }
    /**
     * This method is like `_.indexOf` except that it iterates over elements of
     * `array` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 1, 2], 2);
     * // => 3
     *
     * // Search from the `fromIndex`.
     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
     * // => 1
     */


    function lastIndexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;

      if (!length) {
        return -1;
      }

      var index = length;

      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
      }

      return value === value ? strictLastIndexOf(array, value, index) : baseFindIndex(array, baseIsNaN, index, true);
    }
    /**
     * Gets the element at index `n` of `array`. If `n` is negative, the nth
     * element from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.11.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=0] The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     *
     * _.nth(array, 1);
     * // => 'b'
     *
     * _.nth(array, -2);
     * // => 'c';
     */


    function nth(array, n) {
      return array && array.length ? baseNth(array, toInteger(n)) : undefined;
    }
    /**
     * Removes all given values from `array` using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
     * to remove elements from an array by predicate.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...*} [values] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pull(array, 'a', 'c');
     * console.log(array);
     * // => ['b', 'b']
     */


    var pull = baseRest(pullAll);
    /**
     * This method is like `_.pull` except that it accepts an array of values to remove.
     *
     * **Note:** Unlike `_.difference`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pullAll(array, ['a', 'c']);
     * console.log(array);
     * // => ['b', 'b']
     */

    function pullAll(array, values) {
      return array && array.length && values && values.length ? basePullAll(array, values) : array;
    }
    /**
     * This method is like `_.pullAll` except that it accepts `iteratee` which is
     * invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The iteratee is invoked with one argument: (value).
     *
     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
     *
     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
     * console.log(array);
     * // => [{ 'x': 2 }]
     */


    function pullAllBy(array, values, iteratee) {
      return array && array.length && values && values.length ? basePullAll(array, values, getIteratee(iteratee, 2)) : array;
    }
    /**
     * This method is like `_.pullAll` except that it accepts `comparator` which
     * is invoked to compare elements of `array` to `values`. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
     *
     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
     * console.log(array);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
     */


    function pullAllWith(array, values, comparator) {
      return array && array.length && values && values.length ? basePullAll(array, values, undefined, comparator) : array;
    }
    /**
     * Removes elements from `array` corresponding to `indexes` and returns an
     * array of removed elements.
     *
     * **Note:** Unlike `_.at`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     * var pulled = _.pullAt(array, [1, 3]);
     *
     * console.log(array);
     * // => ['a', 'c']
     *
     * console.log(pulled);
     * // => ['b', 'd']
     */


    var pullAt = flatRest(function (array, indexes) {
      var length = array == null ? 0 : array.length,
          result = baseAt(array, indexes);
      basePullAt(array, arrayMap(indexes, function (index) {
        return isIndex(index, length) ? +index : index;
      }).sort(compareAscending));
      return result;
    });
    /**
     * Removes all elements from `array` that `predicate` returns truthy for
     * and returns an array of the removed elements. The predicate is invoked
     * with three arguments: (value, index, array).
     *
     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
     * to pull elements from an array by value.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4];
     * var evens = _.remove(array, function(n) {
     *   return n % 2 == 0;
     * });
     *
     * console.log(array);
     * // => [1, 3]
     *
     * console.log(evens);
     * // => [2, 4]
     */

    function remove(array, predicate) {
      var result = [];

      if (!(array && array.length)) {
        return result;
      }

      var index = -1,
          indexes = [],
          length = array.length;
      predicate = getIteratee(predicate, 3);

      while (++index < length) {
        var value = array[index];

        if (predicate(value, index, array)) {
          result.push(value);
          indexes.push(index);
        }
      }

      basePullAt(array, indexes);
      return result;
    }
    /**
     * Reverses `array` so that the first element becomes the last, the second
     * element becomes the second to last, and so on.
     *
     * **Note:** This method mutates `array` and is based on
     * [`Array#reverse`](https://mdn.io/Array/reverse).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.reverse(array);
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */


    function reverse(array) {
      return array == null ? array : nativeReverse.call(array);
    }
    /**
     * Creates a slice of `array` from `start` up to, but not including, `end`.
     *
     * **Note:** This method is used instead of
     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
     * returned.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */


    function slice(array, start, end) {
      var length = array == null ? 0 : array.length;

      if (!length) {
        return [];
      }

      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
        start = 0;
        end = length;
      } else {
        start = start == null ? 0 : toInteger(start);
        end = end === undefined ? length : toInteger(end);
      }

      return baseSlice(array, start, end);
    }
    /**
     * Uses a binary search to determine the lowest index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedIndex([30, 50], 40);
     * // => 1
     */


    function sortedIndex(array, value) {
      return baseSortedIndex(array, value);
    }
    /**
     * This method is like `_.sortedIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
     * // => 0
     */


    function sortedIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
    }
    /**
     * This method is like `_.indexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
     * // => 1
     */


    function sortedIndexOf(array, value) {
      var length = array == null ? 0 : array.length;

      if (length) {
        var index = baseSortedIndex(array, value);

        if (index < length && eq(array[index], value)) {
          return index;
        }
      }

      return -1;
    }
    /**
     * This method is like `_.sortedIndex` except that it returns the highest
     * index at which `value` should be inserted into `array` in order to
     * maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
     * // => 4
     */


    function sortedLastIndex(array, value) {
      return baseSortedIndex(array, value, true);
    }
    /**
     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 1
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
     * // => 1
     */


    function sortedLastIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
    }
    /**
     * This method is like `_.lastIndexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
     * // => 3
     */


    function sortedLastIndexOf(array, value) {
      var length = array == null ? 0 : array.length;

      if (length) {
        var index = baseSortedIndex(array, value, true) - 1;

        if (eq(array[index], value)) {
          return index;
        }
      }

      return -1;
    }
    /**
     * This method is like `_.uniq` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniq([1, 1, 2]);
     * // => [1, 2]
     */


    function sortedUniq(array) {
      return array && array.length ? baseSortedUniq(array) : [];
    }
    /**
     * This method is like `_.uniqBy` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
     * // => [1.1, 2.3]
     */


    function sortedUniqBy(array, iteratee) {
      return array && array.length ? baseSortedUniq(array, getIteratee(iteratee, 2)) : [];
    }
    /**
     * Gets all but the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.tail([1, 2, 3]);
     * // => [2, 3]
     */


    function tail(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 1, length) : [];
    }
    /**
     * Creates a slice of `array` with `n` elements taken from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.take([1, 2, 3]);
     * // => [1]
     *
     * _.take([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.take([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.take([1, 2, 3], 0);
     * // => []
     */


    function take(array, n, guard) {
      if (!(array && array.length)) {
        return [];
      }

      n = guard || n === undefined ? 1 : toInteger(n);
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }
    /**
     * Creates a slice of `array` with `n` elements taken from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.takeRight([1, 2, 3]);
     * // => [3]
     *
     * _.takeRight([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.takeRight([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.takeRight([1, 2, 3], 0);
     * // => []
     */


    function takeRight(array, n, guard) {
      var length = array == null ? 0 : array.length;

      if (!length) {
        return [];
      }

      n = guard || n === undefined ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, n < 0 ? 0 : n, length);
    }
    /**
     * Creates a slice of `array` with elements taken from the end. Elements are
     * taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.takeRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeRightWhile(users, ['active', false]);
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeRightWhile(users, 'active');
     * // => []
     */


    function takeRightWhile(array, predicate) {
      return array && array.length ? baseWhile(array, getIteratee(predicate, 3), false, true) : [];
    }
    /**
     * Creates a slice of `array` with elements taken from the beginning. Elements
     * are taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.takeWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeWhile(users, ['active', false]);
     * // => objects for ['barney', 'fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeWhile(users, 'active');
     * // => []
     */


    function takeWhile(array, predicate) {
      return array && array.length ? baseWhile(array, getIteratee(predicate, 3)) : [];
    }
    /**
     * Creates an array of unique values, in order, from all given arrays using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.union([2], [1, 2]);
     * // => [2, 1]
     */


    var union = baseRest(function (arrays) {
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
    });
    /**
     * This method is like `_.union` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which uniqueness is computed. Result values are chosen from the first
     * array in which the value occurs. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */

    var unionBy = baseRest(function (arrays) {
      var iteratee = last(arrays);

      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }

      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
    });
    /**
     * This method is like `_.union` except that it accepts `comparator` which
     * is invoked to compare elements of `arrays`. Result values are chosen from
     * the first array in which the value occurs. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.unionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */

    var unionWith = baseRest(function (arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
    });
    /**
     * Creates a duplicate-free version of an array, using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons, in which only the first occurrence of each element
     * is kept. The order of result values is determined by the order they occur
     * in the array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniq([2, 1, 2]);
     * // => [2, 1]
     */

    function uniq(array) {
      return array && array.length ? baseUniq(array) : [];
    }
    /**
     * This method is like `_.uniq` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * uniqueness is computed. The order of result values is determined by the
     * order they occur in the array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */


    function uniqBy(array, iteratee) {
      return array && array.length ? baseUniq(array, getIteratee(iteratee, 2)) : [];
    }
    /**
     * This method is like `_.uniq` except that it accepts `comparator` which
     * is invoked to compare elements of `array`. The order of result values is
     * determined by the order they occur in the array.The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.uniqWith(objects, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
     */


    function uniqWith(array, comparator) {
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return array && array.length ? baseUniq(array, undefined, comparator) : [];
    }
    /**
     * This method is like `_.zip` except that it accepts an array of grouped
     * elements and creates an array regrouping the elements to their pre-zip
     * configuration.
     *
     * @static
     * @memberOf _
     * @since 1.2.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     *
     * _.unzip(zipped);
     * // => [['a', 'b'], [1, 2], [true, false]]
     */


    function unzip(array) {
      if (!(array && array.length)) {
        return [];
      }

      var length = 0;
      array = arrayFilter(array, function (group) {
        if (isArrayLikeObject(group)) {
          length = nativeMax(group.length, length);
          return true;
        }
      });
      return baseTimes(length, function (index) {
        return arrayMap(array, baseProperty(index));
      });
    }
    /**
     * This method is like `_.unzip` except that it accepts `iteratee` to specify
     * how regrouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  regrouped values.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
     * // => [[1, 10, 100], [2, 20, 200]]
     *
     * _.unzipWith(zipped, _.add);
     * // => [3, 30, 300]
     */


    function unzipWith(array, iteratee) {
      if (!(array && array.length)) {
        return [];
      }

      var result = unzip(array);

      if (iteratee == null) {
        return result;
      }

      return arrayMap(result, function (group) {
        return apply(iteratee, undefined, group);
      });
    }
    /**
     * Creates an array excluding all given values using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.pull`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...*} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.xor
     * @example
     *
     * _.without([2, 1, 2, 3], 1, 2);
     * // => [3]
     */


    var without = baseRest(function (array, values) {
      return isArrayLikeObject(array) ? baseDifference(array, values) : [];
    });
    /**
     * Creates an array of unique values that is the
     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
     * of the given arrays. The order of result values is determined by the order
     * they occur in the arrays.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.without
     * @example
     *
     * _.xor([2, 1], [2, 3]);
     * // => [1, 3]
     */

    var xor = baseRest(function (arrays) {
      return baseXor(arrayFilter(arrays, isArrayLikeObject));
    });
    /**
     * This method is like `_.xor` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which by which they're compared. The order of result values is determined
     * by the order they occur in the arrays. The iteratee is invoked with one
     * argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2, 3.4]
     *
     * // The `_.property` iteratee shorthand.
     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */

    var xorBy = baseRest(function (arrays) {
      var iteratee = last(arrays);

      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }

      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
    });
    /**
     * This method is like `_.xor` except that it accepts `comparator` which is
     * invoked to compare elements of `arrays`. The order of result values is
     * determined by the order they occur in the arrays. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.xorWith(objects, others, _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */

    var xorWith = baseRest(function (arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
    });
    /**
     * Creates an array of grouped elements, the first of which contains the
     * first elements of the given arrays, the second of which contains the
     * second elements of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     */

    var zip = baseRest(unzip);
    /**
     * This method is like `_.fromPairs` except that it accepts two arrays,
     * one of property identifiers and one of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 0.4.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObject(['a', 'b'], [1, 2]);
     * // => { 'a': 1, 'b': 2 }
     */

    function zipObject(props, values) {
      return baseZipObject(props || [], values || [], assignValue);
    }
    /**
     * This method is like `_.zipObject` except that it supports property paths.
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
     */


    function zipObjectDeep(props, values) {
      return baseZipObject(props || [], values || [], baseSet);
    }
    /**
     * This method is like `_.zip` except that it accepts `iteratee` to specify
     * how grouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  grouped values.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
     *   return a + b + c;
     * });
     * // => [111, 222]
     */


    var zipWith = baseRest(function (arrays) {
      var length = arrays.length,
          iteratee = length > 1 ? arrays[length - 1] : undefined;
      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
      return unzipWith(arrays, iteratee);
    });
    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
     * chain sequences enabled. The result of such sequences must be unwrapped
     * with `_#value`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Seq
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36 },
     *   { 'user': 'fred',    'age': 40 },
     *   { 'user': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _
     *   .chain(users)
     *   .sortBy('age')
     *   .map(function(o) {
     *     return o.user + ' is ' + o.age;
     *   })
     *   .head()
     *   .value();
     * // => 'pebbles is 1'
     */

    function chain(value) {
      var result = lodash(value);
      result.__chain__ = true;
      return result;
    }
    /**
     * This method invokes `interceptor` and returns `value`. The interceptor
     * is invoked with one argument; (value). The purpose of this method is to
     * "tap into" a method chain sequence in order to modify intermediate results.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3])
     *  .tap(function(array) {
     *    // Mutate input array.
     *    array.pop();
     *  })
     *  .reverse()
     *  .value();
     * // => [2, 1]
     */


    function tap(value, interceptor) {
      interceptor(value);
      return value;
    }
    /**
     * This method is like `_.tap` except that it returns the result of `interceptor`.
     * The purpose of this method is to "pass thru" values replacing intermediate
     * results in a method chain sequence.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns the result of `interceptor`.
     * @example
     *
     * _('  abc  ')
     *  .chain()
     *  .trim()
     *  .thru(function(value) {
     *    return [value];
     *  })
     *  .value();
     * // => ['abc']
     */


    function thru(value, interceptor) {
      return interceptor(value);
    }
    /**
     * This method is the wrapper version of `_.at`.
     *
     * @name at
     * @memberOf _
     * @since 1.0.0
     * @category Seq
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _(object).at(['a[0].b.c', 'a[1]']).value();
     * // => [3, 4]
     */


    var wrapperAt = flatRest(function (paths) {
      var length = paths.length,
          start = length ? paths[0] : 0,
          value = this.__wrapped__,
          interceptor = function interceptor(object) {
        return baseAt(object, paths);
      };

      if (length > 1 || this.__actions__.length || !(value instanceof LazyWrapper) || !isIndex(start)) {
        return this.thru(interceptor);
      }

      value = value.slice(start, +start + (length ? 1 : 0));

      value.__actions__.push({
        'func': thru,
        'args': [interceptor],
        'thisArg': undefined
      });

      return new LodashWrapper(value, this.__chain__).thru(function (array) {
        if (length && !array.length) {
          array.push(undefined);
        }

        return array;
      });
    });
    /**
     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
     *
     * @name chain
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * // A sequence without explicit chaining.
     * _(users).head();
     * // => { 'user': 'barney', 'age': 36 }
     *
     * // A sequence with explicit chaining.
     * _(users)
     *   .chain()
     *   .head()
     *   .pick('user')
     *   .value();
     * // => { 'user': 'barney' }
     */

    function wrapperChain() {
      return chain(this);
    }
    /**
     * Executes the chain sequence and returns the wrapped result.
     *
     * @name commit
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2];
     * var wrapped = _(array).push(3);
     *
     * console.log(array);
     * // => [1, 2]
     *
     * wrapped = wrapped.commit();
     * console.log(array);
     * // => [1, 2, 3]
     *
     * wrapped.last();
     * // => 3
     *
     * console.log(array);
     * // => [1, 2, 3]
     */


    function wrapperCommit() {
      return new LodashWrapper(this.value(), this.__chain__);
    }
    /**
     * Gets the next value on a wrapped object following the
     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
     *
     * @name next
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the next iterator value.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 1 }
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 2 }
     *
     * wrapped.next();
     * // => { 'done': true, 'value': undefined }
     */


    function wrapperNext() {
      if (this.__values__ === undefined) {
        this.__values__ = toArray(this.value());
      }

      var done = this.__index__ >= this.__values__.length,
          value = done ? undefined : this.__values__[this.__index__++];
      return {
        'done': done,
        'value': value
      };
    }
    /**
     * Enables the wrapper to be iterable.
     *
     * @name Symbol.iterator
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the wrapper object.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped[Symbol.iterator]() === wrapped;
     * // => true
     *
     * Array.from(wrapped);
     * // => [1, 2]
     */


    function wrapperToIterator() {
      return this;
    }
    /**
     * Creates a clone of the chain sequence planting `value` as the wrapped value.
     *
     * @name plant
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @param {*} value The value to plant.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2]).map(square);
     * var other = wrapped.plant([3, 4]);
     *
     * other.value();
     * // => [9, 16]
     *
     * wrapped.value();
     * // => [1, 4]
     */


    function wrapperPlant(value) {
      var result,
          parent = this;

      while (parent instanceof baseLodash) {
        var clone = wrapperClone(parent);
        clone.__index__ = 0;
        clone.__values__ = undefined;

        if (result) {
          previous.__wrapped__ = clone;
        } else {
          result = clone;
        }

        var previous = clone;
        parent = parent.__wrapped__;
      }

      previous.__wrapped__ = value;
      return result;
    }
    /**
     * This method is the wrapper version of `_.reverse`.
     *
     * **Note:** This method mutates the wrapped array.
     *
     * @name reverse
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _(array).reverse().value()
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */


    function wrapperReverse() {
      var value = this.__wrapped__;

      if (value instanceof LazyWrapper) {
        var wrapped = value;

        if (this.__actions__.length) {
          wrapped = new LazyWrapper(this);
        }

        wrapped = wrapped.reverse();

        wrapped.__actions__.push({
          'func': thru,
          'args': [reverse],
          'thisArg': undefined
        });

        return new LodashWrapper(wrapped, this.__chain__);
      }

      return this.thru(reverse);
    }
    /**
     * Executes the chain sequence to resolve the unwrapped value.
     *
     * @name value
     * @memberOf _
     * @since 0.1.0
     * @alias toJSON, valueOf
     * @category Seq
     * @returns {*} Returns the resolved unwrapped value.
     * @example
     *
     * _([1, 2, 3]).value();
     * // => [1, 2, 3]
     */


    function wrapperValue() {
      return baseWrapperValue(this.__wrapped__, this.__actions__);
    }
    /*------------------------------------------------------------------------*/

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the number of times the key was returned by `iteratee`. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': 1, '6': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */


    var countBy = createAggregator(function (result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        ++result[key];
      } else {
        baseAssignValue(result, key, 1);
      }
    });
    /**
     * Checks if `predicate` returns truthy for **all** elements of `collection`.
     * Iteration is stopped once `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * **Note:** This method returns `true` for
     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
     * elements of empty collections.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes'], Boolean);
     * // => false
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.every(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.every(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.every(users, 'active');
     * // => false
     */

    function every(collection, predicate, guard) {
      var func = isArray(collection) ? arrayEvery : baseEvery;

      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }

      return func(collection, getIteratee(predicate, 3));
    }
    /**
     * Iterates over elements of `collection`, returning an array of all elements
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * **Note:** Unlike `_.remove`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.reject
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * _.filter(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, { 'age': 36, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.filter(users, 'active');
     * // => objects for ['barney']
     */


    function filter(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, getIteratee(predicate, 3));
    }
    /**
     * Iterates over elements of `collection`, returning the first element
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': true },
     *   { 'user': 'fred',    'age': 40, 'active': false },
     *   { 'user': 'pebbles', 'age': 1,  'active': true }
     * ];
     *
     * _.find(users, function(o) { return o.age < 40; });
     * // => object for 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.find(users, { 'age': 1, 'active': true });
     * // => object for 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.find(users, ['active', false]);
     * // => object for 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.find(users, 'active');
     * // => object for 'barney'
     */


    var find = createFind(findIndex);
    /**
     * This method is like `_.find` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=collection.length-1] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(n) {
     *   return n % 2 == 1;
     * });
     * // => 3
     */

    var findLast = createFind(findLastIndex);
    /**
     * Creates a flattened array of values by running each element in `collection`
     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
     * with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [n, n];
     * }
     *
     * _.flatMap([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */

    function flatMap(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), 1);
    }
    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDeep([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */


    function flatMapDeep(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), INFINITY);
    }
    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDepth([1, 2], duplicate, 2);
     * // => [[1, 1], [2, 2]]
     */


    function flatMapDepth(collection, iteratee, depth) {
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(map(collection, iteratee), depth);
    }
    /**
     * Iterates over elements of `collection` and invokes `iteratee` for each element.
     * The iteratee is invoked with three arguments: (value, index|key, collection).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * **Note:** As with other "Collections" methods, objects with a "length"
     * property are iterated like arrays. To avoid this behavior use `_.forIn`
     * or `_.forOwn` for object iteration.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias each
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEachRight
     * @example
     *
     * _.forEach([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `1` then `2`.
     *
     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */


    function forEach(collection, iteratee) {
      var func = isArray(collection) ? arrayEach : baseEach;
      return func(collection, getIteratee(iteratee, 3));
    }
    /**
     * This method is like `_.forEach` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @alias eachRight
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEach
     * @example
     *
     * _.forEachRight([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `2` then `1`.
     */


    function forEachRight(collection, iteratee) {
      var func = isArray(collection) ? arrayEachRight : baseEachRight;
      return func(collection, getIteratee(iteratee, 3));
    }
    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The order of grouped values
     * is determined by the order they occur in `collection`. The corresponding
     * value of each key is an array of elements responsible for generating the
     * key. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': [4.2], '6': [6.1, 6.3] }
     *
     * // The `_.property` iteratee shorthand.
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */


    var groupBy = createAggregator(function (result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        result[key].push(value);
      } else {
        baseAssignValue(result, key, [value]);
      }
    });
    /**
     * Checks if `value` is in `collection`. If `collection` is a string, it's
     * checked for a substring of `value`, otherwise
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * is used for equality comparisons. If `fromIndex` is negative, it's used as
     * the offset from the end of `collection`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {boolean} Returns `true` if `value` is found, else `false`.
     * @example
     *
     * _.includes([1, 2, 3], 1);
     * // => true
     *
     * _.includes([1, 2, 3], 1, 2);
     * // => false
     *
     * _.includes({ 'a': 1, 'b': 2 }, 1);
     * // => true
     *
     * _.includes('abcd', 'bc');
     * // => true
     */

    function includes(collection, value, fromIndex, guard) {
      collection = isArrayLike(collection) ? collection : values(collection);
      fromIndex = fromIndex && !guard ? toInteger(fromIndex) : 0;
      var length = collection.length;

      if (fromIndex < 0) {
        fromIndex = nativeMax(length + fromIndex, 0);
      }

      return isString(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && baseIndexOf(collection, value, fromIndex) > -1;
    }
    /**
     * Invokes the method at `path` of each element in `collection`, returning
     * an array of the results of each invoked method. Any additional arguments
     * are provided to each invoked method. If `path` is a function, it's invoked
     * for, and `this` bound to, each element in `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|string} path The path of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [args] The arguments to invoke each method with.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invokeMap([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */


    var invokeMap = baseRest(function (collection, path, args) {
      var index = -1,
          isFunc = typeof path == 'function',
          result = isArrayLike(collection) ? Array(collection.length) : [];
      baseEach(collection, function (value) {
        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
      });
      return result;
    });
    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the last element responsible for generating the key. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var array = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.keyBy(array, function(o) {
     *   return String.fromCharCode(o.code);
     * });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.keyBy(array, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     */

    var keyBy = createAggregator(function (result, value, key) {
      baseAssignValue(result, key, value);
    });
    /**
     * Creates an array of values by running each element in `collection` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
     *
     * The guarded methods are:
     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * _.map([4, 8], square);
     * // => [16, 64]
     *
     * _.map({ 'a': 4, 'b': 8 }, square);
     * // => [16, 64] (iteration order is not guaranteed)
     *
     * var users = [
     *   { 'user': 'barney' },
     *   { 'user': 'fred' }
     * ];
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, 'user');
     * // => ['barney', 'fred']
     */

    function map(collection, iteratee) {
      var func = isArray(collection) ? arrayMap : baseMap;
      return func(collection, getIteratee(iteratee, 3));
    }
    /**
     * This method is like `_.sortBy` except that it allows specifying the sort
     * orders of the iteratees to sort by. If `orders` is unspecified, all values
     * are sorted in ascending order. Otherwise, specify an order of "desc" for
     * descending or "asc" for ascending sort order of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @param {string[]} [orders] The sort orders of `iteratees`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 34 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 36 }
     * ];
     *
     * // Sort by `user` in ascending order and by `age` in descending order.
     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     */


    function orderBy(collection, iteratees, orders, guard) {
      if (collection == null) {
        return [];
      }

      if (!isArray(iteratees)) {
        iteratees = iteratees == null ? [] : [iteratees];
      }

      orders = guard ? undefined : orders;

      if (!isArray(orders)) {
        orders = orders == null ? [] : [orders];
      }

      return baseOrderBy(collection, iteratees, orders);
    }
    /**
     * Creates an array of elements split into two groups, the first of which
     * contains elements `predicate` returns truthy for, the second of which
     * contains elements `predicate` returns falsey for. The predicate is
     * invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of grouped elements.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': false },
     *   { 'user': 'fred',    'age': 40, 'active': true },
     *   { 'user': 'pebbles', 'age': 1,  'active': false }
     * ];
     *
     * _.partition(users, function(o) { return o.active; });
     * // => objects for [['fred'], ['barney', 'pebbles']]
     *
     * // The `_.matches` iteratee shorthand.
     * _.partition(users, { 'age': 1, 'active': false });
     * // => objects for [['pebbles'], ['barney', 'fred']]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.partition(users, ['active', false]);
     * // => objects for [['barney', 'pebbles'], ['fred']]
     *
     * // The `_.property` iteratee shorthand.
     * _.partition(users, 'active');
     * // => objects for [['fred'], ['barney', 'pebbles']]
     */


    var partition = createAggregator(function (result, value, key) {
      result[key ? 0 : 1].push(value);
    }, function () {
      return [[], []];
    });
    /**
     * Reduces `collection` to a value which is the accumulated result of running
     * each element in `collection` thru `iteratee`, where each successive
     * invocation is supplied the return value of the previous. If `accumulator`
     * is not given, the first element of `collection` is used as the initial
     * value. The iteratee is invoked with four arguments:
     * (accumulator, value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.reduce`, `_.reduceRight`, and `_.transform`.
     *
     * The guarded methods are:
     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
     * and `sortBy`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduceRight
     * @example
     *
     * _.reduce([1, 2], function(sum, n) {
     *   return sum + n;
     * }, 0);
     * // => 3
     *
     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     *   return result;
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
     */

    function reduce(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduce : baseReduce,
          initAccum = arguments.length < 3;
      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
    }
    /**
     * This method is like `_.reduce` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduce
     * @example
     *
     * var array = [[0, 1], [2, 3], [4, 5]];
     *
     * _.reduceRight(array, function(flattened, other) {
     *   return flattened.concat(other);
     * }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */


    function reduceRight(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduceRight : baseReduce,
          initAccum = arguments.length < 3;
      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
    }
    /**
     * The opposite of `_.filter`; this method returns the elements of `collection`
     * that `predicate` does **not** return truthy for.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.filter
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': true }
     * ];
     *
     * _.reject(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.reject(users, { 'age': 40, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.reject(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.reject(users, 'active');
     * // => objects for ['barney']
     */


    function reject(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, negate(getIteratee(predicate, 3)));
    }
    /**
     * Gets a random element from `collection`.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     */


    function sample(collection) {
      var func = isArray(collection) ? arraySample : baseSample;
      return func(collection);
    }
    /**
     * Gets `n` random elements at unique keys from `collection` up to the
     * size of `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @param {number} [n=1] The number of elements to sample.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the random elements.
     * @example
     *
     * _.sampleSize([1, 2, 3], 2);
     * // => [3, 1]
     *
     * _.sampleSize([1, 2, 3], 4);
     * // => [2, 3, 1]
     */


    function sampleSize(collection, n, guard) {
      if (guard ? isIterateeCall(collection, n, guard) : n === undefined) {
        n = 1;
      } else {
        n = toInteger(n);
      }

      var func = isArray(collection) ? arraySampleSize : baseSampleSize;
      return func(collection, n);
    }
    /**
     * Creates an array of shuffled values, using a version of the
     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     * @example
     *
     * _.shuffle([1, 2, 3, 4]);
     * // => [4, 1, 3, 2]
     */


    function shuffle(collection) {
      var func = isArray(collection) ? arrayShuffle : baseShuffle;
      return func(collection);
    }
    /**
     * Gets the size of `collection` by returning its length for array-like
     * values or the number of own enumerable string keyed properties for objects.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @returns {number} Returns the collection size.
     * @example
     *
     * _.size([1, 2, 3]);
     * // => 3
     *
     * _.size({ 'a': 1, 'b': 2 });
     * // => 2
     *
     * _.size('pebbles');
     * // => 7
     */


    function size(collection) {
      if (collection == null) {
        return 0;
      }

      if (isArrayLike(collection)) {
        return isString(collection) ? stringSize(collection) : collection.length;
      }

      var tag = getTag(collection);

      if (tag == mapTag || tag == setTag) {
        return collection.size;
      }

      return baseKeys(collection).length;
    }
    /**
     * Checks if `predicate` returns truthy for **any** element of `collection`.
     * Iteration is stopped once `predicate` returns truthy. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var users = [
     *   { 'user': 'barney', 'active': true },
     *   { 'user': 'fred',   'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.some(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.some(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.some(users, 'active');
     * // => true
     */


    function some(collection, predicate, guard) {
      var func = isArray(collection) ? arraySome : baseSome;

      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }

      return func(collection, getIteratee(predicate, 3));
    }
    /**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection thru each iteratee. This method
     * performs a stable sort, that is, it preserves the original sort order of
     * equal elements. The iteratees are invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 34 }
     * ];
     *
     * _.sortBy(users, [function(o) { return o.user; }]);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     *
     * _.sortBy(users, ['user', 'age']);
     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
     */


    var sortBy = baseRest(function (collection, iteratees) {
      if (collection == null) {
        return [];
      }

      var length = iteratees.length;

      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
        iteratees = [];
      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
        iteratees = [iteratees[0]];
      }

      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
    });
    /*------------------------------------------------------------------------*/

    /**
     * Gets the timestamp of the number of milliseconds that have elapsed since
     * the Unix epoch (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Date
     * @returns {number} Returns the timestamp.
     * @example
     *
     * _.defer(function(stamp) {
     *   console.log(_.now() - stamp);
     * }, _.now());
     * // => Logs the number of milliseconds it took for the deferred invocation.
     */

    var now = ctxNow || function () {
      return root.Date.now();
    };
    /*------------------------------------------------------------------------*/

    /**
     * The opposite of `_.before`; this method creates a function that invokes
     * `func` once it's called `n` or more times.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {number} n The number of calls before `func` is invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => Logs 'done saving!' after the two async saves have completed.
     */


    function after(n, func) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }

      n = toInteger(n);
      return function () {
        if (--n < 1) {
          return func.apply(this, arguments);
        }
      };
    }
    /**
     * Creates a function that invokes `func`, with up to `n` arguments,
     * ignoring any additional arguments.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @param {number} [n=func.length] The arity cap.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
     * // => [6, 8, 10]
     */


    function ary(func, n, guard) {
      n = guard ? undefined : n;
      n = func && n == null ? func.length : n;
      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
    }
    /**
     * Creates a function that invokes `func`, with the `this` binding and arguments
     * of the created function, while it's called less than `n` times. Subsequent
     * calls to the created function return the result of the last `func` invocation.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {number} n The number of calls at which `func` is no longer invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * jQuery(element).on('click', _.before(5, addContactToList));
     * // => Allows adding up to 4 contacts to the list.
     */


    function before(n, func) {
      var result;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }

      n = toInteger(n);
      return function () {
        if (--n > 0) {
          result = func.apply(this, arguments);
        }

        if (n <= 1) {
          func = undefined;
        }

        return result;
      };
    }
    /**
     * Creates a function that invokes `func` with the `this` binding of `thisArg`
     * and `partials` prepended to the arguments it receives.
     *
     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for partially applied arguments.
     *
     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
     * property of bound functions.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to bind.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * function greet(greeting, punctuation) {
     *   return greeting + ' ' + this.user + punctuation;
     * }
     *
     * var object = { 'user': 'fred' };
     *
     * var bound = _.bind(greet, object, 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bind(greet, object, _, '!');
     * bound('hi');
     * // => 'hi fred!'
     */


    var bind = baseRest(function (func, thisArg, partials) {
      var bitmask = WRAP_BIND_FLAG;

      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bind));
        bitmask |= WRAP_PARTIAL_FLAG;
      }

      return createWrap(func, bitmask, thisArg, partials, holders);
    });
    /**
     * Creates a function that invokes the method at `object[key]` with `partials`
     * prepended to the arguments it receives.
     *
     * This method differs from `_.bind` by allowing bound functions to reference
     * methods that may be redefined or don't yet exist. See
     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
     * for more details.
     *
     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Function
     * @param {Object} object The object to invoke the method on.
     * @param {string} key The key of the method.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'user': 'fred',
     *   'greet': function(greeting, punctuation) {
     *     return greeting + ' ' + this.user + punctuation;
     *   }
     * };
     *
     * var bound = _.bindKey(object, 'greet', 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * object.greet = function(greeting, punctuation) {
     *   return greeting + 'ya ' + this.user + punctuation;
     * };
     *
     * bound('!');
     * // => 'hiya fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bindKey(object, 'greet', _, '!');
     * bound('hi');
     * // => 'hiya fred!'
     */

    var bindKey = baseRest(function (object, key, partials) {
      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;

      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bindKey));
        bitmask |= WRAP_PARTIAL_FLAG;
      }

      return createWrap(key, bitmask, object, partials, holders);
    });
    /**
     * Creates a function that accepts arguments of `func` and either invokes
     * `func` returning its result, if at least `arity` number of arguments have
     * been provided, or returns a function that accepts the remaining `func`
     * arguments, and so on. The arity of `func` may be specified if `func.length`
     * is not sufficient.
     *
     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curry(abc);
     *
     * curried(1)(2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(1)(_, 3)(2);
     * // => [1, 2, 3]
     */

    function curry(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curry.placeholder;
      return result;
    }
    /**
     * This method is like `_.curry` except that arguments are applied to `func`
     * in the manner of `_.partialRight` instead of `_.partial`.
     *
     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curryRight(abc);
     *
     * curried(3)(2)(1);
     * // => [1, 2, 3]
     *
     * curried(2, 3)(1);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(3)(1, _)(2);
     * // => [1, 2, 3]
     */


    function curryRight(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curryRight.placeholder;
      return result;
    }
    /**
     * Creates a debounced function that delays invoking `func` until after `wait`
     * milliseconds have elapsed since the last time the debounced function was
     * invoked. The debounced function comes with a `cancel` method to cancel
     * delayed `func` invocations and a `flush` method to immediately invoke them.
     * Provide `options` to indicate whether `func` should be invoked on the
     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
     * with the last arguments provided to the debounced function. Subsequent
     * calls to the debounced function return the result of the last `func`
     * invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the debounced function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.debounce` and `_.throttle`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to debounce.
     * @param {number} [wait=0] The number of milliseconds to delay.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=false]
     *  Specify invoking on the leading edge of the timeout.
     * @param {number} [options.maxWait]
     *  The maximum time `func` is allowed to be delayed before it's invoked.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // Avoid costly calculations while the window size is in flux.
     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
     *
     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
     * jQuery(element).on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * }));
     *
     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
     * var source = new EventSource('/stream');
     * jQuery(source).on('message', debounced);
     *
     * // Cancel the trailing debounced invocation.
     * jQuery(window).on('popstate', debounced.cancel);
     */


    function debounce(func, wait, options) {
      var lastArgs,
          lastThis,
          maxWait,
          result,
          timerId,
          lastCallTime,
          lastInvokeTime = 0,
          leading = false,
          maxing = false,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }

      wait = toNumber(wait) || 0;

      if (isObject(options)) {
        leading = !!options.leading;
        maxing = 'maxWait' in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }

      function invokeFunc(time) {
        var args = lastArgs,
            thisArg = lastThis;
        lastArgs = lastThis = undefined;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }

      function leadingEdge(time) {
        // Reset any `maxWait` timer.
        lastInvokeTime = time; // Start the timer for the trailing edge.

        timerId = setTimeout(timerExpired, wait); // Invoke the leading edge.

        return leading ? invokeFunc(time) : result;
      }

      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime,
            timeWaiting = wait - timeSinceLastCall;
        return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
      }

      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime; // Either this is the first call, activity has stopped and we're at the
        // trailing edge, the system time has gone backwards and we're treating
        // it as the trailing edge, or we've hit the `maxWait` limit.

        return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
      }

      function timerExpired() {
        var time = now();

        if (shouldInvoke(time)) {
          return trailingEdge(time);
        } // Restart the timer.


        timerId = setTimeout(timerExpired, remainingWait(time));
      }

      function trailingEdge(time) {
        timerId = undefined; // Only invoke if we have `lastArgs` which means `func` has been
        // debounced at least once.

        if (trailing && lastArgs) {
          return invokeFunc(time);
        }

        lastArgs = lastThis = undefined;
        return result;
      }

      function cancel() {
        if (timerId !== undefined) {
          clearTimeout(timerId);
        }

        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = undefined;
      }

      function flush() {
        return timerId === undefined ? result : trailingEdge(now());
      }

      function debounced() {
        var time = now(),
            isInvoking = shouldInvoke(time);
        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;

        if (isInvoking) {
          if (timerId === undefined) {
            return leadingEdge(lastCallTime);
          }

          if (maxing) {
            // Handle invocations in a tight loop.
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }

        if (timerId === undefined) {
          timerId = setTimeout(timerExpired, wait);
        }

        return result;
      }

      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }
    /**
     * Defers invoking the `func` until the current call stack has cleared. Any
     * additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to defer.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) {
     *   console.log(text);
     * }, 'deferred');
     * // => Logs 'deferred' after one millisecond.
     */


    var defer = baseRest(function (func, args) {
      return baseDelay(func, 1, args);
    });
    /**
     * Invokes `func` after `wait` milliseconds. Any additional arguments are
     * provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) {
     *   console.log(text);
     * }, 1000, 'later');
     * // => Logs 'later' after one second.
     */

    var delay = baseRest(function (func, wait, args) {
      return baseDelay(func, toNumber(wait) || 0, args);
    });
    /**
     * Creates a function that invokes `func` with arguments reversed.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to flip arguments for.
     * @returns {Function} Returns the new flipped function.
     * @example
     *
     * var flipped = _.flip(function() {
     *   return _.toArray(arguments);
     * });
     *
     * flipped('a', 'b', 'c', 'd');
     * // => ['d', 'c', 'b', 'a']
     */

    function flip(func) {
      return createWrap(func, WRAP_FLIP_FLAG);
    }
    /**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided, it determines the cache key for storing the result based on the
     * arguments provided to the memoized function. By default, the first argument
     * provided to the memoized function is used as the map cache key. The `func`
     * is invoked with the `this` binding of the memoized function.
     *
     * **Note:** The cache is exposed as the `cache` property on the memoized
     * function. Its creation may be customized by replacing the `_.memoize.Cache`
     * constructor with one whose instances implement the
     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] The function to resolve the cache key.
     * @returns {Function} Returns the new memoized function.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     * var other = { 'c': 3, 'd': 4 };
     *
     * var values = _.memoize(_.values);
     * values(object);
     * // => [1, 2]
     *
     * values(other);
     * // => [3, 4]
     *
     * object.a = 2;
     * values(object);
     * // => [1, 2]
     *
     * // Modify the result cache.
     * values.cache.set(object, ['a', 'b']);
     * values(object);
     * // => ['a', 'b']
     *
     * // Replace `_.memoize.Cache`.
     * _.memoize.Cache = WeakMap;
     */


    function memoize(func, resolver) {
      if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }

      var memoized = function memoized() {
        var args = arguments,
            key = resolver ? resolver.apply(this, args) : args[0],
            cache = memoized.cache;

        if (cache.has(key)) {
          return cache.get(key);
        }

        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result) || cache;
        return result;
      };

      memoized.cache = new (memoize.Cache || MapCache)();
      return memoized;
    } // Expose `MapCache`.


    memoize.Cache = MapCache;
    /**
     * Creates a function that negates the result of the predicate `func`. The
     * `func` predicate is invoked with the `this` binding and arguments of the
     * created function.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} predicate The predicate to negate.
     * @returns {Function} Returns the new negated function.
     * @example
     *
     * function isEven(n) {
     *   return n % 2 == 0;
     * }
     *
     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
     * // => [1, 3, 5]
     */

    function negate(predicate) {
      if (typeof predicate != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }

      return function () {
        var args = arguments;

        switch (args.length) {
          case 0:
            return !predicate.call(this);

          case 1:
            return !predicate.call(this, args[0]);

          case 2:
            return !predicate.call(this, args[0], args[1]);

          case 3:
            return !predicate.call(this, args[0], args[1], args[2]);
        }

        return !predicate.apply(this, args);
      };
    }
    /**
     * Creates a function that is restricted to invoking `func` once. Repeat calls
     * to the function return the value of the first invocation. The `func` is
     * invoked with the `this` binding and arguments of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // => `createApplication` is invoked once
     */


    function once(func) {
      return before(2, func);
    }
    /**
     * Creates a function that invokes `func` with its arguments transformed.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Function
     * @param {Function} func The function to wrap.
     * @param {...(Function|Function[])} [transforms=[_.identity]]
     *  The argument transforms.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function doubled(n) {
     *   return n * 2;
     * }
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var func = _.overArgs(function(x, y) {
     *   return [x, y];
     * }, [square, doubled]);
     *
     * func(9, 3);
     * // => [81, 6]
     *
     * func(10, 5);
     * // => [100, 10]
     */


    var overArgs = castRest(function (func, transforms) {
      transforms = transforms.length == 1 && isArray(transforms[0]) ? arrayMap(transforms[0], baseUnary(getIteratee())) : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));
      var funcsLength = transforms.length;
      return baseRest(function (args) {
        var index = -1,
            length = nativeMin(args.length, funcsLength);

        while (++index < length) {
          args[index] = transforms[index].call(this, args[index]);
        }

        return apply(func, this, args);
      });
    });
    /**
     * Creates a function that invokes `func` with `partials` prepended to the
     * arguments it receives. This method is like `_.bind` except it does **not**
     * alter the `this` binding.
     *
     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 0.2.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var sayHelloTo = _.partial(greet, 'hello');
     * sayHelloTo('fred');
     * // => 'hello fred'
     *
     * // Partially applied with placeholders.
     * var greetFred = _.partial(greet, _, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     */

    var partial = baseRest(function (func, partials) {
      var holders = replaceHolders(partials, getHolder(partial));
      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
    });
    /**
     * This method is like `_.partial` except that partially applied arguments
     * are appended to the arguments it receives.
     *
     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var greetFred = _.partialRight(greet, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     *
     * // Partially applied with placeholders.
     * var sayHelloTo = _.partialRight(greet, 'hello', _);
     * sayHelloTo('fred');
     * // => 'hello fred'
     */

    var partialRight = baseRest(function (func, partials) {
      var holders = replaceHolders(partials, getHolder(partialRight));
      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
    });
    /**
     * Creates a function that invokes `func` with arguments arranged according
     * to the specified `indexes` where the argument value at the first index is
     * provided as the first argument, the argument value at the second index is
     * provided as the second argument, and so on.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to rearrange arguments for.
     * @param {...(number|number[])} indexes The arranged argument indexes.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var rearged = _.rearg(function(a, b, c) {
     *   return [a, b, c];
     * }, [2, 0, 1]);
     *
     * rearged('b', 'c', 'a')
     * // => ['a', 'b', 'c']
     */

    var rearg = flatRest(function (func, indexes) {
      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
    });
    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * created function and arguments from `start` and beyond provided as
     * an array.
     *
     * **Note:** This method is based on the
     * [rest parameter](https://mdn.io/rest_parameters).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.rest(function(what, names) {
     *   return what + ' ' + _.initial(names).join(', ') +
     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
     * });
     *
     * say('hello', 'fred', 'barney', 'pebbles');
     * // => 'hello fred, barney, & pebbles'
     */

    function rest(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }

      start = start === undefined ? start : toInteger(start);
      return baseRest(func, start);
    }
    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * create function and an array of arguments much like
     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
     *
     * **Note:** This method is based on the
     * [spread operator](https://mdn.io/spread_operator).
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Function
     * @param {Function} func The function to spread arguments over.
     * @param {number} [start=0] The start position of the spread.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.spread(function(who, what) {
     *   return who + ' says ' + what;
     * });
     *
     * say(['fred', 'hello']);
     * // => 'fred says hello'
     *
     * var numbers = Promise.all([
     *   Promise.resolve(40),
     *   Promise.resolve(36)
     * ]);
     *
     * numbers.then(_.spread(function(x, y) {
     *   return x + y;
     * }));
     * // => a Promise of 76
     */


    function spread(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }

      start = start == null ? 0 : nativeMax(toInteger(start), 0);
      return baseRest(function (args) {
        var array = args[start],
            otherArgs = castSlice(args, 0, start);

        if (array) {
          arrayPush(otherArgs, array);
        }

        return apply(func, this, otherArgs);
      });
    }
    /**
     * Creates a throttled function that only invokes `func` at most once per
     * every `wait` milliseconds. The throttled function comes with a `cancel`
     * method to cancel delayed `func` invocations and a `flush` method to
     * immediately invoke them. Provide `options` to indicate whether `func`
     * should be invoked on the leading and/or trailing edge of the `wait`
     * timeout. The `func` is invoked with the last arguments provided to the
     * throttled function. Subsequent calls to the throttled function return the
     * result of the last `func` invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the throttled function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.throttle` and `_.debounce`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to throttle.
     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=true]
     *  Specify invoking on the leading edge of the timeout.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // Avoid excessively updating the position while scrolling.
     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
     *
     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
     * jQuery(element).on('click', throttled);
     *
     * // Cancel the trailing throttled invocation.
     * jQuery(window).on('popstate', throttled.cancel);
     */


    function throttle(func, wait, options) {
      var leading = true,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }

      if (isObject(options)) {
        leading = 'leading' in options ? !!options.leading : leading;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }

      return debounce(func, wait, {
        'leading': leading,
        'maxWait': wait,
        'trailing': trailing
      });
    }
    /**
     * Creates a function that accepts up to one argument, ignoring any
     * additional arguments.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.unary(parseInt));
     * // => [6, 8, 10]
     */


    function unary(func) {
      return ary(func, 1);
    }
    /**
     * Creates a function that provides `value` to `wrapper` as its first
     * argument. Any additional arguments provided to the function are appended
     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
     * binding of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {*} value The value to wrap.
     * @param {Function} [wrapper=identity] The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('fred, barney, & pebbles');
     * // => '<p>fred, barney, &amp; pebbles</p>'
     */


    function wrap(value, wrapper) {
      return partial(castFunction(wrapper), value);
    }
    /*------------------------------------------------------------------------*/

    /**
     * Casts `value` as an array if it's not one.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Lang
     * @param {*} value The value to inspect.
     * @returns {Array} Returns the cast array.
     * @example
     *
     * _.castArray(1);
     * // => [1]
     *
     * _.castArray({ 'a': 1 });
     * // => [{ 'a': 1 }]
     *
     * _.castArray('abc');
     * // => ['abc']
     *
     * _.castArray(null);
     * // => [null]
     *
     * _.castArray(undefined);
     * // => [undefined]
     *
     * _.castArray();
     * // => []
     *
     * var array = [1, 2, 3];
     * console.log(_.castArray(array) === array);
     * // => true
     */


    function castArray() {
      if (!arguments.length) {
        return [];
      }

      var value = arguments[0];
      return isArray(value) ? value : [value];
    }
    /**
     * Creates a shallow clone of `value`.
     *
     * **Note:** This method is loosely based on the
     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
     * and supports cloning arrays, array buffers, booleans, date objects, maps,
     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
     * arrays. The own enumerable properties of `arguments` objects are cloned
     * as plain objects. An empty object is returned for uncloneable values such
     * as error objects, functions, DOM nodes, and WeakMaps.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to clone.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeep
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var shallow = _.clone(objects);
     * console.log(shallow[0] === objects[0]);
     * // => true
     */


    function clone(value) {
      return baseClone(value, CLONE_SYMBOLS_FLAG);
    }
    /**
     * This method is like `_.clone` except that it accepts `customizer` which
     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
     * cloning is handled by the method instead. The `customizer` is invoked with
     * up to four arguments; (value [, index|key, object, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeepWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(false);
     *   }
     * }
     *
     * var el = _.cloneWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 0
     */


    function cloneWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
    }
    /**
     * This method is like `_.clone` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @returns {*} Returns the deep cloned value.
     * @see _.clone
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var deep = _.cloneDeep(objects);
     * console.log(deep[0] === objects[0]);
     * // => false
     */


    function cloneDeep(value) {
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
    }
    /**
     * This method is like `_.cloneWith` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the deep cloned value.
     * @see _.cloneWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(true);
     *   }
     * }
     *
     * var el = _.cloneDeepWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 20
     */


    function cloneDeepWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
    }
    /**
     * Checks if `object` conforms to `source` by invoking the predicate
     * properties of `source` with the corresponding property values of `object`.
     *
     * **Note:** This method is equivalent to `_.conforms` when `source` is
     * partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
     * // => true
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
     * // => false
     */


    function conformsTo(object, source) {
      return source == null || baseConformsTo(object, source, keys(source));
    }
    /**
     * Performs a
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * comparison between two values to determine if they are equivalent.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.eq(object, object);
     * // => true
     *
     * _.eq(object, other);
     * // => false
     *
     * _.eq('a', 'a');
     * // => true
     *
     * _.eq('a', Object('a'));
     * // => false
     *
     * _.eq(NaN, NaN);
     * // => true
     */


    function eq(value, other) {
      return value === other || value !== value && other !== other;
    }
    /**
     * Checks if `value` is greater than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     * @see _.lt
     * @example
     *
     * _.gt(3, 1);
     * // => true
     *
     * _.gt(3, 3);
     * // => false
     *
     * _.gt(1, 3);
     * // => false
     */


    var gt = createRelationalOperation(baseGt);
    /**
     * Checks if `value` is greater than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than or equal to
     *  `other`, else `false`.
     * @see _.lte
     * @example
     *
     * _.gte(3, 1);
     * // => true
     *
     * _.gte(3, 3);
     * // => true
     *
     * _.gte(1, 3);
     * // => false
     */

    var gte = createRelationalOperation(function (value, other) {
      return value >= other;
    });
    /**
     * Checks if `value` is likely an `arguments` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     *  else `false`.
     * @example
     *
     * _.isArguments(function() { return arguments; }());
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */

    var isArguments = baseIsArguments(function () {
      return arguments;
    }()) ? baseIsArguments : function (value) {
      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
    };
    /**
     * Checks if `value` is classified as an `Array` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
     * @example
     *
     * _.isArray([1, 2, 3]);
     * // => true
     *
     * _.isArray(document.body.children);
     * // => false
     *
     * _.isArray('abc');
     * // => false
     *
     * _.isArray(_.noop);
     * // => false
     */

    var isArray = Array.isArray;
    /**
     * Checks if `value` is classified as an `ArrayBuffer` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     * @example
     *
     * _.isArrayBuffer(new ArrayBuffer(2));
     * // => true
     *
     * _.isArrayBuffer(new Array(2));
     * // => false
     */

    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;
    /**
     * Checks if `value` is array-like. A value is considered array-like if it's
     * not a function and has a `value.length` that's an integer greater than or
     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
     * @example
     *
     * _.isArrayLike([1, 2, 3]);
     * // => true
     *
     * _.isArrayLike(document.body.children);
     * // => true
     *
     * _.isArrayLike('abc');
     * // => true
     *
     * _.isArrayLike(_.noop);
     * // => false
     */

    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }
    /**
     * This method is like `_.isArrayLike` except that it also checks if `value`
     * is an object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array-like object,
     *  else `false`.
     * @example
     *
     * _.isArrayLikeObject([1, 2, 3]);
     * // => true
     *
     * _.isArrayLikeObject(document.body.children);
     * // => true
     *
     * _.isArrayLikeObject('abc');
     * // => false
     *
     * _.isArrayLikeObject(_.noop);
     * // => false
     */


    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }
    /**
     * Checks if `value` is classified as a boolean primitive or object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
     * @example
     *
     * _.isBoolean(false);
     * // => true
     *
     * _.isBoolean(null);
     * // => false
     */


    function isBoolean(value) {
      return value === true || value === false || isObjectLike(value) && baseGetTag(value) == boolTag;
    }
    /**
     * Checks if `value` is a buffer.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
     * @example
     *
     * _.isBuffer(new Buffer(2));
     * // => true
     *
     * _.isBuffer(new Uint8Array(2));
     * // => false
     */


    var isBuffer = nativeIsBuffer || stubFalse;
    /**
     * Checks if `value` is classified as a `Date` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     *
     * _.isDate('Mon April 23 2012');
     * // => false
     */

    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;
    /**
     * Checks if `value` is likely a DOM element.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     *
     * _.isElement('<body>');
     * // => false
     */

    function isElement(value) {
      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
    }
    /**
     * Checks if `value` is an empty object, collection, map, or set.
     *
     * Objects are considered empty if they have no own enumerable string keyed
     * properties.
     *
     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
     * jQuery-like collections are considered empty if they have a `length` of `0`.
     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty(null);
     * // => true
     *
     * _.isEmpty(true);
     * // => true
     *
     * _.isEmpty(1);
     * // => true
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({ 'a': 1 });
     * // => false
     */


    function isEmpty(value) {
      if (value == null) {
        return true;
      }

      if (isArrayLike(value) && (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' || isBuffer(value) || isTypedArray(value) || isArguments(value))) {
        return !value.length;
      }

      var tag = getTag(value);

      if (tag == mapTag || tag == setTag) {
        return !value.size;
      }

      if (isPrototype(value)) {
        return !baseKeys(value).length;
      }

      for (var key in value) {
        if (hasOwnProperty.call(value, key)) {
          return false;
        }
      }

      return true;
    }
    /**
     * Performs a deep comparison between two values to determine if they are
     * equivalent.
     *
     * **Note:** This method supports comparing arrays, array buffers, booleans,
     * date objects, error objects, maps, numbers, `Object` objects, regexes,
     * sets, strings, symbols, and typed arrays. `Object` objects are compared
     * by their own, not inherited, enumerable properties. Functions and DOM
     * nodes are compared by strict equality, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.isEqual(object, other);
     * // => true
     *
     * object === other;
     * // => false
     */


    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }
    /**
     * This method is like `_.isEqual` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with up to
     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, othValue) {
     *   if (isGreeting(objValue) && isGreeting(othValue)) {
     *     return true;
     *   }
     * }
     *
     * var array = ['hello', 'goodbye'];
     * var other = ['hi', 'goodbye'];
     *
     * _.isEqualWith(array, other, customizer);
     * // => true
     */


    function isEqualWith(value, other, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      var result = customizer ? customizer(value, other) : undefined;
      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
    }
    /**
     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
     * `SyntaxError`, `TypeError`, or `URIError` object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
     * @example
     *
     * _.isError(new Error);
     * // => true
     *
     * _.isError(Error);
     * // => false
     */


    function isError(value) {
      if (!isObjectLike(value)) {
        return false;
      }

      var tag = baseGetTag(value);
      return tag == errorTag || tag == domExcTag || typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value);
    }
    /**
     * Checks if `value` is a finite primitive number.
     *
     * **Note:** This method is based on
     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
     * @example
     *
     * _.isFinite(3);
     * // => true
     *
     * _.isFinite(Number.MIN_VALUE);
     * // => true
     *
     * _.isFinite(Infinity);
     * // => false
     *
     * _.isFinite('3');
     * // => false
     */


    function isFinite(value) {
      return typeof value == 'number' && nativeIsFinite(value);
    }
    /**
     * Checks if `value` is classified as a `Function` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     *
     * _.isFunction(/abc/);
     * // => false
     */


    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      } // The use of `Object#toString` avoids issues with the `typeof` operator
      // in Safari 9 which returns 'object' for typed arrays and other constructors.


      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }
    /**
     * Checks if `value` is an integer.
     *
     * **Note:** This method is based on
     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
     * @example
     *
     * _.isInteger(3);
     * // => true
     *
     * _.isInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isInteger(Infinity);
     * // => false
     *
     * _.isInteger('3');
     * // => false
     */


    function isInteger(value) {
      return typeof value == 'number' && value == toInteger(value);
    }
    /**
     * Checks if `value` is a valid array-like length.
     *
     * **Note:** This method is loosely based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
     * @example
     *
     * _.isLength(3);
     * // => true
     *
     * _.isLength(Number.MIN_VALUE);
     * // => false
     *
     * _.isLength(Infinity);
     * // => false
     *
     * _.isLength('3');
     * // => false
     */


    function isLength(value) {
      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }
    /**
     * Checks if `value` is the
     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(_.noop);
     * // => true
     *
     * _.isObject(null);
     * // => false
     */


    function isObject(value) {
      var type = typeof value;
      return value != null && (type == 'object' || type == 'function');
    }
    /**
     * Checks if `value` is object-like. A value is object-like if it's not `null`
     * and has a `typeof` result of "object".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
     * @example
     *
     * _.isObjectLike({});
     * // => true
     *
     * _.isObjectLike([1, 2, 3]);
     * // => true
     *
     * _.isObjectLike(_.noop);
     * // => false
     *
     * _.isObjectLike(null);
     * // => false
     */


    function isObjectLike(value) {
      return value != null && typeof value == 'object';
    }
    /**
     * Checks if `value` is classified as a `Map` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     * @example
     *
     * _.isMap(new Map);
     * // => true
     *
     * _.isMap(new WeakMap);
     * // => false
     */


    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
    /**
     * Performs a partial deep comparison between `object` and `source` to
     * determine if `object` contains equivalent property values.
     *
     * **Note:** This method is equivalent to `_.matches` when `source` is
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.isMatch(object, { 'b': 2 });
     * // => true
     *
     * _.isMatch(object, { 'b': 1 });
     * // => false
     */

    function isMatch(object, source) {
      return object === source || baseIsMatch(object, source, getMatchData(source));
    }
    /**
     * This method is like `_.isMatch` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with five
     * arguments: (objValue, srcValue, index|key, object, source).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, srcValue) {
     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
     *     return true;
     *   }
     * }
     *
     * var object = { 'greeting': 'hello' };
     * var source = { 'greeting': 'hi' };
     *
     * _.isMatchWith(object, source, customizer);
     * // => true
     */


    function isMatchWith(object, source, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseIsMatch(object, source, getMatchData(source), customizer);
    }
    /**
     * Checks if `value` is `NaN`.
     *
     * **Note:** This method is based on
     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
     * `undefined` and other non-number values.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */


    function isNaN(value) {
      // An `NaN` primitive is the only value that is not equal to itself.
      // Perform the `toStringTag` check first to avoid errors with some
      // ActiveX objects in IE.
      return isNumber(value) && value != +value;
    }
    /**
     * Checks if `value` is a pristine native function.
     *
     * **Note:** This method can't reliably detect native functions in the presence
     * of the core-js package because core-js circumvents this kind of detection.
     * Despite multiple requests, the core-js maintainer has made it clear: any
     * attempt to fix the detection will be obstructed. As a result, we're left
     * with little choice but to throw an error. Unfortunately, this also affects
     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
     * which rely on core-js.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     * @example
     *
     * _.isNative(Array.prototype.push);
     * // => true
     *
     * _.isNative(_);
     * // => false
     */


    function isNative(value) {
      if (isMaskable(value)) {
        throw new Error(CORE_ERROR_TEXT);
      }

      return baseIsNative(value);
    }
    /**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(void 0);
     * // => false
     */


    function isNull(value) {
      return value === null;
    }
    /**
     * Checks if `value` is `null` or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
     * @example
     *
     * _.isNil(null);
     * // => true
     *
     * _.isNil(void 0);
     * // => true
     *
     * _.isNil(NaN);
     * // => false
     */


    function isNil(value) {
      return value == null;
    }
    /**
     * Checks if `value` is classified as a `Number` primitive or object.
     *
     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
     * classified as numbers, use the `_.isFinite` method.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
     * @example
     *
     * _.isNumber(3);
     * // => true
     *
     * _.isNumber(Number.MIN_VALUE);
     * // => true
     *
     * _.isNumber(Infinity);
     * // => true
     *
     * _.isNumber('3');
     * // => false
     */


    function isNumber(value) {
      return typeof value == 'number' || isObjectLike(value) && baseGetTag(value) == numberTag;
    }
    /**
     * Checks if `value` is a plain object, that is, an object created by the
     * `Object` constructor or one with a `[[Prototype]]` of `null`.
     *
     * @static
     * @memberOf _
     * @since 0.8.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * _.isPlainObject(new Foo);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     *
     * _.isPlainObject(Object.create(null));
     * // => true
     */


    function isPlainObject(value) {
      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
        return false;
      }

      var proto = getPrototype(value);

      if (proto === null) {
        return true;
      }

      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
      return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
    }
    /**
     * Checks if `value` is classified as a `RegExp` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     * @example
     *
     * _.isRegExp(/abc/);
     * // => true
     *
     * _.isRegExp('/abc/');
     * // => false
     */


    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;
    /**
     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
     * double precision number which isn't the result of a rounded unsafe integer.
     *
     * **Note:** This method is based on
     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
     * @example
     *
     * _.isSafeInteger(3);
     * // => true
     *
     * _.isSafeInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isSafeInteger(Infinity);
     * // => false
     *
     * _.isSafeInteger('3');
     * // => false
     */

    function isSafeInteger(value) {
      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
    }
    /**
     * Checks if `value` is classified as a `Set` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     * @example
     *
     * _.isSet(new Set);
     * // => true
     *
     * _.isSet(new WeakSet);
     * // => false
     */


    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
    /**
     * Checks if `value` is classified as a `String` primitive or object.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
     * @example
     *
     * _.isString('abc');
     * // => true
     *
     * _.isString(1);
     * // => false
     */

    function isString(value) {
      return typeof value == 'string' || !isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag;
    }
    /**
     * Checks if `value` is classified as a `Symbol` primitive or object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
     * @example
     *
     * _.isSymbol(Symbol.iterator);
     * // => true
     *
     * _.isSymbol('abc');
     * // => false
     */


    function isSymbol(value) {
      return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;
    }
    /**
     * Checks if `value` is classified as a typed array.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     * @example
     *
     * _.isTypedArray(new Uint8Array);
     * // => true
     *
     * _.isTypedArray([]);
     * // => false
     */


    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
    /**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     *
     * _.isUndefined(null);
     * // => false
     */

    function isUndefined(value) {
      return value === undefined;
    }
    /**
     * Checks if `value` is classified as a `WeakMap` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
     * @example
     *
     * _.isWeakMap(new WeakMap);
     * // => true
     *
     * _.isWeakMap(new Map);
     * // => false
     */


    function isWeakMap(value) {
      return isObjectLike(value) && getTag(value) == weakMapTag;
    }
    /**
     * Checks if `value` is classified as a `WeakSet` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
     * @example
     *
     * _.isWeakSet(new WeakSet);
     * // => true
     *
     * _.isWeakSet(new Set);
     * // => false
     */


    function isWeakSet(value) {
      return isObjectLike(value) && baseGetTag(value) == weakSetTag;
    }
    /**
     * Checks if `value` is less than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     * @see _.gt
     * @example
     *
     * _.lt(1, 3);
     * // => true
     *
     * _.lt(3, 3);
     * // => false
     *
     * _.lt(3, 1);
     * // => false
     */


    var lt = createRelationalOperation(baseLt);
    /**
     * Checks if `value` is less than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than or equal to
     *  `other`, else `false`.
     * @see _.gte
     * @example
     *
     * _.lte(1, 3);
     * // => true
     *
     * _.lte(3, 3);
     * // => true
     *
     * _.lte(3, 1);
     * // => false
     */

    var lte = createRelationalOperation(function (value, other) {
      return value <= other;
    });
    /**
     * Converts `value` to an array.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Array} Returns the converted array.
     * @example
     *
     * _.toArray({ 'a': 1, 'b': 2 });
     * // => [1, 2]
     *
     * _.toArray('abc');
     * // => ['a', 'b', 'c']
     *
     * _.toArray(1);
     * // => []
     *
     * _.toArray(null);
     * // => []
     */

    function toArray(value) {
      if (!value) {
        return [];
      }

      if (isArrayLike(value)) {
        return isString(value) ? stringToArray(value) : copyArray(value);
      }

      if (symIterator && value[symIterator]) {
        return iteratorToArray(value[symIterator]());
      }

      var tag = getTag(value),
          func = tag == mapTag ? mapToArray : tag == setTag ? setToArray : values;
      return func(value);
    }
    /**
     * Converts `value` to a finite number.
     *
     * @static
     * @memberOf _
     * @since 4.12.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted number.
     * @example
     *
     * _.toFinite(3.2);
     * // => 3.2
     *
     * _.toFinite(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toFinite(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toFinite('3.2');
     * // => 3.2
     */


    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }

      value = toNumber(value);

      if (value === INFINITY || value === -INFINITY) {
        var sign = value < 0 ? -1 : 1;
        return sign * MAX_INTEGER;
      }

      return value === value ? value : 0;
    }
    /**
     * Converts `value` to an integer.
     *
     * **Note:** This method is loosely based on
     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toInteger(3.2);
     * // => 3
     *
     * _.toInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toInteger(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toInteger('3.2');
     * // => 3
     */


    function toInteger(value) {
      var result = toFinite(value),
          remainder = result % 1;
      return result === result ? remainder ? result - remainder : result : 0;
    }
    /**
     * Converts `value` to an integer suitable for use as the length of an
     * array-like object.
     *
     * **Note:** This method is based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toLength(3.2);
     * // => 3
     *
     * _.toLength(Number.MIN_VALUE);
     * // => 0
     *
     * _.toLength(Infinity);
     * // => 4294967295
     *
     * _.toLength('3.2');
     * // => 3
     */


    function toLength(value) {
      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
    }
    /**
     * Converts `value` to a number.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     * @example
     *
     * _.toNumber(3.2);
     * // => 3.2
     *
     * _.toNumber(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toNumber(Infinity);
     * // => Infinity
     *
     * _.toNumber('3.2');
     * // => 3.2
     */


    function toNumber(value) {
      if (typeof value == 'number') {
        return value;
      }

      if (isSymbol(value)) {
        return NAN;
      }

      if (isObject(value)) {
        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
        value = isObject(other) ? other + '' : other;
      }

      if (typeof value != 'string') {
        return value === 0 ? value : +value;
      }

      value = value.replace(reTrim, '');
      var isBinary = reIsBinary.test(value);
      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
    }
    /**
     * Converts `value` to a plain object flattening inherited enumerable string
     * keyed properties of `value` to own properties of the plain object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Object} Returns the converted plain object.
     * @example
     *
     * function Foo() {
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.assign({ 'a': 1 }, new Foo);
     * // => { 'a': 1, 'b': 2 }
     *
     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
     * // => { 'a': 1, 'b': 2, 'c': 3 }
     */


    function toPlainObject(value) {
      return copyObject(value, keysIn(value));
    }
    /**
     * Converts `value` to a safe integer. A safe integer can be compared and
     * represented correctly.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toSafeInteger(3.2);
     * // => 3
     *
     * _.toSafeInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toSafeInteger(Infinity);
     * // => 9007199254740991
     *
     * _.toSafeInteger('3.2');
     * // => 3
     */


    function toSafeInteger(value) {
      return value ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER) : value === 0 ? value : 0;
    }
    /**
     * Converts `value` to a string. An empty string is returned for `null`
     * and `undefined` values. The sign of `-0` is preserved.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.toString(null);
     * // => ''
     *
     * _.toString(-0);
     * // => '-0'
     *
     * _.toString([1, 2, 3]);
     * // => '1,2,3'
     */


    function toString(value) {
      return value == null ? '' : baseToString(value);
    }
    /*------------------------------------------------------------------------*/

    /**
     * Assigns own enumerable string keyed properties of source objects to the
     * destination object. Source objects are applied from left to right.
     * Subsequent sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object` and is loosely based on
     * [`Object.assign`](https://mdn.io/Object/assign).
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assignIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assign({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'c': 3 }
     */


    var assign = createAssigner(function (object, source) {
      if (isPrototype(source) || isArrayLike(source)) {
        copyObject(source, keys(source), object);
        return;
      }

      for (var key in source) {
        if (hasOwnProperty.call(source, key)) {
          assignValue(object, key, source[key]);
        }
      }
    });
    /**
     * This method is like `_.assign` except that it iterates over own and
     * inherited source properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extend
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assign
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
     */

    var assignIn = createAssigner(function (object, source) {
      copyObject(source, keysIn(source), object);
    });
    /**
     * This method is like `_.assignIn` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extendWith
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignInWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */

    var assignInWith = createAssigner(function (object, source, srcIndex, customizer) {
      copyObject(source, keysIn(source), object, customizer);
    });
    /**
     * This method is like `_.assign` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignInWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */

    var assignWith = createAssigner(function (object, source, srcIndex, customizer) {
      copyObject(source, keys(source), object, customizer);
    });
    /**
     * Creates an array of values corresponding to `paths` of `object`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Array} Returns the picked values.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _.at(object, ['a[0].b.c', 'a[1]']);
     * // => [3, 4]
     */

    var at = flatRest(baseAt);
    /**
     * Creates an object that inherits from the `prototype` object. If a
     * `properties` object is given, its own enumerable string keyed properties
     * are assigned to the created object.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Object
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, {
     *   'constructor': Circle
     * });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */

    function create(prototype, properties) {
      var result = baseCreate(prototype);
      return properties == null ? result : baseAssign(result, properties);
    }
    /**
     * Assigns own and inherited enumerable string keyed properties of source
     * objects to the destination object for all destination properties that
     * resolve to `undefined`. Source objects are applied from left to right.
     * Once a property is set, additional values of the same property are ignored.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaultsDeep
     * @example
     *
     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */


    var defaults = baseRest(function (object, sources) {
      object = Object(object);
      var index = -1;
      var length = sources.length;
      var guard = length > 2 ? sources[2] : undefined;

      if (guard && isIterateeCall(sources[0], sources[1], guard)) {
        length = 1;
      }

      while (++index < length) {
        var source = sources[index];
        var props = keysIn(source);
        var propsIndex = -1;
        var propsLength = props.length;

        while (++propsIndex < propsLength) {
          var key = props[propsIndex];
          var value = object[key];

          if (value === undefined || eq(value, objectProto[key]) && !hasOwnProperty.call(object, key)) {
            object[key] = source[key];
          }
        }
      }

      return object;
    });
    /**
     * This method is like `_.defaults` except that it recursively assigns
     * default properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaults
     * @example
     *
     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
     * // => { 'a': { 'b': 2, 'c': 3 } }
     */

    var defaultsDeep = baseRest(function (args) {
      args.push(undefined, customDefaultsMerge);
      return apply(mergeWith, undefined, args);
    });
    /**
     * This method is like `_.find` except that it returns the key of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findKey(users, function(o) { return o.age < 40; });
     * // => 'barney' (iteration order is not guaranteed)
     *
     * // The `_.matches` iteratee shorthand.
     * _.findKey(users, { 'age': 1, 'active': true });
     * // => 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findKey(users, 'active');
     * // => 'barney'
     */

    function findKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
    }
    /**
     * This method is like `_.findKey` except that it iterates over elements of
     * a collection in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findLastKey(users, function(o) { return o.age < 40; });
     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastKey(users, { 'age': 36, 'active': true });
     * // => 'barney'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastKey(users, 'active');
     * // => 'pebbles'
     */


    function findLastKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
    }
    /**
     * Iterates over own and inherited enumerable string keyed properties of an
     * object and invokes `iteratee` for each property. The iteratee is invoked
     * with three arguments: (value, key, object). Iteratee functions may exit
     * iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forInRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forIn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
     */


    function forIn(object, iteratee) {
      return object == null ? object : baseFor(object, getIteratee(iteratee, 3), keysIn);
    }
    /**
     * This method is like `_.forIn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forInRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
     */


    function forInRight(object, iteratee) {
      return object == null ? object : baseForRight(object, getIteratee(iteratee, 3), keysIn);
    }
    /**
     * Iterates over own enumerable string keyed properties of an object and
     * invokes `iteratee` for each property. The iteratee is invoked with three
     * arguments: (value, key, object). Iteratee functions may exit iteration
     * early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwnRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */


    function forOwn(object, iteratee) {
      return object && baseForOwn(object, getIteratee(iteratee, 3));
    }
    /**
     * This method is like `_.forOwn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwnRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
     */


    function forOwnRight(object, iteratee) {
      return object && baseForOwnRight(object, getIteratee(iteratee, 3));
    }
    /**
     * Creates an array of function property names from own enumerable properties
     * of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functionsIn
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functions(new Foo);
     * // => ['a', 'b']
     */


    function functions(object) {
      return object == null ? [] : baseFunctions(object, keys(object));
    }
    /**
     * Creates an array of function property names from own and inherited
     * enumerable properties of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functions
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functionsIn(new Foo);
     * // => ['a', 'b', 'c']
     */


    function functionsIn(object) {
      return object == null ? [] : baseFunctions(object, keysIn(object));
    }
    /**
     * Gets the value at `path` of `object`. If the resolved value is
     * `undefined`, the `defaultValue` is returned in its place.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.get(object, 'a[0].b.c');
     * // => 3
     *
     * _.get(object, ['a', '0', 'b', 'c']);
     * // => 3
     *
     * _.get(object, 'a.b.c', 'default');
     * // => 'default'
     */


    function get(object, path, defaultValue) {
      var result = object == null ? undefined : baseGet(object, path);
      return result === undefined ? defaultValue : result;
    }
    /**
     * Checks if `path` is a direct property of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = { 'a': { 'b': 2 } };
     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.has(object, 'a');
     * // => true
     *
     * _.has(object, 'a.b');
     * // => true
     *
     * _.has(object, ['a', 'b']);
     * // => true
     *
     * _.has(other, 'a');
     * // => false
     */


    function has(object, path) {
      return object != null && hasPath(object, path, baseHas);
    }
    /**
     * Checks if `path` is a direct or inherited property of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.hasIn(object, 'a');
     * // => true
     *
     * _.hasIn(object, 'a.b');
     * // => true
     *
     * _.hasIn(object, ['a', 'b']);
     * // => true
     *
     * _.hasIn(object, 'b');
     * // => false
     */


    function hasIn(object, path) {
      return object != null && hasPath(object, path, baseHasIn);
    }
    /**
     * Creates an object composed of the inverted keys and values of `object`.
     * If `object` contains duplicate values, subsequent values overwrite
     * property assignments of previous values.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Object
     * @param {Object} object The object to invert.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invert(object);
     * // => { '1': 'c', '2': 'b' }
     */


    var invert = createInverter(function (result, value, key) {
      if (value != null && typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      result[value] = key;
    }, constant(identity));
    /**
     * This method is like `_.invert` except that the inverted object is generated
     * from the results of running each element of `object` thru `iteratee`. The
     * corresponding inverted value of each inverted key is an array of keys
     * responsible for generating the inverted value. The iteratee is invoked
     * with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Object
     * @param {Object} object The object to invert.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invertBy(object);
     * // => { '1': ['a', 'c'], '2': ['b'] }
     *
     * _.invertBy(object, function(value) {
     *   return 'group' + value;
     * });
     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
     */

    var invertBy = createInverter(function (result, value, key) {
      if (value != null && typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      if (hasOwnProperty.call(result, value)) {
        result[value].push(key);
      } else {
        result[value] = [key];
      }
    }, getIteratee);
    /**
     * Invokes the method at `path` of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
     *
     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
     * // => [2, 3]
     */

    var invoke = baseRest(baseInvoke);
    /**
     * Creates an array of the own enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects. See the
     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * for more details.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keys(new Foo);
     * // => ['a', 'b'] (iteration order is not guaranteed)
     *
     * _.keys('hi');
     * // => ['0', '1']
     */

    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }
    /**
     * Creates an array of the own and inherited enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keysIn(new Foo);
     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
     */


    function keysIn(object) {
      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
    }
    /**
     * The opposite of `_.mapValues`; this method creates an object with the
     * same values as `object` and keys generated by running each own enumerable
     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
     * with three arguments: (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapValues
     * @example
     *
     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
     *   return key + value;
     * });
     * // => { 'a1': 1, 'b2': 2 }
     */


    function mapKeys(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);
      baseForOwn(object, function (value, key, object) {
        baseAssignValue(result, iteratee(value, key, object), value);
      });
      return result;
    }
    /**
     * Creates an object with the same keys as `object` and values generated
     * by running each own enumerable string keyed property of `object` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapKeys
     * @example
     *
     * var users = {
     *   'fred':    { 'user': 'fred',    'age': 40 },
     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
     * };
     *
     * _.mapValues(users, function(o) { return o.age; });
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     *
     * // The `_.property` iteratee shorthand.
     * _.mapValues(users, 'age');
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     */


    function mapValues(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);
      baseForOwn(object, function (value, key, object) {
        baseAssignValue(result, key, iteratee(value, key, object));
      });
      return result;
    }
    /**
     * This method is like `_.assign` except that it recursively merges own and
     * inherited enumerable string keyed properties of source objects into the
     * destination object. Source properties that resolve to `undefined` are
     * skipped if a destination value exists. Array and plain object properties
     * are merged recursively. Other objects and value types are overridden by
     * assignment. Source objects are applied from left to right. Subsequent
     * sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {
     *   'a': [{ 'b': 2 }, { 'd': 4 }]
     * };
     *
     * var other = {
     *   'a': [{ 'c': 3 }, { 'e': 5 }]
     * };
     *
     * _.merge(object, other);
     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
     */


    var merge = createAssigner(function (object, source, srcIndex) {
      baseMerge(object, source, srcIndex);
    });
    /**
     * This method is like `_.merge` except that it accepts `customizer` which
     * is invoked to produce the merged values of the destination and source
     * properties. If `customizer` returns `undefined`, merging is handled by the
     * method instead. The `customizer` is invoked with six arguments:
     * (objValue, srcValue, key, object, source, stack).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} customizer The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   if (_.isArray(objValue)) {
     *     return objValue.concat(srcValue);
     *   }
     * }
     *
     * var object = { 'a': [1], 'b': [2] };
     * var other = { 'a': [3], 'b': [4] };
     *
     * _.mergeWith(object, other, customizer);
     * // => { 'a': [1, 3], 'b': [2, 4] }
     */

    var mergeWith = createAssigner(function (object, source, srcIndex, customizer) {
      baseMerge(object, source, srcIndex, customizer);
    });
    /**
     * The opposite of `_.pick`; this method creates an object composed of the
     * own and inherited enumerable property paths of `object` that are not omitted.
     *
     * **Note:** This method is considerably slower than `_.pick`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to omit.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omit(object, ['a', 'c']);
     * // => { 'b': '2' }
     */

    var omit = flatRest(function (object, paths) {
      var result = {};

      if (object == null) {
        return result;
      }

      var isDeep = false;
      paths = arrayMap(paths, function (path) {
        path = castPath(path, object);
        isDeep || (isDeep = path.length > 1);
        return path;
      });
      copyObject(object, getAllKeysIn(object), result);

      if (isDeep) {
        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
      }

      var length = paths.length;

      while (length--) {
        baseUnset(result, paths[length]);
      }

      return result;
    });
    /**
     * The opposite of `_.pickBy`; this method creates an object composed of
     * the own and inherited enumerable string keyed properties of `object` that
     * `predicate` doesn't return truthy for. The predicate is invoked with two
     * arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omitBy(object, _.isNumber);
     * // => { 'b': '2' }
     */

    function omitBy(object, predicate) {
      return pickBy(object, negate(getIteratee(predicate)));
    }
    /**
     * Creates an object composed of the picked `object` properties.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pick(object, ['a', 'c']);
     * // => { 'a': 1, 'c': 3 }
     */


    var pick = flatRest(function (object, paths) {
      return object == null ? {} : basePick(object, paths);
    });
    /**
     * Creates an object composed of the `object` properties `predicate` returns
     * truthy for. The predicate is invoked with two arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pickBy(object, _.isNumber);
     * // => { 'a': 1, 'c': 3 }
     */

    function pickBy(object, predicate) {
      if (object == null) {
        return {};
      }

      var props = arrayMap(getAllKeysIn(object), function (prop) {
        return [prop];
      });
      predicate = getIteratee(predicate);
      return basePickBy(object, props, function (value, path) {
        return predicate(value, path[0]);
      });
    }
    /**
     * This method is like `_.get` except that if the resolved value is a
     * function it's invoked with the `this` binding of its parent object and
     * its result is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to resolve.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
     *
     * _.result(object, 'a[0].b.c1');
     * // => 3
     *
     * _.result(object, 'a[0].b.c2');
     * // => 4
     *
     * _.result(object, 'a[0].b.c3', 'default');
     * // => 'default'
     *
     * _.result(object, 'a[0].b.c3', _.constant('default'));
     * // => 'default'
     */


    function result(object, path, defaultValue) {
      path = castPath(path, object);
      var index = -1,
          length = path.length; // Ensure the loop is entered when path is empty.

      if (!length) {
        length = 1;
        object = undefined;
      }

      while (++index < length) {
        var value = object == null ? undefined : object[toKey(path[index])];

        if (value === undefined) {
          index = length;
          value = defaultValue;
        }

        object = isFunction(value) ? value.call(object) : value;
      }

      return object;
    }
    /**
     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
     * it's created. Arrays are created for missing index properties while objects
     * are created for all other missing properties. Use `_.setWith` to customize
     * `path` creation.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.set(object, 'a[0].b.c', 4);
     * console.log(object.a[0].b.c);
     * // => 4
     *
     * _.set(object, ['x', '0', 'y', 'z'], 5);
     * console.log(object.x[0].y.z);
     * // => 5
     */


    function set(object, path, value) {
      return object == null ? object : baseSet(object, path, value);
    }
    /**
     * This method is like `_.set` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.setWith(object, '[0][1]', 'a', Object);
     * // => { '0': { '1': 'a' } }
     */


    function setWith(object, path, value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseSet(object, path, value, customizer);
    }
    /**
     * Creates an array of own enumerable string keyed-value pairs for `object`
     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
     * entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entries
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairs(new Foo);
     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
     */


    var toPairs = createToPairs(keys);
    /**
     * Creates an array of own and inherited enumerable string keyed-value pairs
     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
     * or set, its entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entriesIn
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairsIn(new Foo);
     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
     */

    var toPairsIn = createToPairs(keysIn);
    /**
     * An alternative to `_.reduce`; this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own
     * enumerable string keyed properties thru `iteratee`, with each invocation
     * potentially mutating the `accumulator` object. If `accumulator` is not
     * provided, a new object with the same `[[Prototype]]` will be used. The
     * iteratee is invoked with four arguments: (accumulator, value, key, object).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * _.transform([2, 3, 4], function(result, n) {
     *   result.push(n *= n);
     *   return n % 2 == 0;
     * }, []);
     * // => [4, 9]
     *
     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] }
     */

    function transform(object, iteratee, accumulator) {
      var isArr = isArray(object),
          isArrLike = isArr || isBuffer(object) || isTypedArray(object);
      iteratee = getIteratee(iteratee, 4);

      if (accumulator == null) {
        var Ctor = object && object.constructor;

        if (isArrLike) {
          accumulator = isArr ? new Ctor() : [];
        } else if (isObject(object)) {
          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
        } else {
          accumulator = {};
        }
      }

      (isArrLike ? arrayEach : baseForOwn)(object, function (value, index, object) {
        return iteratee(accumulator, value, index, object);
      });
      return accumulator;
    }
    /**
     * Removes the property at `path` of `object`.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
     * _.unset(object, 'a[0].b.c');
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     *
     * _.unset(object, ['a', '0', 'b', 'c']);
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     */


    function unset(object, path) {
      return object == null ? true : baseUnset(object, path);
    }
    /**
     * This method is like `_.set` except that accepts `updater` to produce the
     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
     * is invoked with one argument: (value).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
     * console.log(object.a[0].b.c);
     * // => 9
     *
     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
     * console.log(object.x[0].y.z);
     * // => 0
     */


    function update(object, path, updater) {
      return object == null ? object : baseUpdate(object, path, castFunction(updater));
    }
    /**
     * This method is like `_.update` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
     * // => { '0': { '1': 'a' } }
     */


    function updateWith(object, path, updater, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
    }
    /**
     * Creates an array of the own enumerable string keyed property values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.values(new Foo);
     * // => [1, 2] (iteration order is not guaranteed)
     *
     * _.values('hi');
     * // => ['h', 'i']
     */


    function values(object) {
      return object == null ? [] : baseValues(object, keys(object));
    }
    /**
     * Creates an array of the own and inherited enumerable string keyed property
     * values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.valuesIn(new Foo);
     * // => [1, 2, 3] (iteration order is not guaranteed)
     */


    function valuesIn(object) {
      return object == null ? [] : baseValues(object, keysIn(object));
    }
    /*------------------------------------------------------------------------*/

    /**
     * Clamps `number` within the inclusive `lower` and `upper` bounds.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Number
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     * @example
     *
     * _.clamp(-10, -5, 5);
     * // => -5
     *
     * _.clamp(10, -5, 5);
     * // => 5
     */


    function clamp(number, lower, upper) {
      if (upper === undefined) {
        upper = lower;
        lower = undefined;
      }

      if (upper !== undefined) {
        upper = toNumber(upper);
        upper = upper === upper ? upper : 0;
      }

      if (lower !== undefined) {
        lower = toNumber(lower);
        lower = lower === lower ? lower : 0;
      }

      return baseClamp(toNumber(number), lower, upper);
    }
    /**
     * Checks if `n` is between `start` and up to, but not including, `end`. If
     * `end` is not specified, it's set to `start` with `start` then set to `0`.
     * If `start` is greater than `end` the params are swapped to support
     * negative ranges.
     *
     * @static
     * @memberOf _
     * @since 3.3.0
     * @category Number
     * @param {number} number The number to check.
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     * @see _.range, _.rangeRight
     * @example
     *
     * _.inRange(3, 2, 4);
     * // => true
     *
     * _.inRange(4, 8);
     * // => true
     *
     * _.inRange(4, 2);
     * // => false
     *
     * _.inRange(2, 2);
     * // => false
     *
     * _.inRange(1.2, 2);
     * // => true
     *
     * _.inRange(5.2, 4);
     * // => false
     *
     * _.inRange(-3, -2, -6);
     * // => true
     */


    function inRange(number, start, end) {
      start = toFinite(start);

      if (end === undefined) {
        end = start;
        start = 0;
      } else {
        end = toFinite(end);
      }

      number = toNumber(number);
      return baseInRange(number, start, end);
    }
    /**
     * Produces a random number between the inclusive `lower` and `upper` bounds.
     * If only one argument is provided a number between `0` and the given number
     * is returned. If `floating` is `true`, or either `lower` or `upper` are
     * floats, a floating-point number is returned instead of an integer.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Number
     * @param {number} [lower=0] The lower bound.
     * @param {number} [upper=1] The upper bound.
     * @param {boolean} [floating] Specify returning a floating-point number.
     * @returns {number} Returns the random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */


    function random(lower, upper, floating) {
      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
        upper = floating = undefined;
      }

      if (floating === undefined) {
        if (typeof upper == 'boolean') {
          floating = upper;
          upper = undefined;
        } else if (typeof lower == 'boolean') {
          floating = lower;
          lower = undefined;
        }
      }

      if (lower === undefined && upper === undefined) {
        lower = 0;
        upper = 1;
      } else {
        lower = toFinite(lower);

        if (upper === undefined) {
          upper = lower;
          lower = 0;
        } else {
          upper = toFinite(upper);
        }
      }

      if (lower > upper) {
        var temp = lower;
        lower = upper;
        upper = temp;
      }

      if (floating || lower % 1 || upper % 1) {
        var rand = nativeRandom();
        return nativeMin(lower + rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1))), upper);
      }

      return baseRandom(lower, upper);
    }
    /*------------------------------------------------------------------------*/

    /**
     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the camel cased string.
     * @example
     *
     * _.camelCase('Foo Bar');
     * // => 'fooBar'
     *
     * _.camelCase('--foo-bar--');
     * // => 'fooBar'
     *
     * _.camelCase('__FOO_BAR__');
     * // => 'fooBar'
     */


    var camelCase = createCompounder(function (result, word, index) {
      word = word.toLowerCase();
      return result + (index ? capitalize(word) : word);
    });
    /**
     * Converts the first character of `string` to upper case and the remaining
     * to lower case.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to capitalize.
     * @returns {string} Returns the capitalized string.
     * @example
     *
     * _.capitalize('FRED');
     * // => 'Fred'
     */

    function capitalize(string) {
      return upperFirst(toString(string).toLowerCase());
    }
    /**
     * Deburrs `string` by converting
     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
     * letters to basic Latin letters and removing
     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to deburr.
     * @returns {string} Returns the deburred string.
     * @example
     *
     * _.deburr('déjà vu');
     * // => 'deja vu'
     */


    function deburr(string) {
      string = toString(string);
      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
    }
    /**
     * Checks if `string` ends with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=string.length] The position to search up to.
     * @returns {boolean} Returns `true` if `string` ends with `target`,
     *  else `false`.
     * @example
     *
     * _.endsWith('abc', 'c');
     * // => true
     *
     * _.endsWith('abc', 'b');
     * // => false
     *
     * _.endsWith('abc', 'b', 2);
     * // => true
     */


    function endsWith(string, target, position) {
      string = toString(string);
      target = baseToString(target);
      var length = string.length;
      position = position === undefined ? length : baseClamp(toInteger(position), 0, length);
      var end = position;
      position -= target.length;
      return position >= 0 && string.slice(position, end) == target;
    }
    /**
     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
     * corresponding HTML entities.
     *
     * **Note:** No other characters are escaped. To escape additional
     * characters use a third-party library like [_he_](https://mths.be/he).
     *
     * Though the ">" character is escaped for symmetry, characters like
     * ">" and "/" don't need escaping in HTML and have no special meaning
     * unless they're part of a tag or unquoted attribute value. See
     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
     * (under "semi-related fun fact") for more details.
     *
     * When working with HTML you should always
     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
     * XSS vectors.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('fred, barney, & pebbles');
     * // => 'fred, barney, &amp; pebbles'
     */


    function escape(string) {
      string = toString(string);
      return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar) : string;
    }
    /**
     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escapeRegExp('[lodash](https://lodash.com/)');
     * // => '\[lodash\]\(https://lodash\.com/\)'
     */


    function escapeRegExp(string) {
      string = toString(string);
      return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar, '\\$&') : string;
    }
    /**
     * Converts `string` to
     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the kebab cased string.
     * @example
     *
     * _.kebabCase('Foo Bar');
     * // => 'foo-bar'
     *
     * _.kebabCase('fooBar');
     * // => 'foo-bar'
     *
     * _.kebabCase('__FOO_BAR__');
     * // => 'foo-bar'
     */


    var kebabCase = createCompounder(function (result, word, index) {
      return result + (index ? '-' : '') + word.toLowerCase();
    });
    /**
     * Converts `string`, as space separated words, to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.lowerCase('--Foo-Bar--');
     * // => 'foo bar'
     *
     * _.lowerCase('fooBar');
     * // => 'foo bar'
     *
     * _.lowerCase('__FOO_BAR__');
     * // => 'foo bar'
     */

    var lowerCase = createCompounder(function (result, word, index) {
      return result + (index ? ' ' : '') + word.toLowerCase();
    });
    /**
     * Converts the first character of `string` to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.lowerFirst('Fred');
     * // => 'fred'
     *
     * _.lowerFirst('FRED');
     * // => 'fRED'
     */

    var lowerFirst = createCaseFirst('toLowerCase');
    /**
     * Pads `string` on the left and right sides if it's shorter than `length`.
     * Padding characters are truncated if they can't be evenly divided by `length`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.pad('abc', 8);
     * // => '  abc   '
     *
     * _.pad('abc', 8, '_-');
     * // => '_-abc_-_'
     *
     * _.pad('abc', 3);
     * // => 'abc'
     */

    function pad(string, length, chars) {
      string = toString(string);
      length = toInteger(length);
      var strLength = length ? stringSize(string) : 0;

      if (!length || strLength >= length) {
        return string;
      }

      var mid = (length - strLength) / 2;
      return createPadding(nativeFloor(mid), chars) + string + createPadding(nativeCeil(mid), chars);
    }
    /**
     * Pads `string` on the right side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padEnd('abc', 6);
     * // => 'abc   '
     *
     * _.padEnd('abc', 6, '_-');
     * // => 'abc_-_'
     *
     * _.padEnd('abc', 3);
     * // => 'abc'
     */


    function padEnd(string, length, chars) {
      string = toString(string);
      length = toInteger(length);
      var strLength = length ? stringSize(string) : 0;
      return length && strLength < length ? string + createPadding(length - strLength, chars) : string;
    }
    /**
     * Pads `string` on the left side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padStart('abc', 6);
     * // => '   abc'
     *
     * _.padStart('abc', 6, '_-');
     * // => '_-_abc'
     *
     * _.padStart('abc', 3);
     * // => 'abc'
     */


    function padStart(string, length, chars) {
      string = toString(string);
      length = toInteger(length);
      var strLength = length ? stringSize(string) : 0;
      return length && strLength < length ? createPadding(length - strLength, chars) + string : string;
    }
    /**
     * Converts `string` to an integer of the specified radix. If `radix` is
     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
     * hexadecimal, in which case a `radix` of `16` is used.
     *
     * **Note:** This method aligns with the
     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category String
     * @param {string} string The string to convert.
     * @param {number} [radix=10] The radix to interpret `value` by.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     *
     * _.map(['6', '08', '10'], _.parseInt);
     * // => [6, 8, 10]
     */


    function parseInt(string, radix, guard) {
      if (guard || radix == null) {
        radix = 0;
      } else if (radix) {
        radix = +radix;
      }

      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
    }
    /**
     * Repeats the given string `n` times.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to repeat.
     * @param {number} [n=1] The number of times to repeat the string.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the repeated string.
     * @example
     *
     * _.repeat('*', 3);
     * // => '***'
     *
     * _.repeat('abc', 2);
     * // => 'abcabc'
     *
     * _.repeat('abc', 0);
     * // => ''
     */


    function repeat(string, n, guard) {
      if (guard ? isIterateeCall(string, n, guard) : n === undefined) {
        n = 1;
      } else {
        n = toInteger(n);
      }

      return baseRepeat(toString(string), n);
    }
    /**
     * Replaces matches for `pattern` in `string` with `replacement`.
     *
     * **Note:** This method is based on
     * [`String#replace`](https://mdn.io/String/replace).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to modify.
     * @param {RegExp|string} pattern The pattern to replace.
     * @param {Function|string} replacement The match replacement.
     * @returns {string} Returns the modified string.
     * @example
     *
     * _.replace('Hi Fred', 'Fred', 'Barney');
     * // => 'Hi Barney'
     */


    function replace() {
      var args = arguments,
          string = toString(args[0]);
      return args.length < 3 ? string : string.replace(args[1], args[2]);
    }
    /**
     * Converts `string` to
     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the snake cased string.
     * @example
     *
     * _.snakeCase('Foo Bar');
     * // => 'foo_bar'
     *
     * _.snakeCase('fooBar');
     * // => 'foo_bar'
     *
     * _.snakeCase('--FOO-BAR--');
     * // => 'foo_bar'
     */


    var snakeCase = createCompounder(function (result, word, index) {
      return result + (index ? '_' : '') + word.toLowerCase();
    });
    /**
     * Splits `string` by `separator`.
     *
     * **Note:** This method is based on
     * [`String#split`](https://mdn.io/String/split).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to split.
     * @param {RegExp|string} separator The separator pattern to split by.
     * @param {number} [limit] The length to truncate results to.
     * @returns {Array} Returns the string segments.
     * @example
     *
     * _.split('a-b-c', '-', 2);
     * // => ['a', 'b']
     */

    function split(string, separator, limit) {
      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
        separator = limit = undefined;
      }

      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;

      if (!limit) {
        return [];
      }

      string = toString(string);

      if (string && (typeof separator == 'string' || separator != null && !isRegExp(separator))) {
        separator = baseToString(separator);

        if (!separator && hasUnicode(string)) {
          return castSlice(stringToArray(string), 0, limit);
        }
      }

      return string.split(separator, limit);
    }
    /**
     * Converts `string` to
     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
     *
     * @static
     * @memberOf _
     * @since 3.1.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the start cased string.
     * @example
     *
     * _.startCase('--foo-bar--');
     * // => 'Foo Bar'
     *
     * _.startCase('fooBar');
     * // => 'Foo Bar'
     *
     * _.startCase('__FOO_BAR__');
     * // => 'FOO BAR'
     */


    var startCase = createCompounder(function (result, word, index) {
      return result + (index ? ' ' : '') + upperFirst(word);
    });
    /**
     * Checks if `string` starts with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=0] The position to search from.
     * @returns {boolean} Returns `true` if `string` starts with `target`,
     *  else `false`.
     * @example
     *
     * _.startsWith('abc', 'a');
     * // => true
     *
     * _.startsWith('abc', 'b');
     * // => false
     *
     * _.startsWith('abc', 'b', 1);
     * // => true
     */

    function startsWith(string, target, position) {
      string = toString(string);
      position = position == null ? 0 : baseClamp(toInteger(position), 0, string.length);
      target = baseToString(target);
      return string.slice(position, position + target.length) == target;
    }
    /**
     * Creates a compiled template function that can interpolate data properties
     * in "interpolate" delimiters, HTML-escape interpolated data properties in
     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
     * properties may be accessed as free variables in the template. If a setting
     * object is given, it takes precedence over `_.templateSettings` values.
     *
     * **Note:** In the development build `_.template` utilizes
     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
     * for easier debugging.
     *
     * For more information on precompiling templates see
     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
     *
     * For more information on Chrome extension sandboxes see
     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The template string.
     * @param {Object} [options={}] The options object.
     * @param {RegExp} [options.escape=_.templateSettings.escape]
     *  The HTML "escape" delimiter.
     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
     *  The "evaluate" delimiter.
     * @param {Object} [options.imports=_.templateSettings.imports]
     *  An object to import into the template as free variables.
     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
     *  The "interpolate" delimiter.
     * @param {string} [options.sourceURL='lodash.templateSources[n]']
     *  The sourceURL of the compiled template.
     * @param {string} [options.variable='obj']
     *  The data object variable name.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the compiled template function.
     * @example
     *
     * // Use the "interpolate" delimiter to create a compiled template.
     * var compiled = _.template('hello <%= user %>!');
     * compiled({ 'user': 'fred' });
     * // => 'hello fred!'
     *
     * // Use the HTML "escape" delimiter to escape data property values.
     * var compiled = _.template('<b><%- value %></b>');
     * compiled({ 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the internal `print` function in "evaluate" delimiters.
     * var compiled = _.template('<% print("hello " + user); %>!');
     * compiled({ 'user': 'barney' });
     * // => 'hello barney!'
     *
     * // Use the ES template literal delimiter as an "interpolate" delimiter.
     * // Disable support by replacing the "interpolate" delimiter.
     * var compiled = _.template('hello ${ user }!');
     * compiled({ 'user': 'pebbles' });
     * // => 'hello pebbles!'
     *
     * // Use backslashes to treat delimiters as plain text.
     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
     * compiled({ 'value': 'ignored' });
     * // => '<%- value %>'
     *
     * // Use the `imports` option to import `jQuery` as `jq`.
     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
     *
     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     * //   var __t, __p = '';
     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
     * //   return __p;
     * // }
     *
     * // Use custom template delimiters.
     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
     * var compiled = _.template('hello {{ user }}!');
     * compiled({ 'user': 'mustache' });
     * // => 'hello mustache!'
     *
     * // Use the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and stack traces.
     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
     *   var JST = {\
     *     "main": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */


    function template(string, options, guard) {
      // Based on John Resig's `tmpl` implementation
      // (http://ejohn.org/blog/javascript-micro-templating/)
      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
      var settings = lodash.templateSettings;

      if (guard && isIterateeCall(string, options, guard)) {
        options = undefined;
      }

      string = toString(string);
      options = assignInWith({}, options, settings, customDefaultsAssignIn);
      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
          importsKeys = keys(imports),
          importsValues = baseValues(imports, importsKeys);
      var isEscaping,
          isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = "__p += '"; // Compile the regexp to match each delimiter.

      var reDelimiters = RegExp((options.escape || reNoMatch).source + '|' + interpolate.source + '|' + (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' + (options.evaluate || reNoMatch).source + '|$', 'g'); // Use a sourceURL for easier debugging.

      var sourceURL = '//# sourceURL=' + ('sourceURL' in options ? options.sourceURL : 'lodash.templateSources[' + ++templateCounter + ']') + '\n';
      string.replace(reDelimiters, function (match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
        interpolateValue || (interpolateValue = esTemplateValue); // Escape characters that can't be included in string literals.

        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar); // Replace delimiters with snippets.

        if (escapeValue) {
          isEscaping = true;
          source += "' +\n__e(" + escapeValue + ") +\n'";
        }

        if (evaluateValue) {
          isEvaluating = true;
          source += "';\n" + evaluateValue + ";\n__p += '";
        }

        if (interpolateValue) {
          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
        }

        index = offset + match.length; // The JS engine embedded in Adobe products needs `match` returned in
        // order to produce the correct `offset` value.

        return match;
      });
      source += "';\n"; // If `variable` is not specified wrap a with-statement around the generated
      // code to add the data object to the top of the scope chain.

      var variable = options.variable;

      if (!variable) {
        source = 'with (obj) {\n' + source + '\n}\n';
      } // Cleanup code by stripping empty strings.


      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source).replace(reEmptyStringMiddle, '$1').replace(reEmptyStringTrailing, '$1;'); // Frame code as the function body.

      source = 'function(' + (variable || 'obj') + ') {\n' + (variable ? '' : 'obj || (obj = {});\n') + "var __t, __p = ''" + (isEscaping ? ', __e = _.escape' : '') + (isEvaluating ? ', __j = Array.prototype.join;\n' + "function print() { __p += __j.call(arguments, '') }\n" : ';\n') + source + 'return __p\n}';
      var result = attempt(function () {
        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);
      }); // Provide the compiled function's source by its `toString` method or
      // the `source` property as a convenience for inlining compiled templates.

      result.source = source;

      if (isError(result)) {
        throw result;
      }

      return result;
    }
    /**
     * Converts `string`, as a whole, to lower case just like
     * [String#toLowerCase](https://mdn.io/toLowerCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.toLower('--Foo-Bar--');
     * // => '--foo-bar--'
     *
     * _.toLower('fooBar');
     * // => 'foobar'
     *
     * _.toLower('__FOO_BAR__');
     * // => '__foo_bar__'
     */


    function toLower(value) {
      return toString(value).toLowerCase();
    }
    /**
     * Converts `string`, as a whole, to upper case just like
     * [String#toUpperCase](https://mdn.io/toUpperCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.toUpper('--foo-bar--');
     * // => '--FOO-BAR--'
     *
     * _.toUpper('fooBar');
     * // => 'FOOBAR'
     *
     * _.toUpper('__foo_bar__');
     * // => '__FOO_BAR__'
     */


    function toUpper(value) {
      return toString(value).toUpperCase();
    }
    /**
     * Removes leading and trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trim('  abc  ');
     * // => 'abc'
     *
     * _.trim('-_-abc-_-', '_-');
     * // => 'abc'
     *
     * _.map(['  foo  ', '  bar  '], _.trim);
     * // => ['foo', 'bar']
     */


    function trim(string, chars, guard) {
      string = toString(string);

      if (string && (guard || chars === undefined)) {
        return string.replace(reTrim, '');
      }

      if (!string || !(chars = baseToString(chars))) {
        return string;
      }

      var strSymbols = stringToArray(string),
          chrSymbols = stringToArray(chars),
          start = charsStartIndex(strSymbols, chrSymbols),
          end = charsEndIndex(strSymbols, chrSymbols) + 1;
      return castSlice(strSymbols, start, end).join('');
    }
    /**
     * Removes trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimEnd('  abc  ');
     * // => '  abc'
     *
     * _.trimEnd('-_-abc-_-', '_-');
     * // => '-_-abc'
     */


    function trimEnd(string, chars, guard) {
      string = toString(string);

      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimEnd, '');
      }

      if (!string || !(chars = baseToString(chars))) {
        return string;
      }

      var strSymbols = stringToArray(string),
          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;
      return castSlice(strSymbols, 0, end).join('');
    }
    /**
     * Removes leading whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimStart('  abc  ');
     * // => 'abc  '
     *
     * _.trimStart('-_-abc-_-', '_-');
     * // => 'abc-_-'
     */


    function trimStart(string, chars, guard) {
      string = toString(string);

      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimStart, '');
      }

      if (!string || !(chars = baseToString(chars))) {
        return string;
      }

      var strSymbols = stringToArray(string),
          start = charsStartIndex(strSymbols, stringToArray(chars));
      return castSlice(strSymbols, start).join('');
    }
    /**
     * Truncates `string` if it's longer than the given maximum string length.
     * The last characters of the truncated string are replaced with the omission
     * string which defaults to "...".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to truncate.
     * @param {Object} [options={}] The options object.
     * @param {number} [options.length=30] The maximum string length.
     * @param {string} [options.omission='...'] The string to indicate text is omitted.
     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
     * @returns {string} Returns the truncated string.
     * @example
     *
     * _.truncate('hi-diddly-ho there, neighborino');
     * // => 'hi-diddly-ho there, neighbo...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': ' '
     * });
     * // => 'hi-diddly-ho there,...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': /,? +/
     * });
     * // => 'hi-diddly-ho there...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'omission': ' [...]'
     * });
     * // => 'hi-diddly-ho there, neig [...]'
     */


    function truncate(string, options) {
      var length = DEFAULT_TRUNC_LENGTH,
          omission = DEFAULT_TRUNC_OMISSION;

      if (isObject(options)) {
        var separator = 'separator' in options ? options.separator : separator;
        length = 'length' in options ? toInteger(options.length) : length;
        omission = 'omission' in options ? baseToString(options.omission) : omission;
      }

      string = toString(string);
      var strLength = string.length;

      if (hasUnicode(string)) {
        var strSymbols = stringToArray(string);
        strLength = strSymbols.length;
      }

      if (length >= strLength) {
        return string;
      }

      var end = length - stringSize(omission);

      if (end < 1) {
        return omission;
      }

      var result = strSymbols ? castSlice(strSymbols, 0, end).join('') : string.slice(0, end);

      if (separator === undefined) {
        return result + omission;
      }

      if (strSymbols) {
        end += result.length - end;
      }

      if (isRegExp(separator)) {
        if (string.slice(end).search(separator)) {
          var match,
              substring = result;

          if (!separator.global) {
            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
          }

          separator.lastIndex = 0;

          while (match = separator.exec(substring)) {
            var newEnd = match.index;
          }

          result = result.slice(0, newEnd === undefined ? end : newEnd);
        }
      } else if (string.indexOf(baseToString(separator), end) != end) {
        var index = result.lastIndexOf(separator);

        if (index > -1) {
          result = result.slice(0, index);
        }
      }

      return result + omission;
    }
    /**
     * The inverse of `_.escape`; this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
     * their corresponding characters.
     *
     * **Note:** No other HTML entities are unescaped. To unescape additional
     * HTML entities use a third-party library like [_he_](https://mths.be/he).
     *
     * @static
     * @memberOf _
     * @since 0.6.0
     * @category String
     * @param {string} [string=''] The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('fred, barney, &amp; pebbles');
     * // => 'fred, barney, & pebbles'
     */


    function unescape(string) {
      string = toString(string);
      return string && reHasEscapedHtml.test(string) ? string.replace(reEscapedHtml, unescapeHtmlChar) : string;
    }
    /**
     * Converts `string`, as space separated words, to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.upperCase('--foo-bar');
     * // => 'FOO BAR'
     *
     * _.upperCase('fooBar');
     * // => 'FOO BAR'
     *
     * _.upperCase('__foo_bar__');
     * // => 'FOO BAR'
     */


    var upperCase = createCompounder(function (result, word, index) {
      return result + (index ? ' ' : '') + word.toUpperCase();
    });
    /**
     * Converts the first character of `string` to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.upperFirst('fred');
     * // => 'Fred'
     *
     * _.upperFirst('FRED');
     * // => 'FRED'
     */

    var upperFirst = createCaseFirst('toUpperCase');
    /**
     * Splits `string` into an array of its words.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {RegExp|string} [pattern] The pattern to match words.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the words of `string`.
     * @example
     *
     * _.words('fred, barney, & pebbles');
     * // => ['fred', 'barney', 'pebbles']
     *
     * _.words('fred, barney, & pebbles', /[^, ]+/g);
     * // => ['fred', 'barney', '&', 'pebbles']
     */

    function words(string, pattern, guard) {
      string = toString(string);
      pattern = guard ? undefined : pattern;

      if (pattern === undefined) {
        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
      }

      return string.match(pattern) || [];
    }
    /*------------------------------------------------------------------------*/

    /**
     * Attempts to invoke `func`, returning either the result or the caught error
     * object. Any additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Function} func The function to attempt.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {*} Returns the `func` result or error object.
     * @example
     *
     * // Avoid throwing errors for invalid selectors.
     * var elements = _.attempt(function(selector) {
     *   return document.querySelectorAll(selector);
     * }, '>_>');
     *
     * if (_.isError(elements)) {
     *   elements = [];
     * }
     */


    var attempt = baseRest(function (func, args) {
      try {
        return apply(func, undefined, args);
      } catch (e) {
        return isError(e) ? e : new Error(e);
      }
    });
    /**
     * Binds methods of an object to the object itself, overwriting the existing
     * method.
     *
     * **Note:** This method doesn't set the "length" property of bound functions.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...(string|string[])} methodNames The object method names to bind.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'click': function() {
     *     console.log('clicked ' + this.label);
     *   }
     * };
     *
     * _.bindAll(view, ['click']);
     * jQuery(element).on('click', view.click);
     * // => Logs 'clicked docs' when clicked.
     */

    var bindAll = flatRest(function (object, methodNames) {
      arrayEach(methodNames, function (key) {
        key = toKey(key);
        baseAssignValue(object, key, bind(object[key], object));
      });
      return object;
    });
    /**
     * Creates a function that iterates over `pairs` and invokes the corresponding
     * function of the first predicate to return truthy. The predicate-function
     * pairs are invoked with the `this` binding and arguments of the created
     * function.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Array} pairs The predicate-function pairs.
     * @returns {Function} Returns the new composite function.
     * @example
     *
     * var func = _.cond([
     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
     *   [_.stubTrue,                      _.constant('no match')]
     * ]);
     *
     * func({ 'a': 1, 'b': 2 });
     * // => 'matches A'
     *
     * func({ 'a': 0, 'b': 1 });
     * // => 'matches B'
     *
     * func({ 'a': '1', 'b': '2' });
     * // => 'no match'
     */

    function cond(pairs) {
      var length = pairs == null ? 0 : pairs.length,
          toIteratee = getIteratee();
      pairs = !length ? [] : arrayMap(pairs, function (pair) {
        if (typeof pair[1] != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }

        return [toIteratee(pair[0]), pair[1]];
      });
      return baseRest(function (args) {
        var index = -1;

        while (++index < length) {
          var pair = pairs[index];

          if (apply(pair[0], this, args)) {
            return apply(pair[1], this, args);
          }
        }
      });
    }
    /**
     * Creates a function that invokes the predicate properties of `source` with
     * the corresponding property values of a given object, returning `true` if
     * all predicates return truthy, else `false`.
     *
     * **Note:** The created function is equivalent to `_.conformsTo` with
     * `source` partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 2, 'b': 1 },
     *   { 'a': 1, 'b': 2 }
     * ];
     *
     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
     * // => [{ 'a': 1, 'b': 2 }]
     */


    function conforms(source) {
      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
    }
    /**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new constant function.
     * @example
     *
     * var objects = _.times(2, _.constant({ 'a': 1 }));
     *
     * console.log(objects);
     * // => [{ 'a': 1 }, { 'a': 1 }]
     *
     * console.log(objects[0] === objects[1]);
     * // => true
     */


    function constant(value) {
      return function () {
        return value;
      };
    }
    /**
     * Checks `value` to determine whether a default value should be returned in
     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
     * or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Util
     * @param {*} value The value to check.
     * @param {*} defaultValue The default value.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * _.defaultTo(1, 10);
     * // => 1
     *
     * _.defaultTo(undefined, 10);
     * // => 10
     */


    function defaultTo(value, defaultValue) {
      return value == null || value !== value ? defaultValue : value;
    }
    /**
     * Creates a function that returns the result of invoking the given functions
     * with the `this` binding of the created function, where each successive
     * invocation is supplied the return value of the previous.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flowRight
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flow([_.add, square]);
     * addSquare(1, 2);
     * // => 9
     */


    var flow = createFlow();
    /**
     * This method is like `_.flow` except that it creates a function that
     * invokes the given functions from right to left.
     *
     * @static
     * @since 3.0.0
     * @memberOf _
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flow
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flowRight([square, _.add]);
     * addSquare(1, 2);
     * // => 9
     */

    var flowRight = createFlow(true);
    /**
     * This method returns the first argument it receives.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'a': 1 };
     *
     * console.log(_.identity(object) === object);
     * // => true
     */

    function identity(value) {
      return value;
    }
    /**
     * Creates a function that invokes `func` with the arguments of the created
     * function. If `func` is a property name, the created function returns the
     * property value for a given element. If `func` is an array or object, the
     * created function returns `true` for elements that contain the equivalent
     * source properties, otherwise it returns `false`.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Util
     * @param {*} [func=_.identity] The value to convert to a callback.
     * @returns {Function} Returns the callback.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, _.iteratee(['user', 'fred']));
     * // => [{ 'user': 'fred', 'age': 40 }]
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, _.iteratee('user'));
     * // => ['barney', 'fred']
     *
     * // Create custom iteratee shorthands.
     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
     *     return func.test(string);
     *   };
     * });
     *
     * _.filter(['abc', 'def'], /ef/);
     * // => ['def']
     */


    function iteratee(func) {
      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
    }
    /**
     * Creates a function that performs a partial deep comparison between a given
     * object and `source`, returning `true` if the given object has equivalent
     * property values, else `false`.
     *
     * **Note:** The created function is equivalent to `_.isMatch` with `source`
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
     */


    function matches(source) {
      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
    }
    /**
     * Creates a function that performs a partial deep comparison between the
     * value at `path` of a given object to `srcValue`, returning `true` if the
     * object value is equivalent, else `false`.
     *
     * **Note:** Partial comparisons will match empty array and empty object
     * `srcValue` values against any array or object value, respectively. See
     * `_.isEqual` for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.find(objects, _.matchesProperty('a', 4));
     * // => { 'a': 4, 'b': 5, 'c': 6 }
     */


    function matchesProperty(path, srcValue) {
      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
    }
    /**
     * Creates a function that invokes the method at `path` of a given object.
     * Any additional arguments are provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': _.constant(2) } },
     *   { 'a': { 'b': _.constant(1) } }
     * ];
     *
     * _.map(objects, _.method('a.b'));
     * // => [2, 1]
     *
     * _.map(objects, _.method(['a', 'b']));
     * // => [2, 1]
     */


    var method = baseRest(function (path, args) {
      return function (object) {
        return baseInvoke(object, path, args);
      };
    });
    /**
     * The opposite of `_.method`; this method creates a function that invokes
     * the method at a given path of `object`. Any additional arguments are
     * provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Object} object The object to query.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var array = _.times(3, _.constant),
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
     * // => [2, 0]
     */

    var methodOf = baseRest(function (object, args) {
      return function (path) {
        return baseInvoke(object, path, args);
      };
    });
    /**
     * Adds all own enumerable string keyed function properties of a source
     * object to the destination object. If `object` is a function, then methods
     * are added to its prototype as well.
     *
     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
     * avoid conflicts caused by modifying the original.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Function|Object} [object=lodash] The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
     * @returns {Function|Object} Returns `object`.
     * @example
     *
     * function vowels(string) {
     *   return _.filter(string, function(v) {
     *     return /[aeiou]/i.test(v);
     *   });
     * }
     *
     * _.mixin({ 'vowels': vowels });
     * _.vowels('fred');
     * // => ['e']
     *
     * _('fred').vowels().value();
     * // => ['e']
     *
     * _.mixin({ 'vowels': vowels }, { 'chain': false });
     * _('fred').vowels();
     * // => ['e']
     */

    function mixin(object, source, options) {
      var props = keys(source),
          methodNames = baseFunctions(source, props);

      if (options == null && !(isObject(source) && (methodNames.length || !props.length))) {
        options = source;
        source = object;
        object = this;
        methodNames = baseFunctions(source, keys(source));
      }

      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
          isFunc = isFunction(object);
      arrayEach(methodNames, function (methodName) {
        var func = source[methodName];
        object[methodName] = func;

        if (isFunc) {
          object.prototype[methodName] = function () {
            var chainAll = this.__chain__;

            if (chain || chainAll) {
              var result = object(this.__wrapped__),
                  actions = result.__actions__ = copyArray(this.__actions__);
              actions.push({
                'func': func,
                'args': arguments,
                'thisArg': object
              });
              result.__chain__ = chainAll;
              return result;
            }

            return func.apply(object, arrayPush([this.value()], arguments));
          };
        }
      });
      return object;
    }
    /**
     * Reverts the `_` variable to its previous value and returns a reference to
     * the `lodash` function.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @returns {Function} Returns the `lodash` function.
     * @example
     *
     * var lodash = _.noConflict();
     */


    function noConflict() {
      if (root._ === this) {
        root._ = oldDash;
      }

      return this;
    }
    /**
     * This method returns `undefined`.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Util
     * @example
     *
     * _.times(2, _.noop);
     * // => [undefined, undefined]
     */


    function noop() {} // No operation performed.

    /**
     * Creates a function that gets the argument at index `n`. If `n` is negative,
     * the nth argument from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [n=0] The index of the argument to return.
     * @returns {Function} Returns the new pass-thru function.
     * @example
     *
     * var func = _.nthArg(1);
     * func('a', 'b', 'c', 'd');
     * // => 'b'
     *
     * var func = _.nthArg(-2);
     * func('a', 'b', 'c', 'd');
     * // => 'c'
     */


    function nthArg(n) {
      n = toInteger(n);
      return baseRest(function (args) {
        return baseNth(args, n);
      });
    }
    /**
     * Creates a function that invokes `iteratees` with the arguments it receives
     * and returns their results.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to invoke.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.over([Math.max, Math.min]);
     *
     * func(1, 2, 3, 4);
     * // => [4, 1]
     */


    var over = createOver(arrayMap);
    /**
     * Creates a function that checks if **all** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overEvery([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => false
     *
     * func(NaN);
     * // => false
     */

    var overEvery = createOver(arrayEvery);
    /**
     * Creates a function that checks if **any** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overSome([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => true
     *
     * func(NaN);
     * // => false
     */

    var overSome = createOver(arraySome);
    /**
     * Creates a function that returns the value at `path` of a given object.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': 2 } },
     *   { 'a': { 'b': 1 } }
     * ];
     *
     * _.map(objects, _.property('a.b'));
     * // => [2, 1]
     *
     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
     * // => [1, 2]
     */

    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }
    /**
     * The opposite of `_.property`; this method creates a function that returns
     * the value at a given path of `object`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} object The object to query.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var array = [0, 1, 2],
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
     * // => [2, 0]
     */


    function propertyOf(object) {
      return function (path) {
        return object == null ? undefined : baseGet(object, path);
      };
    }
    /**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
     * `start` is specified without an `end` or `step`. If `end` is not specified,
     * it's set to `start` with `start` then set to `0`.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.rangeRight
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(-4);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */


    var range = createRange();
    /**
     * This method is like `_.range` except that it populates values in
     * descending order.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.range
     * @example
     *
     * _.rangeRight(4);
     * // => [3, 2, 1, 0]
     *
     * _.rangeRight(-4);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 5);
     * // => [4, 3, 2, 1]
     *
     * _.rangeRight(0, 20, 5);
     * // => [15, 10, 5, 0]
     *
     * _.rangeRight(0, -4, -1);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.rangeRight(0);
     * // => []
     */

    var rangeRight = createRange(true);
    /**
     * This method returns a new empty array.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Array} Returns the new empty array.
     * @example
     *
     * var arrays = _.times(2, _.stubArray);
     *
     * console.log(arrays);
     * // => [[], []]
     *
     * console.log(arrays[0] === arrays[1]);
     * // => false
     */

    function stubArray() {
      return [];
    }
    /**
     * This method returns `false`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `false`.
     * @example
     *
     * _.times(2, _.stubFalse);
     * // => [false, false]
     */


    function stubFalse() {
      return false;
    }
    /**
     * This method returns a new empty object.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Object} Returns the new empty object.
     * @example
     *
     * var objects = _.times(2, _.stubObject);
     *
     * console.log(objects);
     * // => [{}, {}]
     *
     * console.log(objects[0] === objects[1]);
     * // => false
     */


    function stubObject() {
      return {};
    }
    /**
     * This method returns an empty string.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {string} Returns the empty string.
     * @example
     *
     * _.times(2, _.stubString);
     * // => ['', '']
     */


    function stubString() {
      return '';
    }
    /**
     * This method returns `true`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `true`.
     * @example
     *
     * _.times(2, _.stubTrue);
     * // => [true, true]
     */


    function stubTrue() {
      return true;
    }
    /**
     * Invokes the iteratee `n` times, returning an array of the results of
     * each invocation. The iteratee is invoked with one argument; (index).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} n The number of times to invoke `iteratee`.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.times(3, String);
     * // => ['0', '1', '2']
     *
     *  _.times(4, _.constant(0));
     * // => [0, 0, 0, 0]
     */


    function times(n, iteratee) {
      n = toInteger(n);

      if (n < 1 || n > MAX_SAFE_INTEGER) {
        return [];
      }

      var index = MAX_ARRAY_LENGTH,
          length = nativeMin(n, MAX_ARRAY_LENGTH);
      iteratee = getIteratee(iteratee);
      n -= MAX_ARRAY_LENGTH;
      var result = baseTimes(length, iteratee);

      while (++index < n) {
        iteratee(index);
      }

      return result;
    }
    /**
     * Converts `value` to a property path array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {*} value The value to convert.
     * @returns {Array} Returns the new property path array.
     * @example
     *
     * _.toPath('a.b.c');
     * // => ['a', 'b', 'c']
     *
     * _.toPath('a[0].b.c');
     * // => ['a', '0', 'b', 'c']
     */


    function toPath(value) {
      if (isArray(value)) {
        return arrayMap(value, toKey);
      }

      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
    }
    /**
     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {string} [prefix=''] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */


    function uniqueId(prefix) {
      var id = ++idCounter;
      return toString(prefix) + id;
    }
    /*------------------------------------------------------------------------*/

    /**
     * Adds two numbers.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {number} augend The first number in an addition.
     * @param {number} addend The second number in an addition.
     * @returns {number} Returns the total.
     * @example
     *
     * _.add(6, 4);
     * // => 10
     */


    var add = createMathOperation(function (augend, addend) {
      return augend + addend;
    }, 0);
    /**
     * Computes `number` rounded up to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round up.
     * @param {number} [precision=0] The precision to round up to.
     * @returns {number} Returns the rounded up number.
     * @example
     *
     * _.ceil(4.006);
     * // => 5
     *
     * _.ceil(6.004, 2);
     * // => 6.01
     *
     * _.ceil(6040, -2);
     * // => 6100
     */

    var ceil = createRound('ceil');
    /**
     * Divide two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} dividend The first number in a division.
     * @param {number} divisor The second number in a division.
     * @returns {number} Returns the quotient.
     * @example
     *
     * _.divide(6, 4);
     * // => 1.5
     */

    var divide = createMathOperation(function (dividend, divisor) {
      return dividend / divisor;
    }, 1);
    /**
     * Computes `number` rounded down to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round down.
     * @param {number} [precision=0] The precision to round down to.
     * @returns {number} Returns the rounded down number.
     * @example
     *
     * _.floor(4.006);
     * // => 4
     *
     * _.floor(0.046, 2);
     * // => 0.04
     *
     * _.floor(4060, -2);
     * // => 4000
     */

    var floor = createRound('floor');
    /**
     * Computes the maximum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * _.max([]);
     * // => undefined
     */

    function max(array) {
      return array && array.length ? baseExtremum(array, identity, baseGt) : undefined;
    }
    /**
     * This method is like `_.max` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.maxBy(objects, function(o) { return o.n; });
     * // => { 'n': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.maxBy(objects, 'n');
     * // => { 'n': 2 }
     */


    function maxBy(array, iteratee) {
      return array && array.length ? baseExtremum(array, getIteratee(iteratee, 2), baseGt) : undefined;
    }
    /**
     * Computes the mean of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the mean.
     * @example
     *
     * _.mean([4, 2, 8, 6]);
     * // => 5
     */


    function mean(array) {
      return baseMean(array, identity);
    }
    /**
     * This method is like `_.mean` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be averaged.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the mean.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.meanBy(objects, function(o) { return o.n; });
     * // => 5
     *
     * // The `_.property` iteratee shorthand.
     * _.meanBy(objects, 'n');
     * // => 5
     */


    function meanBy(array, iteratee) {
      return baseMean(array, getIteratee(iteratee, 2));
    }
    /**
     * Computes the minimum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * _.min([]);
     * // => undefined
     */


    function min(array) {
      return array && array.length ? baseExtremum(array, identity, baseLt) : undefined;
    }
    /**
     * This method is like `_.min` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.minBy(objects, function(o) { return o.n; });
     * // => { 'n': 1 }
     *
     * // The `_.property` iteratee shorthand.
     * _.minBy(objects, 'n');
     * // => { 'n': 1 }
     */


    function minBy(array, iteratee) {
      return array && array.length ? baseExtremum(array, getIteratee(iteratee, 2), baseLt) : undefined;
    }
    /**
     * Multiply two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} multiplier The first number in a multiplication.
     * @param {number} multiplicand The second number in a multiplication.
     * @returns {number} Returns the product.
     * @example
     *
     * _.multiply(6, 4);
     * // => 24
     */


    var multiply = createMathOperation(function (multiplier, multiplicand) {
      return multiplier * multiplicand;
    }, 1);
    /**
     * Computes `number` rounded to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round.
     * @param {number} [precision=0] The precision to round to.
     * @returns {number} Returns the rounded number.
     * @example
     *
     * _.round(4.006);
     * // => 4
     *
     * _.round(4.006, 2);
     * // => 4.01
     *
     * _.round(4060, -2);
     * // => 4100
     */

    var round = createRound('round');
    /**
     * Subtract two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {number} minuend The first number in a subtraction.
     * @param {number} subtrahend The second number in a subtraction.
     * @returns {number} Returns the difference.
     * @example
     *
     * _.subtract(6, 4);
     * // => 2
     */

    var subtract = createMathOperation(function (minuend, subtrahend) {
      return minuend - subtrahend;
    }, 0);
    /**
     * Computes the sum of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the sum.
     * @example
     *
     * _.sum([4, 2, 8, 6]);
     * // => 20
     */

    function sum(array) {
      return array && array.length ? baseSum(array, identity) : 0;
    }
    /**
     * This method is like `_.sum` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be summed.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the sum.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.sumBy(objects, function(o) { return o.n; });
     * // => 20
     *
     * // The `_.property` iteratee shorthand.
     * _.sumBy(objects, 'n');
     * // => 20
     */


    function sumBy(array, iteratee) {
      return array && array.length ? baseSum(array, getIteratee(iteratee, 2)) : 0;
    }
    /*------------------------------------------------------------------------*/
    // Add methods that return wrapped values in chain sequences.


    lodash.after = after;
    lodash.ary = ary;
    lodash.assign = assign;
    lodash.assignIn = assignIn;
    lodash.assignInWith = assignInWith;
    lodash.assignWith = assignWith;
    lodash.at = at;
    lodash.before = before;
    lodash.bind = bind;
    lodash.bindAll = bindAll;
    lodash.bindKey = bindKey;
    lodash.castArray = castArray;
    lodash.chain = chain;
    lodash.chunk = chunk;
    lodash.compact = compact;
    lodash.concat = concat;
    lodash.cond = cond;
    lodash.conforms = conforms;
    lodash.constant = constant;
    lodash.countBy = countBy;
    lodash.create = create;
    lodash.curry = curry;
    lodash.curryRight = curryRight;
    lodash.debounce = debounce;
    lodash.defaults = defaults;
    lodash.defaultsDeep = defaultsDeep;
    lodash.defer = defer;
    lodash.delay = delay;
    lodash.difference = difference;
    lodash.differenceBy = differenceBy;
    lodash.differenceWith = differenceWith;
    lodash.drop = drop;
    lodash.dropRight = dropRight;
    lodash.dropRightWhile = dropRightWhile;
    lodash.dropWhile = dropWhile;
    lodash.fill = fill;
    lodash.filter = filter;
    lodash.flatMap = flatMap;
    lodash.flatMapDeep = flatMapDeep;
    lodash.flatMapDepth = flatMapDepth;
    lodash.flatten = flatten;
    lodash.flattenDeep = flattenDeep;
    lodash.flattenDepth = flattenDepth;
    lodash.flip = flip;
    lodash.flow = flow;
    lodash.flowRight = flowRight;
    lodash.fromPairs = fromPairs;
    lodash.functions = functions;
    lodash.functionsIn = functionsIn;
    lodash.groupBy = groupBy;
    lodash.initial = initial;
    lodash.intersection = intersection;
    lodash.intersectionBy = intersectionBy;
    lodash.intersectionWith = intersectionWith;
    lodash.invert = invert;
    lodash.invertBy = invertBy;
    lodash.invokeMap = invokeMap;
    lodash.iteratee = iteratee;
    lodash.keyBy = keyBy;
    lodash.keys = keys;
    lodash.keysIn = keysIn;
    lodash.map = map;
    lodash.mapKeys = mapKeys;
    lodash.mapValues = mapValues;
    lodash.matches = matches;
    lodash.matchesProperty = matchesProperty;
    lodash.memoize = memoize;
    lodash.merge = merge;
    lodash.mergeWith = mergeWith;
    lodash.method = method;
    lodash.methodOf = methodOf;
    lodash.mixin = mixin;
    lodash.negate = negate;
    lodash.nthArg = nthArg;
    lodash.omit = omit;
    lodash.omitBy = omitBy;
    lodash.once = once;
    lodash.orderBy = orderBy;
    lodash.over = over;
    lodash.overArgs = overArgs;
    lodash.overEvery = overEvery;
    lodash.overSome = overSome;
    lodash.partial = partial;
    lodash.partialRight = partialRight;
    lodash.partition = partition;
    lodash.pick = pick;
    lodash.pickBy = pickBy;
    lodash.property = property;
    lodash.propertyOf = propertyOf;
    lodash.pull = pull;
    lodash.pullAll = pullAll;
    lodash.pullAllBy = pullAllBy;
    lodash.pullAllWith = pullAllWith;
    lodash.pullAt = pullAt;
    lodash.range = range;
    lodash.rangeRight = rangeRight;
    lodash.rearg = rearg;
    lodash.reject = reject;
    lodash.remove = remove;
    lodash.rest = rest;
    lodash.reverse = reverse;
    lodash.sampleSize = sampleSize;
    lodash.set = set;
    lodash.setWith = setWith;
    lodash.shuffle = shuffle;
    lodash.slice = slice;
    lodash.sortBy = sortBy;
    lodash.sortedUniq = sortedUniq;
    lodash.sortedUniqBy = sortedUniqBy;
    lodash.split = split;
    lodash.spread = spread;
    lodash.tail = tail;
    lodash.take = take;
    lodash.takeRight = takeRight;
    lodash.takeRightWhile = takeRightWhile;
    lodash.takeWhile = takeWhile;
    lodash.tap = tap;
    lodash.throttle = throttle;
    lodash.thru = thru;
    lodash.toArray = toArray;
    lodash.toPairs = toPairs;
    lodash.toPairsIn = toPairsIn;
    lodash.toPath = toPath;
    lodash.toPlainObject = toPlainObject;
    lodash.transform = transform;
    lodash.unary = unary;
    lodash.union = union;
    lodash.unionBy = unionBy;
    lodash.unionWith = unionWith;
    lodash.uniq = uniq;
    lodash.uniqBy = uniqBy;
    lodash.uniqWith = uniqWith;
    lodash.unset = unset;
    lodash.unzip = unzip;
    lodash.unzipWith = unzipWith;
    lodash.update = update;
    lodash.updateWith = updateWith;
    lodash.values = values;
    lodash.valuesIn = valuesIn;
    lodash.without = without;
    lodash.words = words;
    lodash.wrap = wrap;
    lodash.xor = xor;
    lodash.xorBy = xorBy;
    lodash.xorWith = xorWith;
    lodash.zip = zip;
    lodash.zipObject = zipObject;
    lodash.zipObjectDeep = zipObjectDeep;
    lodash.zipWith = zipWith; // Add aliases.

    lodash.entries = toPairs;
    lodash.entriesIn = toPairsIn;
    lodash.extend = assignIn;
    lodash.extendWith = assignInWith; // Add methods to `lodash.prototype`.

    mixin(lodash, lodash);
    /*------------------------------------------------------------------------*/
    // Add methods that return unwrapped values in chain sequences.

    lodash.add = add;
    lodash.attempt = attempt;
    lodash.camelCase = camelCase;
    lodash.capitalize = capitalize;
    lodash.ceil = ceil;
    lodash.clamp = clamp;
    lodash.clone = clone;
    lodash.cloneDeep = cloneDeep;
    lodash.cloneDeepWith = cloneDeepWith;
    lodash.cloneWith = cloneWith;
    lodash.conformsTo = conformsTo;
    lodash.deburr = deburr;
    lodash.defaultTo = defaultTo;
    lodash.divide = divide;
    lodash.endsWith = endsWith;
    lodash.eq = eq;
    lodash.escape = escape;
    lodash.escapeRegExp = escapeRegExp;
    lodash.every = every;
    lodash.find = find;
    lodash.findIndex = findIndex;
    lodash.findKey = findKey;
    lodash.findLast = findLast;
    lodash.findLastIndex = findLastIndex;
    lodash.findLastKey = findLastKey;
    lodash.floor = floor;
    lodash.forEach = forEach;
    lodash.forEachRight = forEachRight;
    lodash.forIn = forIn;
    lodash.forInRight = forInRight;
    lodash.forOwn = forOwn;
    lodash.forOwnRight = forOwnRight;
    lodash.get = get;
    lodash.gt = gt;
    lodash.gte = gte;
    lodash.has = has;
    lodash.hasIn = hasIn;
    lodash.head = head;
    lodash.identity = identity;
    lodash.includes = includes;
    lodash.indexOf = indexOf;
    lodash.inRange = inRange;
    lodash.invoke = invoke;
    lodash.isArguments = isArguments;
    lodash.isArray = isArray;
    lodash.isArrayBuffer = isArrayBuffer;
    lodash.isArrayLike = isArrayLike;
    lodash.isArrayLikeObject = isArrayLikeObject;
    lodash.isBoolean = isBoolean;
    lodash.isBuffer = isBuffer;
    lodash.isDate = isDate;
    lodash.isElement = isElement;
    lodash.isEmpty = isEmpty;
    lodash.isEqual = isEqual;
    lodash.isEqualWith = isEqualWith;
    lodash.isError = isError;
    lodash.isFinite = isFinite;
    lodash.isFunction = isFunction;
    lodash.isInteger = isInteger;
    lodash.isLength = isLength;
    lodash.isMap = isMap;
    lodash.isMatch = isMatch;
    lodash.isMatchWith = isMatchWith;
    lodash.isNaN = isNaN;
    lodash.isNative = isNative;
    lodash.isNil = isNil;
    lodash.isNull = isNull;
    lodash.isNumber = isNumber;
    lodash.isObject = isObject;
    lodash.isObjectLike = isObjectLike;
    lodash.isPlainObject = isPlainObject;
    lodash.isRegExp = isRegExp;
    lodash.isSafeInteger = isSafeInteger;
    lodash.isSet = isSet;
    lodash.isString = isString;
    lodash.isSymbol = isSymbol;
    lodash.isTypedArray = isTypedArray;
    lodash.isUndefined = isUndefined;
    lodash.isWeakMap = isWeakMap;
    lodash.isWeakSet = isWeakSet;
    lodash.join = join;
    lodash.kebabCase = kebabCase;
    lodash.last = last;
    lodash.lastIndexOf = lastIndexOf;
    lodash.lowerCase = lowerCase;
    lodash.lowerFirst = lowerFirst;
    lodash.lt = lt;
    lodash.lte = lte;
    lodash.max = max;
    lodash.maxBy = maxBy;
    lodash.mean = mean;
    lodash.meanBy = meanBy;
    lodash.min = min;
    lodash.minBy = minBy;
    lodash.stubArray = stubArray;
    lodash.stubFalse = stubFalse;
    lodash.stubObject = stubObject;
    lodash.stubString = stubString;
    lodash.stubTrue = stubTrue;
    lodash.multiply = multiply;
    lodash.nth = nth;
    lodash.noConflict = noConflict;
    lodash.noop = noop;
    lodash.now = now;
    lodash.pad = pad;
    lodash.padEnd = padEnd;
    lodash.padStart = padStart;
    lodash.parseInt = parseInt;
    lodash.random = random;
    lodash.reduce = reduce;
    lodash.reduceRight = reduceRight;
    lodash.repeat = repeat;
    lodash.replace = replace;
    lodash.result = result;
    lodash.round = round;
    lodash.runInContext = runInContext;
    lodash.sample = sample;
    lodash.size = size;
    lodash.snakeCase = snakeCase;
    lodash.some = some;
    lodash.sortedIndex = sortedIndex;
    lodash.sortedIndexBy = sortedIndexBy;
    lodash.sortedIndexOf = sortedIndexOf;
    lodash.sortedLastIndex = sortedLastIndex;
    lodash.sortedLastIndexBy = sortedLastIndexBy;
    lodash.sortedLastIndexOf = sortedLastIndexOf;
    lodash.startCase = startCase;
    lodash.startsWith = startsWith;
    lodash.subtract = subtract;
    lodash.sum = sum;
    lodash.sumBy = sumBy;
    lodash.template = template;
    lodash.times = times;
    lodash.toFinite = toFinite;
    lodash.toInteger = toInteger;
    lodash.toLength = toLength;
    lodash.toLower = toLower;
    lodash.toNumber = toNumber;
    lodash.toSafeInteger = toSafeInteger;
    lodash.toString = toString;
    lodash.toUpper = toUpper;
    lodash.trim = trim;
    lodash.trimEnd = trimEnd;
    lodash.trimStart = trimStart;
    lodash.truncate = truncate;
    lodash.unescape = unescape;
    lodash.uniqueId = uniqueId;
    lodash.upperCase = upperCase;
    lodash.upperFirst = upperFirst; // Add aliases.

    lodash.each = forEach;
    lodash.eachRight = forEachRight;
    lodash.first = head;
    mixin(lodash, function () {
      var source = {};
      baseForOwn(lodash, function (func, methodName) {
        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
          source[methodName] = func;
        }
      });
      return source;
    }(), {
      'chain': false
    });
    /*------------------------------------------------------------------------*/

    /**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type {string}
     */

    lodash.VERSION = VERSION; // Assign default placeholders.

    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function (methodName) {
      lodash[methodName].placeholder = lodash;
    }); // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.

    arrayEach(['drop', 'take'], function (methodName, index) {
      LazyWrapper.prototype[methodName] = function (n) {
        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);
        var result = this.__filtered__ && !index ? new LazyWrapper(this) : this.clone();

        if (result.__filtered__) {
          result.__takeCount__ = nativeMin(n, result.__takeCount__);
        } else {
          result.__views__.push({
            'size': nativeMin(n, MAX_ARRAY_LENGTH),
            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
          });
        }

        return result;
      };

      LazyWrapper.prototype[methodName + 'Right'] = function (n) {
        return this.reverse()[methodName](n).reverse();
      };
    }); // Add `LazyWrapper` methods that accept an `iteratee` value.

    arrayEach(['filter', 'map', 'takeWhile'], function (methodName, index) {
      var type = index + 1,
          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

      LazyWrapper.prototype[methodName] = function (iteratee) {
        var result = this.clone();

        result.__iteratees__.push({
          'iteratee': getIteratee(iteratee, 3),
          'type': type
        });

        result.__filtered__ = result.__filtered__ || isFilter;
        return result;
      };
    }); // Add `LazyWrapper` methods for `_.head` and `_.last`.

    arrayEach(['head', 'last'], function (methodName, index) {
      var takeName = 'take' + (index ? 'Right' : '');

      LazyWrapper.prototype[methodName] = function () {
        return this[takeName](1).value()[0];
      };
    }); // Add `LazyWrapper` methods for `_.initial` and `_.tail`.

    arrayEach(['initial', 'tail'], function (methodName, index) {
      var dropName = 'drop' + (index ? '' : 'Right');

      LazyWrapper.prototype[methodName] = function () {
        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
      };
    });

    LazyWrapper.prototype.compact = function () {
      return this.filter(identity);
    };

    LazyWrapper.prototype.find = function (predicate) {
      return this.filter(predicate).head();
    };

    LazyWrapper.prototype.findLast = function (predicate) {
      return this.reverse().find(predicate);
    };

    LazyWrapper.prototype.invokeMap = baseRest(function (path, args) {
      if (typeof path == 'function') {
        return new LazyWrapper(this);
      }

      return this.map(function (value) {
        return baseInvoke(value, path, args);
      });
    });

    LazyWrapper.prototype.reject = function (predicate) {
      return this.filter(negate(getIteratee(predicate)));
    };

    LazyWrapper.prototype.slice = function (start, end) {
      start = toInteger(start);
      var result = this;

      if (result.__filtered__ && (start > 0 || end < 0)) {
        return new LazyWrapper(result);
      }

      if (start < 0) {
        result = result.takeRight(-start);
      } else if (start) {
        result = result.drop(start);
      }

      if (end !== undefined) {
        end = toInteger(end);
        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
      }

      return result;
    };

    LazyWrapper.prototype.takeRightWhile = function (predicate) {
      return this.reverse().takeWhile(predicate).reverse();
    };

    LazyWrapper.prototype.toArray = function () {
      return this.take(MAX_ARRAY_LENGTH);
    }; // Add `LazyWrapper` methods to `lodash.prototype`.


    baseForOwn(LazyWrapper.prototype, function (func, methodName) {
      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
          isTaker = /^(?:head|last)$/.test(methodName),
          lodashFunc = lodash[isTaker ? 'take' + (methodName == 'last' ? 'Right' : '') : methodName],
          retUnwrapped = isTaker || /^find/.test(methodName);

      if (!lodashFunc) {
        return;
      }

      lodash.prototype[methodName] = function () {
        var value = this.__wrapped__,
            args = isTaker ? [1] : arguments,
            isLazy = value instanceof LazyWrapper,
            iteratee = args[0],
            useLazy = isLazy || isArray(value);

        var interceptor = function interceptor(value) {
          var result = lodashFunc.apply(lodash, arrayPush([value], args));
          return isTaker && chainAll ? result[0] : result;
        };

        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
          // Avoid lazy use if the iteratee has a "length" value other than `1`.
          isLazy = useLazy = false;
        }

        var chainAll = this.__chain__,
            isHybrid = !!this.__actions__.length,
            isUnwrapped = retUnwrapped && !chainAll,
            onlyLazy = isLazy && !isHybrid;

        if (!retUnwrapped && useLazy) {
          value = onlyLazy ? value : new LazyWrapper(this);
          var result = func.apply(value, args);

          result.__actions__.push({
            'func': thru,
            'args': [interceptor],
            'thisArg': undefined
          });

          return new LodashWrapper(result, chainAll);
        }

        if (isUnwrapped && onlyLazy) {
          return func.apply(this, args);
        }

        result = this.thru(interceptor);
        return isUnwrapped ? isTaker ? result.value()[0] : result.value() : result;
      };
    }); // Add `Array` methods to `lodash.prototype`.

    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function (methodName) {
      var func = arrayProto[methodName],
          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
          retUnwrapped = /^(?:pop|shift)$/.test(methodName);

      lodash.prototype[methodName] = function () {
        var args = arguments;

        if (retUnwrapped && !this.__chain__) {
          var value = this.value();
          return func.apply(isArray(value) ? value : [], args);
        }

        return this[chainName](function (value) {
          return func.apply(isArray(value) ? value : [], args);
        });
      };
    }); // Map minified method names to their real names.

    baseForOwn(LazyWrapper.prototype, function (func, methodName) {
      var lodashFunc = lodash[methodName];

      if (lodashFunc) {
        var key = lodashFunc.name + '',
            names = realNames[key] || (realNames[key] = []);
        names.push({
          'name': methodName,
          'func': lodashFunc
        });
      }
    });
    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{
      'name': 'wrapper',
      'func': undefined
    }]; // Add methods to `LazyWrapper`.

    LazyWrapper.prototype.clone = lazyClone;
    LazyWrapper.prototype.reverse = lazyReverse;
    LazyWrapper.prototype.value = lazyValue; // Add chain sequence methods to the `lodash` wrapper.

    lodash.prototype.at = wrapperAt;
    lodash.prototype.chain = wrapperChain;
    lodash.prototype.commit = wrapperCommit;
    lodash.prototype.next = wrapperNext;
    lodash.prototype.plant = wrapperPlant;
    lodash.prototype.reverse = wrapperReverse;
    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue; // Add lazy aliases.

    lodash.prototype.first = lodash.prototype.head;

    if (symIterator) {
      lodash.prototype[symIterator] = wrapperToIterator;
    }

    return lodash;
  };
  /*--------------------------------------------------------------------------*/
  // Export lodash.


  var _ = runInContext(); // Some AMD build optimizers, like r.js, check for condition patterns like:


  if (true) {
    // Expose Lodash on the global object to prevent errors when Lodash is
    // loaded by a script tag in the presence of an AMD loader.
    // See http://requirejs.org/docs/errors.html#mismatch for more details.
    // Use `_.noConflict` to remove Lodash from the global object.
    root._ = _; // Define as an anonymous module so, through path mapping, it can be
    // referenced as the "underscore" module.

    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
      return _;
    }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } // Check for `exports` after `define` in case a build optimizer adds it.
  else {}
}).call(this);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(58), __webpack_require__(159)(module)))

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(5);

var core = __webpack_require__(17);

var hide = __webpack_require__(29);

var redefine = __webpack_require__(26);

var ctx = __webpack_require__(34);

var PROTOTYPE = 'prototype';

var $export = function $export(type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});
  var key, own, out, exp;
  if (IS_GLOBAL) source = name;

  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined; // export native or passed

    out = (own ? target : source)[key]; // bind timers to global for call from export context

    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out; // extend global

    if (target) redefine(target, key, out, type & $export.U); // export

    if (exports[key] != out) hide(exports, key, exp);
    if (IS_PROTO && expProto[key] != out) expProto[key] = out;
  }
};

global.core = core; // type bitmap

$export.F = 1; // forced

$export.G = 2; // global

$export.S = 4; // static

$export.P = 8; // proto

$export.B = 16; // bind

$export.W = 32; // wrap

$export.U = 64; // safe

$export.R = 128; // real proto method for `library`

module.exports = $export;

/***/ }),
/* 2 */
/***/ (function(module, exports) {

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

module.exports = _defineProperty;

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

var defineProperty = __webpack_require__(2);

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      defineProperty(target, key, source[key]);
    });
  }

  return target;
}

module.exports = _objectSpread;

/***/ }),
/* 4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "propertyUtils", function() { return propertyUtils; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createCollection", function() { return createCollection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mixinPropertyUtils", function() { return mixinPropertyUtils; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "enhanceObject", function() { return enhanceObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transformKey", function() { return transformKey; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createInterface", function() { return createInterface; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "applyInterface", function() { return applyInterface; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mixinLodashMethods", function() { return mixinLodashMethods; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hideProperties", function() { return hideProperties; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hideGetter", function() { return hideGetter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getter", function() { return getter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hideProperty", function() { return hideProperty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hide", function() { return hide; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lazy", function() { return lazy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createEntity", function() { return createEntity; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hashObject", function() { return hashObject; });
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(18);
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
/* harmony import */ var _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(15);
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(0);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_3__);




var defineProperty = Object.defineProperty;
global.DEBUG_LODASH_USAGE = global.DEBUG_LODASH_USAGE || Object({"NODE_ENV":"production","PUBLIC_URL":"","RELEASE_PACKAGE_NAME":"@skypager/web","RELEASE_VERSION":"1.1.4","GIT_SHA":"1e6fb35f00","GIT_BRANCH":"master"}).DEBUG_LODASH_USAGE;
/**
 * Creates some functions that are useful when trying to decorate objects with hidden properties or getters,
 * or lazy loading properties, etc.  I use this a lot inside of constructor functions for singleton type objects.
 *
 * @param  {Object} target This is the object you intend to be decorating
 * @return {Object}        Returns an object with some wrapper functions around Object.defineProperty
 */

function propertyUtils(target) {
  /**
   * @mixin PropertyUtils
   */
  var propertyUtils = {
    /**
     * @link lazy
     */
    lazy: Object(lodash__WEBPACK_IMPORTED_MODULE_3__["partial"])(lazy, target),

    /**
     * @link hideProperty
     */
    hide: Object(lodash__WEBPACK_IMPORTED_MODULE_3__["partial"])(hideProperty, target),

    /**
     * @link hideProperty
     */
    hideProperty: Object(lodash__WEBPACK_IMPORTED_MODULE_3__["partial"])(hideProperty, target),

    /**
     * @link hideProperty
     */
    hideGetter: Object(lodash__WEBPACK_IMPORTED_MODULE_3__["partial"])(hideGetter, target),

    /**
     * @link hideProperty
     */
    hideProperties: Object(lodash__WEBPACK_IMPORTED_MODULE_3__["partial"])(hideProperties, target),

    /**
     * @link hideProperty
     */
    getter: Object(lodash__WEBPACK_IMPORTED_MODULE_3__["partial"])(getter, target),

    /**
     * @link hideProperty
     */
    applyInterface: Object(lodash__WEBPACK_IMPORTED_MODULE_3__["partial"])(applyInterface, target)
  };
  return propertyUtils;
}
function createCollection() {
  var host = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var items = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  mixinPropertyUtils(host, true, false);
  host.lazy('models', function () {
    return mixinPropertyUtils((Object(lodash__WEBPACK_IMPORTED_MODULE_3__["isFunction"])(items) ? items.call(host) : items) || [], true);
  });
  return host;
}
function mixinPropertyUtils(target) {
  var includeLodashMethods = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  var includeChain = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  return enhanceObject(target, {
    includeLodashMethods: includeLodashMethods,
    includeChain: includeChain
  }, global.lodash);
}
function enhanceObject(target) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var lodash = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : global.lodash;

  if (options.propUtils !== false) {
    var propUtils = propertyUtils(target);
    Object(lodash__WEBPACK_IMPORTED_MODULE_3__["mapValues"])(propUtils, function (fn, name) {
      hideProperty(target, name, fn);
    });
  }

  if (typeof options === 'function' && options.VERSION) {
    lodash = options;
    options = {};
  }

  var _options = options,
      _options$includeLodas = _options.includeLodashMethods,
      includeLodashMethods = _options$includeLodas === void 0 ? Object(lodash__WEBPACK_IMPORTED_MODULE_3__["isFunction"])(lodash) : _options$includeLodas,
      _options$includeChain = _options.includeChain,
      includeChain = _options$includeChain === void 0 ? Object(lodash__WEBPACK_IMPORTED_MODULE_3__["isFunction"])(lodash) && Object(lodash__WEBPACK_IMPORTED_MODULE_3__["isFunction"])(lodash.chain) : _options$includeChain;

  if (global.DEBUG_LODASH_USAGE) {
    console.log({
      includeLodashMethods: includeLodashMethods,
      includeChain: includeChain,
      target: target.constructor && target.constructor.name
    });
  }

  if (includeLodashMethods) {
    if (Object(lodash__WEBPACK_IMPORTED_MODULE_3__["isObject"])(target) && !Object(lodash__WEBPACK_IMPORTED_MODULE_3__["isArray"])(target)) {
      objectMethods.filter(function (name) {
        return lodash[name];
      }).forEach(function (name) {
        var fn = Object(lodash__WEBPACK_IMPORTED_MODULE_3__["partial"])(lodash[name], target);
        hideProperty(target, name, function () {
          global.DEBUG_LODASH_USAGE && console.log("LODASH ACCESS: ".concat(name), target.constructor ? target.constructor.name : target.uuid || target);
          return fn.apply(void 0, arguments);
        });
      });
    } else if (Object(lodash__WEBPACK_IMPORTED_MODULE_3__["isArray"])(target)) {
      collectionMethods.filter(function (name) {
        return lodash[name];
      }).forEach(function (name) {
        var fn = Object(lodash__WEBPACK_IMPORTED_MODULE_3__["partial"])(lodash[name], target);
        hideProperty(target, name, function () {
          global.DEBUG_LODASH_USAGE && console.log("LODASH ACCESS: ".concat(name), target.constructor ? target.constructor.name : target.uuid || target);
          return fn.apply(void 0, arguments);
        });
      });
      arrayMethods.filter(function (name) {
        return lodash[name];
      }).forEach(function (name) {
        var fn = Object(lodash__WEBPACK_IMPORTED_MODULE_3__["partial"])(lodash[name], target);
        hideProperty(target, name, function () {
          global.DEBUG_LODASH_USAGE && console.log("LODASH ACCESS: ".concat(name), target.constructor ? target.constructor.name : target.uuid || target);
          return fn.apply(void 0, arguments);
        });
      });
    }
  }

  if (includeChain && !Object(lodash__WEBPACK_IMPORTED_MODULE_3__["has"])(target, 'chain') && Object(lodash__WEBPACK_IMPORTED_MODULE_3__["isFunction"])(lodash.chain)) {
    var fn = Object(lodash__WEBPACK_IMPORTED_MODULE_3__["partial"])(lodash.chain, target);
    hideGetter(target, 'chain', function () {
      global.DEBUG_LODASH_USAGE && console.log("LODASH ACCESS CHAIN", target.constructor ? target.constructor.name : target.uuid || target);
      return fn();
    });
  }

  return target;
}
var transformKey = function transformKey(key) {
  return Object(lodash__WEBPACK_IMPORTED_MODULE_3__["lowerFirst"])(Object(lodash__WEBPACK_IMPORTED_MODULE_3__["camelCase"])(key.replace(new RegExp("^(get|lazy)", ''), '')));
};
function createInterface() {
  var interfaceMethods = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var _options$insertOption = options.insertOptions,
      insertOptions = _options$insertOption === void 0 ? true : _options$insertOption,
      _options$partial = options.partial,
      partial = _options$partial === void 0 ? [] : _options$partial,
      _options$right = options.right,
      right = _options$right === void 0 ? true : _options$right,
      scope = options.scope,
      _options$defaultOptio = options.defaultOptions,
      defaultOptions = _options$defaultOptio === void 0 ? {} : _options$defaultOptio; // limit the interface to functions, and unless safe is set to false, non existing properties

  var interFace = Object(lodash__WEBPACK_IMPORTED_MODULE_3__["mapValues"])(Object(lodash__WEBPACK_IMPORTED_MODULE_3__["pickBy"])(interfaceMethods, lodash__WEBPACK_IMPORTED_MODULE_3__["isFunction"]), function (prop, propName) {
    return function () {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      if (partial.length > 0 && right === false) {
        args = [].concat(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_2___default()(partial), _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_2___default()(args));
      }

      if (insertOptions && args.length === 0) {
        args.unshift(defaultOptions);
      }

      if (right === true && partial.length > 0) {
        var _args;

        (_args = args).push.apply(_args, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_2___default()(partial));
      }

      return prop.call.apply(prop, [scope].concat(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_2___default()(args)));
    };
  });
  defineProperty(interFace, 'isInterface', {
    enumerable: false,
    value: true,
    configurable: false
  });
  return interFace;
}
/**
 * @typedef {Object<String, Function>} Mixin
 *
 * @typedef {Object<String>} MixinOptions
 * @prop {Array} partial - an array of objects to be passed as arguments to the function
 * @prop {Boolean} right - whether to append the arguments
 * @prop {Boolean} insertOptions - whether to pass an empty object as the first arg automatically
 * @prop {Boolean} hidden - make the property non-enumerable
 * @prop {Boolean} configurable - make the property non-configurable
 */

/**
 * @param {Object} target - an object to extend
 * @param {Mixin} methods - an object of functions that will be applied to the target
 * @param {MixinOptions} options - options for the mixin attributes
 */

function applyInterface(target) {
  var methods = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var _options$scope = options.scope,
      scope = _options$scope === void 0 ? target : _options$scope,
      _options$transformKey = options.transformKeys,
      transformKeys = _options$transformKey === void 0 ? true : _options$transformKey,
      _options$safe = options.safe,
      safe = _options$safe === void 0 ? true : _options$safe,
      _options$hidden = options.hidden,
      hidden = _options$hidden === void 0 ? false : _options$hidden,
      _options$configurable = options.configurable,
      configurable = _options$configurable === void 0 ? true : _options$configurable;
  var i = methods.isInterface ? methods : createInterface(methods, _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_1___default()({
    scope: scope,
    transformKeys: transformKeys,
    safe: safe,
    hidden: hidden
  }, options));
  Object(lodash__WEBPACK_IMPORTED_MODULE_3__["mapValues"])(i, function (method, propName) {
    if (transformKeys && propName.indexOf('get') === 0) {
      ;
      (hidden ? hideGetter : getter)(target, transformKey(propName), method.bind(scope));
    } else if (transformKeys && propName.indexOf('lazy') === 0) {
      lazy(target, transformKey(propName), method.bind(scope));
    } else if (propName === 'isInterface') {// do nothing
    } else {
      defineProperty(target, propName, {
        configurable: configurable,
        enumerable: !hidden,
        value: method.bind(scope)
      });
    }
  });
  return target;
}
function mixinLodashMethods(target) {
  var l = lodashModules().lodashObject;
  Object.keys(l).forEach(function (method) {
    return hideProperty(target, method, Object(lodash__WEBPACK_IMPORTED_MODULE_3__["partial"])(l[method], target));
  });
  return target;
}
/**
 * Create a bunch of hidden or non-enumerable properties on an object.
 * Equivalent to calling Object.defineProperty with enumerable set to false.
 *
 * @param  {Object} target     The target object which will receive the properties
 * @param  {Object} properties =             {} a key/value pair of
 * @return {Object}            The target object
 */

function hideProperties(target) {
  var properties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  Object.keys(properties).forEach(function (propertyName) {
    hideGetter(target, propertyName, function () {
      return properties[propertyName];
    });
  });
  return target;
}
/**
 * Create a hidden getter property on the object.
 *
 * @param {Object} target  The target object to define the hidden getter
 * @param {String} name    The name of the property
 * @param {Function} fn      A function to call to return the desired value
 * @param {Object} options =             {} Additional options
 * @param {Object} options.scope The scope / binding for the function will be called in, defaults to target
 * @param {Array} options.args arguments that will be passed to the function

 * @return {Object}          Returns the target object
 */

function hideGetter(target, name, fn) {
  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

  if (typeof options === 'boolean') {
    options = {
      configurable: options
    };
  } else if (_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(options) === 'object') {
    options = _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_1___default()({
      configurable: true,
      scope: target,
      args: []
    }, options);
  } else {
    options = {};
  }

  if (typeof fn === 'function') {
    fn = lodash__WEBPACK_IMPORTED_MODULE_3__["partial"].apply(void 0, [fn].concat(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_2___default()(options.args || [])));
  }

  defineProperty(target, name, _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_1___default()({
    enumerable: false
  }, options, {
    get: function get() {
      return typeof fn === 'function' && options.call !== false ? fn.call(options.scope) : fn;
    }
  }));
  return target;
}
/**
 * creates a non enumerable property on the target object
 *
 * @name hideProperty
 * @param {Object} target the target object
 * @param {String} attributeName
 * @param {Function} function which returns a value
 * @param {Object} definePropertyOptions
 *
 */

function getter(target, name, fn) {
  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
  return hideGetter(target, name, fn, _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_1___default()({}, options, {
    enumerable: true
  }));
}
/**
 * creates a non enumerable property on the target object
 *
 * @name hideProperty
 * @param {Object} target the target object
 * @param {String} attributeName
 * @param {*} value
 * @param {Object} definePropertyOptions
 *
 */

function hideProperty(target, name, value) {
  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

  if (typeof options === 'boolean') {
    options = {
      configurable: options
    };
  } else if (_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(options) === 'object') {
    options = _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_1___default()({
      configurable: true
    }, options);
  } else {
    options = {};
  }

  defineProperty(target, name, _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_1___default()({}, options, {
    enumerable: false,
    value: value
  }));
  return target;
}
/**
 * @alias hideProperty
 */

var hide = hideProperty;
/**
 * Creates a lazy loading property on an object.
 *
 * @name lazy
 * @param {Object} target The target object to receive the lazy loader
 * @param {String} attribute The property name
 * @param {Function} fn The function that will be memoized
 * @param {Boolean} enumerable Whether to make the property enumerable when it is loaded
 * @return {Object} Returns the target object
 */

function lazy(target, attribute, fn) {
  var enumerable = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
  defineProperty(target, attribute, {
    configurable: true,
    enumerable: enumerable,
    get: function get() {
      delete target[attribute];

      if (enumerable) {
        var value = typeof fn === 'function' ? fn.call(target) : fn;
        defineProperty(target, attribute, {
          enumerable: true,
          configurable: true,
          value: value
        });
        return value;
      } else {
        var _value = typeof fn === 'function' ? fn.call(target) : fn;

        defineProperty(target, attribute, {
          enumerable: enumerable,
          configurable: true,
          value: _value
        });
        return _value;
      }
    }
  });
  return target;
}
var createEntity = function createEntity() {
  var object = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
    args[_key2 - 1] = arguments[_key2];
  }

  return mixinPropertyUtils.apply(void 0, [Object(lodash__WEBPACK_IMPORTED_MODULE_3__["cloneDeep"])(object)].concat(args));
};
var hashObject = __webpack_require__(361);
var objectMethods = ['assign', 'assignIn', 'assignInWith', 'assignWith', 'at', 'create', 'defaults', 'defaultsDeep', 'entries', 'entriesIn', 'extend', 'extendWith', 'findKey', 'findLastKey', 'forIn', 'forInRight', 'forOwn', 'forOwnRight', 'functions', 'functionsIn', 'get', 'has', 'hasIn', 'invert', 'invertBy', 'invoke', 'keys', 'keysIn', 'mapKeys', 'mapValues', 'merge', 'mergeWith', 'omit', 'omitBy', 'pick', 'pickBy', 'result', 'set', 'setWith', 'toPairs', 'toPairsIn', 'transform', 'unset', 'update', 'updateWith', 'values', 'valuesIn'];
var arrayMethods = ['chunk', 'compact', 'concat', 'difference', 'differenceBy', 'differenceWith', 'drop', 'dropRight', 'dropRightWhile', 'dropWhile', 'fill', 'findIndex', 'findLastIndex', 'first', 'flatten', 'flattenDeep', 'flattenDepth', 'fromPairs', 'head', 'indexOf', 'initial', 'intersection', 'intersectionBy', 'intersectionWith', 'join', 'last', 'lastIndexOf', 'nth', 'pull', 'pullAll', 'pullAllBy', 'pullAllWith', 'pullAt', 'remove', 'reverse', 'slice', 'sortedIndex', 'sortedIndexBy', 'sortedIndexOf', 'sortedLastIndex', 'sortedLastIndexBy', 'sortedLastIndexOf', 'sortedUniq', 'sortedUniqBy', 'tail', 'take', 'takeRight', 'takeRightWhile', 'takeWhile', 'union', 'unionBy', 'unionWith', 'uniq', 'uniqBy', 'uniqWith', 'unzip', 'unzipWith', 'without', 'xor', 'xorBy', 'xorWith', 'zip', 'zipObject', 'zipObjectDeep', 'zipWith'];
var collectionMethods = ['countBy', 'each', 'eachRight', 'every', 'filter', 'find', 'findLast', 'flatMap', 'flatMapDeep', 'flatMapDepth', 'forEach', 'forEachRight', 'groupBy', 'includes', 'invokeMap', 'keyBy', 'map', 'orderBy', 'partition', 'reduce', 'reduceRight', 'reject', 'sample', 'sampleSize', 'shuffle', 'size', 'some', 'sortBy'];
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(58)))

/***/ }),
/* 5 */
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self // eslint-disable-next-line no-new-func
: Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef

/***/ }),
/* 6 */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(8);

module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};

/***/ }),
/* 8 */
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};

/***/ }),
/* 9 */
/***/ (function(module, exports) {

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

module.exports = _classCallCheck;

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(352);


/***/ }),
/* 11 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: /Users/jon/Projects/@skypager/src/runtime/node_modules/@babel/runtime/helpers/construct.js
var construct = __webpack_require__(59);
var construct_default = /*#__PURE__*/__webpack_require__.n(construct);

// EXTERNAL MODULE: /Users/jon/Projects/@skypager/src/runtime/node_modules/@babel/runtime/helpers/objectSpread.js
var objectSpread = __webpack_require__(3);
var objectSpread_default = /*#__PURE__*/__webpack_require__.n(objectSpread);

// EXTERNAL MODULE: /Users/jon/Projects/@skypager/src/runtime/node_modules/@babel/runtime/helpers/toConsumableArray.js
var toConsumableArray = __webpack_require__(15);
var toConsumableArray_default = /*#__PURE__*/__webpack_require__.n(toConsumableArray);

// EXTERNAL MODULE: /Users/jon/Projects/@skypager/src/runtime/node_modules/@babel/runtime/helpers/typeof.js
var helpers_typeof = __webpack_require__(18);
var typeof_default = /*#__PURE__*/__webpack_require__.n(helpers_typeof);

// EXTERNAL MODULE: /Users/jon/Projects/@skypager/src/runtime/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__(10);
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: /Users/jon/Projects/@skypager/src/runtime/node_modules/@babel/runtime/helpers/asyncToGenerator.js
var asyncToGenerator = __webpack_require__(25);
var asyncToGenerator_default = /*#__PURE__*/__webpack_require__.n(asyncToGenerator);

// EXTERNAL MODULE: /Users/jon/Projects/@skypager/src/runtime/node_modules/@babel/runtime/helpers/objectWithoutProperties.js
var objectWithoutProperties = __webpack_require__(163);
var objectWithoutProperties_default = /*#__PURE__*/__webpack_require__.n(objectWithoutProperties);

// EXTERNAL MODULE: /Users/jon/Projects/@skypager/src/runtime/node_modules/@babel/runtime/helpers/createClass.js
var createClass = __webpack_require__(14);
var createClass_default = /*#__PURE__*/__webpack_require__.n(createClass);

// EXTERNAL MODULE: /Users/jon/Projects/@skypager/src/runtime/node_modules/@babel/runtime/helpers/defineProperty.js
var defineProperty = __webpack_require__(2);
var defineProperty_default = /*#__PURE__*/__webpack_require__.n(defineProperty);

// EXTERNAL MODULE: /Users/jon/Projects/@skypager/src/runtime/node_modules/@babel/runtime/helpers/classCallCheck.js
var classCallCheck = __webpack_require__(9);
var classCallCheck_default = /*#__PURE__*/__webpack_require__.n(classCallCheck);

// EXTERNAL MODULE: /Users/jon/Projects/@skypager/src/runtime/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js
var possibleConstructorReturn = __webpack_require__(22);
var possibleConstructorReturn_default = /*#__PURE__*/__webpack_require__.n(possibleConstructorReturn);

// EXTERNAL MODULE: /Users/jon/Projects/@skypager/src/runtime/node_modules/@babel/runtime/helpers/getPrototypeOf.js
var getPrototypeOf = __webpack_require__(21);
var getPrototypeOf_default = /*#__PURE__*/__webpack_require__.n(getPrototypeOf);

// EXTERNAL MODULE: /Users/jon/Projects/@skypager/src/runtime/node_modules/@babel/runtime/helpers/inherits.js
var inherits = __webpack_require__(23);
var inherits_default = /*#__PURE__*/__webpack_require__.n(inherits);

// EXTERNAL MODULE: /Users/jon/Projects/@skypager/src/runtime/node_modules/@babel/runtime/helpers/wrapNativeSuper.js
var wrapNativeSuper = __webpack_require__(78);
var wrapNativeSuper_default = /*#__PURE__*/__webpack_require__.n(wrapNativeSuper);

// EXTERNAL MODULE: /Users/jon/Projects/@skypager/node_modules/lodash/lodash.js
var lodash = __webpack_require__(0);
var lodash_default = /*#__PURE__*/__webpack_require__.n(lodash);

// EXTERNAL MODULE: /Users/jon/Projects/@skypager/src/runtime/lib/es/utils/properties.js
var utils_properties = __webpack_require__(4);

// EXTERNAL MODULE: /Users/jon/Projects/@skypager/src/runtime/lib/es/utils/emitter.js + 1 modules
var emitter = __webpack_require__(62);

// EXTERNAL MODULE: /Users/jon/Projects/@skypager/src/runtime/lib/es/utils/string.js + 1 modules
var string = __webpack_require__(12);

// EXTERNAL MODULE: /Users/jon/Projects/@skypager/src/runtime/node_modules/@babel/runtime/helpers/assertThisInitialized.js
var assertThisInitialized = __webpack_require__(43);
var assertThisInitialized_default = /*#__PURE__*/__webpack_require__.n(assertThisInitialized);

// EXTERNAL MODULE: /Users/jon/Projects/@skypager/src/runtime/node_modules/@babel/runtime/helpers/defineEnumerableProperties.js
var defineEnumerableProperties = __webpack_require__(164);
var defineEnumerableProperties_default = /*#__PURE__*/__webpack_require__.n(defineEnumerableProperties);

// EXTERNAL MODULE: /Users/jon/Projects/@skypager/src/runtime/node_modules/@babel/runtime/helpers/slicedToArray.js
var slicedToArray = __webpack_require__(60);
var slicedToArray_default = /*#__PURE__*/__webpack_require__.n(slicedToArray);

// CONCATENATED MODULE: /Users/jon/Projects/@skypager/src/runtime/lib/es/utils/query.js

var isRegex = lodash["isRegExp"];
var equals = lodash["eq"];

var query_not_equals = function not_equals() {
  return !lodash["eq"].apply(void 0, arguments);
};

var query_neq = function neq() {
  return !lodash["eq"].apply(void 0, arguments);
};

var operators = {
  lt: lodash["lt"],
  gt: lodash["gt"],
  gte: lodash["gte"],
  lte: lodash["lte"],
  eq: lodash["eq"],
  neq: query_neq,
  equals: equals,
  not_equals: query_not_equals
  /**
   * Query an array using a parameters hash which allows for different operators,
   * and which can easily be serialized and sent over the wire
   *
   */

};
function query_query() {
  var nodeList = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  var params = arguments.length > 1 ? arguments[1] : undefined;
  var negate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  if (typeof nodeList.filter !== 'function') {
    return [];
  }

  if (typeof params === 'function') {
    return nodeList.filter(params);
  }

  var items = nodeList || [];
  return items.filter(function (node) {
    var matchesParam = Object.keys(params).every(function (key) {
      var param = params[key];
      var value = Object(lodash["result"])(node, key);

      if (isRegex(param) && param.test(value)) {
        return true;
      }

      if (typeof param === 'string' && value === param) {
        return true;
      }

      if (typeof param === 'number' && value === param) {
        return true;
      } // treat normal arrays to search for some exact matches


      if (Object(lodash["isArray"])(param) && (Object(lodash["isString"])(value) || Object(lodash["isNumber"])(value))) {
        return Object(lodash["some"])(param, function (val) {
          return val === value;
        });
      }

      if (Object(lodash["isObject"])(param) && (param.value || param.val) && (param.op || param.operator)) {
        return testWithOperator(param, value);
      }

      if (Object(lodash["isObject"])(param) && Object(lodash["isObject"])(value)) {
        return Object(lodash["isMatch"])(value, param);
      }
    });
    return negate ? !matchesParam : matchesParam;
  });
}
/* harmony default export */ var utils_query = (query_query);
function testWithOperator(param, testValue) {
  var operator = param.operator || param.op;
  var checkValue = param.value || param.val;
  var testFn = operators[operator] || lodash["isEqual"];
  return testFn(testValue, checkValue);
}
// CONCATENATED MODULE: /Users/jon/Projects/@skypager/src/runtime/lib/es/registries/registry.js



var registry_assign = Object.assign,
    getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors,
    registry_keys = Object.keys;
var descriptors = getOwnPropertyDescriptors;
function create(host, propKey) {
  var members = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var cacheObject = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
  var cacheKey = "_".concat(propKey);

  if (!host[cacheKey]) {
    Object(utils_properties["hideProperty"])(host, cacheKey, new Map());
  }

  var registryMap = host[cacheKey];
  Object.entries(members).forEach(function (_ref) {
    var _ref2 = slicedToArray_default()(_ref, 2),
        key = _ref2[0],
        value = _ref2[1];

    registryMap.set(key, value);
  });
  Object.entries(cacheObject).forEach(function (_ref3) {
    var _ref4 = slicedToArray_default()(_ref3, 2),
        key = _ref4[0],
        value = _ref4[1];

    registryMap.set(key, value);
  });
  var resolved = new Map();
  var registry = {
    get: function get(key) {
      return registryMap.get(key);
    },
    has: function has(key) {
      return registryMap.has(key);
    },
    remove: function remove(key) {
      registryMap["delete"](key);
      return registryMap;
    },

    get available() {
      return Array.from(registryMap.keys());
    },

    lookup: function lookup(id) {
      var val = registryMap.get(id);

      if (resolved.has(id)) {
        var found = registryMap.get(id);
        return found;
      }

      if (typeof val === 'function' && !resolved.has(id)) {
        var newVal = val();
        resolved.set(id, true);
        registryMap.set(id, newVal);
        val = newVal;
      }

      return val;
    },
    register: function register(id, value) {
      resolved["delete"](id);
      registryMap.set(id, value);
      return value;
    }
  };
  Object(utils_properties["hideGetter"])(host, propKey, function () {
    return registry;
  });
  return registry;
}
/* harmony default export */ var registries_registry = (create);
// CONCATENATED MODULE: /Users/jon/Projects/@skypager/src/runtime/lib/es/utils/path-to-regexp.js

/* harmony default export */ var path_to_regexp = (pathToRegexp);

/**
 * The main path matching regexp utility.
 *
 * @type {RegExp}
 */

var PATH_REGEXP = new RegExp([// Match escaped characters that would otherwise appear in future matches.
// This allows the user to escape special characters that won't transform.
'(\\\\.)', // Match Express-style parameters and un-named parameters with a prefix
// and optional suffixes. Matches appear as:
//
// "/:test(\\d+)?" => ["/", "test", "\d+", undefined, "?", undefined]
// "/route(\\d+)"  => [undefined, undefined, undefined, "\d+", undefined, undefined]
// "/*"            => ["/", undefined, undefined, undefined, undefined, "*"]
'([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))'].join('|'), 'g');
/**
 * Parse a string for the raw tokens.
 *
 * @param  {string}  str
 * @param  {Object=} options
 * @return {!Array}
 */

function parse(str, options) {
  var tokens = [];
  var key = 0;
  var index = 0;
  var path = '';
  var defaultDelimiter = options && options.delimiter || '/';
  var res;

  while ((res = PATH_REGEXP.exec(str)) != null) {
    var m = res[0];
    var escaped = res[1];
    var offset = res.index;
    path += str.slice(index, offset);
    index = offset + m.length; // Ignore already escaped sequences.

    if (escaped) {
      path += escaped[1];
      continue;
    }

    var next = str[index];
    var prefix = res[2];
    var name = res[3];
    var capture = res[4];
    var group = res[5];
    var modifier = res[6];
    var asterisk = res[7]; // Push the current path onto the tokens.

    if (path) {
      tokens.push(path);
      path = '';
    }

    var partial = prefix != null && next != null && next !== prefix;
    var repeat = modifier === '+' || modifier === '*';
    var optional = modifier === '?' || modifier === '*';
    var delimiter = res[2] || defaultDelimiter;
    var pattern = capture || group;
    tokens.push({
      name: name || key++,
      prefix: prefix || '',
      delimiter: delimiter,
      optional: optional,
      repeat: repeat,
      partial: partial,
      asterisk: !!asterisk,
      pattern: pattern ? escapeGroup(pattern) : asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?'
    });
  } // Match any characters still remaining.


  if (index < str.length) {
    path += str.substr(index);
  } // If the path exists, push it onto the end.


  if (path) {
    tokens.push(path);
  }

  return tokens;
}
/**
 * Compile a string to a template function for the path.
 *
 * @param  {string}             str
 * @param  {Object=}            options
 * @return {!function(Object=, Object=)}
 */


function compile(str, options) {
  return tokensToFunction(parse(str, options));
}
/**
 * Prettier encoding of URI path segments.
 *
 * @param  {string}
 * @return {string}
 */


function encodeURIComponentPretty(str) {
  return encodeURI(str).replace(/[\/?#]/g, function (c) {
    return '%' + c.charCodeAt(0).toString(16).toUpperCase();
  });
}
/**
 * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.
 *
 * @param  {string}
 * @return {string}
 */


function encodeAsterisk(str) {
  return encodeURI(str).replace(/[?#]/g, function (c) {
    return '%' + c.charCodeAt(0).toString(16).toUpperCase();
  });
}
/**
 * Expose a method for transforming tokens into the path function.
 */


function tokensToFunction(tokens) {
  // Compile all the tokens into regexps.
  var matches = new Array(tokens.length); // Compile all the patterns before compilation.

  for (var i = 0; i < tokens.length; i++) {
    if (typeof_default()(tokens[i]) === 'object') {
      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');
    }
  }

  return function (obj, opts) {
    var path = '';
    var data = obj || {};
    var options = opts || {};
    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;

    for (var i = 0; i < tokens.length; i++) {
      var token = tokens[i];

      if (typeof token === 'string') {
        path += token;
        continue;
      }

      var value = data[token.name];
      var segment;

      if (value == null) {
        if (token.optional) {
          // Prepend partial segment prefixes.
          if (token.partial) {
            path += token.prefix;
          }

          continue;
        } else {
          throw new TypeError('Expected "' + token.name + '" to be defined');
        }
      }

      if (Array.isArray(value)) {
        if (!token.repeat) {
          throw new TypeError('Expected "' + token.name + '" to not repeat, but received `' + JSON.stringify(value) + '`');
        }

        if (value.length === 0) {
          if (token.optional) {
            continue;
          } else {
            throw new TypeError('Expected "' + token.name + '" to not be empty');
          }
        }

        for (var j = 0; j < value.length; j++) {
          segment = encode(value[j]);

          if (!matches[i].test(segment)) {
            throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '", but received `' + JSON.stringify(segment) + '`');
          }

          path += (j === 0 ? token.prefix : token.delimiter) + segment;
        }

        continue;
      }

      segment = token.asterisk ? encodeAsterisk(value) : encode(value);

      if (!matches[i].test(segment)) {
        throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"');
      }

      path += token.prefix + segment;
    }

    return path;
  };
}
/**
 * Escape a regular expression string.
 *
 * @param  {string} str
 * @return {string}
 */


function escapeString(str) {
  return str.replace(/([.+*?=^!:${}()[\]|\/\\])/g, '\\$1');
}
/**
 * Escape the capturing group by escaping special characters and meaning.
 *
 * @param  {string} group
 * @return {string}
 */


function escapeGroup(group) {
  return group.replace(/([=!:$\/()])/g, '\\$1');
}
/**
 * Attach the keys as a property of the regexp.
 *
 * @param  {!RegExp} re
 * @param  {Array}   keys
 * @return {!RegExp}
 */


function attachKeys(re, keys) {
  re.keys = keys;
  return re;
}
/**
 * Get the flags for a regexp from the options.
 *
 * @param  {Object} options
 * @return {string}
 */


function flags(options) {
  return options.sensitive ? '' : 'i';
}
/**
 * Pull out keys from a regexp.
 *
 * @param  {!RegExp} path
 * @param  {!Array}  keys
 * @return {!RegExp}
 */


function regexpToRegexp(path, keys) {
  // Use a negative lookahead to match only capturing groups.
  var groups = path.source.match(/\((?!\?)/g);

  if (groups) {
    for (var i = 0; i < groups.length; i++) {
      keys.push({
        name: i,
        prefix: null,
        delimiter: null,
        optional: false,
        repeat: false,
        partial: false,
        asterisk: false,
        pattern: null
      });
    }
  }

  return attachKeys(path, keys);
}
/**
 * Transform an array into a regexp.
 *
 * @param  {!Array}  path
 * @param  {Array}   keys
 * @param  {!Object} options
 * @return {!RegExp}
 */


function arrayToRegexp(path, keys, options) {
  var parts = [];

  for (var i = 0; i < path.length; i++) {
    parts.push(pathToRegexp(path[i], keys, options).source);
  }

  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));
  return attachKeys(regexp, keys);
}
/**
 * Create a path regexp from string input.
 *
 * @param  {string}  path
 * @param  {!Array}  keys
 * @param  {!Object} options
 * @return {!RegExp}
 */


function stringToRegexp(path, keys, options) {
  return tokensToRegExp(parse(path, options), keys, options);
}
/**
 * Expose a function for taking tokens and returning a RegExp.
 *
 * @param  {!Array}          tokens
 * @param  {(Array|Object)=} keys
 * @param  {Object=}         options
 * @return {!RegExp}
 */


function tokensToRegExp(tokens, keys, options) {
  if (!Array.isArray(keys)) {
    options
    /** @type {!Object} */
    = keys || options;
    keys = [];
  }

  options = options || {};
  var strict = options.strict;
  var end = options.end !== false;
  var route = ''; // Iterate over the tokens and create our regexp string.

  for (var i = 0; i < tokens.length; i++) {
    var token = tokens[i];

    if (typeof token === 'string') {
      route += escapeString(token);
    } else {
      var prefix = escapeString(token.prefix);
      var capture = '(?:' + token.pattern + ')';
      keys.push(token);

      if (token.repeat) {
        capture += '(?:' + prefix + capture + ')*';
      }

      if (token.optional) {
        if (!token.partial) {
          capture = '(?:' + prefix + '(' + capture + '))?';
        } else {
          capture = prefix + '(' + capture + ')?';
        }
      } else {
        capture = prefix + '(' + capture + ')';
      }

      route += capture;
    }
  }

  var delimiter = escapeString(options.delimiter || '/');
  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter; // In non-strict mode we allow a slash at the end of match. If the path to
  // match already ends with a slash, we remove it for consistency. The slash
  // is valid at the end of a path match, not in the middle. This is important
  // in non-ending mode, where "/test/" shouldn't match "/test//route".

  if (!strict) {
    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';
  }

  if (end) {
    route += '$';
  } else {
    // In non-ending mode, we need the capturing groups to match as much as
    // possible by using a positive lookahead to the end or next path segment.
    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';
  }

  return attachKeys(new RegExp('^' + route, flags(options)), keys);
}
/**
 * Normalize the given path string, returning a regular expression.
 *
 * An empty array can be passed in for the keys, which will hold the
 * placeholder key descriptions. For example, using `/user/:id`, `keys` will
 * look like name=id delimiter=/ optional=false repeat=false
 *
 * @param  {(string|RegExp|Array)} path
 * @param  {(Array|Object)=}       keys
 * @param  {Object=}               options
 * @return {!RegExp}
 */


function pathToRegexp(path, keys, options) {
  if (!Array.isArray(keys)) {
    options
    /** @type {!Object} */
    = keys || options;
    keys = [];
  }

  options = options || {};

  if (path instanceof RegExp) {
    return regexpToRegexp(path
    /** @type {!Array} */
    , keys);
  }

  if (Array.isArray(path)) {
    return arrayToRegexp(
    /** @type {!Array} */
    path
    /** @type {!Array} */
    , keys, options);
  }

  return stringToRegexp(
  /** @type {string} */
  path
  /** @type {!Array} */
  , keys, options);
}
// CONCATENATED MODULE: /Users/jon/Projects/@skypager/src/runtime/lib/es/registries/router.js



function router(host) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  options = objectSpread_default()({
    pathsGetter: 'available',
    pathProperty: 'toString',
    routerProperty: 'router',
    matcher: {}
  }, options);
  var _options = options,
      pathsGetter = _options.pathsGetter,
      pathProperty = _options.pathProperty,
      routerProperty = _options.routerProperty,
      matcher = _options.matcher;
  Object.defineProperty(host, routerProperty, {
    enumerable: false,
    configurable: false,
    get: function get() {
      return {
        filter: applyRoute,
        test: router_route,
        matcher: pathMatcher(matcher),
        get: function get(pattern) {
          var discard = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
          var pathsToTest = Object(lodash["result"])(host, pathsGetter, []).map(function (item) {
            return Object(lodash["result"])(item, pathProperty);
          });
          return applyRoute(pattern, pathsToTest, {
            discard: discard
          });
        }
      };
    }
  });
  return Object(lodash["get"])(host, options.routerProperty);
}
/* harmony default export */ var registries_router = (router);
function router_route(pattern) {
  var matcher = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return pathMatcher(matcher)(pattern);
}
function applyRoute() {
  var pattern = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '*';
  var pathsToTest = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  if (typeof pathsToTest === 'function') {
    pathsToTest = pathsToTest(options.matcher || {});
  }

  if (typeof pathsToTest === 'string') {
    pathsToTest = [pathsToTest];
  }

  var matcher = router_route(pattern);
  var matches = [];
  var failures = [];
  pathsToTest.forEach(function (path, index) {
    var matchResult = matcher(path);

    if (matchResult === false) {
      failures.push([path, index]);
    } else {
      matches.push({
        result: matchResult,
        index: index,
        path: path,
        pattern: pattern
      });
    }
  });

  if (options.discard) {
    return matches;
  }

  return {
    failures: failures,
    matches: matches,
    pattern: pattern,
    pathsToTest: pathsToTest
  };
}
/*eslint-disable*/

function pathMatcher() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  /**
   * String decoder
   * @param {String} str
   * @returns {*}
   */

  function decodeUri(str) {
    try {
      str = decodeURIComponent(str);
    } catch (e) {
      throw new Error('Cannot decodeURIComponent: ' + str);
    }

    return str;
  }

  return function (route) {
    var keys = [],
        reg = path_to_regexp.call(this, [route, keys, options]);
    return function (route, params) {
      var res = reg.exec(route),
          params = params || {};
      if (!res) return false;

      for (var i = 1, l = res.length; i < l; i++) {
        if (res[i] === undefined) continue;
        params[keys[i - 1].name] = decodeUri(res[i]);
      }

      return params;
    };
  };
}
// CONCATENATED MODULE: /Users/jon/Projects/@skypager/src/runtime/lib/es/registries/simple.js










var pickBy = lodash_default.a.pickBy,
    mapValues = lodash_default.a.mapValues,
    isFunction = lodash_default.a.isFunction,
    isObject = lodash_default.a.isObject,
    simple_has = lodash_default.a.has,
    _get = lodash_default.a.get,
    simple_pick = lodash_default.a.pick;
var simple_SimpleRegistry =
/*#__PURE__*/
function () {
  createClass_default()(SimpleRegistry, null, [{
    key: "attach",

    /**
     * Attach a registry to a host
     *
     * @example
     * 	SimpleRegistry.attach('components').to(host)
     */
    value: function attach(name) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var cache = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      return {
        to: function to(target) {
          registries_registry(target, name, options, cache);
          return _get(target, name);
        }
      };
    }
  }, {
    key: "create",
    value: function create(name) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var cache = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      return new this(name, options, cache = {});
    }
    /**
     * Create a new Simple Registry
     * @param  {String} name   The name of this registry
     * @param  {Object} options =             {} Options
     * @param  {Function} options.init a function which will be called with the registry after it is initialize.
     * @param  {Function} options.fallback called whenever an invalid lookup request returns
     * @param  {Boolean} options.useDefaultExport - when a component is found, check to see if there is a default export and if so use that
     *
     * @return {SimpleRegistry}        The SimpleRegistry
     */

  }]);

  function SimpleRegistry(name) {
    var _this = this;

    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var cache = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

    classCallCheck_default()(this, SimpleRegistry);

    this.name = name;
    Object(utils_properties["enhanceObject"])(this, lodash_default.a);
    simple_hide(this, 'options', objectSpread_default()({
      router: {}
    }, options, {
      name: name
    }));
    simple_hide(this, 'createRouter', function () {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      return registries_router(_this, options);
    });
    simple_hide(this, 'internalAliases', {});
    simple_hide(this, 'internalRegistries', {});
    this.createRouter();
    this.attach('registry', cache);

    if (isFunction(options.init)) {
      options.init.call(this, this, options);
    }

    if (isFunction(options.componentWillRegister)) {
      this.componentWillRegister = options.componentWillRegister.bind(this);
    }

    if (isFunction(options.componentWasFound)) {
      this.componentWasFound = options.componentWasFound.bind(this);
    }

    if (isFunction(options.fallback)) {
      this.fallback = options.fallback.bind(this);
    } else if (isObject(options.fallback) && isFunction(options.fallback.lookup)) {
      this.fallback = function (lookupId) {
        return options.fallback.lookup(lookupId);
      };
    }

    if (isFunction(options.wrapper)) {
      this.wrapResult = options.wrapper.bind(this);
    }
  }

  createClass_default()(SimpleRegistry, [{
    key: "query",
    value: function query() {
      var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      return utils_query(items, params);
    }
  }, {
    key: "add",
    value: function add(registry) {
      var _this2 = this;

      simple_has(registry, 'available') && simple_has(registry, 'lookup') ? registry.available.forEach(function (key) {
        return _this2.register(key, function () {
          return registry.lookup(key);
        });
      }) : Object.keys(registry).forEach(function (key) {
        return _this2.register(key, function () {
          return registry[key];
        });
      });
      return this;
    }
  }, {
    key: "convertToRequireContext",
    value: function convertToRequireContext() {
      var object = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this;
      var fn = this.lookup.bind(this);
      return Object.assign(fn, {
        resolve: function resolve(id) {
          var resolved = simple_has(object, 'checkKey') ? object.checkKey.call(object, id) : simple_has(object, id) && object[id];

          if (!resolved) {
            throw new Error("could not find ".concat(id, " in context"));
          }

          return resolved;
        },
        keys: function keys() {
          return _get(object, 'available', Object.keys(object));
        }
      });
    }
  }, {
    key: "findAliases",
    value: function findAliases(key) {
      return Object.keys(pickBy(this.internalAliases, function (v, k) {
        return k === key || v === key;
      }));
    }
    /**
     * Register a component with the registry
     *
     * @param {String} componentId
     * @param {Function} componentFn
     * @param {Object} options
     * @memberof SimpleRegistry
     */

  }, {
    key: "register",
    value: function register() {
      return this._register.apply(this, arguments);
    }
  }, {
    key: "_register",
    value: function _register(componentId, componentFn) {
      var _this3 = this;

      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var _options$formatId = options.formatId,
          formatId = _options$formatId === void 0 ? this.options.formatId : _options$formatId,
          _options$registryName = options.registryName,
          registryName = _options$registryName === void 0 ? 'registry' : _options$registryName,
          _options$namespace = options.namespace,
          namespace = _options$namespace === void 0 ? _get(this, 'options.namespace', '') : _options$namespace;

      if (typeof formatId === 'function') {
        componentId = formatId.call(this, componentId, componentFn, registryName) || componentId;
      }

      componentId = componentId.trim();

      var _this$componentWillRe = this.componentWillRegister(componentId, componentFn),
          _this$componentWillRe2 = slicedToArray_default()(_this$componentWillRe, 2),
          registryId = _this$componentWillRe2[0],
          componentEntry = _this$componentWillRe2[1];

      if (typeof options.alias === 'string') {
        this.alias(options.alias, registryId);
      }

      if (typeof this.options.alias === 'function') {
        var aliasMap = this.options.alias.call(this, registryId, componentFn, options);
        mapValues(aliasMap, function (realId, alias) {
          _this3.alias(alias, realId);
        });
      }

      if (typeof registryId !== 'string' && typeof componentEntry !== 'function') {
        this.componentRegistrationDidFail(componentId, componentFn, registryId, componentEntry);
        throw new Error('Component Registration Failed');
      }

      return this[registryName].register("".concat(namespace).concat(registryId), componentEntry);
    }
  }, {
    key: "alias",
    value: function alias(aliasId, realId) {
      this.internalAliases[aliasId] = realId;
      return this;
    }
  }, {
    key: "checkKey",
    value: function checkKey(componentId) {
      var registryName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'registry';

      if (this[registryName] && this[registryName].has(componentId)) {
        return componentId;
      } else if (simple_has(this.internalAliases, componentId)) {
        return _get(this, ['internalAliases', componentId]);
      } else {
        return false;
      }
    }
  }, {
    key: "childRegistries",
    value: function childRegistries() {
      return simple_pick(this, this.childRegistryNames);
    }
  }, {
    key: "lookupAll",
    value: function lookupAll(componentId) {
      return mapValues(pickBy(this.childRegistries(), function (reg, k) {
        return simple_has(reg, componentId);
      }), function (reg) {
        return _get(reg, componentId);
      });
    }
  }, {
    key: "lookup",
    value: function lookup(componentId) {
      var registryName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'registry';
      var lookupId = this.willLookupById(componentId) || "".concat(componentId);
      var realKey = this.checkKey(lookupId, registryName);
      var result = this[registryName] && this[registryName].lookup(realKey);
      return result ? this.componentWasFound(result, lookupId, componentId) : this.performFallbackLookup(lookupId, componentId);
    }
  }, {
    key: "findRawMember",
    value: function findRawMember(componentId) {
      var registryName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'registry';
      var lookupId = this.willLookupById(componentId) || "".concat(componentId);
      var result = this[registryName].get(lookupId);
      return result;
    }
  }, {
    key: "enhance",
    value: function enhance(componentId, enhancerFn) {
      var registryName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'registry';
      var useDefault = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
      var member = this.findRawMember(componentId, registryName);

      if (member) {
        this.register(componentId, typeof enhancerFn === 'function' ? enhancerFn(member) : Object.assign(member, enhancerFn));
      }

      return this;
    }
    /**
     * Creates a primitive registry interface and attaches it to this one.
     *
     * @param  {String} name - the name of the registry, and which property to assign it to
     * @param  {Object} options - an options hash for the registry primitive
     * @return {Registry}        the registry object
     */

  }, {
    key: "attach",
    value: function attach(name, options) {
      this.constructor.attach(name, options).to(this);
      this.internalRegistries[name] = name;
      return _get(this, name);
    }
    /**
     * Attach a group of child registries to this one.
     *
     * @param  {Object} map - an object whose keys are the registry name,
     *                      and whose values are the options for the registry create method
     *
     * @return {SimpleRegistry}    Returns this registry
     */

  }, {
    key: "attachAll",
    value: function attachAll(map) {
      var target = this;
      return mapValues(map, function (options, name) {
        return target.attach(name, options);
      });
    }
    /**
     * Intercepts an attempt to lookup a component by id, giving you an opportunity
     * to alter it if you like. Can be used for aliasing, logging, or whatever.
     * This function should return a component id that will be used to access the desired
     * object in the internal registry.
     *
     * @param  {String} requestedComponentId - the component id that is being looked up
     * @return {String} - the component id that will be used to perform the lookup.
     */

  }, {
    key: "willLookupById",
    value: function willLookupById(requestedComponentId) {
      return requestedComponentId;
    }
    /**
     * A Lifecycle hook called prior to a component being registered.
     * It should return an array that contains the actual componentId
     * that should be used, and a function which returns the desired component.
     *
     * By default it will just pass the arguments back, but this exists to be
     * overridden.
     *
     * @param  {String} componentId - the id of the component that was passed to register
     * @param  {Function} component - a function that will return the component that was registered
     * @return {Array} - the componentId and function that will actually be registered.
     */

  }, {
    key: "componentWillRegister",
    value: function componentWillRegister(componentId, component) {
      return [componentId, component];
    }
    /**
     * A hook that will get called whenever a component is successfully looked up.
     * This can be used to modify the returning object however you see fit.
     */

  }, {
    key: "componentWasFound",
    value: function componentWasFound(component, lookupId, requestedComponentId) {
      // eslint-disable-line no-unused-vars
      component = component["default"] && (this.options.useDefaultExport || this.options.useDefaultExports) ? component["default"] : component;
      return isFunction(this.wrapResult) ? this.wrapResult(component, lookupId, requestedComponentId) : component;
    }
  }, {
    key: "performFallbackLookup",
    value: function performFallbackLookup(lookupId) {
      if (!this.fallback) {
        return this.componentLookupFailed(lookupId);
      }

      var result = this.fallback(lookupId);
      return result ? this.componentWasFound(result, lookupId) : this.componentLookupFailed(lookupId);
    }
    /**
     * Handle a component lookup failure.
     */

  }, {
    key: "componentLookupFailed",
    value: function componentLookupFailed(lookupId) {
      if (!this.options.silenceFailures) {
        throw new Error("Component Lookup Failed: ".concat(lookupId, ".\n\nDid you mean one of the following?\n").concat(this.available.join('\n')));
      }
    }
  }, {
    key: "allMembers",
    value: function allMembers() {
      var reg = this;
      return this.available.reduce(function (memo, key) {
        var _objectSpread2, _mutatorMap;

        return objectSpread_default()({}, memo, (_objectSpread2 = {}, _mutatorMap = {}, _mutatorMap[key] = _mutatorMap[key] || {}, _mutatorMap[key].get = function () {
          return reg.lookup(key);
        }, defineEnumerableProperties_default()(_objectSpread2, _mutatorMap), _objectSpread2));
      }, {});
    }
  }, {
    key: "asRequireContext",
    get: function get() {
      return this.convertToRequireContext();
    }
    /**
     * Returns an array of the component ids this registry knows about.
     * @return {String[]} - an array of component ids
     */

  }, {
    key: "available",
    get: function get() {
      return _get(this, 'registry.available', []);
    }
  }, {
    key: "childRegistryNames",
    get: function get() {
      return Object.keys(this.internalRegistries);
    }
  }, {
    key: "all",
    get: function get() {
      return Object.values(this.allMembers());
    }
  }]);

  return SimpleRegistry;
}();
/* harmony default export */ var simple = (simple_SimpleRegistry);
var simple_create = function create() {
  return simple_SimpleRegistry.create.apply(simple_SimpleRegistry, arguments);
};

function simple_hide(t, p, value, configurable) {
  Object.defineProperty(t, p, {
    value: value,
    configurable: configurable,
    enumerable: false
  });
}
// CONCATENATED MODULE: /Users/jon/Projects/@skypager/src/runtime/lib/es/registries/directory.js









/**
 * The Directory is a searchable registry
 */

var directory_Directory =
/*#__PURE__*/
function (_SimpleDirectory) {
  inherits_default()(Directory, _SimpleDirectory);
  /**
   * Create a new Simple Registry
   * @param  {String} name   The name of this registry
   * @param  {Object} options =             {} Options
   * @param  {Function} options.init a function which will be called with the registry after it is initialize.
   * @param  {Function} options.fallback called whenever an invalid lookup request returns
   *
   * @param {String} route an express or path-to-regexp style route which turns the id into metadata
   * @return {SimpleRegistry}        The SimpleRegistry
   */


  function Directory(name) {
    var _this;

    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    classCallCheck_default()(this, Directory);

    if (!options.route) {
      options.route = ':id(.*)';
    }

    _this = possibleConstructorReturn_default()(this, getPrototypeOf_default()(Directory).call(this, name, options));

    if (options.api) {
      Object.keys(options.api).forEach(function (meth) {
        _this[meth] = options.api[meth].bind(assertThisInitialized_default()(_this));
      });
    }

    if (options.lookupMethod) {
      var me = assertThisInitialized_default()(_this);

      Object.assign(assertThisInitialized_default()(_this), defineProperty_default()({}, options.lookupMethod, me.lookup.bind(me)));
    }

    _this.attach('metadata', {
      fallback: function fallback(id) {
        return {
          notFound: true,
          id: id
        };
      }
    });

    return _this;
  }

  createClass_default()(Directory, [{
    key: "search",
    value: function search() {
      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var reg = this;
      var items = this.metadata.available.map(function (id) {
        return reg.meta(id);
      }).filter(function (r) {
        return !r.notFound;
      });
      return this.query(items, params);
    }
  }, {
    key: "meta",
    value: function meta(id) {
      var updateData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var result = this.metadata[id] || {};
      return this.metadata[id] = objectSpread_default()({}, result, this.testRoute(id) || {}, updateData);
    }
  }, {
    key: "applyRoute",
    value: function applyRoute(route) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      return this.router.get(route || this.options.route);
    }
  }, {
    key: "testRoute",
    value: function testRoute(path, route) {
      route = route || this.options.route;
      return this.router.test(route)(path);
    }
  }, {
    key: "register",
    value: function register(id, fn) {
      var _this2 = this;

      var metadata = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      this._register(id, fn);

      this.metadata.register(id, function () {
        return objectSpread_default()({}, metadata, {
          registryId: id
        }, _this2.testRoute(id) || {});
      });
      return this;
    }
  }]);

  return Directory;
}(simple);
/* harmony default export */ var directory = (directory_Directory);
var directory_create = function create() {
  return directory_Directory.create.apply(directory_Directory, arguments);
};
// CONCATENATED MODULE: /Users/jon/Projects/@skypager/src/runtime/lib/es/registries/context.js











var context_hide = function hide(o, p, value, configurable) {
  return Object.defineProperty(o, p, {
    value: value,
    configurable: configurable,
    enumerable: false
  });
};

var context_ContextRegistry =
/*#__PURE__*/
function (_Directory) {
  inherits_default()(ContextRegistry, _Directory);

  function ContextRegistry(name) {
    var _this;

    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    classCallCheck_default()(this, ContextRegistry);

    if (typeof_default()(name) === 'object') {
      options = name;
      name = options.name || options.context && options.context.id;
    }

    var webpackContext = options.context || options.req;
    delete options.context;
    delete options.req;
    _this = possibleConstructorReturn_default()(this, getPrototypeOf_default()(ContextRegistry).call(this, name, options));
    context_hide(assertThisInitialized_default()(_this), 'context', _this.wrapContext(webpackContext, objectSpread_default()({}, options, {
      namespace: _this.keyNamespace
    })));

    if (options.auto !== false) {
      _this.registerContextModules();
    }

    return _this;
  }

  createClass_default()(ContextRegistry, [{
    key: "isValidContext",
    value: function isValidContext(obj) {
      return typeof obj === 'function' && typeof obj.keys === 'function' && typeof obj.resolve === 'function';
    }
  }, {
    key: "add",
    value: function add(webpackContext) {
      var _this2 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      if (!this.isValidContext(webpackContext) && webpackContext.convertToRequireContext) {
        webpackContext = webpackContext.convertToRequireContext();
      } else if (typeof_default()(webpackContext) === 'object' && !webpackContext.prototype) {
        Object.keys(webpackContext).map(function (id) {
          return _this2.register(id, function () {
            return webpackContext[id];
          });
        });
        return this;
      }

      this.registerContextModules(this.wrapContext(webpackContext, objectSpread_default()({}, this.options, options)));
      return this;
    }
  }, {
    key: "registerContextModules",
    value: function registerContextModules() {
      var _this3 = this;

      var requireContext = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.context;
      var map = requireContext.idsMappedToKeys;
      requireContext.ids.forEach(function (id) {
        _this3.register(id, function () {
          return requireContext.load(id);
        }, objectSpread_default()({
          id: id
        }, requireContext.metaForKey(id), _this3.options));
      });
    }
  }, {
    key: "wrapContext",
    value: function wrapContext(webpackContext) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      return new context_RequireContext(webpackContext, objectSpread_default()({}, this.options, options));
    }
  }, {
    key: "keyNamespace",
    get: function get() {
      return this.options.keyNamespace || '';
    }
  }, {
    key: "loaded",
    get: function get() {
      this.registerContextModules();
      return this;
    }
  }]);

  return ContextRegistry;
}(directory);
/* harmony default export */ var registries_context = (context_ContextRegistry);
var context_create = function create() {
  return context_ContextRegistry.create.apply(context_ContextRegistry, arguments);
};
/**
 * Wraps a particular type of webpack require context with a custom
 * API for using the modules it contains for their intended purpose.
 */

var context_RequireContext =
/*#__PURE__*/
function () {
  /**
   * Wrap one of webpack's require.context objects in your own custom object to provide
   * a DSL for working with that group of modules.
   *
   * @param {Context} webpackRequireContext - the result of a require.context call made inside a webpack compilation
   * @param {Object} options
   * @param {String} options.prefix - a prefix that will be discarded when coming up with a humanized id for the module
   */
  function RequireContext(webpackRequireContext) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    classCallCheck_default()(this, RequireContext);

    if (webpackRequireContext && typeof webpackRequireContext !== 'function' && webpackRequireContext.asRequireContext) {
      webpackRequireContext = webpackRequireContext.asRequireContext;
    }

    if (typeof webpackRequireContext !== 'function') {
      throw "You must pass a the output of webpack's require.context() call.  It should be a function which has a keys method that returns an array of module ids.";
    }

    if (typeof webpackRequireContext.keys !== 'function') {
      throw "You must pass a the output of webpack's require.context() call.  It should be a function which has a keys method that returns an array of module ids.";
    }

    context_hide(this, 'options', options);
    context_hide(this, 'req', webpackRequireContext);
  }

  createClass_default()(RequireContext, [{
    key: "metaForKey",
    value: function metaForKey(id) {
      var key = this.idsMappedToKeys[id];
      return {
        id: id,
        key: key,
        resolved: this.req.resolve(key),
        sourceModule: this.sourceModule
      };
    }
  }, {
    key: "load",
    value: function load(id) {
      var key = this.idsMappedToKeys[id];
      return this.req(key);
    } // prefix the id

  }, {
    key: "sourceModule",
    get: function get() {
      return this.options.sourceModule || {};
    }
  }, {
    key: "namespace",
    get: function get() {
      return this.options.namespace || '';
    } // remove this value from the require context key

  }, {
    key: "prefix",
    get: function get() {
      return this.options.prefix ? this.options.prefix : '';
    }
  }, {
    key: "keys",
    get: function get() {
      return this.req.keys();
    }
  }, {
    key: "resolved",
    get: function get() {}
  }, {
    key: "ids",
    get: function get() {
      return Object.keys(this.idsMappedToKeys);
    }
  }, {
    key: "idsMappedToKeys",
    get: function get() {
      var _this4 = this;

      return this.keys.reduce(function (memo, key) {
        return objectSpread_default()({}, memo, defineProperty_default()({}, "".concat(key.replace(/^\.\//, _this4.namespace).replace(_this4.prefix, '').replace(/\.\w+$/, '')), key));
      }, {});
    }
  }]);

  return RequireContext;
}();
// EXTERNAL MODULE: /Users/jon/Projects/@skypager/node_modules/uuid/index.js
var uuid = __webpack_require__(91);
var uuid_default = /*#__PURE__*/__webpack_require__.n(uuid);

// CONCATENATED MODULE: /Users/jon/Projects/@skypager/src/runtime/lib/es/helper.js
/* unused harmony export ContextError */
/* unused harmony export HostError */
/* unused harmony export OptionsError */
/* unused harmony export ProviderError */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return helper_Helper; });
/* unused harmony export createMockContext */
/* unused harmony export registry */
/* unused harmony export registerHelper */
/* unused harmony export createContextRegistry */
/* unused harmony export attach */
/* unused harmony export _attach */
/* unused concated harmony import ContextRegistry */




















/**
 * @typedef { import("./runtime").Runtime } Runtime
 */

/**
 * @typedef { import("./utils/properties").Mixin } Mixin
 */

/**
 * @typedef { import("./utils/properties").MixinOptions } MixinOptions
 */

/**
 * @typedef {Object<string,*>} HelperAttachOptions
 * @property {String} lookupProp the property name to use for the factory function that will be attached to the Helper's host.
 * @property {String} registryProp the property name to use for the registry that will know about each of the Helpers available.
 * @property {ContextRegistry} registry an instance of a registry that will contain references to each of the Helper modules.
 * @property {Boolean} cacheHelper whether to cache the helper instance.
 * @property {Boolean} isCacheable whether to cache the helper instance.
 */

var flatten = lodash_default.a.flatten,
    castArray = lodash_default.a.castArray,
    isUndefined = lodash_default.a.isUndefined,
    partialRight = lodash_default.a.partialRight,
    helper_mapValues = lodash_default.a.mapValues,
    helper_pickBy = lodash_default.a.pickBy,
    helper_isFunction = lodash_default.a.isFunction,
    omitBy = lodash_default.a.omitBy,
    defaults = lodash_default.a.defaults,
    helper_defaultsDeep = lodash_default.a.defaultsDeep,
    helper_omit = lodash_default.a.omit,
    helper_result = lodash_default.a.result,
    _keys = lodash_default.a.keys,
    helper_has = lodash_default.a.has;
var req = createMockContext({});
var REGISTRY;
REGISTRY = REGISTRY || new registries_context('helpers', {
  context: req,
  componentWillRegister: function componentWillRegister() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return args;
  }
});
var helper_ContextError =
/*#__PURE__*/
function (_Error) {
  inherits_default()(ContextError, _Error);

  function ContextError() {
    classCallCheck_default()(this, ContextError);

    return possibleConstructorReturn_default()(this, getPrototypeOf_default()(ContextError).apply(this, arguments));
  }

  return ContextError;
}(wrapNativeSuper_default()(Error));
var helper_HostError =
/*#__PURE__*/
function (_Error2) {
  inherits_default()(HostError, _Error2);

  function HostError() {
    classCallCheck_default()(this, HostError);

    return possibleConstructorReturn_default()(this, getPrototypeOf_default()(HostError).apply(this, arguments));
  }

  return HostError;
}(wrapNativeSuper_default()(Error));
var helper_OptionsError =
/*#__PURE__*/
function (_Error3) {
  inherits_default()(OptionsError, _Error3);

  function OptionsError() {
    classCallCheck_default()(this, OptionsError);

    return possibleConstructorReturn_default()(this, getPrototypeOf_default()(OptionsError).apply(this, arguments));
  }

  return OptionsError;
}(wrapNativeSuper_default()(Error));
var helper_ProviderError =
/*#__PURE__*/
function (_Error4) {
  inherits_default()(ProviderError, _Error4);

  function ProviderError() {
    classCallCheck_default()(this, ProviderError);

    return possibleConstructorReturn_default()(this, getPrototypeOf_default()(ProviderError).apply(this, arguments));
  }

  return ProviderError;
}(wrapNativeSuper_default()(Error));
/**
 * @class       Helper
 * @classdesc   Helpers act as a registry for specific types of Javascript modules
 *              that are to be made available to a project runtime.  Helpers exist to provide
 *              common behavior, interfaces, and life cycle events and hooks for all types of things
 *              such as servers, compilers, commands, or anything else that can be categorized and grouped.
 *              Helpers are designed to be shared across multiple projects, and there are event Project Type helpers
 *              which exist to make specific types of helpers available to specific types of projects.
 */

var helper_Helper =
/*#__PURE__*/
function () {
  /**
   * @param {Object} options
   * @param {Object} [options.provider={}] the exports of module which is being wrapped
   * @param {String} [options.name] the name of the helper
   * @param {Boolean} [options.initialize] whether or not to run the initialize function, useful for testing
   */
  function Helper() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    classCallCheck_default()(this, Helper);

    defineProperty_default()(this, "isInitialized", false);

    Object(utils_properties["enhanceObject"])(this, {
      propUtils: false,
      includeLodashMethods: false,
      includeChain: false
    }, lodash_default.a);
    Object(emitter["a" /* attach */])(this);
    var runtime = context.runtime || context.host || context.project;
    var id = [runtime.id || this.registryName, this.name, Math.floor(new Date() / 100)].join(':');

    var _options$provider = options.provider,
        provider = _options$provider === void 0 ? {} : _options$provider,
        restOfOptions = objectWithoutProperties_default()(options, ["provider"]);

    this.hideProperties({
      _id: id,
      _runtime: runtime,
      _provider: provider,
      _context: context,
      _options: restOfOptions,
      _name: options.name,
      uuid: uuid_default()()
    });

    try {
      this.hideGetter("is".concat(this.constructor.helperName || this.constructor.name), function () {
        return true;
      });
    } catch (error) {}

    if (runtime.beforeHelperCreate) {
      runtime.beforeHelperCreate(this, options, context, this.constructor);
    }

    if (options.initialize !== false) {
      this.doInitialize();
    }
  }
  /**
   * This is a special property that provides a safe way of detecting if something is a class and subclasses Helper
   * @static
   * @readonly
   * @memberof Helper
   */


  createClass_default()(Helper, [{
    key: "lazy",

    /**
     * Creates a lazy loading property on an object.
     *
     * @param {String} attribute The property name
     * @param {Function} fn The function that will be memoized
     * @param {Boolean} enumerable Whether to make the property enumerable when it is loaded
     * @return {Helper#}
     */
    value: function lazy(attribute, fn) {
      var enumerable = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
      return Object(utils_properties["propertyUtils"])(this).lazy(attribute, fn, enumerable);
    }
    /**
     * creates a non enumerable property on the target object
     *
     * @param {String} attribute
     * @param {*} value
     * @param {Object} options
     * @memberof Helper#
     *
     */

  }, {
    key: "hide",
    value: function hide(attribute, value) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      return Object(utils_properties["propertyUtils"])(this).hide(attribute, value, options);
    }
    /**
     * creates a non enumerable property on the helper
     *
     * @param {String} attribute
     * @param {*} value
     * @param {Object} options
     * @memberof Helper#
     *
     */

  }, {
    key: "hideProperty",
    value: function hideProperty(attribute, value) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      return Object(utils_properties["propertyUtils"])(this).hide(attribute, value, options);
    }
    /**
     * creates multiple non-enumerable properties on the helper
     *
     * @param {Object<string,object>} properties
     * @memberof Helper#
     *
     */

  }, {
    key: "hideProperties",
    value: function hideProperties() {
      var properties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      return Object(utils_properties["propertyUtils"])(this).hideProperties(properties);
    }
    /**
     * Create a hidden getter property on the object.
     *
     * @param {String} attribute    The name of the property
     * @param {Function} fn      A function to call to return the desired value
     * @param {Object} [options={}]
     * @param {Object} [options.scope=this]
     * @param {Array} [options.args=[]] arguments that will be passed to the function
     * @memberof Helper#
     * @return {Helper#}
     */

  }, {
    key: "hideGetter",
    value: function hideGetter(attribute, fn) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      return Object(utils_properties["propertyUtils"])(this).hideGetter(attribute, fn, options);
    }
    /**
     * Create a hidden getter property on the object.
     *
     * @param {String} attribute    The name of the property
     * @param {Function} fn      A function to call to return the desired value
     * @param {Object} [options={}]
     * @param {Object} [options.scope=this]
     * @param {Array} [options.args=[]] arguments that will be passed to the function
     * @memberof Helper#
     * @return {Helper}
     */

  }, {
    key: "getter",
    value: function getter(attribute, fn) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      return Object(utils_properties["propertyUtils"])(this).getter(attribute, fn, options);
    }
    /**
     * @param {Mixin} methods - an object of functions that will be applied to the target
     * @param {MixinOptions} options - options for the mixin attributes
     */

  }, {
    key: "applyInterface",
    value: function applyInterface() {
      var methods = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      return Object(utils_properties["propertyUtils"])(this).applyInterface(methods, options);
    }
  }, {
    key: "at",
    value: function at() {
      for (var _len2 = arguments.length, paths = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        paths[_key2] = arguments[_key2];
      }

      return lodash_default.a.at.apply(lodash_default.a, [this].concat(paths));
    }
  }, {
    key: "set",
    value: function set(path, value) {
      return lodash_default.a.set(this, path, value);
    }
  }, {
    key: "get",
    value: function get(path, defaultValue) {
      return lodash_default.a.get(this, path, defaultValue);
    }
  }, {
    key: "result",
    value: function result(path, defaultValue) {
      for (var _len3 = arguments.length, args = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {
        args[_key3 - 2] = arguments[_key3];
      }

      return lodash_default.a.result.apply(lodash_default.a, [this, path, defaultValue].concat(args));
    }
  }, {
    key: "has",
    value: function has(path) {
      return lodash_default.a.has(this, path);
    }
  }, {
    key: "invoke",
    value: function invoke() {
      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }

      return lodash_default.a.invoke.apply(lodash_default.a, [this].concat(args));
    }
  }, {
    key: "pick",
    value: function pick() {
      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        args[_key5] = arguments[_key5];
      }

      return lodash_default.a.pick.apply(lodash_default.a, [this].concat(args));
    }
  }, {
    key: "doInitialize",

    /** */
    value: function () {
      var _doInitialize = asyncToGenerator_default()(
      /*#__PURE__*/
      regenerator_default.a.mark(function _callee() {
        var initializer;
        return regenerator_default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                initializer = this.tryGet('initialize', this.initialize);
                this.fireHook('beforeInitialize');

                if (!initializer) {
                  _context.next = 6;
                  break;
                }

                _context.next = 5;
                return Promise.resolve(initializer.call(this, this.options, this.context));

              case 5:
                this.hide('isInitialized', true);

              case 6:
                this.fireHook('afterInitialize');
                return _context.abrupt("return", this);

              case 8:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function doInitialize() {
        return _doInitialize.apply(this, arguments);
      }

      return doInitialize;
    }()
    /**
     * Sets the initial state of the object.  This is called in the Helper constructor
     *
     * @private
     */

  }, {
    key: "setInitialState",
    value: function setInitialState() {
      var _this = this;

      var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.initialState || {};
      var defaultsDeep = this.lodash.defaultsDeep;

      if (this.state && this.tryGet('initialState')) {
        return Promise.resolve(this.attemptMethodAsync('initialState')).then(function (i) {
          if (typeof_default()(i) === 'object') {
            _this.state.merge(defaultsDeep({}, i, initialState));
          }
        })["catch"](function (error) {
          console.error('Error setting initial state', _this, error);
          _this.initialStateError = error;
        });
      }
    }
  }, {
    key: "fireHook",
    value: function fireHook(hookName) {
      var _this$helperEvents;

      for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {
        args[_key6 - 1] = arguments[_key6];
      }

      (_this$helperEvents = this.helperEvents).emit.apply(_this$helperEvents, ["".concat(this.registryName, ":").concat(hookName), this].concat(args));

      this.emit.apply(this, [hookName].concat(args));
      this.emit.apply(this, ['firingHook', hookName].concat(args));
      this.attemptMethod(hookName, {
        args: args
      });
    }
    /**
     * Access the first value we find in our options hash in our provider hash
     *
     * @param {String} objectPath the dot.path to the property
     * @param {*} [defaultValue] the default value
     * @param {Array<String>} sources property paths to search
     * @returns {*}
     * @memberof Helper
     */

  }, {
    key: "tryGet",
    value: function tryGet(objectPath, defaultValue) {
      var sources = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ['options', 'provider', 'provider.default.prototype', 'provider.default', 'provider.prototype'];
      var values = this.at.apply(this, toConsumableArray_default()(sources.map(function (s) {
        return "".concat(s, ".").concat(objectPath);
      }))).filter(function (v) {
        return !isUndefined(v);
      });
      return values.length ? values[0] : defaultValue;
    }
    /**
     * Access the first value we find in our options hash in our provider hash
     *
     * If the method is a function, it will be called in the scope of the helper,
     * with the helpers options and context
     *
     * @param {String} objectPath the dot.path to the property
     * @param {*} defaultValue the default value
     * @param {Object} options options object which will be passed to the property if it is a function
     * @param {Object} context context object which will be passed to the property if it is a function
     * @returns {*}
     * @memberof Helper
     */

  }, {
    key: "tryResult",
    value: function tryResult(property, defaultValue) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var context = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
      var val = this.tryGet(property);

      if (!val) {
        return typeof defaultValue === 'function' ? defaultValue.call(this, objectSpread_default()({}, this.options, options), objectSpread_default()({}, this.context, context)) : defaultValue;
      } else if (typeof val === 'function') {
        return val.call(this, objectSpread_default()({}, this.options, options), objectSpread_default()({}, this.context, context));
      } else {
        return val;
      }
    } // Merge the objects found at k starting with at options, provider, runtimeSettings

  }, {
    key: "mergeGet",
    value: function mergeGet(key) {
      var _this2 = this;

      var namespaces = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ['options', 'provider', 'runtimeSettings'];
      key = typeof key === 'string' ? key.split('.') : key;
      key = flatten(castArray(key));
      return defaults.apply(void 0, [{}].concat(toConsumableArray_default()(namespaces.map(function (n) {
        return _this2.get([n].concat(toConsumableArray_default()(key)));
      }))));
    } // Merge the objects found at k starting with at options, provider, runtimeSettings
    // If the property is a function, it will be called in the scope of the helper, with the helpers options and context

  }, {
    key: "mergeResult",
    value: function mergeResult(key) {
      var _this3 = this;

      var namespaces = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ['options', 'provider', 'runtimeSettings'];
      key = typeof key === 'string' ? key.split('.') : key;
      key = flatten(castArray(key));

      var ifFunc = function ifFunc(v) {
        return typeof v === 'function' ? v.call(_this3, _this3.options, _this3.context) : v;
      };

      return defaults.apply(void 0, [{}].concat(toConsumableArray_default()(namespaces.map(function (n) {
        return _this3.get([n].concat(toConsumableArray_default()(key)));
      }).map(ifFunc))));
    }
  }, {
    key: "slice",
    value: function slice() {
      for (var _len7 = arguments.length, properties = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        properties[_key7] = arguments[_key7];
      }

      return lodash_default.a.zipObjectDeep(properties, this.at(properties));
    }
  }, {
    key: "createMixin",
    value: function createMixin() {
      var methods = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.context;
      var target = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this;
      console.warn('createMixin is deprecated');
      var functions = helper_pickBy(methods, helper_isFunction);
      var partialed = helper_mapValues(functions, function (fn) {
        return partialRight(fn.bind(target), context);
      });
      return helper_mapValues(partialed, function (boundFn) {
        return function () {
          var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

          for (var _len8 = arguments.length, args = new Array(_len8 > 1 ? _len8 - 1 : 0), _key8 = 1; _key8 < _len8; _key8++) {
            args[_key8 - 1] = arguments[_key8];
          }

          return boundFn.apply(void 0, [options].concat(args));
        };
      });
    }
  }, {
    key: "applyMixin",
    value: function applyMixin() {
      var methods = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.provider;
      var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.context;
      var target = arguments.length > 2 ? arguments[2] : undefined;
      console.warn('applyMixin is deprecated');
      return Object.assign(this, this.createMixin(methods, context, target));
    }
  }, {
    key: "mixin",
    value: function mixin() {
      var object = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      this.applyInterface(object, objectSpread_default()({
        transformKeys: true,
        scope: this,
        partial: [this.context],
        right: true,
        insertOptions: false,
        hidden: false
      }, options));
      return this;
    }
  }, {
    key: "attemptMethod",
    value: function attemptMethod(methodName) {
      var handler = this.tryGet(methodName, this[methodName]);

      if (typeof handler === 'undefined') {
        if (this.runtime.isDevelopment && this.runtime.get('environment.DEBUG_HELPERS')) {
          this.runtime.debug("attemptMethod called on non-existent method: ".concat(methodName, " "), {
            name: this.name,
            id: this.id
          });
        }

        return false;
      }

      if (typeof handler === 'function') {
        for (var _len9 = arguments.length, args = new Array(_len9 > 1 ? _len9 - 1 : 0), _key9 = 1; _key9 < _len9; _key9++) {
          args[_key9 - 1] = arguments[_key9];
        }

        if (args.length === 0) {
          args.unshift({});
        }

        args.push(this.context);

        try {
          return handler.call.apply(handler, [this].concat(args));
        } catch (error) {
          return false;
        }
      }

      return handler;
    }
  }, {
    key: "attemptMethodAsync",
    value: function attemptMethodAsync(name) {
      for (var _len10 = arguments.length, args = new Array(_len10 > 1 ? _len10 - 1 : 0), _key10 = 1; _key10 < _len10; _key10++) {
        args[_key10 - 1] = arguments[_key10];
      }

      var result = this.attemptMethod.apply(this, [name].concat(args));
      return Promise.resolve(result || null);
    }
  }, {
    key: "callMethod",
    value: function callMethod(methodName) {
      var handler = this.tryGet(methodName, this[methodName]);

      if (typeof handler !== 'function') {
        throw new Error("Could not find a property at ".concat(methodName));
      }

      for (var _len11 = arguments.length, args = new Array(_len11 > 1 ? _len11 - 1 : 0), _key11 = 1; _key11 < _len11; _key11++) {
        args[_key11 - 1] = arguments[_key11];
      }

      if (args.length === 0) {
        args.unshift({});
      }

      return handler.call.apply(handler, [this].concat([].concat(args, [this.context])));
    }
  }, {
    key: "providerTypes",
    get: function get() {
      return defaults({}, this.tryResult('providerTypes', {}), this.constructor.providerTypes, Helper.providerTypes);
    }
    /**
     * Individual helper modules can reference the options type configuration from their constructor, and can override
     * them by passing in optionTypes object in their options, by exporting a optionTypes object themselves.
     * @memberof Helper#
     */

  }, {
    key: "optionTypes",
    get: function get() {
      return defaults({}, this.tryResult('optionTypes', {}), this.constructor.optionTypes, Helper.optionTypes);
    }
    /**
     * Individual helper modules can reference the context type configuration from their constructor, and can override
     * them by passing in a contextTypes object in their options, by exporting a contextTypes object themselves.
     * @memberof Helper#
     */

  }, {
    key: "contextTypes",
    get: function get() {
      return defaults({}, defineProperty_default()({}, this.registryName, this.constructor.registry), this.tryResult('contextTypes', {}), this.constructor.contextTypes, Helper.contextTypes);
    }
    /**
     * Attaching a Helper class to a host, usually an instance of Runtime,
     * will create a factory function that can be used to create Helper instances,
     * as well as a Registry that contains all known providers of the specific Helper class
     * we are attaching.
     *
     * @static
     * @param {Runtime} host
     * @param {Class} helperClass
     * @param {HelperAttachOptions} options
     * @returns {Runtime}
     * @memberof Helper
     */

  }, {
    key: "name",

    /**
     * Returns the name of this helper
     *
     * @readonly
     * @memberof Helper
     */
    get: function get() {
      return this._name;
    }
    /**
     * A Unique ID for this helper instance
     *
     * @readonly
     * @memberof Helper
     */

  }, {
    key: "id",
    get: function get() {
      return this._id;
    }
    /**
     * @readonly
     * @memberof Helper#
     * @type {Runtime}
     */

  }, {
    key: "runtime",
    get: function get() {
      return this._runtime;
    }
    /**
     * @alias Helper#runtime
     * @deprecated
     */

  }, {
    key: "host",
    get: function get() {
      return this.runtime;
    }
    /**
     * @alias Helper#runtime
     * @deprecated
     */

  }, {
    key: "project",
    get: function get() {
      return this.runtime;
    }
    /**
     * Gets the options this helper was created with
     *
     * @readonly
     * @memberof Helper#
     */

  }, {
    key: "options",
    get: function get() {
      return this._options;
    }
    /**
     * Gets the context this helper was created with
     *
     * @readonly
     * @memberof Helper#
     */

  }, {
    key: "context",
    get: function get() {
      return this._context;
    }
  }, {
    key: "provider",
    get: function get() {
      return this._provider;
    }
    /**
     * Returns the name of the registry this helper will belong to,
     * which can be used to emit global events to helper specific channels
     *
     * @readonly
     * @memberof Helper
     */

  }, {
    key: "registryName",
    get: function get() {
      return this.constructor.registryName || Helper.propNames(this.constructor.helperName || this.constructor.name).registryProp;
    }
    /**
     * Returns a lodash chain object, using this helper instance as the source value
     *
     * @readonly
     * @memberof Helper
     */

  }, {
    key: "chain",
    get: function get() {
      return lodash_default.a.chain(this);
    }
  }, {
    key: "lodash",
    get: function get() {
      return lodash_default.a;
    }
  }, {
    key: "helperEvents",
    get: function get() {
      return Helper.events;
    }
  }, {
    key: "isCached",
    get: function get() {
      return !!this.get('options.cacheable') && this.cacheKey && this.cacheKey.length > 0;
    }
  }, {
    key: "cacheKey",
    get: function get() {
      return this.get('options.cacheKey');
    }
  }, {
    key: "invalidOptionKeys",
    get: function get() {
      return this.chain.get('options').omit(Object.keys(this.optionTypes)).keys().value();
    }
  }, {
    key: "invalidContextKeys",
    get: function get() {
      return this.chain.get('context').omit(Object.keys(this.contextTypes)).keys().value();
    }
  }, {
    key: "argv",
    get: function get() {
      return helper_omit(this.get('runtime.argv', this.get('host.argv', {})), '_', '');
    }
  }, {
    key: "defaultOptions",
    get: function get() {
      return helper_defaultsDeep({}, this.argv, this.runtimeSettings);
    }
  }, {
    key: "runtimeSettings",
    get: function get() {
      var name = this.name || this.id;
      var cased = Object(string["camelCase"])(Object(string["snakeCase"])(name));
      var omit = this.lodash.omit;
      var _this$projectSettings = this.projectSettingsPaths,
          projectSettingsPaths = _this$projectSettings === void 0 ? [] : _this$projectSettings;
      return omit(helper_defaultsDeep.apply(void 0, [{}].concat(toConsumableArray_default()(this.at(projectSettingsPaths)))), name, cased);
    }
    /**
     * The object search paths where we look for settings and configuration
     *
     * @readonly
     * @memberof Helper
     */

  }, {
    key: "projectSettingsPaths",
    get: function get() {
      var groupName = this.constructor.registryName();
      var name = this.name || this.id;
      return ["runtime.argv.".concat(groupName, ".").concat(name), "runtime.options.".concat(groupName, ".").concat(name), "runtime.settings.".concat(groupName, ".").concat(name), "runtime.argv.".concat(groupName, ".").concat(Object(string["camelCase"])(Object(string["snakeCase"])(name))), "runtime.options.".concat(groupName, ".").concat(Object(string["camelCase"])(Object(string["snakeCase"])(name))), "runtime.settings.".concat(groupName, ".").concat(Object(string["camelCase"])(Object(string["snakeCase"])(name)))].map(function (str) {
        return str.replace(/(\\|\/)/g, '.');
      });
    }
  }], [{
    key: "registerHelper",
    value: function registerHelper(name, fn) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var reg = fn && fn.prototype instanceof Helper ? function () {
        return fn;
      } : fn;

      try {
        var _result = REGISTRY.registry.register(name, reg);

        var host = options.host || options.runtime || options.project;

        if (host && options.attach !== false) {
          var helper = REGISTRY.registry.lookup(name);
          helper.attach(host, options);
        }

        Helper.events.emit('registered', {
          name: name,
          options: options
        });
        return _result;
      } catch (error) {
        Helper.events.emit('register:error', {
          name: name,
          error: error,
          options: options
        });
      }
    }
    /**
     * Creates an instance of the Helper class.  This is usually called via the factory function
     * that gets attached to the runtime when you say Helper.attach, which makes it possible to only
     * specify options but still get context, runtime, and helper class passed automatically.
     *
     * @param {Object} options properties that get attached to the helper instance
     * @param {Object} context context to be passed down from the parent
     * @param {Runtime} runtime the parent runtime that is creating this helper
     * @param {Class} helperClass any subclass of Helper
     */

  }, {
    key: "createInstance",
    value: function createInstance() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var runtime = arguments.length > 2 ? arguments[2] : undefined;
      var helperClass = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : this;
      helperClass = helperClass || this;
      var shortcut = helperClass.shortcut || helperClass.prototype.shortcut;
      var helperInstance = new helperClass(objectSpread_default()({}, options, shortcut ? {
        shortcut: shortcut
      } : {}), objectSpread_default()({}, context, {
        runtime: runtime
      }));
      return helperInstance;
    }
    /**
     * Helper classes can specify attributes that individual helper modules are
     * expected to provide or export.
     */

  }, {
    key: "attach",
    value: function attach(host, helperClass, options) {
      var isPlainObject = lodash_default.a.isPlainObject;

      if (isPlainObject(helperClass)) {
        options = helperClass;
        helperClass = this;
      }

      Helper.events.emit('attach', host, helperClass, options);

      var result = _attach(host, helperClass, options);

      Helper.events.emit('attached', host, helperClass, options);
      return result;
    }
  }, {
    key: "attachAll",
    value: function attachAll(host) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      Helper.events.emit('attachAll', host, options);

      if (!this.isHostValid(host)) {
        throw new Error('Invalid host for the helper registry. pass a project or a portfolio');
      }

      Helper.allHelperTypes.forEach(function (helperType) {
        if (helperType.isHostSupported && helperType.isHostSupported(host)) {
          helperType.attach(host, options);
        }
      });
      return host;
    }
  }, {
    key: "isHostSupported",
    value: function isHostSupported(host) {
      return this.isHostValid(host);
    }
  }, {
    key: "isHostValid",
    value: function isHostValid(host) {
      return typeof host.hide === 'function' && typeof host.lazy === 'function';
    }
  }, {
    key: "cacheable",
    value: function cacheable() {
      var setting = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      return this.isCacheable = !!setting;
    }
  }, {
    key: "createContextRegistry",
    value: function createContextRegistry() {
      for (var _len12 = arguments.length, args = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {
        args[_key12] = arguments[_key12];
      }

      return construct_default()(registries_context, args);
    }
  }, {
    key: "createRegistry",
    value: function createRegistry() {
      for (var _len13 = arguments.length, args = new Array(_len13), _key13 = 0; _key13 < _len13; _key13++) {
        args[_key13] = arguments[_key13];
      }

      return construct_default()(registries_context, args);
    }
    /**
     * @abstract
     */

  }, {
    key: "willCreateHelper",
    value: function willCreateHelper(host, opts) {}
    /**
     * @abstract
     */

  }, {
    key: "didCreateHelper",
    value: function didCreateHelper(host, helperInstance, opts) {}
    /**
     * @private
     */

  }, {
    key: "registryName",
    value: function registryName() {
      return Helper.propNames(this.name).registryProp;
    }
  }, {
    key: "createMixin",
    value: function createMixin() {
      var methods = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var target = arguments.length > 1 ? arguments[1] : undefined;

      for (var _len14 = arguments.length, partialArgs = new Array(_len14 > 2 ? _len14 - 2 : 0), _key14 = 2; _key14 < _len14; _key14++) {
        partialArgs[_key14 - 2] = arguments[_key14];
      }

      var functions = helper_pickBy(methods, helper_isFunction);
      var partialed = helper_mapValues(functions, function (fn) {
        return partialRight.apply(void 0, [fn.bind(target)].concat(partialArgs));
      });
      return helper_mapValues(partialed, function (boundFn) {
        return function () {
          var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

          for (var _len15 = arguments.length, args = new Array(_len15 > 1 ? _len15 - 1 : 0), _key15 = 1; _key15 < _len15; _key15++) {
            args[_key15 - 1] = arguments[_key15];
          }

          return boundFn.apply(void 0, [options].concat(args));
        };
      });
    }
  }, {
    key: "propNames",
    value: function propNames() {
      var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
      return {
        registryProp: Object(string["camelCase"])(Object(string["pluralize"])(Object(string["snakeCase"])(name))),
        lookupProp: Object(string["singularize"])(Object(string["camelCase"])(Object(string["snakeCase"])(name)))
      };
    }
  }, {
    key: "isSkypagerHelper",
    get: function get() {
      return true;
    }
  }, {
    key: "features",
    get: function get() {
      return Helper.registry.lookup('feature').Feature.registry;
    }
  }, {
    key: "allHelpers",
    get: function get() {
      return Helper.allHelperTypes;
    }
  }, {
    key: "allHelperTypes",
    get: function get() {
      return Helper.registry.available.map(function (id) {
        return Helper.registry.lookup(id);
      }).map(function (mod) {
        return mod["default"] ? mod["default"] : mod;
      });
    }
  }, {
    key: "modules",
    get: function get() {
      return Helper;
    }
  }]);

  return Helper;
}();

defineProperty_default()(helper_Helper, "helperName", 'Helper');

defineProperty_default()(helper_Helper, "registry", REGISTRY);

defineProperty_default()(helper_Helper, "ContextRegistry", registries_context);

defineProperty_default()(helper_Helper, "ContextError", helper_ContextError);

defineProperty_default()(helper_Helper, "OptionsError", helper_OptionsError);

defineProperty_default()(helper_Helper, "ProviderError", helper_ProviderError);

defineProperty_default()(helper_Helper, "events", Object(emitter["a" /* attach */])({}));

defineProperty_default()(helper_Helper, "providerTypes", {});

defineProperty_default()(helper_Helper, "optionTypes", {
  id: 'string',
  provider: 'object'
  /**
   * Helpers are always passed a context property from the host project or runtime's sandbox,
   * this will include a reference to the host project, as well as the registry the helper belongs to
   * and things such as the environment or process argv.
   */

});

defineProperty_default()(helper_Helper, "contextTypes", {
  project: 'object',
  reg: 'object',
  host: 'object',
  runtime: 'object'
  /**
   * Individual helper modules can reference the provdier type configuration from their constructor, and can override
   * them by passing in a providerTypes object in their options, by exporting a providerTypes object themselves.
   *
   * @memberof Helper#
   */

});

defineProperty_default()(helper_Helper, "createMockContext", createMockContext);

/* harmony default export */ var helper = __webpack_exports__["b"] = (helper_Helper);
function createMockContext() {
  var object = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var fn = function fn(key) {
    return helper_result(object, key, function () {
      throw new Error("Module ".concat(key, " not found in mock context"));
    });
  };

  return Object.assign(fn, {
    keys: function keys() {
      return _keys(object);
    },
    resolve: function resolve(key) {
      var resolved = helper_has(object, key) && key;

      if (resolved) {
        return resolved;
      } else {
        throw new Error("Module ".concat(key, " not found in mock context"));
      }
    }
  });
}
var helper_registry = helper_Helper.registry;
var registerHelper = helper_Helper.registerHelper;
var helper_createContextRegistry = function createContextRegistry(name) {
  for (var _len16 = arguments.length, args = new Array(_len16 > 1 ? _len16 - 1 : 0), _key16 = 1; _key16 < _len16; _key16++) {
    args[_key16 - 1] = arguments[_key16];
  }

  return construct_default()(registries_context, [name].concat(args));
};
var helper_attach = helper_Helper.attach;

function _attach(host, helperClass) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  var _Helper$propNames$opt = objectSpread_default()({}, helper_Helper.propNames(helperClass.name), options),
      registryProp = _Helper$propNames$opt.registryProp,
      lookupProp = _Helper$propNames$opt.lookupProp,
      _Helper$propNames$opt2 = _Helper$propNames$opt.configKey,
      configKey = _Helper$propNames$opt2 === void 0 ? 'options' : _Helper$propNames$opt2;

  var originalHelperClass = helperClass;

  if (host[registryProp]) {
    return host;
  }

  if (host.fireHook) {
    host.fireHook('willAttachHelpers', registryProp, helperClass, options);
  }

  Object(utils_properties["lazy"])(host, registryProp, function () {
    return options.registry || helperClass.createRegistry();
  }); // ensures that we can always access the function

  Object(utils_properties["hideProperty"])(host[registryProp], 'createHelperByName', function (name) {
    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var ctx = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

    if (typeof name !== 'string') {
      name = "".concat(lookupProp).concat(lodash_default.a.uniqueId());
    }

    var reg = host[registryProp];
    var _opts = opts,
        _opts$cacheHelper = _opts.cacheHelper,
        cacheHelper = _opts$cacheHelper === void 0 ? !!(helperClass.isCacheable || opts.cacheHelper) : _opts$cacheHelper;
    opts = defaults({}, opts, {
      name: name,
      id: name,
      cacheHelper: !!helperClass.isCacheable
    }, helper_omit(host.argv, '', '_'), host.get("".concat(configKey, ".").concat(registryProp, ".").concat(name)), host.get("".concat(configKey, ".").concat(registryProp, ".").concat(Object(string["camelCase"])(Object(string["snakeCase"])(name)))));

    var helperContext = objectSpread_default()({}, host.createSandbox(ctx), defineProperty_default()({
      host: host,
      reg: reg
    }, registryProp, reg));

    var provider;

    try {
      provider = reg.lookup(name);
    } catch (error) {
      if (helperClass.allowAnonymousProviders || options.allowAnonymousProviders) {
        provider = opts.provider || Object.assign({}, {
          name: name
        }, opts);
      } else {
        throw error;
      }
    }

    if (provider && provider["default"] && typeof provider["default"] === 'function' && provider["default"].isSkypagerHelper) {
      helperClass = provider["default"];
      opts.shortcut = helper_getShortcut(opts, helperClass);
    } else if (provider && typeof provider === 'function' && provider.isSkypagerHelper) {
      helperClass = provider;
      opts.shortcut = helper_getShortcut(opts, helperClass);
    } else {
      helperClass = originalHelperClass;
    }

    var cacheable = !!(cacheHelper !== false && provider.isCacheable !== false && provider.cacheable !== false && typeof host.cache !== 'undefined');
    var cacheKey = [registryProp, Object(utils_properties["hashObject"])(omitBy(opts, cacheableKeys)), name].join(':');
    opts.cacheKey = cacheKey;
    opts.cacheable = cacheable;
    opts.provider = provider;
    opts.shortcut = opts.shortcut || provider.shortcut || helperClass.prototype && helperClass.prototype.shortcut || helperClass.shortcut;
    opts.createGetter = opts.createGetter || provider.createGetter || opts.createGetter || opts.shortcut; // type case the values true, false, TRUE, FALSE

    _keys(opts).forEach(function (key) {
      if (typeof opts[key] === 'string' && opts[key].match(/true|false/i)) {
        opts[key] = opts[key].toLowerCase() === 'true';
      }
    });

    if (host.willCreateHelper) {
      var response = host.willCreateHelper(opts, helperClass);

      if (response === false) {
        return false;
      }
    }

    if (helperClass.willCreateHelper(host, opts) === false) {
      return false;
    }

    var helperInstance = cacheable ? host.cache.fetch(cacheKey, function () {
      return helperClass.createInstance(opts, helperContext, host, helperClass);
    }) : helperClass.createInstance(opts, helperContext, host, helperClass);

    if (opts.createGetter || opts.shortcut) {
      host.lazy(opts.createGetter || opts.shortcut, function () {
        return helperInstance;
      }, true);
    }

    helperInstance.hide('destroyHelper', function () {
      try {
        helperInstance.removeAllListeners();
        host.cache["delete"](cacheKey);
      } catch (e) {}

      helperInstance.fireHook('willBeDestroyed', helperInstance, host, opts);
      return true;
    });

    if (host.didCreateHelper) {
      host.didCreateHelper(helperInstance, opts);
    }

    helperClass.didCreateHelper(host, helperInstance, opts);

    if (helperClass.isObservable || provider.isObservable || provider.observables || opts.observables || helperClass.observables || helperClass.prototype && helperClass.prototype.observables) {
      host.fireHook('didCreateObservableHelper', helperInstance, helperClass);
    }

    return helperInstance;
  });
  Object(utils_properties["hideProperty"])(host[registryProp], 'allInstances', function () {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    return Object.keys(host[registryProp].allMembers()).map(function (id) {
      return host[lookupProp](id, options);
    });
  });
  Object(utils_properties["hideProperty"])(host[registryProp], 'createLookup', function () {
    var defaultOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var cacheHelper = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : helperClass.isCacheable;
    return function (id) {
      var _host$registryProp;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      for (var _len17 = arguments.length, args = new Array(_len17 > 2 ? _len17 - 2 : 0), _key17 = 2; _key17 < _len17; _key17++) {
        args[_key17 - 2] = arguments[_key17];
      }

      return (_host$registryProp = host[registryProp]).createHelperByName.apply(_host$registryProp, [id, objectSpread_default()({}, defaultOptions, {
        cacheHelper: cacheHelper
      }, options)].concat(args));
    };
  });
  host.hideGetter(lookupProp, function () {
    var baseFn = function baseFn() {
      var _host$registryProp2;

      return (_host$registryProp2 = host[registryProp]).createHelperByName.apply(_host$registryProp2, arguments);
    };

    var camelCase = lodash_default.a.camelCase,
        lowerFirst = lodash_default.a.lowerFirst,
        kebabCase = lodash_default.a.kebabCase;
    host.get([registryProp, 'available']).forEach(function (helperId) {
      var parts = helperId.split('/').map(function (p) {
        return lowerFirst(camelCase(kebabCase(p)));
      });
      lodash_default.a.set(baseFn, parts, function () {
        for (var _len18 = arguments.length, rest = new Array(_len18), _key18 = 0; _key18 < _len18; _key18++) {
          rest[_key18] = arguments[_key18];
        }

        return baseFn.apply(void 0, [helperId].concat(rest));
      });
    });
    return baseFn;
  });

  if (host.didAttachHelpers) {
    host.didAttachHelpers.call(host, helperClass, options);
  }

  return host;
} // will not use the key if this function returns true

var cacheableKeys = function cacheableKeys() {
  var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var key = arguments.length > 1 ? arguments[1] : undefined;
  return helper_isFunction(value) || value && value.then && helper_isFunction(value.then) || key == 'provider' || key === 'compiler';
};

var helper_getShortcut = function getShortcut() {
  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var helperClass = arguments.length > 1 ? arguments[1] : undefined;
  var shortcut = lodash_default.a.result(opts, 'shortcut', function () {
    return lodash_default.a.result(opts, 'createGetter');
  }) || lodash_default.a.result(helperClass, 'shortcut', function () {
    return lodash_default.a.result(helperClass, 'createGetter');
  }) || lodash_default.a.result(helperClass.prototype, 'shortcut', function () {
    return lodash_default.a.result(helperClass.prototype, 'createGetter');
  });

  if (shortcut) {
    return shortcut;
  }

  var desc = Object.getOwnPropertyDescriptor(helperClass, 'shortcut') || {};
  return lodash_default.a.result(desc, 'value');
};

/***/ }),
/* 12 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: /Users/jon/Projects/@skypager/node_modules/lodash/lodash.js
var lodash = __webpack_require__(0);

// CONCATENATED MODULE: /Users/jon/Projects/@skypager/src/runtime/lib/es/utils/inflect.js

/**
 * @copyright https://github.com/sonnym/inflect-js/
 */

var uncountableRules = ['equipment', 'information', 'rice', 'money', 'species', 'series', 'fish', 'sheep', 'moose', 'deer', 'news']; // These rules translate from the singular form of a noun to its plural form.

var pluralRules = [[new RegExp('(m)an$', 'gi'), '$1en'], [new RegExp('(pe)rson$', 'gi'), '$1ople'], [new RegExp('(child)$', 'gi'), '$1ren'], [new RegExp('^(ox)$', 'gi'), '$1en'], [new RegExp('(ax|test)is$', 'gi'), '$1es'], [new RegExp('(octop|vir)us$', 'gi'), '$1i'], [new RegExp('(alias|status)$', 'gi'), '$1es'], [new RegExp('(bu)s$', 'gi'), '$1ses'], [new RegExp('(buffal|tomat|potat)o$', 'gi'), '$1oes'], [new RegExp('([ti])um$', 'gi'), '$1a'], [new RegExp('sis$', 'gi'), 'ses'], [new RegExp('(?:([^f])fe|([lr])f)$', 'gi'), '$1$2ves'], [new RegExp('(hive)$', 'gi'), '$1s'], [new RegExp('([^aeiouy]|qu)y$', 'gi'), '$1ies'], [new RegExp('(x|ch|ss|sh)$', 'gi'), '$1es'], [new RegExp('(matr|vert|ind)ix|ex$', 'gi'), '$1ices'], [new RegExp('([m|l])ouse$', 'gi'), '$1ice'], [new RegExp('(quiz)$', 'gi'), '$1zes'], [new RegExp('s$', 'gi'), 's'], [new RegExp('$', 'gi'), 's']]; // These rules translate from the plural form of a noun to its singular form.

var singularRules = [[new RegExp('(m)en$', 'gi'), '$1an'], [new RegExp('(pe)ople$', 'gi'), '$1rson'], [new RegExp('(child)ren$', 'gi'), '$1'], [new RegExp('([ti])a$', 'gi'), '$1um'], [new RegExp('((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$', 'gi'), '$1$2sis'], [new RegExp('(hive)s$', 'gi'), '$1'], [new RegExp('(tive)s$', 'gi'), '$1'], [new RegExp('(curve)s$', 'gi'), '$1'], [new RegExp('([lr])ves$', 'gi'), '$1f'], [new RegExp('([^fo])ves$', 'gi'), '$1fe'], [new RegExp('([^aeiouy]|qu)ies$', 'gi'), '$1y'], [new RegExp('(s)eries$', 'gi'), '$1eries'], [new RegExp('(m)ovies$', 'gi'), '$1ovie'], [new RegExp('(x|ch|ss|sh)es$', 'gi'), '$1'], [new RegExp('([m|l])ice$', 'gi'), '$1ouse'], [new RegExp('(bus)es$', 'gi'), '$1'], [new RegExp('(o)es$', 'gi'), '$1'], [new RegExp('(shoe)s$', 'gi'), '$1'], [new RegExp('(cris|ax|test)es$', 'gi'), '$1is'], [new RegExp('(octop|vir)i$', 'gi'), '$1us'], [new RegExp('(alias|status)es$', 'gi'), '$1'], [new RegExp('^(ox)en', 'gi'), '$1'], [new RegExp('(vert|ind)ices$', 'gi'), '$1ex'], [new RegExp('(matr)ices$', 'gi'), '$1ix'], [new RegExp('(quiz)zes$', 'gi'), '$1'], [new RegExp('s$', 'gi'), '']]; // This is a list of words that should not be capitalized for title case

var non_titlecased_words = ['and', 'or', 'nor', 'a', 'an', 'the', 'so', 'but', 'to', 'of', 'at', 'by', 'from', 'into', 'on', 'onto', 'off', 'out', 'in', 'over', 'with', 'for']; // These are regular expressions used for converting between String formats

var idSuffix = new RegExp('(_ids|_id)$', 'g');
var underbar = new RegExp('_', 'g');
var spaceOrUnderbar = new RegExp('[ _]', 'g');
var uppercase = new RegExp('([A-Z])', 'g');
var underbarPrefix = new RegExp('^_');
/*
This is a helper method that applies rules based replacement to a String
  Signature:
    applyRules(str, rules, skip, override) == String
  Arguments:
    str - String - String to modify and return based on the passed rules
    rules - Array: [RegExp, String] - Regexp to match paired with String to use for replacement
    skip - Array: [String] - Strings to skip if they match
    override - String (optional) - String to return as though this method succeeded (used to conform to APIs)
  Returns:
    String - passed String modified by passed rules
  Examples:
    applyRules("cows", InflectionJs.singularRules) === 'cow'
*/

function applyRules(str, rules, skip, override) {
  if (override) {
    str = override;
  } else {
    var ignore = skip.indexOf(str.toLowerCase()) > -1;

    if (!ignore) {
      for (var x = 0; x < rules.length; x++) {
        if (str.match(rules[x][0])) {
          str = str.replace(rules[x][0], rules[x][1]);
          break;
        }
      }
    }
  }

  return str;
}

function pluralize(string, plural) {
  return applyRules(string, pluralRules, uncountableRules);
}
function singularize(string, singular) {
  return applyRules(string, singularRules, uncountableRules, singular);
}
function humanize(string, lowFirstLetter) {
  var str = string.toLowerCase();
  str = str.replace(idSuffix, '');
  str = str.replace(underbar, ' ');

  if (!lowFirstLetter) {
    str = Object(lodash["capitalize"])(str);
  }

  return str;
}
function camelize(string, lowFirstLetter) {
  var str = string.toLowerCase();
  var str_path = str.split('/');

  for (var i = 0; i < str_path.length; i++) {
    var strArr = str_path[i].split('_');
    var initX = lowFirstLetter && i + 1 === str_path.length ? 1 : 0;

    for (var x = initX; x < strArr.length; x++) {
      strArr[x] = strArr[x].charAt(0).toUpperCase() + strArr[x].substring(1);
    }

    str_path[i] = strArr.join('');
  }

  str = str_path.join('');
  return str;
}
function underscore(str) {
  var str_path = str.split('::');

  for (var i = 0; i < str_path.length; i++) {
    str_path[i] = str_path[i].replace(uppercase, '_$1');
    str_path[i] = str_path[i].replace(underbarPrefix, '');
  }

  str = str_path.join('/').toLowerCase();
  return str;
}
function dasherize(str) {
  str = str.replace(spaceOrUnderbar, '-');
  return str;
}
function titleize(string) {
  var str = string.toLowerCase();
  str = str.replace(underbar, ' ');
  var strArr = str.split(' ');

  for (var x = 0; x < strArr.length; x++) {
    var d = strArr[x].split('-');

    for (var i = 0; i < d.length; i++) {
      if (non_titlecased_words.indexOf(d[i].toLowerCase()) < 0) {
        d[i] = Object(lodash["capitalize"])(d[i]);
      }
    }

    strArr[x] = d.join('-');
  }

  str = strArr.join(' ');
  str = str.substring(0, 1).toUpperCase() + str.substring(1);
  return str;
}
function demodulize(str) {
  var strArr = str.split('::');
  str = strArr[strArr.length - 1];
  return str;
}
function tableize(str) {
  return this.pluralize(this.underscore(str));
}
function classify(str) {
  return this.singularize(this.camelize(str));
}
function foreign_key(str, dropIdUbar) {
  str = this.underscore(this.demodulize(str)) + (dropIdUbar ? '' : '_') + 'id';
  return str;
}
function ordinalize(str) {
  var strArr = str.split(' ');

  for (var x = 0; x < strArr.length; x++) {
    var i = parseInt(strArr[x]);

    if (i !== NaN) {
      var ltd = strArr[x].substring(strArr[x].length - 2);
      var ld = strArr[x].substring(strArr[x].length - 1);
      var suf = 'th';

      if (ltd != '11' && ltd != '12' && ltd != '13') {
        if (ld === '1') {
          suf = 'st';
        } else if (ld === '2') {
          suf = 'nd';
        } else if (ld === '3') {
          suf = 'rd';
        }
      }

      strArr[x] += suf;
    }
  }

  str = strArr.join(' ');
  return str;
}
// CONCATENATED MODULE: /Users/jon/Projects/@skypager/src/runtime/lib/es/utils/string.js
/* concated harmony reexport pluralize */__webpack_require__.d(__webpack_exports__, "pluralize", function() { return pluralize; });
/* concated harmony reexport singularize */__webpack_require__.d(__webpack_exports__, "singularize", function() { return singularize; });
/* concated harmony reexport humanize */__webpack_require__.d(__webpack_exports__, "humanize", function() { return humanize; });
/* concated harmony reexport camelize */__webpack_require__.d(__webpack_exports__, "camelize", function() { return camelize; });
/* concated harmony reexport underscore */__webpack_require__.d(__webpack_exports__, "underscore", function() { return underscore; });
/* concated harmony reexport dasherize */__webpack_require__.d(__webpack_exports__, "dasherize", function() { return dasherize; });
/* concated harmony reexport titleize */__webpack_require__.d(__webpack_exports__, "titleize", function() { return titleize; });
/* concated harmony reexport demodulize */__webpack_require__.d(__webpack_exports__, "demodulize", function() { return demodulize; });
/* concated harmony reexport tableize */__webpack_require__.d(__webpack_exports__, "tableize", function() { return tableize; });
/* concated harmony reexport classify */__webpack_require__.d(__webpack_exports__, "classify", function() { return classify; });
/* concated harmony reexport foreign_key */__webpack_require__.d(__webpack_exports__, "foreign_key", function() { return foreign_key; });
/* concated harmony reexport ordinalize */__webpack_require__.d(__webpack_exports__, "ordinalize", function() { return ordinalize; });
/* concated harmony reexport camelCase */__webpack_require__.d(__webpack_exports__, "camelCase", function() { return lodash["camelCase"]; });
/* concated harmony reexport capitalize */__webpack_require__.d(__webpack_exports__, "capitalize", function() { return lodash["capitalize"]; });
/* concated harmony reexport kebabCase */__webpack_require__.d(__webpack_exports__, "kebabCase", function() { return lodash["kebabCase"]; });
/* concated harmony reexport lowerCase */__webpack_require__.d(__webpack_exports__, "lowerCase", function() { return lodash["lowerCase"]; });
/* concated harmony reexport lowerFirst */__webpack_require__.d(__webpack_exports__, "lowerFirst", function() { return lodash["lowerFirst"]; });
/* concated harmony reexport snakeCase */__webpack_require__.d(__webpack_exports__, "snakeCase", function() { return lodash["snakeCase"]; });
/* concated harmony reexport startCase */__webpack_require__.d(__webpack_exports__, "startCase", function() { return lodash["startCase"]; });
/* concated harmony reexport template */__webpack_require__.d(__webpack_exports__, "template", function() { return lodash["template"]; });
/* concated harmony reexport toLower */__webpack_require__.d(__webpack_exports__, "toLower", function() { return lodash["toLower"]; });
/* concated harmony reexport toUpper */__webpack_require__.d(__webpack_exports__, "toUpper", function() { return lodash["toUpper"]; });
/* concated harmony reexport trimStart */__webpack_require__.d(__webpack_exports__, "trimStart", function() { return lodash["trimStart"]; });
/* concated harmony reexport upperFirst */__webpack_require__.d(__webpack_exports__, "upperFirst", function() { return lodash["upperFirst"]; });



/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__(79)('wks');

var uid = __webpack_require__(49);

var Symbol = __webpack_require__(5).Symbol;

var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] = USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;

/***/ }),
/* 14 */
/***/ (function(module, exports) {

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

module.exports = _createClass;

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithoutHoles = __webpack_require__(346);

var iterableToArray = __webpack_require__(347);

var nonIterableSpread = __webpack_require__(348);

function _toConsumableArray(arr) {
  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();
}

module.exports = _toConsumableArray;

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__(36);

var min = Math.min;

module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};

/***/ }),
/* 17 */
/***/ (function(module, exports) {

var core = module.exports = {
  version: '2.6.5'
};
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef

/***/ }),
/* 18 */
/***/ (function(module, exports) {

function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    module.exports = _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    module.exports = _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

module.exports = _typeof;

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(7);

var IE8_DOM_DEFINE = __webpack_require__(128);

var toPrimitive = __webpack_require__(44);

var dP = Object.defineProperty;
exports.f = __webpack_require__(20) ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) {
    /* empty */
  }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(6)(function () {
  return Object.defineProperty({}, 'a', {
    get: function get() {
      return 7;
    }
  }).a != 7;
});

/***/ }),
/* 21 */
/***/ (function(module, exports) {

function _getPrototypeOf(o) {
  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

module.exports = _getPrototypeOf;

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(18);

var assertThisInitialized = __webpack_require__(43);

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return assertThisInitialized(self);
}

module.exports = _possibleConstructorReturn;

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__(124);

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) setPrototypeOf(subClass, superClass);
}

module.exports = _inherits;

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__(41);

module.exports = function (it) {
  return Object(defined(it));
};

/***/ }),
/* 25 */
/***/ (function(module, exports) {

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }

  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}

function _asyncToGenerator(fn) {
  return function () {
    var self = this,
        args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);

      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }

      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }

      _next(undefined);
    });
  };
}

module.exports = _asyncToGenerator;

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(5);

var hide = __webpack_require__(29);

var has = __webpack_require__(28);

var SRC = __webpack_require__(49)('src');

var $toString = __webpack_require__(177);

var TO_STRING = 'toString';
var TPL = ('' + $toString).split(TO_STRING);

__webpack_require__(17).inspectSource = function (it) {
  return $toString.call(it);
};

(module.exports = function (O, key, val, safe) {
  var isFunction = typeof val == 'function';
  if (isFunction) has(val, 'name') || hide(val, 'name', key);
  if (O[key] === val) return;
  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));

  if (O === global) {
    O[key] = val;
  } else if (!safe) {
    delete O[key];
    hide(O, key, val);
  } else if (O[key]) {
    O[key] = val;
  } else {
    hide(O, key, val);
  } // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative

})(Function.prototype, TO_STRING, function toString() {
  return typeof this == 'function' && this[SRC] || $toString.call(this);
});

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(1);

var fails = __webpack_require__(6);

var defined = __webpack_require__(41);

var quot = /"/g; // B.2.3.2.1 CreateHTML(string, tag, attribute, value)

var createHTML = function createHTML(string, tag, attribute, value) {
  var S = String(defined(string));
  var p1 = '<' + tag;
  if (attribute !== '') p1 += ' ' + attribute + '="' + String(value).replace(quot, '&quot;') + '"';
  return p1 + '>' + S + '</' + tag + '>';
};

module.exports = function (NAME, exec) {
  var O = {};
  O[NAME] = exec(createHTML);
  $export($export.P + $export.F * fails(function () {
    var test = ''[NAME]('"');
    return test !== test.toLowerCase() || test.split('"').length > 3;
  }), 'String', O);
};

/***/ }),
/* 28 */
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;

module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(19);

var createDesc = __webpack_require__(48);

module.exports = __webpack_require__(20) ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__(70);

var defined = __webpack_require__(41);

module.exports = function (it) {
  return IObject(defined(it));
};

/***/ }),
/* 31 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Feature; });
/* unused harmony export isCacheable */
/* unused harmony export attach */
/* harmony import */ var _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(15);
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(14);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(22);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(21);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(23);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(2);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _helper_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(11);










var isFunction = function isFunction(o) {
  return typeof o === 'function';
};
/**
 * @typedef {import("./runtime").Runtime} Runtime
 */

/**
 * @typedef {import("./utils.properties").Mixin} Mixin
 */

/**
 * @typedef {import("./utils.properties").MixinOptions} MixinOptions
 */

/**
 * @class Feature
 * @extends Helper
 * @classdesc The Feature Class is used to provide an interface to something which can be
 * enaabled() and optionally configured() and possibly even have persistent state
 * throughout their object lifecyle.  Extended runtimes such as @skypager/node
 * are just a normal runtime which packages certain node specific features
 * and enable them automatically.
 */

/**
 * The options this feature was created with, combined with the options it was enabled with.
 * @name featureSettings
 * @type {Object}
 * @memberof Feature#
 */


var Feature =
/*#__PURE__*/
function (_Helper) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_6___default()(Feature, _Helper);

  function Feature() {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default()(this, Feature);

    return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(Feature).apply(this, arguments));
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3___default()(Feature, [{
    key: "afterInitialize",

    /**
     * @private
     */
    value: function afterInitialize() {
      this.applyInterface(this.featureMixin, this.featureMixinOptions);
    }
    /**
     * A Feature helper can define a featureMixinOptions or mixinOptions property
     * which is used to control the behavior of the interface that gets built for the feature.
     * This is based on @skypager/runtime/src/utils/properties applyInterface method, which takes
     * an object of functions and binds it to the target object, which in this case is the feature instance,
     * and automatically appends the runtime context as the last argument to every function.
     *
     * This is only useful for module of function style feature helpers, and is not needed so much
     * for class based Features.
     *
     * @readonly
     * @memberof Feature
     */

  }, {
    key: "enable",

    /**
     * Enable the feature.
     *
     * @param {Object} options options to enable this feature with
     * @param {Function} [callback] a callback that will get called when the feature is finished enabling.
     * @returns {PromiseLike<Feature>}
     */
    value: function enable() {
      var _this = this;

      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var callback = arguments.length > 1 ? arguments[1] : undefined;
      var runtime = this.runtime;
      var _this$lodash = this.lodash,
          identity = _this$lodash.identity,
          isFunction = _this$lodash.isFunction,
          defaultsDeep = _this$lodash.defaultsDeep;

      if (isFunction(options)) {
        callback = options;
        options = {};
      }

      if (!isFunction(callback)) {
        callback = identity;
      }

      if (runtime.isFeatureEnabled(this.name) && runtime.get("enabledFeatures.".concat(this.name, ".cacheKey")) === this.cacheKey) {
        // this.runtime.debug(`Attempting to enable ${this.name} after it has already been enabled.`)
        callback(null, this);
        return this;
      }

      try {
        this.hide('featureSettings', defaultsDeep({}, options, this.options), {
          configurable: true
        });
      } catch (error) {}

      try {
        this.host.applyInterface(this.hostMixin, this.hostMixinOptions);
      } catch (error) {
        console.error('error applying host mixin', error);
        this.hostMixinError = error;
      }

      var hook = function hook() {
        return (// this handles the class style
          _this.featureWasEnabled ? Promise.resolve(_this.featureWasEnabled(options)) : // this handles the module style
          _this.attemptMethodAsync('featureWasEnabled', options)
        );
      };

      return hook().then(function () {
        _this.runtime.featureStatus.set(_this.name, {
          cacheKey: _this.cacheKey,
          status: 'enabled',
          cfg: options,
          options: _this.options
        });

        callback(null, _this);
        return _this;
      })["catch"](function (error) {
        _this.runtime.featureStatus.set(_this.name, {
          status: 'failed',
          error: error,
          cacheKey: _this.cacheKey,
          cfg: options,
          options: _this.options
        });

        _this.runtime.error("Error while enabling feature", _this, error.message);

        callback(error);
        throw error;
      });
    }
  }, {
    key: "runMethod",
    value: function runMethod(methodName) {
      var method = this.tryGet(methodName, this.get(methodName));

      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      return isFunction(method) && method.call.apply(method, [this].concat(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default()(args.push(this.context))));
    }
  }, {
    key: "featureMixinOptions",
    get: function get() {
      var defaults = this.lodash.defaults;
      var opts = this.tryResult('featureMixinOptions') || this.tryResult('mixinOptions') || {};
      return defaults({}, opts, this.defaultMixinOptions);
    }
    /**
     * A Feature Helper which defines a runtime or host mixin will extend the runtime with
     * the specified functions / properties.  The hostMixinOptions controls the binding, and argument
     * signature of these functions, similar to featureMixinOptions
     *
     * @readonly
     * @memberof Feature
     */

  }, {
    key: "hostMixinOptions",
    get: function get() {
      var defaults = this.lodash.defaults;
      var opts = this.tryResult('hostMixinOptions') || this.tryResult('mixinOptions') || {};
      return defaults({}, {
        scope: this.host
      }, opts, this.defaultMixinOptions);
    }
    /**
     * The default mixin options that will be used when the feature doesn't declare its own.
     * These will be passed to the applyInterface calls for both feature and host mixins.
     *
     * @type {MixinOptions}
     * @readonly
     * @memberof Feature
     */

  }, {
    key: "defaultMixinOptions",
    get: function get() {
      return {
        transformKeys: true,
        scope: this,
        partial: [this.context],
        insertOptions: true,
        right: true,
        hidden: false,
        configurable: true
      };
    }
  }, {
    key: "hostMixin",
    get: function get() {
      return this.projectMixin;
    }
  }, {
    key: "projectMixin",
    get: function get() {
      var _this2 = this;

      return this.chain.get('hostMethods').filter(function (m) {
        return isFunction(_this2.tryGet(m));
      }).keyBy(function (m) {
        return m;
      }).mapValues(function (m) {
        return _this2.tryGet(m);
      }).pickBy(function (v) {
        return isFunction(v);
      }).value();
    }
  }, {
    key: "featureMixin",
    get: function get() {
      var _this3 = this;

      var hostMethods = this.hostMethods;
      return this.chain.get('featureMethods').filter(function (m) {
        return hostMethods.indexOf(m) === -1 && isFunction(_this3.tryGet(m));
      }).keyBy(function (m) {
        return m;
      }).mapValues(function (m) {
        return _this3.tryGet(m);
      }).pickBy(function (v) {
        return isFunction(v);
      }).value();
    }
  }, {
    key: "featureMethods",
    get: function get() {
      return this.tryResult('featureMethods', []);
    }
  }, {
    key: "runtimeMethods",
    get: function get() {
      var _this$lodash2 = this.lodash,
          uniq = _this$lodash2.uniq,
          flatten = _this$lodash2.flatten; // need to consolidate on one name

      var hostMethods = this.tryGet('hostMethods', []);
      var runtimeMethods = this.tryGet('runtimeMethods', []);
      var projectMethods = this.tryGet('projectMethods', []);
      return uniq(flatten(hostMethods, runtimeMethods, projectMethods));
    }
  }, {
    key: "hostMethods",
    get: function get() {
      return this.runtimeMethods;
    }
  }, {
    key: "projectMethods",
    get: function get() {
      return this.runtimeMethods;
    }
  }, {
    key: "dependencies",
    get: function get() {
      return this.tryGet('dependencies', {});
    }
  }, {
    key: "isSupported",
    get: function get() {
      return this.tryResult('isSupported', true);
    }
  }, {
    key: "projectConfigKeys",
    get: function get() {
      var uniq = this.lodash.uniq;
      var _this$runtime$stringU = this.runtime.stringUtils,
          camelCase = _this$runtime$stringU.camelCase,
          snakeCase = _this$runtime$stringU.snakeCase;
      var cased = camelCase(snakeCase(this.name));
      return uniq(["runtime.argv.features.".concat(this.name), "runtime.options.features.".concat(this.name), "runtime.config.features.".concat(this.name), "runtime.argv.features.".concat(cased), "runtime.options.features.".concat(cased), "runtime.argv.".concat(this.name), "runtime.projectConfig.".concat(this.name), "runtime.options.".concat(this.name), "runtime.argv.".concat(cased), "runtime.projectConfig.".concat(cased), "runtime.options.".concat(cased)]);
    }
  }], [{
    key: "createRegistry",

    /**
     * This lets you create feature instances using the `runtime.feature` factory method
     * without first registering the module with the `runtime.features` registry.
     */

    /**
     * Since features are cacheable, you will get the same instance of the feature back
     * every time you call the `runtime.feature` factory method with the same arguments
     *
     * @example
     *
     *  const one = runtime.feature('my-feature')
     *  const two = runtime.feature('my-feature')
     *  const three = runtime.feature('my-feature', { cacheHelper: false })
     *
     *  console.assert(one.uuid === two.uuid)
     *  console.assert(three.uuid !== two.uuid)
     */

    /**
     * Creates a Feature registry.
     *
     * @param {Object} options options for the context registry
     * @param {String} [options.name='features'] the name of the registry
     * @param {Object<String,Function>} [options.features={}] items to populate the registry with
     *
     * @returns {ContextRegistry}
     */
    value: function createRegistry() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var reg = _helper_js__WEBPACK_IMPORTED_MODULE_8__[/* default */ "b"].createContextRegistry(options.name || 'features', _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default()({
        context: _helper_js__WEBPACK_IMPORTED_MODULE_8__[/* default */ "b"].createMockContext(options.features || {})
      }, options));
      reg.enabled = {};
      return reg;
    }
    /**
     * Attaches this helper class to a runtime.
     *
     * @param {Runtime} runtime the runtime to attach the Feature registry to
     * @param {Object} options options to pass through to `Helper.attach`
     * @param {String} [options.lookupProp='feature'] the name of the factory function to create on the runtime
     * @param {String} [options.registryProp='features'] the name of the registry prop to create on the runtime
     * @returns {Runtime}
     */

  }, {
    key: "attach",
    value: function attach(runtime) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var result = _helper_js__WEBPACK_IMPORTED_MODULE_8__[/* default */ "b"].attach(runtime, Feature, _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default()({
        registryProp: '_features',
        lookupProp: '_feature',
        cacheHelper: true,
        isCacheable: true,
        registry: Feature.registry
      }, options));
      return result;
    }
  }]);

  return Feature;
}(_helper_js__WEBPACK_IMPORTED_MODULE_8__[/* default */ "b"]);

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(Feature, "allowAnonymousProviders", false);

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(Feature, "isCacheable", true);

/* unused harmony default export */ var _unused_webpack_default_export = (Feature);
var isCacheable = true;
var attach = Feature.attach;
Feature.registry = Feature.createRegistry();
Feature.isSkypagerFeature = true;

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var fails = __webpack_require__(6);

module.exports = function (method, arg) {
  return !!method && fails(function () {
    // eslint-disable-next-line no-useless-call
    arg ? method.call(null, function () {
      /* empty */
    }, 1) : method.call(null);
  });
};

/***/ }),
/* 33 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extras", function() { return extras; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Reaction", function() { return Reaction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "untracked", function() { return untracked; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IDerivationState", function() { return IDerivationState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Atom", function() { return Atom; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BaseAtom", function() { return BaseAtom; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useStrict", function() { return useStrict; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isStrictModeEnabled", function() { return isStrictModeEnabled; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "spy", function() { return spy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "comparer", function() { return comparer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asReference", function() { return asReference; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asFlat", function() { return asFlat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asStructure", function() { return asStructure; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asMap", function() { return asMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isModifierDescriptor", function() { return isModifierDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isObservableObject", function() { return isObservableObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isBoxedObservable", function() { return isObservableValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isObservableArray", function() { return isObservableArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObservableMap", function() { return ObservableMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isObservableMap", function() { return isObservableMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "map", function() { return map; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transaction", function() { return transaction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "observable", function() { return observable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IObservableFactories", function() { return IObservableFactories; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "computed", function() { return computed; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isObservable", function() { return isObservable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isComputed", function() { return isComputed; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extendObservable", function() { return extendObservable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extendShallowObservable", function() { return extendShallowObservable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "observe", function() { return observe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "intercept", function() { return intercept; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "autorun", function() { return autorun; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "autorunAsync", function() { return autorunAsync; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "when", function() { return when; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reaction", function() { return reaction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "action", function() { return action; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isAction", function() { return isAction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "runInAction", function() { return runInAction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "expr", function() { return expr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toJS", function() { return toJS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createTransformer", function() { return createTransformer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "whyRun", function() { return whyRun; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isArrayLike", function() { return isArrayLike; });
/** MobX - (c) Michel Weststrate 2015, 2016 - MIT Licensed */

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */

/* global Reflect, Promise */
var extendStatics = Object.setPrototypeOf || {
  __proto__: []
} instanceof Array && function (d, b) {
  d.__proto__ = b;
} || function (d, b) {
  for (var p in b) {
    if (b.hasOwnProperty(p)) d[p] = b[p];
  }
};

function __extends(d, b) {
  extendStatics(d, b);

  function __() {
    this.constructor = d;
  }

  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}
/**
 * Anything that can be used to _store_ state is an Atom in mobx. Atoms have two important jobs
 *
 * 1) detect when they are being _used_ and report this (using reportObserved). This allows mobx to make the connection between running functions and the data they used
 * 2) they should notify mobx whenever they have _changed_. This way mobx can re-run any functions (derivations) that are using this atom.
 */


var BaseAtom = function () {
  /**
   * Create a new atom. For debugging purposes it is recommended to give it a name.
   * The onBecomeObserved and onBecomeUnobserved callbacks can be used for resource management.
   */
  function BaseAtom(name) {
    if (name === void 0) {
      name = "Atom@" + getNextId();
    }

    this.name = name;
    this.isPendingUnobservation = true; // for effective unobserving. BaseAtom has true, for extra optimization, so its onBecomeUnobserved never gets called, because it's not needed

    this.observers = [];
    this.observersIndexes = {};
    this.diffValue = 0;
    this.lastAccessedBy = 0;
    this.lowestObserverState = IDerivationState.NOT_TRACKING;
  }

  BaseAtom.prototype.onBecomeUnobserved = function () {// noop
  };
  /**
   * Invoke this method to notify mobx that your atom has been used somehow.
   */


  BaseAtom.prototype.reportObserved = function () {
    reportObserved(this);
  };
  /**
   * Invoke this method _after_ this method has changed to signal mobx that all its observers should invalidate.
   */


  BaseAtom.prototype.reportChanged = function () {
    startBatch();
    propagateChanged(this);
    endBatch();
  };

  BaseAtom.prototype.toString = function () {
    return this.name;
  };

  return BaseAtom;
}();

var Atom = function (_super) {
  __extends(Atom, _super);
  /**
   * Create a new atom. For debugging purposes it is recommended to give it a name.
   * The onBecomeObserved and onBecomeUnobserved callbacks can be used for resource management.
   */


  function Atom(name, onBecomeObservedHandler, onBecomeUnobservedHandler) {
    if (name === void 0) {
      name = "Atom@" + getNextId();
    }

    if (onBecomeObservedHandler === void 0) {
      onBecomeObservedHandler = noop;
    }

    if (onBecomeUnobservedHandler === void 0) {
      onBecomeUnobservedHandler = noop;
    }

    var _this = _super.call(this, name) || this;

    _this.name = name;
    _this.onBecomeObservedHandler = onBecomeObservedHandler;
    _this.onBecomeUnobservedHandler = onBecomeUnobservedHandler;
    _this.isPendingUnobservation = false; // for effective unobserving.

    _this.isBeingTracked = false;
    return _this;
  }

  Atom.prototype.reportObserved = function () {
    startBatch();

    _super.prototype.reportObserved.call(this);

    if (!this.isBeingTracked) {
      this.isBeingTracked = true;
      this.onBecomeObservedHandler();
    }

    endBatch();
    return !!globalState.trackingDerivation; // return doesn't really give useful info, because it can be as well calling computed which calls atom (no reactions)
    // also it could not trigger when calculating reaction dependent on Atom because Atom's value was cached by computed called by given reaction.
  };

  Atom.prototype.onBecomeUnobserved = function () {
    this.isBeingTracked = false;
    this.onBecomeUnobservedHandler();
  };

  return Atom;
}(BaseAtom);

var isAtom = createInstanceofPredicate("Atom", BaseAtom);

function hasInterceptors(interceptable) {
  return interceptable.interceptors && interceptable.interceptors.length > 0;
}

function registerInterceptor(interceptable, handler) {
  var interceptors = interceptable.interceptors || (interceptable.interceptors = []);
  interceptors.push(handler);
  return once(function () {
    var idx = interceptors.indexOf(handler);
    if (idx !== -1) interceptors.splice(idx, 1);
  });
}

function interceptChange(interceptable, change) {
  var prevU = untrackedStart();

  try {
    var interceptors = interceptable.interceptors;
    if (interceptors) for (var i = 0, l = interceptors.length; i < l; i++) {
      change = interceptors[i](change);
      invariant(!change || change.type, "Intercept handlers should return nothing or a change object");
      if (!change) break;
    }
    return change;
  } finally {
    untrackedEnd(prevU);
  }
}

function hasListeners(listenable) {
  return listenable.changeListeners && listenable.changeListeners.length > 0;
}

function registerListener(listenable, handler) {
  var listeners = listenable.changeListeners || (listenable.changeListeners = []);
  listeners.push(handler);
  return once(function () {
    var idx = listeners.indexOf(handler);
    if (idx !== -1) listeners.splice(idx, 1);
  });
}

function notifyListeners(listenable, change) {
  var prevU = untrackedStart();
  var listeners = listenable.changeListeners;
  if (!listeners) return;
  listeners = listeners.slice();

  for (var i = 0, l = listeners.length; i < l; i++) {
    listeners[i](change);
  }

  untrackedEnd(prevU);
}

function isSpyEnabled() {
  return !!globalState.spyListeners.length;
}

function spyReport(event) {
  if (!globalState.spyListeners.length) return;
  var listeners = globalState.spyListeners;

  for (var i = 0, l = listeners.length; i < l; i++) {
    listeners[i](event);
  }
}

function spyReportStart(event) {
  var change = objectAssign({}, event, {
    spyReportStart: true
  });
  spyReport(change);
}

var END_EVENT = {
  spyReportEnd: true
};

function spyReportEnd(change) {
  if (change) spyReport(objectAssign({}, change, END_EVENT));else spyReport(END_EVENT);
}

function spy(listener) {
  globalState.spyListeners.push(listener);
  return once(function () {
    var idx = globalState.spyListeners.indexOf(listener);
    if (idx !== -1) globalState.spyListeners.splice(idx, 1);
  });
}

function iteratorSymbol() {
  return typeof Symbol === "function" && Symbol.iterator || "@@iterator";
}

var IS_ITERATING_MARKER = "__$$iterating";

function arrayAsIterator(array) {
  // returning an array for entries(), values() etc for maps was a mis-interpretation of the specs..,
  // yet it is quite convenient to be able to use the response both as array directly and as iterator
  // it is suboptimal, but alas...
  invariant(array[IS_ITERATING_MARKER] !== true, "Illegal state: cannot recycle array as iterator");
  addHiddenFinalProp(array, IS_ITERATING_MARKER, true);
  var idx = -1;
  addHiddenFinalProp(array, "next", function next() {
    idx++;
    return {
      done: idx >= this.length,
      value: idx < this.length ? this[idx] : undefined
    };
  });
  return array;
}

function declareIterator(prototType, iteratorFactory) {
  addHiddenFinalProp(prototType, iteratorSymbol(), iteratorFactory);
}

var MAX_SPLICE_SIZE = 10000; // See e.g. https://github.com/mobxjs/mobx/issues/859
// Detects bug in safari 9.1.1 (or iOS 9 safari mobile). See #364

var safariPrototypeSetterInheritanceBug = function () {
  var v = false;
  var p = {};
  Object.defineProperty(p, "0", {
    set: function set() {
      v = true;
    }
  });
  Object.create(p)["0"] = 1;
  return v === false;
}();
/**
 * This array buffer contains two lists of properties, so that all arrays
 * can recycle their property definitions, which significantly improves performance of creating
 * properties on the fly.
 */


var OBSERVABLE_ARRAY_BUFFER_SIZE = 0; // Typescript workaround to make sure ObservableArray extends Array

var StubArray = function () {
  function StubArray() {}

  return StubArray;
}();

function inherit(ctor, proto) {
  if (typeof Object["setPrototypeOf"] !== "undefined") {
    Object["setPrototypeOf"](ctor.prototype, proto);
  } else if (typeof ctor.prototype.__proto__ !== "undefined") {
    ctor.prototype.__proto__ = proto;
  } else {
    ctor["prototype"] = proto;
  }
}

inherit(StubArray, Array.prototype); // Weex freeze Array.prototype
// Make them writeable and configurable in prototype chain
// https://github.com/alibaba/weex/pull/1529

if (Object.isFrozen(Array)) {
  ["constructor", "push", "shift", "concat", "pop", "unshift", "replace", "find", "findIndex", "splice", "reverse", "sort"].forEach(function (key) {
    Object.defineProperty(StubArray.prototype, key, {
      configurable: true,
      writable: true,
      value: Array.prototype[key]
    });
  });
}

var ObservableArrayAdministration = function () {
  function ObservableArrayAdministration(name, enhancer, array, owned) {
    this.array = array;
    this.owned = owned;
    this.values = [];
    this.lastKnownLength = 0;
    this.interceptors = null;
    this.changeListeners = null;
    this.atom = new BaseAtom(name || "ObservableArray@" + getNextId());

    this.enhancer = function (newV, oldV) {
      return enhancer(newV, oldV, name + "[..]");
    };
  }

  ObservableArrayAdministration.prototype.dehanceValue = function (value) {
    if (this.dehancer !== undefined) return this.dehancer(value);
    return value;
  };

  ObservableArrayAdministration.prototype.dehanceValues = function (values) {
    if (this.dehancer !== undefined) return values.map(this.dehancer);
    return values;
  };

  ObservableArrayAdministration.prototype.intercept = function (handler) {
    return registerInterceptor(this, handler);
  };

  ObservableArrayAdministration.prototype.observe = function (listener, fireImmediately) {
    if (fireImmediately === void 0) {
      fireImmediately = false;
    }

    if (fireImmediately) {
      listener({
        object: this.array,
        type: "splice",
        index: 0,
        added: this.values.slice(),
        addedCount: this.values.length,
        removed: [],
        removedCount: 0
      });
    }

    return registerListener(this, listener);
  };

  ObservableArrayAdministration.prototype.getArrayLength = function () {
    this.atom.reportObserved();
    return this.values.length;
  };

  ObservableArrayAdministration.prototype.setArrayLength = function (newLength) {
    if (typeof newLength !== "number" || newLength < 0) throw new Error("[mobx.array] Out of range: " + newLength);
    var currentLength = this.values.length;
    if (newLength === currentLength) return;else if (newLength > currentLength) {
      var newItems = new Array(newLength - currentLength);

      for (var i = 0; i < newLength - currentLength; i++) {
        newItems[i] = undefined;
      } // No Array.fill everywhere...


      this.spliceWithArray(currentLength, 0, newItems);
    } else this.spliceWithArray(newLength, currentLength - newLength);
  }; // adds / removes the necessary numeric properties to this object


  ObservableArrayAdministration.prototype.updateArrayLength = function (oldLength, delta) {
    if (oldLength !== this.lastKnownLength) throw new Error("[mobx] Modification exception: the internal structure of an observable array was changed. Did you use peek() to change it?");
    this.lastKnownLength += delta;
    if (delta > 0 && oldLength + delta + 1 > OBSERVABLE_ARRAY_BUFFER_SIZE) reserveArrayBuffer(oldLength + delta + 1);
  };

  ObservableArrayAdministration.prototype.spliceWithArray = function (index, deleteCount, newItems) {
    var _this = this;

    checkIfStateModificationsAreAllowed(this.atom);
    var length = this.values.length;
    if (index === undefined) index = 0;else if (index > length) index = length;else if (index < 0) index = Math.max(0, length + index);
    if (arguments.length === 1) deleteCount = length - index;else if (deleteCount === undefined || deleteCount === null) deleteCount = 0;else deleteCount = Math.max(0, Math.min(deleteCount, length - index));
    if (newItems === undefined) newItems = [];

    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        object: this.array,
        type: "splice",
        index: index,
        removedCount: deleteCount,
        added: newItems
      });
      if (!change) return EMPTY_ARRAY;
      deleteCount = change.removedCount;
      newItems = change.added;
    }

    newItems = newItems.map(function (v) {
      return _this.enhancer(v, undefined);
    });
    var lengthDelta = newItems.length - deleteCount;
    this.updateArrayLength(length, lengthDelta); // create or remove new entries

    var res = this.spliceItemsIntoValues(index, deleteCount, newItems);
    if (deleteCount !== 0 || newItems.length !== 0) this.notifyArraySplice(index, newItems, res);
    return this.dehanceValues(res);
  };

  ObservableArrayAdministration.prototype.spliceItemsIntoValues = function (index, deleteCount, newItems) {
    if (newItems.length < MAX_SPLICE_SIZE) {
      return (_a = this.values).splice.apply(_a, [index, deleteCount].concat(newItems));
    } else {
      var res = this.values.slice(index, index + deleteCount);
      this.values = this.values.slice(0, index).concat(newItems, this.values.slice(index + deleteCount));
      return res;
    }

    var _a;
  };

  ObservableArrayAdministration.prototype.notifyArrayChildUpdate = function (index, newValue, oldValue) {
    var notifySpy = !this.owned && isSpyEnabled();
    var notify = hasListeners(this);
    var change = notify || notifySpy ? {
      object: this.array,
      type: "update",
      index: index,
      newValue: newValue,
      oldValue: oldValue
    } : null;
    if (notifySpy) spyReportStart(change);
    this.atom.reportChanged();
    if (notify) notifyListeners(this, change);
    if (notifySpy) spyReportEnd();
  };

  ObservableArrayAdministration.prototype.notifyArraySplice = function (index, added, removed) {
    var notifySpy = !this.owned && isSpyEnabled();
    var notify = hasListeners(this);
    var change = notify || notifySpy ? {
      object: this.array,
      type: "splice",
      index: index,
      removed: removed,
      added: added,
      removedCount: removed.length,
      addedCount: added.length
    } : null;
    if (notifySpy) spyReportStart(change);
    this.atom.reportChanged(); // conform: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/observe

    if (notify) notifyListeners(this, change);
    if (notifySpy) spyReportEnd();
  };

  return ObservableArrayAdministration;
}();

var ObservableArray = function (_super) {
  __extends(ObservableArray, _super);

  function ObservableArray(initialValues, enhancer, name, owned) {
    if (name === void 0) {
      name = "ObservableArray@" + getNextId();
    }

    if (owned === void 0) {
      owned = false;
    }

    var _this = _super.call(this) || this;

    var adm = new ObservableArrayAdministration(name, enhancer, _this, owned);
    addHiddenFinalProp(_this, "$mobx", adm);

    if (initialValues && initialValues.length) {
      _this.spliceWithArray(0, 0, initialValues);
    }

    if (safariPrototypeSetterInheritanceBug) {
      // Seems that Safari won't use numeric prototype setter untill any * numeric property is
      // defined on the instance. After that it works fine, even if this property is deleted.
      Object.defineProperty(adm.array, "0", ENTRY_0);
    }

    return _this;
  }

  ObservableArray.prototype.intercept = function (handler) {
    return this.$mobx.intercept(handler);
  };

  ObservableArray.prototype.observe = function (listener, fireImmediately) {
    if (fireImmediately === void 0) {
      fireImmediately = false;
    }

    return this.$mobx.observe(listener, fireImmediately);
  };

  ObservableArray.prototype.clear = function () {
    return this.splice(0);
  };

  ObservableArray.prototype.concat = function () {
    var arrays = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      arrays[_i] = arguments[_i];
    }

    this.$mobx.atom.reportObserved();
    return Array.prototype.concat.apply(this.peek(), arrays.map(function (a) {
      return isObservableArray(a) ? a.peek() : a;
    }));
  };

  ObservableArray.prototype.replace = function (newItems) {
    return this.$mobx.spliceWithArray(0, this.$mobx.values.length, newItems);
  };
  /**
   * Converts this array back to a (shallow) javascript structure.
   * For a deep clone use mobx.toJS
   */


  ObservableArray.prototype.toJS = function () {
    return this.slice();
  };

  ObservableArray.prototype.toJSON = function () {
    // Used by JSON.stringify
    return this.toJS();
  };

  ObservableArray.prototype.peek = function () {
    this.$mobx.atom.reportObserved();
    return this.$mobx.dehanceValues(this.$mobx.values);
  }; // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find


  ObservableArray.prototype.find = function (predicate, thisArg, fromIndex) {
    if (fromIndex === void 0) {
      fromIndex = 0;
    }

    var idx = this.findIndex.apply(this, arguments);
    return idx === -1 ? undefined : this.get(idx);
  }; // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex


  ObservableArray.prototype.findIndex = function (predicate, thisArg, fromIndex) {
    if (fromIndex === void 0) {
      fromIndex = 0;
    }

    var items = this.peek(),
        l = items.length;

    for (var i = fromIndex; i < l; i++) {
      if (predicate.call(thisArg, items[i], i, this)) return i;
    }

    return -1;
  };
  /*
   * functions that do alter the internal structure of the array, (based on lib.es6.d.ts)
   * since these functions alter the inner structure of the array, the have side effects.
   * Because the have side effects, they should not be used in computed function,
   * and for that reason the do not call dependencyState.notifyObserved
   */


  ObservableArray.prototype.splice = function (index, deleteCount) {
    var newItems = [];

    for (var _i = 2; _i < arguments.length; _i++) {
      newItems[_i - 2] = arguments[_i];
    }

    switch (arguments.length) {
      case 0:
        return [];

      case 1:
        return this.$mobx.spliceWithArray(index);

      case 2:
        return this.$mobx.spliceWithArray(index, deleteCount);
    }

    return this.$mobx.spliceWithArray(index, deleteCount, newItems);
  };

  ObservableArray.prototype.spliceWithArray = function (index, deleteCount, newItems) {
    return this.$mobx.spliceWithArray(index, deleteCount, newItems);
  };

  ObservableArray.prototype.push = function () {
    var items = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      items[_i] = arguments[_i];
    }

    var adm = this.$mobx;
    adm.spliceWithArray(adm.values.length, 0, items);
    return adm.values.length;
  };

  ObservableArray.prototype.pop = function () {
    return this.splice(Math.max(this.$mobx.values.length - 1, 0), 1)[0];
  };

  ObservableArray.prototype.shift = function () {
    return this.splice(0, 1)[0];
  };

  ObservableArray.prototype.unshift = function () {
    var items = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      items[_i] = arguments[_i];
    }

    var adm = this.$mobx;
    adm.spliceWithArray(0, 0, items);
    return adm.values.length;
  };

  ObservableArray.prototype.reverse = function () {
    // reverse by default mutates in place before returning the result
    // which makes it both a 'derivation' and a 'mutation'.
    // so we deviate from the default and just make it an dervitation
    var clone = this.slice();
    return clone.reverse.apply(clone, arguments);
  };

  ObservableArray.prototype.sort = function (compareFn) {
    // sort by default mutates in place before returning the result
    // which goes against all good practices. Let's not change the array in place!
    var clone = this.slice();
    return clone.sort.apply(clone, arguments);
  };

  ObservableArray.prototype.remove = function (value) {
    var idx = this.$mobx.dehanceValues(this.$mobx.values).indexOf(value);

    if (idx > -1) {
      this.splice(idx, 1);
      return true;
    }

    return false;
  };

  ObservableArray.prototype.move = function (fromIndex, toIndex) {
    function checkIndex(index) {
      if (index < 0) {
        throw new Error("[mobx.array] Index out of bounds: " + index + " is negative");
      }

      var length = this.$mobx.values.length;

      if (index >= length) {
        throw new Error("[mobx.array] Index out of bounds: " + index + " is not smaller than " + length);
      }
    }

    checkIndex.call(this, fromIndex);
    checkIndex.call(this, toIndex);

    if (fromIndex === toIndex) {
      return;
    }

    var oldItems = this.$mobx.values;
    var newItems;

    if (fromIndex < toIndex) {
      newItems = oldItems.slice(0, fromIndex).concat(oldItems.slice(fromIndex + 1, toIndex + 1), [oldItems[fromIndex]], oldItems.slice(toIndex + 1));
    } else {
      // toIndex < fromIndex
      newItems = oldItems.slice(0, toIndex).concat([oldItems[fromIndex]], oldItems.slice(toIndex, fromIndex), oldItems.slice(fromIndex + 1));
    }

    this.replace(newItems);
  }; // See #734, in case property accessors are unreliable...


  ObservableArray.prototype.get = function (index) {
    var impl = this.$mobx;

    if (impl) {
      if (index < impl.values.length) {
        impl.atom.reportObserved();
        return impl.dehanceValue(impl.values[index]);
      }

      console.warn("[mobx.array] Attempt to read an array index (" + index + ") that is out of bounds (" + impl.values.length + "). Please check length first. Out of bound indices will not be tracked by MobX");
    }

    return undefined;
  }; // See #734, in case property accessors are unreliable...


  ObservableArray.prototype.set = function (index, newValue) {
    var adm = this.$mobx;
    var values = adm.values;

    if (index < values.length) {
      // update at index in range
      checkIfStateModificationsAreAllowed(adm.atom);
      var oldValue = values[index];

      if (hasInterceptors(adm)) {
        var change = interceptChange(adm, {
          type: "update",
          object: this,
          index: index,
          newValue: newValue
        });
        if (!change) return;
        newValue = change.newValue;
      }

      newValue = adm.enhancer(newValue, oldValue);
      var changed = newValue !== oldValue;

      if (changed) {
        values[index] = newValue;
        adm.notifyArrayChildUpdate(index, newValue, oldValue);
      }
    } else if (index === values.length) {
      // add a new item
      adm.spliceWithArray(index, 0, [newValue]);
    } else {
      // out of bounds
      throw new Error("[mobx.array] Index out of bounds, " + index + " is larger than " + values.length);
    }
  };

  return ObservableArray;
}(StubArray);

declareIterator(ObservableArray.prototype, function () {
  return arrayAsIterator(this.slice());
});
Object.defineProperty(ObservableArray.prototype, "length", {
  enumerable: false,
  configurable: true,
  get: function get() {
    return this.$mobx.getArrayLength();
  },
  set: function set(newLength) {
    this.$mobx.setArrayLength(newLength);
  }
});
["every", "filter", "forEach", "indexOf", "join", "lastIndexOf", "map", "reduce", "reduceRight", "slice", "some", "toString", "toLocaleString"].forEach(function (funcName) {
  var baseFunc = Array.prototype[funcName];
  invariant(typeof baseFunc === "function", "Base function not defined on Array prototype: '" + funcName + "'");
  addHiddenProp(ObservableArray.prototype, funcName, function () {
    return baseFunc.apply(this.peek(), arguments);
  });
});
/**
 * We don't want those to show up in `for (const key in ar)` ...
 */

makeNonEnumerable(ObservableArray.prototype, ["constructor", "intercept", "observe", "clear", "concat", "get", "replace", "toJS", "toJSON", "peek", "find", "findIndex", "splice", "spliceWithArray", "push", "pop", "set", "shift", "unshift", "reverse", "sort", "remove", "move", "toString", "toLocaleString"]); // See #364

var ENTRY_0 = createArrayEntryDescriptor(0);

function createArrayEntryDescriptor(index) {
  return {
    enumerable: false,
    configurable: false,
    get: function get() {
      // TODO: Check `this`?, see #752?
      return this.get(index);
    },
    set: function set(value) {
      this.set(index, value);
    }
  };
}

function createArrayBufferItem(index) {
  Object.defineProperty(ObservableArray.prototype, "" + index, createArrayEntryDescriptor(index));
}

function reserveArrayBuffer(max) {
  for (var index = OBSERVABLE_ARRAY_BUFFER_SIZE; index < max; index++) {
    createArrayBufferItem(index);
  }

  OBSERVABLE_ARRAY_BUFFER_SIZE = max;
}

reserveArrayBuffer(1000);
var isObservableArrayAdministration = createInstanceofPredicate("ObservableArrayAdministration", ObservableArrayAdministration);

function isObservableArray(thing) {
  return isObject(thing) && isObservableArrayAdministration(thing.$mobx);
}

var UNCHANGED = {};

var ObservableValue = function (_super) {
  __extends(ObservableValue, _super);

  function ObservableValue(value, enhancer, name, notifySpy) {
    if (name === void 0) {
      name = "ObservableValue@" + getNextId();
    }

    if (notifySpy === void 0) {
      notifySpy = true;
    }

    var _this = _super.call(this, name) || this;

    _this.enhancer = enhancer;
    _this.hasUnreportedChange = false;
    _this.dehancer = undefined;
    _this.value = enhancer(value, undefined, name);

    if (notifySpy && isSpyEnabled()) {
      // only notify spy if this is a stand-alone observable
      spyReport({
        type: "create",
        object: _this,
        newValue: _this.value
      });
    }

    return _this;
  }

  ObservableValue.prototype.dehanceValue = function (value) {
    if (this.dehancer !== undefined) return this.dehancer(value);
    return value;
  };

  ObservableValue.prototype.set = function (newValue) {
    var oldValue = this.value;
    newValue = this.prepareNewValue(newValue);

    if (newValue !== UNCHANGED) {
      var notifySpy = isSpyEnabled();

      if (notifySpy) {
        spyReportStart({
          type: "update",
          object: this,
          newValue: newValue,
          oldValue: oldValue
        });
      }

      this.setNewValue(newValue);
      if (notifySpy) spyReportEnd();
    }
  };

  ObservableValue.prototype.prepareNewValue = function (newValue) {
    checkIfStateModificationsAreAllowed(this);

    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        object: this,
        type: "update",
        newValue: newValue
      });
      if (!change) return UNCHANGED;
      newValue = change.newValue;
    } // apply modifier


    newValue = this.enhancer(newValue, this.value, this.name);
    return this.value !== newValue ? newValue : UNCHANGED;
  };

  ObservableValue.prototype.setNewValue = function (newValue) {
    var oldValue = this.value;
    this.value = newValue;
    this.reportChanged();

    if (hasListeners(this)) {
      notifyListeners(this, {
        type: "update",
        object: this,
        newValue: newValue,
        oldValue: oldValue
      });
    }
  };

  ObservableValue.prototype.get = function () {
    this.reportObserved();
    return this.dehanceValue(this.value);
  };

  ObservableValue.prototype.intercept = function (handler) {
    return registerInterceptor(this, handler);
  };

  ObservableValue.prototype.observe = function (listener, fireImmediately) {
    if (fireImmediately) listener({
      object: this,
      type: "update",
      newValue: this.value,
      oldValue: undefined
    });
    return registerListener(this, listener);
  };

  ObservableValue.prototype.toJSON = function () {
    return this.get();
  };

  ObservableValue.prototype.toString = function () {
    return this.name + "[" + this.value + "]";
  };

  ObservableValue.prototype.valueOf = function () {
    return toPrimitive(this.get());
  };

  return ObservableValue;
}(BaseAtom);

ObservableValue.prototype[primitiveSymbol()] = ObservableValue.prototype.valueOf;
var isObservableValue = createInstanceofPredicate("ObservableValue", ObservableValue);
var messages = {
  m001: "It is not allowed to assign new values to @action fields",
  m002: "`runInAction` expects a function",
  m003: "`runInAction` expects a function without arguments",
  m004: "autorun expects a function",
  m005: "Warning: attempted to pass an action to autorun. Actions are untracked and will not trigger on state changes. Use `reaction` or wrap only your state modification code in an action.",
  m006: "Warning: attempted to pass an action to autorunAsync. Actions are untracked and will not trigger on state changes. Use `reaction` or wrap only your state modification code in an action.",
  m007: "reaction only accepts 2 or 3 arguments. If migrating from MobX 2, please provide an options object",
  m008: "wrapping reaction expression in `asReference` is no longer supported, use options object instead",
  m009: "@computed can only be used on getter functions, like: '@computed get myProps() { return ...; }'. It looks like it was used on a property.",
  m010: "@computed can only be used on getter functions, like: '@computed get myProps() { return ...; }'",
  m011: "First argument to `computed` should be an expression. If using computed as decorator, don't pass it arguments",
  m012: "computed takes one or two arguments if used as function",
  m013: "[mobx.expr] 'expr' should only be used inside other reactive functions.",
  m014: "extendObservable expected 2 or more arguments",
  m015: "extendObservable expects an object as first argument",
  m016: "extendObservable should not be used on maps, use map.merge instead",
  m017: "all arguments of extendObservable should be objects",
  m018: "extending an object with another observable (object) is not supported. Please construct an explicit propertymap, using `toJS` if need. See issue #540",
  m019: "[mobx.isObservable] isObservable(object, propertyName) is not supported for arrays and maps. Use map.has or array.length instead.",
  m020: "modifiers can only be used for individual object properties",
  m021: "observable expects zero or one arguments",
  m022: "@observable can not be used on getters, use @computed instead",
  m024: "whyRun() can only be used if a derivation is active, or by passing an computed value / reaction explicitly. If you invoked whyRun from inside a computation; the computation is currently suspended but re-evaluating because somebody requested its value.",
  m025: "whyRun can only be used on reactions and computed values",
  m026: "`action` can only be invoked on functions",
  m028: "It is not allowed to set `useStrict` when a derivation is running",
  m029: "INTERNAL ERROR only onBecomeUnobserved shouldn't be called twice in a row",
  m030a: "Since strict-mode is enabled, changing observed observable values outside actions is not allowed. Please wrap the code in an `action` if this change is intended. Tried to modify: ",
  m030b: "Side effects like changing state are not allowed at this point. Are you trying to modify state from, for example, the render function of a React component? Tried to modify: ",
  m031: "Computed values are not allowed to cause side effects by changing observables that are already being observed. Tried to modify: ",
  m032: "* This computation is suspended (not in use by any reaction) and won't run automatically.\n	Didn't expect this computation to be suspended at this point?\n	  1. Make sure this computation is used by a reaction (reaction, autorun, observer).\n	  2. Check whether you are using this computation synchronously (in the same stack as they reaction that needs it).",
  m033: "`observe` doesn't support the fire immediately property for observable maps.",
  m034: "`mobx.map` is deprecated, use `new ObservableMap` or `mobx.observable.map` instead",
  m035: "Cannot make the designated object observable; it is not extensible",
  m036: "It is not possible to get index atoms from arrays",
  m037: "Hi there! I'm sorry you have just run into an exception.\nIf your debugger ends up here, know that some reaction (like the render() of an observer component, autorun or reaction)\nthrew an exception and that mobx caught it, to avoid that it brings the rest of your application down.\nThe original cause of the exception (the code that caused this reaction to run (again)), is still in the stack.\n\nHowever, more interesting is the actual stack trace of the error itself.\nHopefully the error is an instanceof Error, because in that case you can inspect the original stack of the error from where it was thrown.\nSee `error.stack` property, or press the very subtle \"(...)\" link you see near the console.error message that probably brought you here.\nThat stack is more interesting than the stack of this console.error itself.\n\nIf the exception you see is an exception you created yourself, make sure to use `throw new Error(\"Oops\")` instead of `throw \"Oops\"`,\nbecause the javascript environment will only preserve the original stack trace in the first form.\n\nYou can also make sure the debugger pauses the next time this very same exception is thrown by enabling \"Pause on caught exception\".\n(Note that it might pause on many other, unrelated exception as well).\n\nIf that all doesn't help you out, feel free to open an issue https://github.com/mobxjs/mobx/issues!\n",
  m038: "Missing items in this list?\n    1. Check whether all used values are properly marked as observable (use isObservable to verify)\n    2. Make sure you didn't dereference values too early. MobX observes props, not primitives. E.g: use 'person.name' instead of 'name' in your computation.\n"
};

function getMessage(id) {
  return messages[id];
}

function createAction(actionName, fn) {
  invariant(typeof fn === "function", getMessage("m026"));
  invariant(typeof actionName === "string" && actionName.length > 0, "actions should have valid names, got: '" + actionName + "'");

  var res = function res() {
    return executeAction(actionName, fn, this, arguments);
  };

  res.originalFn = fn;
  res.isMobxAction = true;
  return res;
}

function executeAction(actionName, fn, scope, args) {
  var runInfo = startAction(actionName, fn, scope, args);

  try {
    return fn.apply(scope, args);
  } finally {
    endAction(runInfo);
  }
}

function startAction(actionName, fn, scope, args) {
  var notifySpy = isSpyEnabled() && !!actionName;
  var startTime = 0;

  if (notifySpy) {
    startTime = Date.now();
    var l = args && args.length || 0;
    var flattendArgs = new Array(l);
    if (l > 0) for (var i = 0; i < l; i++) {
      flattendArgs[i] = args[i];
    }
    spyReportStart({
      type: "action",
      name: actionName,
      fn: fn,
      object: scope,
      arguments: flattendArgs
    });
  }

  var prevDerivation = untrackedStart();
  startBatch();
  var prevAllowStateChanges = allowStateChangesStart(true);
  return {
    prevDerivation: prevDerivation,
    prevAllowStateChanges: prevAllowStateChanges,
    notifySpy: notifySpy,
    startTime: startTime
  };
}

function endAction(runInfo) {
  allowStateChangesEnd(runInfo.prevAllowStateChanges);
  endBatch();
  untrackedEnd(runInfo.prevDerivation);
  if (runInfo.notifySpy) spyReportEnd({
    time: Date.now() - runInfo.startTime
  });
}

function useStrict(strict) {
  invariant(globalState.trackingDerivation === null, getMessage("m028"));
  globalState.strictMode = strict;
  globalState.allowStateChanges = !strict;
}

function isStrictModeEnabled() {
  return globalState.strictMode;
}

function allowStateChanges(allowStateChanges, func) {
  // TODO: deprecate / refactor this function in next major
  // Currently only used by `@observer`
  // Proposed change: remove first param, rename to `forbidStateChanges`,
  // require error callback instead of the hardcoded error message now used
  // Use `inAction` instead of allowStateChanges in derivation.ts to check strictMode
  var prev = allowStateChangesStart(allowStateChanges);
  var res;

  try {
    res = func();
  } finally {
    allowStateChangesEnd(prev);
  }

  return res;
}

function allowStateChangesStart(allowStateChanges) {
  var prev = globalState.allowStateChanges;
  globalState.allowStateChanges = allowStateChanges;
  return prev;
}

function allowStateChangesEnd(prev) {
  globalState.allowStateChanges = prev;
}
/**
 * Constructs a decorator, that normalizes the differences between
 * TypeScript and Babel. Mainly caused by the fact that legacy-decorator cannot assign
 * values during instance creation to properties that have a getter setter.
 *
 * - Sigh -
 *
 * Also takes care of the difference between @decorator field and @decorator(args) field, and different forms of values.
 * For performance (cpu and mem) reasons the properties are always defined on the prototype (at least initially).
 * This means that these properties despite being enumerable might not show up in Object.keys() (but they will show up in for...in loops).
 */


function createClassPropertyDecorator(
/**
 * This function is invoked once, when the property is added to a new instance.
 * When this happens is not strictly determined due to differences in TS and Babel:
 * Typescript: Usually when constructing the new instance
 * Babel, sometimes Typescript: during the first get / set
 * Both: when calling `runLazyInitializers(instance)`
 */
onInitialize, _get, _set, enumerable,
/**
 * Can this decorator invoked with arguments? e.g. @decorator(args)
 */
allowCustomArguments) {
  function classPropertyDecorator(target, key, descriptor, customArgs, argLen) {
    if (argLen === void 0) {
      argLen = 0;
    }

    invariant(allowCustomArguments || quacksLikeADecorator(arguments), "This function is a decorator, but it wasn't invoked like a decorator");

    if (!descriptor) {
      // typescript (except for getter / setters)
      var newDescriptor = {
        enumerable: enumerable,
        configurable: true,
        get: function get() {
          if (!this.__mobxInitializedProps || this.__mobxInitializedProps[key] !== true) typescriptInitializeProperty(this, key, undefined, onInitialize, customArgs, descriptor);
          return _get.call(this, key);
        },
        set: function set(v) {
          if (!this.__mobxInitializedProps || this.__mobxInitializedProps[key] !== true) {
            typescriptInitializeProperty(this, key, v, onInitialize, customArgs, descriptor);
          } else {
            _set.call(this, key, v);
          }
        }
      };

      if (arguments.length < 3 || arguments.length === 5 && argLen < 3) {
        // Typescript target is ES3, so it won't define property for us
        // or using Reflect.decorate polyfill, which will return no descriptor
        // (see https://github.com/mobxjs/mobx/issues/333)
        Object.defineProperty(target, key, newDescriptor);
      }

      return newDescriptor;
    } else {
      // babel and typescript getter / setter props
      if (!hasOwnProperty(target, "__mobxLazyInitializers")) {
        addHiddenProp(target, "__mobxLazyInitializers", target.__mobxLazyInitializers && target.__mobxLazyInitializers.slice() || [] // support inheritance
        );
      }

      var value_1 = descriptor.value,
          initializer_1 = descriptor.initializer;

      target.__mobxLazyInitializers.push(function (instance) {
        onInitialize(instance, key, initializer_1 ? initializer_1.call(instance) : value_1, customArgs, descriptor);
      });

      return {
        enumerable: enumerable,
        configurable: true,
        get: function get() {
          if (this.__mobxDidRunLazyInitializers !== true) runLazyInitializers(this);
          return _get.call(this, key);
        },
        set: function set(v) {
          if (this.__mobxDidRunLazyInitializers !== true) runLazyInitializers(this);

          _set.call(this, key, v);
        }
      };
    }
  }

  if (allowCustomArguments) {
    /** If custom arguments are allowed, we should return a function that returns a decorator */
    return function () {
      /** Direct invocation: @decorator bla */
      if (quacksLikeADecorator(arguments)) return classPropertyDecorator.apply(null, arguments);
      /** Indirect invocation: @decorator(args) bla */

      var outerArgs = arguments;
      var argLen = arguments.length;
      return function (target, key, descriptor) {
        return classPropertyDecorator(target, key, descriptor, outerArgs, argLen);
      };
    };
  }

  return classPropertyDecorator;
}

function typescriptInitializeProperty(instance, key, v, onInitialize, customArgs, baseDescriptor) {
  if (!hasOwnProperty(instance, "__mobxInitializedProps")) addHiddenProp(instance, "__mobxInitializedProps", {});
  instance.__mobxInitializedProps[key] = true;
  onInitialize(instance, key, v, customArgs, baseDescriptor);
}

function runLazyInitializers(instance) {
  if (instance.__mobxDidRunLazyInitializers === true) return;

  if (instance.__mobxLazyInitializers) {
    addHiddenProp(instance, "__mobxDidRunLazyInitializers", true);
    instance.__mobxDidRunLazyInitializers && instance.__mobxLazyInitializers.forEach(function (initializer) {
      return initializer(instance);
    });
  }
}

function quacksLikeADecorator(args) {
  return (args.length === 2 || args.length === 3) && typeof args[1] === "string";
}

var actionFieldDecorator = createClassPropertyDecorator(function (target, key, value, args, originalDescriptor) {
  var actionName = args && args.length === 1 ? args[0] : value.name || key || "<unnamed action>";
  var wrappedAction = action(actionName, value);
  addHiddenProp(target, key, wrappedAction);
}, function (key) {
  return this[key];
}, function () {
  invariant(false, getMessage("m001"));
}, false, true);
var boundActionDecorator = createClassPropertyDecorator(function (target, key, value) {
  defineBoundAction(target, key, value);
}, function (key) {
  return this[key];
}, function () {
  invariant(false, getMessage("m001"));
}, false, false);

var action = function action(arg1, arg2, arg3, arg4) {
  if (arguments.length === 1 && typeof arg1 === "function") return createAction(arg1.name || "<unnamed action>", arg1);
  if (arguments.length === 2 && typeof arg2 === "function") return createAction(arg1, arg2);
  if (arguments.length === 1 && typeof arg1 === "string") return namedActionDecorator(arg1);
  return namedActionDecorator(arg2).apply(null, arguments);
};

action.bound = function boundAction(arg1, arg2, arg3) {
  if (typeof arg1 === "function") {
    var action_1 = createAction("<not yet bound action>", arg1);
    action_1.autoBind = true;
    return action_1;
  }

  return boundActionDecorator.apply(null, arguments);
};

function namedActionDecorator(name) {
  return function (target, prop, descriptor) {
    if (descriptor && typeof descriptor.value === "function") {
      // TypeScript @action method() { }. Defined on proto before being decorated
      // Don't use the field decorator if we are just decorating a method
      descriptor.value = createAction(name, descriptor.value);
      descriptor.enumerable = false;
      descriptor.configurable = true;
      return descriptor;
    }

    if (descriptor !== undefined && descriptor.get !== undefined) {
      throw new Error("[mobx] action is not expected to be used with getters");
    } // bound instance methods


    return actionFieldDecorator(name).apply(this, arguments);
  };
}

function runInAction(arg1, arg2, arg3) {
  var actionName = typeof arg1 === "string" ? arg1 : arg1.name || "<unnamed action>";
  var fn = typeof arg1 === "function" ? arg1 : arg2;
  var scope = typeof arg1 === "function" ? arg2 : arg3;
  invariant(typeof fn === "function", getMessage("m002"));
  invariant(fn.length === 0, getMessage("m003"));
  invariant(typeof actionName === "string" && actionName.length > 0, "actions should have valid names, got: '" + actionName + "'");
  return executeAction(actionName, fn, scope, undefined);
}

function isAction(thing) {
  return typeof thing === "function" && thing.isMobxAction === true;
}

function defineBoundAction(target, propertyName, fn) {
  var res = function res() {
    return executeAction(propertyName, fn, target, arguments);
  };

  res.isMobxAction = true;
  addHiddenProp(target, propertyName, res);
}

function identityComparer(a, b) {
  return a === b;
}

function structuralComparer(a, b) {
  if (typeof a === "number" && typeof b === "number" && isNaN(a) && isNaN(b)) {
    return true;
  }

  return deepEqual(a, b);
}

function defaultComparer(a, b) {
  if (typeof a === "number" && typeof b === "number" && isNaN(a) && isNaN(b)) {
    return true;
  }

  return identityComparer(a, b);
}

var comparer = {
  identity: identityComparer,
  structural: structuralComparer,
  default: defaultComparer
};

function autorun(arg1, arg2, arg3) {
  var name, view, scope;

  if (typeof arg1 === "string") {
    name = arg1;
    view = arg2;
    scope = arg3;
  } else {
    name = arg1.name || "Autorun@" + getNextId();
    view = arg1;
    scope = arg2;
  }

  invariant(typeof view === "function", getMessage("m004"));
  invariant(isAction(view) === false, getMessage("m005"));
  if (scope) view = view.bind(scope);
  var reaction = new Reaction(name, function () {
    this.track(reactionRunner);
  });

  function reactionRunner() {
    view(reaction);
  }

  reaction.schedule();
  return reaction.getDisposer();
}

function when(arg1, arg2, arg3, arg4) {
  var name, predicate, effect, scope;

  if (typeof arg1 === "string") {
    name = arg1;
    predicate = arg2;
    effect = arg3;
    scope = arg4;
  } else {
    name = "When@" + getNextId();
    predicate = arg1;
    effect = arg2;
    scope = arg3;
  }

  var disposer = autorun(name, function (r) {
    if (predicate.call(scope)) {
      r.dispose();
      var prevUntracked = untrackedStart();
      effect.call(scope);
      untrackedEnd(prevUntracked);
    }
  });
  return disposer;
}

function autorunAsync(arg1, arg2, arg3, arg4) {
  var name, func, delay, scope;

  if (typeof arg1 === "string") {
    name = arg1;
    func = arg2;
    delay = arg3;
    scope = arg4;
  } else {
    name = arg1.name || "AutorunAsync@" + getNextId();
    func = arg1;
    delay = arg2;
    scope = arg3;
  }

  invariant(isAction(func) === false, getMessage("m006"));
  if (delay === void 0) delay = 1;
  if (scope) func = func.bind(scope);
  var isScheduled = false;
  var r = new Reaction(name, function () {
    if (!isScheduled) {
      isScheduled = true;
      setTimeout(function () {
        isScheduled = false;
        if (!r.isDisposed) r.track(reactionRunner);
      }, delay);
    }
  });

  function reactionRunner() {
    func(r);
  }

  r.schedule();
  return r.getDisposer();
}

function reaction(expression, effect, arg3) {
  if (arguments.length > 3) {
    fail(getMessage("m007"));
  }

  if (isModifierDescriptor(expression)) {
    fail(getMessage("m008"));
  }

  var opts;

  if (typeof arg3 === "object") {
    opts = arg3;
  } else {
    opts = {};
  }

  opts.name = opts.name || expression.name || effect.name || "Reaction@" + getNextId();
  opts.fireImmediately = arg3 === true || opts.fireImmediately === true;
  opts.delay = opts.delay || 0;
  opts.compareStructural = opts.compareStructural || opts.struct || false; // TODO: creates ugly spy events, use `effect = (r) => runInAction(opts.name, () => effect(r))` instead

  effect = action(opts.name, opts.context ? effect.bind(opts.context) : effect);

  if (opts.context) {
    expression = expression.bind(opts.context);
  }

  var firstTime = true;
  var isScheduled = false;
  var value;
  var equals = opts.equals ? opts.equals : opts.compareStructural || opts.struct ? comparer.structural : comparer.default;
  var r = new Reaction(opts.name, function () {
    if (firstTime || opts.delay < 1) {
      reactionRunner();
    } else if (!isScheduled) {
      isScheduled = true;
      setTimeout(function () {
        isScheduled = false;
        reactionRunner();
      }, opts.delay);
    }
  });

  function reactionRunner() {
    if (r.isDisposed) return;
    var changed = false;
    r.track(function () {
      var nextValue = expression(r);
      changed = firstTime || !equals(value, nextValue);
      value = nextValue;
    });
    if (firstTime && opts.fireImmediately) effect(value, r);
    if (!firstTime && changed === true) effect(value, r);
    if (firstTime) firstTime = false;
  }

  r.schedule();
  return r.getDisposer();
}
/**
 * A node in the state dependency root that observes other nodes, and can be observed itself.
 *
 * ComputedValue will remember the result of the computation for the duration of the batch, or
 * while being observed.
 *
 * During this time it will recompute only when one of its direct dependencies changed,
 * but only when it is being accessed with `ComputedValue.get()`.
 *
 * Implementation description:
 * 1. First time it's being accessed it will compute and remember result
 *    give back remembered result until 2. happens
 * 2. First time any deep dependency change, propagate POSSIBLY_STALE to all observers, wait for 3.
 * 3. When it's being accessed, recompute if any shallow dependency changed.
 *    if result changed: propagate STALE to all observers, that were POSSIBLY_STALE from the last step.
 *    go to step 2. either way
 *
 * If at any point it's outside batch and it isn't observed: reset everything and go to 1.
 */


var ComputedValue = function () {
  /**
   * Create a new computed value based on a function expression.
   *
   * The `name` property is for debug purposes only.
   *
   * The `equals` property specifies the comparer function to use to determine if a newly produced
   * value differs from the previous value. Two comparers are provided in the library; `defaultComparer`
   * compares based on identity comparison (===), and `structualComparer` deeply compares the structure.
   * Structural comparison can be convenient if you always produce an new aggregated object and
   * don't want to notify observers if it is structurally the same.
   * This is useful for working with vectors, mouse coordinates etc.
   */
  function ComputedValue(derivation, scope, equals, name, setter) {
    this.derivation = derivation;
    this.scope = scope;
    this.equals = equals;
    this.dependenciesState = IDerivationState.NOT_TRACKING;
    this.observing = []; // nodes we are looking at. Our value depends on these nodes

    this.newObserving = null; // during tracking it's an array with new observed observers

    this.isPendingUnobservation = false;
    this.observers = [];
    this.observersIndexes = {};
    this.diffValue = 0;
    this.runId = 0;
    this.lastAccessedBy = 0;
    this.lowestObserverState = IDerivationState.UP_TO_DATE;
    this.unboundDepsCount = 0;
    this.__mapid = "#" + getNextId();
    this.value = new CaughtException(null);
    this.isComputing = false; // to check for cycles

    this.isRunningSetter = false;
    this.name = name || "ComputedValue@" + getNextId();
    if (setter) this.setter = createAction(name + "-setter", setter);
  }

  ComputedValue.prototype.onBecomeStale = function () {
    propagateMaybeChanged(this);
  };

  ComputedValue.prototype.onBecomeUnobserved = function () {
    clearObserving(this);
    this.value = undefined;
  };
  /**
   * Returns the current value of this computed value.
   * Will evaluate its computation first if needed.
   */


  ComputedValue.prototype.get = function () {
    invariant(!this.isComputing, "Cycle detected in computation " + this.name, this.derivation);

    if (globalState.inBatch === 0) {
      // This is an minor optimization which could be omitted to simplify the code
      // The computedValue is accessed outside of any mobx stuff. Batch observing should be enough and don't need
      // tracking as it will never be called again inside this batch.
      startBatch();
      if (shouldCompute(this)) this.value = this.computeValue(false);
      endBatch();
    } else {
      reportObserved(this);
      if (shouldCompute(this)) if (this.trackAndCompute()) propagateChangeConfirmed(this);
    }

    var result = this.value;
    if (isCaughtException(result)) throw result.cause;
    return result;
  };

  ComputedValue.prototype.peek = function () {
    var res = this.computeValue(false);
    if (isCaughtException(res)) throw res.cause;
    return res;
  };

  ComputedValue.prototype.set = function (value) {
    if (this.setter) {
      invariant(!this.isRunningSetter, "The setter of computed value '" + this.name + "' is trying to update itself. Did you intend to update an _observable_ value, instead of the computed property?");
      this.isRunningSetter = true;

      try {
        this.setter.call(this.scope, value);
      } finally {
        this.isRunningSetter = false;
      }
    } else invariant(false, "[ComputedValue '" + this.name + "'] It is not possible to assign a new value to a computed value.");
  };

  ComputedValue.prototype.trackAndCompute = function () {
    if (isSpyEnabled()) {
      spyReport({
        object: this.scope,
        type: "compute",
        fn: this.derivation
      });
    }

    var oldValue = this.value;
    var newValue = this.value = this.computeValue(true);
    return isCaughtException(oldValue) || isCaughtException(newValue) || !this.equals(oldValue, newValue);
  };

  ComputedValue.prototype.computeValue = function (track) {
    this.isComputing = true;
    globalState.computationDepth++;
    var res;

    if (track) {
      res = trackDerivedFunction(this, this.derivation, this.scope);
    } else {
      try {
        res = this.derivation.call(this.scope);
      } catch (e) {
        res = new CaughtException(e);
      }
    }

    globalState.computationDepth--;
    this.isComputing = false;
    return res;
  };

  ComputedValue.prototype.observe = function (listener, fireImmediately) {
    var _this = this;

    var firstTime = true;
    var prevValue = undefined;
    return autorun(function () {
      var newValue = _this.get();

      if (!firstTime || fireImmediately) {
        var prevU = untrackedStart();
        listener({
          type: "update",
          object: _this,
          newValue: newValue,
          oldValue: prevValue
        });
        untrackedEnd(prevU);
      }

      firstTime = false;
      prevValue = newValue;
    });
  };

  ComputedValue.prototype.toJSON = function () {
    return this.get();
  };

  ComputedValue.prototype.toString = function () {
    return this.name + "[" + this.derivation.toString() + "]";
  };

  ComputedValue.prototype.valueOf = function () {
    return toPrimitive(this.get());
  };

  ComputedValue.prototype.whyRun = function () {
    var isTracking = Boolean(globalState.trackingDerivation);
    var observing = unique(this.isComputing ? this.newObserving : this.observing).map(function (dep) {
      return dep.name;
    });
    var observers = unique(getObservers(this).map(function (dep) {
      return dep.name;
    }));
    return "\nWhyRun? computation '" + this.name + "':\n * Running because: " + (isTracking ? "[active] the value of this computation is needed by a reaction" : this.isComputing ? "[get] The value of this computed was requested outside a reaction" : "[idle] not running at the moment") + "\n" + (this.dependenciesState === IDerivationState.NOT_TRACKING ? getMessage("m032") : " * This computation will re-run if any of the following observables changes:\n    " + joinStrings(observing) + "\n    " + (this.isComputing && isTracking ? " (... or any observable accessed during the remainder of the current run)" : "") + "\n\t" + getMessage("m038") + "\n\n  * If the outcome of this computation changes, the following observers will be re-run:\n    " + joinStrings(observers) + "\n");
  };

  return ComputedValue;
}();

ComputedValue.prototype[primitiveSymbol()] = ComputedValue.prototype.valueOf;
var isComputedValue = createInstanceofPredicate("ComputedValue", ComputedValue);

var ObservableObjectAdministration = function () {
  function ObservableObjectAdministration(target, name) {
    this.target = target;
    this.name = name;
    this.values = {};
    this.changeListeners = null;
    this.interceptors = null;
  }
  /**
   * Observes this object. Triggers for the events 'add', 'update' and 'delete'.
   * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/observe
   * for callback details
   */


  ObservableObjectAdministration.prototype.observe = function (callback, fireImmediately) {
    invariant(fireImmediately !== true, "`observe` doesn't support the fire immediately property for observable objects.");
    return registerListener(this, callback);
  };

  ObservableObjectAdministration.prototype.intercept = function (handler) {
    return registerInterceptor(this, handler);
  };

  return ObservableObjectAdministration;
}();

function asObservableObject(target, name) {
  if (isObservableObject(target) && target.hasOwnProperty("$mobx")) return target.$mobx;
  invariant(Object.isExtensible(target), getMessage("m035"));
  if (!isPlainObject(target)) name = (target.constructor.name || "ObservableObject") + "@" + getNextId();
  if (!name) name = "ObservableObject@" + getNextId();
  var adm = new ObservableObjectAdministration(target, name);
  addHiddenFinalProp(target, "$mobx", adm);
  return adm;
}

function defineObservablePropertyFromDescriptor(adm, propName, descriptor, defaultEnhancer) {
  if (adm.values[propName] && !isComputedValue(adm.values[propName])) {
    // already observable property
    invariant("value" in descriptor, "The property " + propName + " in " + adm.name + " is already observable, cannot redefine it as computed property");
    adm.target[propName] = descriptor.value; // the property setter will make 'value' reactive if needed.

    return;
  } // not yet observable property


  if ("value" in descriptor) {
    // not a computed value
    if (isModifierDescriptor(descriptor.value)) {
      // x : ref(someValue)
      var modifierDescriptor = descriptor.value;
      defineObservableProperty(adm, propName, modifierDescriptor.initialValue, modifierDescriptor.enhancer);
    } else if (isAction(descriptor.value) && descriptor.value.autoBind === true) {
      defineBoundAction(adm.target, propName, descriptor.value.originalFn);
    } else if (isComputedValue(descriptor.value)) {
      // x: computed(someExpr)
      defineComputedPropertyFromComputedValue(adm, propName, descriptor.value);
    } else {
      // x: someValue
      defineObservableProperty(adm, propName, descriptor.value, defaultEnhancer);
    }
  } else {
    // get x() { return 3 } set x(v) { }
    defineComputedProperty(adm, propName, descriptor.get, descriptor.set, comparer.default, true);
  }
}

function defineObservableProperty(adm, propName, newValue, enhancer) {
  assertPropertyConfigurable(adm.target, propName);

  if (hasInterceptors(adm)) {
    var change = interceptChange(adm, {
      object: adm.target,
      name: propName,
      type: "add",
      newValue: newValue
    });
    if (!change) return;
    newValue = change.newValue;
  }

  var observable = adm.values[propName] = new ObservableValue(newValue, enhancer, adm.name + "." + propName, false);
  newValue = observable.value; // observableValue might have changed it

  Object.defineProperty(adm.target, propName, generateObservablePropConfig(propName));
  notifyPropertyAddition(adm, adm.target, propName, newValue);
}

function defineComputedProperty(adm, propName, getter, setter, equals, asInstanceProperty) {
  if (asInstanceProperty) assertPropertyConfigurable(adm.target, propName);
  adm.values[propName] = new ComputedValue(getter, adm.target, equals, adm.name + "." + propName, setter);

  if (asInstanceProperty) {
    Object.defineProperty(adm.target, propName, generateComputedPropConfig(propName));
  }
}

function defineComputedPropertyFromComputedValue(adm, propName, computedValue) {
  var name = adm.name + "." + propName;
  computedValue.name = name;
  if (!computedValue.scope) computedValue.scope = adm.target;
  adm.values[propName] = computedValue;
  Object.defineProperty(adm.target, propName, generateComputedPropConfig(propName));
}

var observablePropertyConfigs = {};
var computedPropertyConfigs = {};

function generateObservablePropConfig(propName) {
  return observablePropertyConfigs[propName] || (observablePropertyConfigs[propName] = {
    configurable: true,
    enumerable: true,
    get: function get() {
      return this.$mobx.values[propName].get();
    },
    set: function set(v) {
      setPropertyValue(this, propName, v);
    }
  });
}

function generateComputedPropConfig(propName) {
  return computedPropertyConfigs[propName] || (computedPropertyConfigs[propName] = {
    configurable: true,
    enumerable: false,
    get: function get() {
      return this.$mobx.values[propName].get();
    },
    set: function set(v) {
      return this.$mobx.values[propName].set(v);
    }
  });
}

function setPropertyValue(instance, name, newValue) {
  var adm = instance.$mobx;
  var observable = adm.values[name]; // intercept

  if (hasInterceptors(adm)) {
    var change = interceptChange(adm, {
      type: "update",
      object: instance,
      name: name,
      newValue: newValue
    });
    if (!change) return;
    newValue = change.newValue;
  }

  newValue = observable.prepareNewValue(newValue); // notify spy & observers

  if (newValue !== UNCHANGED) {
    var notify = hasListeners(adm);
    var notifySpy = isSpyEnabled();
    var change = notify || notifySpy ? {
      type: "update",
      object: instance,
      oldValue: observable.value,
      name: name,
      newValue: newValue
    } : null;
    if (notifySpy) spyReportStart(change);
    observable.setNewValue(newValue);
    if (notify) notifyListeners(adm, change);
    if (notifySpy) spyReportEnd();
  }
}

function notifyPropertyAddition(adm, object, name, newValue) {
  var notify = hasListeners(adm);
  var notifySpy = isSpyEnabled();
  var change = notify || notifySpy ? {
    type: "add",
    object: object,
    name: name,
    newValue: newValue
  } : null;
  if (notifySpy) spyReportStart(change);
  if (notify) notifyListeners(adm, change);
  if (notifySpy) spyReportEnd();
}

var isObservableObjectAdministration = createInstanceofPredicate("ObservableObjectAdministration", ObservableObjectAdministration);

function isObservableObject(thing) {
  if (isObject(thing)) {
    // Initializers run lazily when transpiling to babel, so make sure they are run...
    runLazyInitializers(thing);
    return isObservableObjectAdministration(thing.$mobx);
  }

  return false;
}
/**
 * Returns true if the provided value is reactive.
 * @param value object, function or array
 * @param property if property is specified, checks whether value.property is reactive.
 */


function isObservable(value, property) {
  if (value === null || value === undefined) return false;

  if (property !== undefined) {
    if (isObservableArray(value) || isObservableMap(value)) throw new Error(getMessage("m019"));else if (isObservableObject(value)) {
      var o = value.$mobx;
      return o.values && !!o.values[property];
    }
    return false;
  } // For first check, see #701


  return isObservableObject(value) || !!value.$mobx || isAtom(value) || isReaction(value) || isComputedValue(value);
}

function createDecoratorForEnhancer(enhancer) {
  invariant(!!enhancer, ":(");
  return createClassPropertyDecorator(function (target, name, baseValue, _, baseDescriptor) {
    assertPropertyConfigurable(target, name);
    invariant(!baseDescriptor || !baseDescriptor.get, getMessage("m022"));
    var adm = asObservableObject(target, undefined);
    defineObservableProperty(adm, name, baseValue, enhancer);
  }, function (name) {
    var observable = this.$mobx.values[name];
    if (observable === undefined // See #505
    ) return undefined;
    return observable.get();
  }, function (name, value) {
    setPropertyValue(this, name, value);
  }, true, false);
}

function extendObservable(target) {
  var properties = [];

  for (var _i = 1; _i < arguments.length; _i++) {
    properties[_i - 1] = arguments[_i];
  }

  return extendObservableHelper(target, deepEnhancer, properties);
}

function extendShallowObservable(target) {
  var properties = [];

  for (var _i = 1; _i < arguments.length; _i++) {
    properties[_i - 1] = arguments[_i];
  }

  return extendObservableHelper(target, referenceEnhancer, properties);
}

function extendObservableHelper(target, defaultEnhancer, properties) {
  invariant(arguments.length >= 2, getMessage("m014"));
  invariant(typeof target === "object", getMessage("m015"));
  invariant(!isObservableMap(target), getMessage("m016"));
  properties.forEach(function (propSet) {
    invariant(typeof propSet === "object", getMessage("m017"));
    invariant(!isObservable(propSet), getMessage("m018"));
  });
  var adm = asObservableObject(target);
  var definedProps = {}; // Note could be optimised if properties.length === 1

  for (var i = properties.length - 1; i >= 0; i--) {
    var propSet = properties[i];

    for (var key in propSet) {
      if (definedProps[key] !== true && hasOwnProperty(propSet, key)) {
        definedProps[key] = true;
        if (target === propSet && !isPropertyConfigurable(target, key)) continue; // see #111, skip non-configurable or non-writable props for `observable(object)`.

        var descriptor = Object.getOwnPropertyDescriptor(propSet, key);
        defineObservablePropertyFromDescriptor(adm, key, descriptor, defaultEnhancer);
      }
    }
  }

  return target;
}

var deepDecorator = createDecoratorForEnhancer(deepEnhancer);
var shallowDecorator = createDecoratorForEnhancer(shallowEnhancer);
var refDecorator = createDecoratorForEnhancer(referenceEnhancer);
var deepStructDecorator = createDecoratorForEnhancer(deepStructEnhancer);
var refStructDecorator = createDecoratorForEnhancer(refStructEnhancer);
/**
 * Turns an object, array or function into a reactive structure.
 * @param v the value which should become observable.
 */

function createObservable(v) {
  if (v === void 0) {
    v = undefined;
  } // @observable someProp;


  if (typeof arguments[1] === "string") return deepDecorator.apply(null, arguments);
  invariant(arguments.length <= 1, getMessage("m021"));
  invariant(!isModifierDescriptor(v), getMessage("m020")); // it is an observable already, done

  if (isObservable(v)) return v; // something that can be converted and mutated?

  var res = deepEnhancer(v, undefined, undefined); // this value could be converted to a new observable data structure, return it

  if (res !== v) return res; // otherwise, just box it

  return observable.box(v);
}

var IObservableFactories = function () {
  function IObservableFactories() {}

  IObservableFactories.prototype.box = function (value, name) {
    if (arguments.length > 2) incorrectlyUsedAsDecorator("box");
    return new ObservableValue(value, deepEnhancer, name);
  };

  IObservableFactories.prototype.shallowBox = function (value, name) {
    if (arguments.length > 2) incorrectlyUsedAsDecorator("shallowBox");
    return new ObservableValue(value, referenceEnhancer, name);
  };

  IObservableFactories.prototype.array = function (initialValues, name) {
    if (arguments.length > 2) incorrectlyUsedAsDecorator("array");
    return new ObservableArray(initialValues, deepEnhancer, name);
  };

  IObservableFactories.prototype.shallowArray = function (initialValues, name) {
    if (arguments.length > 2) incorrectlyUsedAsDecorator("shallowArray");
    return new ObservableArray(initialValues, referenceEnhancer, name);
  };

  IObservableFactories.prototype.map = function (initialValues, name) {
    if (arguments.length > 2) incorrectlyUsedAsDecorator("map");
    return new ObservableMap(initialValues, deepEnhancer, name);
  };

  IObservableFactories.prototype.shallowMap = function (initialValues, name) {
    if (arguments.length > 2) incorrectlyUsedAsDecorator("shallowMap");
    return new ObservableMap(initialValues, referenceEnhancer, name);
  };

  IObservableFactories.prototype.object = function (props, name) {
    if (arguments.length > 2) incorrectlyUsedAsDecorator("object");
    var res = {}; // convert to observable object

    asObservableObject(res, name); // add properties

    extendObservable(res, props);
    return res;
  };

  IObservableFactories.prototype.shallowObject = function (props, name) {
    if (arguments.length > 2) incorrectlyUsedAsDecorator("shallowObject");
    var res = {};
    asObservableObject(res, name);
    extendShallowObservable(res, props);
    return res;
  };

  IObservableFactories.prototype.ref = function () {
    if (arguments.length < 2) {
      // although ref creates actually a modifier descriptor, the type of the resultig properties
      // of the object is `T` in the end, when the descriptors are interpreted
      return createModifierDescriptor(referenceEnhancer, arguments[0]);
    } else {
      return refDecorator.apply(null, arguments);
    }
  };

  IObservableFactories.prototype.shallow = function () {
    if (arguments.length < 2) {
      // although ref creates actually a modifier descriptor, the type of the resultig properties
      // of the object is `T` in the end, when the descriptors are interpreted
      return createModifierDescriptor(shallowEnhancer, arguments[0]);
    } else {
      return shallowDecorator.apply(null, arguments);
    }
  };

  IObservableFactories.prototype.deep = function () {
    if (arguments.length < 2) {
      // although ref creates actually a modifier descriptor, the type of the resultig properties
      // of the object is `T` in the end, when the descriptors are interpreted
      return createModifierDescriptor(deepEnhancer, arguments[0]);
    } else {
      return deepDecorator.apply(null, arguments);
    }
  };

  IObservableFactories.prototype.struct = function () {
    if (arguments.length < 2) {
      // although ref creates actually a modifier descriptor, the type of the resultig properties
      // of the object is `T` in the end, when the descriptors are interpreted
      return createModifierDescriptor(deepStructEnhancer, arguments[0]);
    } else {
      return deepStructDecorator.apply(null, arguments);
    }
  };

  return IObservableFactories;
}();

var observable = createObservable; // weird trick to keep our typings nicely with our funcs, and still extend the observable function
// ES6 class methods aren't enumerable, can't use Object.keys

Object.getOwnPropertyNames(IObservableFactories.prototype).filter(function (name) {
  return name !== "constructor";
}).forEach(function (name) {
  return observable[name] = IObservableFactories.prototype[name];
});
observable.deep.struct = observable.struct;

observable.ref.struct = function () {
  if (arguments.length < 2) {
    return createModifierDescriptor(refStructEnhancer, arguments[0]);
  } else {
    return refStructDecorator.apply(null, arguments);
  }
};

function incorrectlyUsedAsDecorator(methodName) {
  fail("Expected one or two arguments to observable." + methodName + ". Did you accidentally try to use observable." + methodName + " as decorator?");
}

function isModifierDescriptor(thing) {
  return typeof thing === "object" && thing !== null && thing.isMobxModifierDescriptor === true;
}

function createModifierDescriptor(enhancer, initialValue) {
  invariant(!isModifierDescriptor(initialValue), "Modifiers cannot be nested");
  return {
    isMobxModifierDescriptor: true,
    initialValue: initialValue,
    enhancer: enhancer
  };
}

function deepEnhancer(v, _, name) {
  if (isModifierDescriptor(v)) fail("You tried to assign a modifier wrapped value to a collection, please define modifiers when creating the collection, not when modifying it"); // it is an observable already, done

  if (isObservable(v)) return v; // something that can be converted and mutated?

  if (Array.isArray(v)) return observable.array(v, name);
  if (isPlainObject(v)) return observable.object(v, name);
  if (isES6Map(v)) return observable.map(v, name);
  return v;
}

function shallowEnhancer(v, _, name) {
  if (isModifierDescriptor(v)) fail("You tried to assign a modifier wrapped value to a collection, please define modifiers when creating the collection, not when modifying it");
  if (v === undefined || v === null) return v;
  if (isObservableObject(v) || isObservableArray(v) || isObservableMap(v)) return v;
  if (Array.isArray(v)) return observable.shallowArray(v, name);
  if (isPlainObject(v)) return observable.shallowObject(v, name);
  if (isES6Map(v)) return observable.shallowMap(v, name);
  return fail("The shallow modifier / decorator can only used in combination with arrays, objects and maps");
}

function referenceEnhancer(newValue) {
  // never turn into an observable
  return newValue;
}

function deepStructEnhancer(v, oldValue, name) {
  // don't confuse structurally compare enhancer with ref enhancer! The latter is probably
  // more suited for immutable objects
  if (deepEqual(v, oldValue)) return oldValue; // it is an observable already, done

  if (isObservable(v)) return v; // something that can be converted and mutated?

  if (Array.isArray(v)) return new ObservableArray(v, deepStructEnhancer, name);
  if (isES6Map(v)) return new ObservableMap(v, deepStructEnhancer, name);

  if (isPlainObject(v)) {
    var res = {};
    asObservableObject(res, name);
    extendObservableHelper(res, deepStructEnhancer, [v]);
    return res;
  }

  return v;
}

function refStructEnhancer(v, oldValue, name) {
  if (deepEqual(v, oldValue)) return oldValue;
  return v;
}
/**
 * During a transaction no views are updated until the end of the transaction.
 * The transaction will be run synchronously nonetheless.
 *
 * @param action a function that updates some reactive state
 * @returns any value that was returned by the 'action' parameter.
 */


function transaction(action, thisArg) {
  if (thisArg === void 0) {
    thisArg = undefined;
  }

  startBatch();

  try {
    return action.apply(thisArg);
  } finally {
    endBatch();
  }
}

var ObservableMapMarker = {};

var ObservableMap = function () {
  function ObservableMap(initialData, enhancer, name) {
    if (enhancer === void 0) {
      enhancer = deepEnhancer;
    }

    if (name === void 0) {
      name = "ObservableMap@" + getNextId();
    }

    this.enhancer = enhancer;
    this.name = name;
    this.$mobx = ObservableMapMarker;
    this._data = Object.create(null);
    this._hasMap = Object.create(null); // hasMap, not hashMap >-).

    this._keys = new ObservableArray(undefined, referenceEnhancer, this.name + ".keys()", true);
    this.interceptors = null;
    this.changeListeners = null;
    this.dehancer = undefined;
    this.merge(initialData);
  }

  ObservableMap.prototype._has = function (key) {
    return typeof this._data[key] !== "undefined";
  };

  ObservableMap.prototype.has = function (key) {
    if (!this.isValidKey(key)) return false;
    key = "" + key;
    if (this._hasMap[key]) return this._hasMap[key].get();
    return this._updateHasMapEntry(key, false).get();
  };

  ObservableMap.prototype.set = function (key, value) {
    this.assertValidKey(key);
    key = "" + key;

    var hasKey = this._has(key);

    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        type: hasKey ? "update" : "add",
        object: this,
        newValue: value,
        name: key
      });
      if (!change) return this;
      value = change.newValue;
    }

    if (hasKey) {
      this._updateValue(key, value);
    } else {
      this._addValue(key, value);
    }

    return this;
  };

  ObservableMap.prototype.delete = function (key) {
    var _this = this;

    this.assertValidKey(key);
    key = "" + key;

    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        type: "delete",
        object: this,
        name: key
      });
      if (!change) return false;
    }

    if (this._has(key)) {
      var notifySpy = isSpyEnabled();
      var notify = hasListeners(this);
      var change = notify || notifySpy ? {
        type: "delete",
        object: this,
        oldValue: this._data[key].value,
        name: key
      } : null;
      if (notifySpy) spyReportStart(change);
      transaction(function () {
        _this._keys.remove(key);

        _this._updateHasMapEntry(key, false);

        var observable$$1 = _this._data[key];
        observable$$1.setNewValue(undefined);
        _this._data[key] = undefined;
      });
      if (notify) notifyListeners(this, change);
      if (notifySpy) spyReportEnd();
      return true;
    }

    return false;
  };

  ObservableMap.prototype._updateHasMapEntry = function (key, value) {
    // optimization; don't fill the hasMap if we are not observing, or remove entry if there are no observers anymore
    var entry = this._hasMap[key];

    if (entry) {
      entry.setNewValue(value);
    } else {
      entry = this._hasMap[key] = new ObservableValue(value, referenceEnhancer, this.name + "." + key + "?", false);
    }

    return entry;
  };

  ObservableMap.prototype._updateValue = function (name, newValue) {
    var observable$$1 = this._data[name];
    newValue = observable$$1.prepareNewValue(newValue);

    if (newValue !== UNCHANGED) {
      var notifySpy = isSpyEnabled();
      var notify = hasListeners(this);
      var change = notify || notifySpy ? {
        type: "update",
        object: this,
        oldValue: observable$$1.value,
        name: name,
        newValue: newValue
      } : null;
      if (notifySpy) spyReportStart(change);
      observable$$1.setNewValue(newValue);
      if (notify) notifyListeners(this, change);
      if (notifySpy) spyReportEnd();
    }
  };

  ObservableMap.prototype._addValue = function (name, newValue) {
    var _this = this;

    transaction(function () {
      var observable$$1 = _this._data[name] = new ObservableValue(newValue, _this.enhancer, _this.name + "." + name, false);
      newValue = observable$$1.value; // value might have been changed

      _this._updateHasMapEntry(name, true);

      _this._keys.push(name);
    });
    var notifySpy = isSpyEnabled();
    var notify = hasListeners(this);
    var change = notify || notifySpy ? {
      type: "add",
      object: this,
      name: name,
      newValue: newValue
    } : null;
    if (notifySpy) spyReportStart(change);
    if (notify) notifyListeners(this, change);
    if (notifySpy) spyReportEnd();
  };

  ObservableMap.prototype.get = function (key) {
    key = "" + key;
    if (this.has(key)) return this.dehanceValue(this._data[key].get());
    return this.dehanceValue(undefined);
  };

  ObservableMap.prototype.dehanceValue = function (value) {
    if (this.dehancer !== undefined) {
      return this.dehancer(value);
    }

    return value;
  };

  ObservableMap.prototype.keys = function () {
    return arrayAsIterator(this._keys.slice());
  };

  ObservableMap.prototype.values = function () {
    return arrayAsIterator(this._keys.map(this.get, this));
  };

  ObservableMap.prototype.entries = function () {
    var _this = this;

    return arrayAsIterator(this._keys.map(function (key) {
      return [key, _this.get(key)];
    }));
  };

  ObservableMap.prototype.forEach = function (callback, thisArg) {
    var _this = this;

    this.keys().forEach(function (key) {
      return callback.call(thisArg, _this.get(key), key, _this);
    });
  };
  /** Merge another object into this object, returns this. */


  ObservableMap.prototype.merge = function (other) {
    var _this = this;

    if (isObservableMap(other)) {
      other = other.toJS();
    }

    transaction(function () {
      if (isPlainObject(other)) Object.keys(other).forEach(function (key) {
        return _this.set(key, other[key]);
      });else if (Array.isArray(other)) other.forEach(function (_a) {
        var key = _a[0],
            value = _a[1];
        return _this.set(key, value);
      });else if (isES6Map(other)) other.forEach(function (value, key) {
        return _this.set(key, value);
      });else if (other !== null && other !== undefined) fail("Cannot initialize map from " + other);
    });
    return this;
  };

  ObservableMap.prototype.clear = function () {
    var _this = this;

    transaction(function () {
      untracked(function () {
        _this.keys().forEach(_this.delete, _this);
      });
    });
  };

  ObservableMap.prototype.replace = function (values) {
    var _this = this;

    transaction(function () {
      _this.clear();

      _this.merge(values);
    });
    return this;
  };

  Object.defineProperty(ObservableMap.prototype, "size", {
    get: function get() {
      return this._keys.length;
    },
    enumerable: true,
    configurable: true
  });
  /**
   * Returns a shallow non observable object clone of this map.
   * Note that the values might still be observable. For a deep clone use mobx.toJS.
   */

  ObservableMap.prototype.toJS = function () {
    var _this = this;

    var res = {};
    this.keys().forEach(function (key) {
      return res[key] = _this.get(key);
    });
    return res;
  };

  ObservableMap.prototype.toJSON = function () {
    // Used by JSON.stringify
    return this.toJS();
  };

  ObservableMap.prototype.isValidKey = function (key) {
    if (key === null || key === undefined) return false;
    if (typeof key === "string" || typeof key === "number" || typeof key === "boolean") return true;
    return false;
  };

  ObservableMap.prototype.assertValidKey = function (key) {
    if (!this.isValidKey(key)) throw new Error("[mobx.map] Invalid key: '" + key + "', only strings, numbers and booleans are accepted as key in observable maps.");
  };

  ObservableMap.prototype.toString = function () {
    var _this = this;

    return this.name + "[{ " + this.keys().map(function (key) {
      return key + ": " + ("" + _this.get(key));
    }).join(", ") + " }]";
  };
  /**
   * Observes this object. Triggers for the events 'add', 'update' and 'delete'.
   * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/observe
   * for callback details
   */


  ObservableMap.prototype.observe = function (listener, fireImmediately) {
    invariant(fireImmediately !== true, getMessage("m033"));
    return registerListener(this, listener);
  };

  ObservableMap.prototype.intercept = function (handler) {
    return registerInterceptor(this, handler);
  };

  return ObservableMap;
}();

declareIterator(ObservableMap.prototype, function () {
  return this.entries();
});

function map(initialValues) {
  deprecated("`mobx.map` is deprecated, use `new ObservableMap` or `mobx.observable.map` instead");
  return observable.map(initialValues);
}
/* 'var' fixes small-build issue */


var isObservableMap = createInstanceofPredicate("ObservableMap", ObservableMap);
var EMPTY_ARRAY = [];
Object.freeze(EMPTY_ARRAY);

function getGlobal() {
  return typeof window !== "undefined" ? window : global;
}

function getNextId() {
  return ++globalState.mobxGuid;
}

function fail(message, thing) {
  invariant(false, message, thing);
  throw "X"; // unreachable
}

function invariant(check, message, thing) {
  if (!check) throw new Error("[mobx] Invariant failed: " + message + (thing ? " in '" + thing + "'" : ""));
}
/**
 * Prints a deprecation message, but only one time.
 * Returns false if the deprecated message was already printed before
 */


var deprecatedMessages = [];

function deprecated(msg) {
  if (deprecatedMessages.indexOf(msg) !== -1) return false;
  deprecatedMessages.push(msg);
  console.error("[mobx] Deprecated: " + msg);
  return true;
}
/**
 * Makes sure that the provided function is invoked at most once.
 */


function once(func) {
  var invoked = false;
  return function () {
    if (invoked) return;
    invoked = true;
    return func.apply(this, arguments);
  };
}

var noop = function noop() {};

function unique(list) {
  var res = [];
  list.forEach(function (item) {
    if (res.indexOf(item) === -1) res.push(item);
  });
  return res;
}

function joinStrings(things, limit, separator) {
  if (limit === void 0) {
    limit = 100;
  }

  if (separator === void 0) {
    separator = " - ";
  }

  if (!things) return "";
  var sliced = things.slice(0, limit);
  return "" + sliced.join(separator) + (things.length > limit ? " (... and " + (things.length - limit) + "more)" : "");
}

function isObject(value) {
  return value !== null && typeof value === "object";
}

function isPlainObject(value) {
  if (value === null || typeof value !== "object") return false;
  var proto = Object.getPrototypeOf(value);
  return proto === Object.prototype || proto === null;
}

function objectAssign() {
  var res = arguments[0];

  for (var i = 1, l = arguments.length; i < l; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (hasOwnProperty(source, key)) {
        res[key] = source[key];
      }
    }
  }

  return res;
}

var prototypeHasOwnProperty = Object.prototype.hasOwnProperty;

function hasOwnProperty(object, propName) {
  return prototypeHasOwnProperty.call(object, propName);
}

function makeNonEnumerable(object, propNames) {
  for (var i = 0; i < propNames.length; i++) {
    addHiddenProp(object, propNames[i], object[propNames[i]]);
  }
}

function addHiddenProp(object, propName, value) {
  Object.defineProperty(object, propName, {
    enumerable: false,
    writable: true,
    configurable: true,
    value: value
  });
}

function addHiddenFinalProp(object, propName, value) {
  Object.defineProperty(object, propName, {
    enumerable: false,
    writable: false,
    configurable: true,
    value: value
  });
}

function isPropertyConfigurable(object, prop) {
  var descriptor = Object.getOwnPropertyDescriptor(object, prop);
  return !descriptor || descriptor.configurable !== false && descriptor.writable !== false;
}

function assertPropertyConfigurable(object, prop) {
  invariant(isPropertyConfigurable(object, prop), "Cannot make property '" + prop + "' observable, it is not configurable and writable in the target object");
}

function getEnumerableKeys(obj) {
  var res = [];

  for (var key in obj) {
    res.push(key);
  }

  return res;
}
/**
 * Naive deepEqual. Doesn't check for prototype, non-enumerable or out-of-range properties on arrays.
 * If you have such a case, you probably should use this function but something fancier :).
 */


function deepEqual(a, b) {
  if (a === null && b === null) return true;
  if (a === undefined && b === undefined) return true;
  if (typeof a !== "object") return a === b;
  var aIsArray = isArrayLike(a);
  var aIsMap = isMapLike(a);

  if (aIsArray !== isArrayLike(b)) {
    return false;
  } else if (aIsMap !== isMapLike(b)) {
    return false;
  } else if (aIsArray) {
    if (a.length !== b.length) return false;

    for (var i = a.length - 1; i >= 0; i--) {
      if (!deepEqual(a[i], b[i])) return false;
    }

    return true;
  } else if (aIsMap) {
    if (a.size !== b.size) return false;
    var equals_1 = true;
    a.forEach(function (value, key) {
      equals_1 = equals_1 && deepEqual(b.get(key), value);
    });
    return equals_1;
  } else if (typeof a === "object" && typeof b === "object") {
    if (a === null || b === null) return false;

    if (isMapLike(a) && isMapLike(b)) {
      if (a.size !== b.size) return false; // Freaking inefficient.... Create PR if you run into this :) Much appreciated!

      return deepEqual(observable.shallowMap(a).entries(), observable.shallowMap(b).entries());
    }

    if (getEnumerableKeys(a).length !== getEnumerableKeys(b).length) return false;

    for (var prop in a) {
      if (!(prop in b)) return false;
      if (!deepEqual(a[prop], b[prop])) return false;
    }

    return true;
  }

  return false;
}

function createInstanceofPredicate(name, clazz) {
  var propName = "isMobX" + name;
  clazz.prototype[propName] = true;
  return function (x) {
    return isObject(x) && x[propName] === true;
  };
}
/**
 * Returns whether the argument is an array, disregarding observability.
 */


function isArrayLike(x) {
  return Array.isArray(x) || isObservableArray(x);
}

function isMapLike(x) {
  return isES6Map(x) || isObservableMap(x);
}

function isES6Map(thing) {
  if (getGlobal().Map !== undefined && thing instanceof getGlobal().Map) return true;
  return false;
}

function primitiveSymbol() {
  return typeof Symbol === "function" && Symbol.toPrimitive || "@@toPrimitive";
}

function toPrimitive(value) {
  return value === null ? null : typeof value === "object" ? "" + value : value;
}
/**
 * These values will persist if global state is reset
 */


var persistentKeys = ["mobxGuid", "resetId", "spyListeners", "strictMode", "runId"];

var MobXGlobals = function () {
  function MobXGlobals() {
    /**
     * MobXGlobals version.
     * MobX compatiblity with other versions loaded in memory as long as this version matches.
     * It indicates that the global state still stores similar information
     */
    this.version = 5;
    /**
     * Currently running derivation
     */

    this.trackingDerivation = null;
    /**
     * Are we running a computation currently? (not a reaction)
     */

    this.computationDepth = 0;
    /**
     * Each time a derivation is tracked, it is assigned a unique run-id
     */

    this.runId = 0;
    /**
     * 'guid' for general purpose. Will be persisted amongst resets.
     */

    this.mobxGuid = 0;
    /**
     * Are we in a batch block? (and how many of them)
     */

    this.inBatch = 0;
    /**
     * Observables that don't have observers anymore, and are about to be
     * suspended, unless somebody else accesses it in the same batch
     *
     * @type {IObservable[]}
     */

    this.pendingUnobservations = [];
    /**
     * List of scheduled, not yet executed, reactions.
     */

    this.pendingReactions = [];
    /**
     * Are we currently processing reactions?
     */

    this.isRunningReactions = false;
    /**
     * Is it allowed to change observables at this point?
     * In general, MobX doesn't allow that when running computations and React.render.
     * To ensure that those functions stay pure.
     */

    this.allowStateChanges = true;
    /**
     * If strict mode is enabled, state changes are by default not allowed
     */

    this.strictMode = false;
    /**
     * Used by createTransformer to detect that the global state has been reset.
     */

    this.resetId = 0;
    /**
     * Spy callbacks
     */

    this.spyListeners = [];
    /**
     * Globally attached error handlers that react specifically to errors in reactions
     */

    this.globalReactionErrorHandlers = [];
  }

  return MobXGlobals;
}();

var globalState = new MobXGlobals();
var shareGlobalStateCalled = false;
var runInIsolationCalled = false;
var warnedAboutMultipleInstances = false;
{
  var global_1 = getGlobal();

  if (!global_1.__mobxInstanceCount) {
    global_1.__mobxInstanceCount = 1;
  } else {
    global_1.__mobxInstanceCount++;
    setTimeout(function () {
      if (!shareGlobalStateCalled && !runInIsolationCalled && !warnedAboutMultipleInstances) {
        warnedAboutMultipleInstances = true;
        console.warn("[mobx] Warning: there are multiple mobx instances active. This might lead to unexpected results. See https://github.com/mobxjs/mobx/issues/1082 for details.");
      }
    });
  }
}

function isolateGlobalState() {
  runInIsolationCalled = true;
  getGlobal().__mobxInstanceCount--;
}

function shareGlobalState() {
  // TODO: remove in 4.0; just use peer dependencies instead.
  deprecated("Using `shareGlobalState` is not recommended, use peer dependencies instead. See https://github.com/mobxjs/mobx/issues/1082 for details.");
  shareGlobalStateCalled = true;
  var global = getGlobal();
  var ownState = globalState;
  /**
   * Backward compatibility check
   */

  if (global.__mobservableTrackingStack || global.__mobservableViewStack) throw new Error("[mobx] An incompatible version of mobservable is already loaded.");
  if (global.__mobxGlobal && global.__mobxGlobal.version !== ownState.version) throw new Error("[mobx] An incompatible version of mobx is already loaded.");
  if (global.__mobxGlobal) globalState = global.__mobxGlobal;else global.__mobxGlobal = ownState;
}

function getGlobalState() {
  return globalState;
}
/**
 * For testing purposes only; this will break the internal state of existing observables,
 * but can be used to get back at a stable state after throwing errors
 */


function resetGlobalState() {
  globalState.resetId++;
  var defaultGlobals = new MobXGlobals();

  for (var key in defaultGlobals) {
    if (persistentKeys.indexOf(key) === -1) globalState[key] = defaultGlobals[key];
  }

  globalState.allowStateChanges = !globalState.strictMode;
}

function hasObservers(observable) {
  return observable.observers && observable.observers.length > 0;
}

function getObservers(observable) {
  return observable.observers;
}

function addObserver(observable, node) {
  // invariant(node.dependenciesState !== -1, "INTERNAL ERROR, can add only dependenciesState !== -1");
  // invariant(observable._observers.indexOf(node) === -1, "INTERNAL ERROR add already added node");
  // invariantObservers(observable);
  var l = observable.observers.length;

  if (l) {
    // because object assignment is relatively expensive, let's not store data about index 0.
    observable.observersIndexes[node.__mapid] = l;
  }

  observable.observers[l] = node;
  if (observable.lowestObserverState > node.dependenciesState) observable.lowestObserverState = node.dependenciesState; // invariantObservers(observable);
  // invariant(observable._observers.indexOf(node) !== -1, "INTERNAL ERROR didn't add node");
}

function removeObserver(observable, node) {
  // invariant(globalState.inBatch > 0, "INTERNAL ERROR, remove should be called only inside batch");
  // invariant(observable._observers.indexOf(node) !== -1, "INTERNAL ERROR remove already removed node");
  // invariantObservers(observable);
  if (observable.observers.length === 1) {
    // deleting last observer
    observable.observers.length = 0;
    queueForUnobservation(observable);
  } else {
    // deleting from _observersIndexes is straight forward, to delete from _observers, let's swap `node` with last element
    var list = observable.observers;
    var map = observable.observersIndexes;
    var filler = list.pop(); // get last element, which should fill the place of `node`, so the array doesn't have holes

    if (filler !== node) {
      // otherwise node was the last element, which already got removed from array
      var index = map[node.__mapid] || 0; // getting index of `node`. this is the only place we actually use map.

      if (index) {
        // map store all indexes but 0, see comment in `addObserver`
        map[filler.__mapid] = index;
      } else {
        delete map[filler.__mapid];
      }

      list[index] = filler;
    }

    delete map[node.__mapid];
  } // invariantObservers(observable);
  // invariant(observable._observers.indexOf(node) === -1, "INTERNAL ERROR remove already removed node2");

}

function queueForUnobservation(observable) {
  if (!observable.isPendingUnobservation) {
    // invariant(globalState.inBatch > 0, "INTERNAL ERROR, remove should be called only inside batch");
    // invariant(observable._observers.length === 0, "INTERNAL ERROR, should only queue for unobservation unobserved observables");
    observable.isPendingUnobservation = true;
    globalState.pendingUnobservations.push(observable);
  }
}
/**
 * Batch starts a transaction, at least for purposes of memoizing ComputedValues when nothing else does.
 * During a batch `onBecomeUnobserved` will be called at most once per observable.
 * Avoids unnecessary recalculations.
 */


function startBatch() {
  globalState.inBatch++;
}

function endBatch() {
  if (--globalState.inBatch === 0) {
    runReactions(); // the batch is actually about to finish, all unobserving should happen here.

    var list = globalState.pendingUnobservations;

    for (var i = 0; i < list.length; i++) {
      var observable = list[i];
      observable.isPendingUnobservation = false;

      if (observable.observers.length === 0) {
        observable.onBecomeUnobserved(); // NOTE: onBecomeUnobserved might push to `pendingUnobservations`
      }
    }

    globalState.pendingUnobservations = [];
  }
}

function reportObserved(observable) {
  var derivation = globalState.trackingDerivation;

  if (derivation !== null) {
    /**
     * Simple optimization, give each derivation run an unique id (runId)
     * Check if last time this observable was accessed the same runId is used
     * if this is the case, the relation is already known
     */
    if (derivation.runId !== observable.lastAccessedBy) {
      observable.lastAccessedBy = derivation.runId;
      derivation.newObserving[derivation.unboundDepsCount++] = observable;
    }
  } else if (observable.observers.length === 0) {
    queueForUnobservation(observable);
  }
}
/**
 * NOTE: current propagation mechanism will in case of self reruning autoruns behave unexpectedly
 * It will propagate changes to observers from previous run
 * It's hard or maybe impossible (with reasonable perf) to get it right with current approach
 * Hopefully self reruning autoruns aren't a feature people should depend on
 * Also most basic use cases should be ok
 */
// Called by Atom when its value changes


function propagateChanged(observable) {
  // invariantLOS(observable, "changed start");
  if (observable.lowestObserverState === IDerivationState.STALE) return;
  observable.lowestObserverState = IDerivationState.STALE;
  var observers = observable.observers;
  var i = observers.length;

  while (i--) {
    var d = observers[i];
    if (d.dependenciesState === IDerivationState.UP_TO_DATE) d.onBecomeStale();
    d.dependenciesState = IDerivationState.STALE;
  } // invariantLOS(observable, "changed end");

} // Called by ComputedValue when it recalculate and its value changed


function propagateChangeConfirmed(observable) {
  // invariantLOS(observable, "confirmed start");
  if (observable.lowestObserverState === IDerivationState.STALE) return;
  observable.lowestObserverState = IDerivationState.STALE;
  var observers = observable.observers;
  var i = observers.length;

  while (i--) {
    var d = observers[i];
    if (d.dependenciesState === IDerivationState.POSSIBLY_STALE) d.dependenciesState = IDerivationState.STALE;else if (d.dependenciesState === IDerivationState.UP_TO_DATE // this happens during computing of `d`, just keep lowestObserverState up to date.
    ) observable.lowestObserverState = IDerivationState.UP_TO_DATE;
  } // invariantLOS(observable, "confirmed end");

} // Used by computed when its dependency changed, but we don't wan't to immediately recompute.


function propagateMaybeChanged(observable) {
  // invariantLOS(observable, "maybe start");
  if (observable.lowestObserverState !== IDerivationState.UP_TO_DATE) return;
  observable.lowestObserverState = IDerivationState.POSSIBLY_STALE;
  var observers = observable.observers;
  var i = observers.length;

  while (i--) {
    var d = observers[i];

    if (d.dependenciesState === IDerivationState.UP_TO_DATE) {
      d.dependenciesState = IDerivationState.POSSIBLY_STALE;
      d.onBecomeStale();
    }
  } // invariantLOS(observable, "maybe end");

}

var IDerivationState;

(function (IDerivationState) {
  // before being run or (outside batch and not being observed)
  // at this point derivation is not holding any data about dependency tree
  IDerivationState[IDerivationState["NOT_TRACKING"] = -1] = "NOT_TRACKING"; // no shallow dependency changed since last computation
  // won't recalculate derivation
  // this is what makes mobx fast

  IDerivationState[IDerivationState["UP_TO_DATE"] = 0] = "UP_TO_DATE"; // some deep dependency changed, but don't know if shallow dependency changed
  // will require to check first if UP_TO_DATE or POSSIBLY_STALE
  // currently only ComputedValue will propagate POSSIBLY_STALE
  //
  // having this state is second big optimization:
  // don't have to recompute on every dependency change, but only when it's needed

  IDerivationState[IDerivationState["POSSIBLY_STALE"] = 1] = "POSSIBLY_STALE"; // A shallow dependency has changed since last computation and the derivation
  // will need to recompute when it's needed next.

  IDerivationState[IDerivationState["STALE"] = 2] = "STALE";
})(IDerivationState || (IDerivationState = {}));

var CaughtException = function () {
  function CaughtException(cause) {
    this.cause = cause; // Empty
  }

  return CaughtException;
}();

function isCaughtException(e) {
  return e instanceof CaughtException;
}
/**
 * Finds out whether any dependency of the derivation has actually changed.
 * If dependenciesState is 1 then it will recalculate dependencies,
 * if any dependency changed it will propagate it by changing dependenciesState to 2.
 *
 * By iterating over the dependencies in the same order that they were reported and
 * stopping on the first change, all the recalculations are only called for ComputedValues
 * that will be tracked by derivation. That is because we assume that if the first x
 * dependencies of the derivation doesn't change then the derivation should run the same way
 * up until accessing x-th dependency.
 */


function shouldCompute(derivation) {
  switch (derivation.dependenciesState) {
    case IDerivationState.UP_TO_DATE:
      return false;

    case IDerivationState.NOT_TRACKING:
    case IDerivationState.STALE:
      return true;

    case IDerivationState.POSSIBLY_STALE:
      {
        var prevUntracked = untrackedStart(); // no need for those computeds to be reported, they will be picked up in trackDerivedFunction.

        var obs = derivation.observing,
            l = obs.length;

        for (var i = 0; i < l; i++) {
          var obj = obs[i];

          if (isComputedValue(obj)) {
            try {
              obj.get();
            } catch (e) {
              // we are not interested in the value *or* exception at this moment, but if there is one, notify all
              untrackedEnd(prevUntracked);
              return true;
            } // if ComputedValue `obj` actually changed it will be computed and propagated to its observers.
            // and `derivation` is an observer of `obj`


            if (derivation.dependenciesState === IDerivationState.STALE) {
              untrackedEnd(prevUntracked);
              return true;
            }
          }
        }

        changeDependenciesStateTo0(derivation);
        untrackedEnd(prevUntracked);
        return false;
      }
  }
}

function isComputingDerivation() {
  return globalState.trackingDerivation !== null; // filter out actions inside computations
}

function checkIfStateModificationsAreAllowed(atom) {
  var hasObservers$$1 = atom.observers.length > 0; // Should never be possible to change an observed observable from inside computed, see #798

  if (globalState.computationDepth > 0 && hasObservers$$1) fail(getMessage("m031") + atom.name); // Should not be possible to change observed state outside strict mode, except during initialization, see #563

  if (!globalState.allowStateChanges && hasObservers$$1) fail(getMessage(globalState.strictMode ? "m030a" : "m030b") + atom.name);
}
/**
 * Executes the provided function `f` and tracks which observables are being accessed.
 * The tracking information is stored on the `derivation` object and the derivation is registered
 * as observer of any of the accessed observables.
 */


function trackDerivedFunction(derivation, f, context) {
  // pre allocate array allocation + room for variation in deps
  // array will be trimmed by bindDependencies
  changeDependenciesStateTo0(derivation);
  derivation.newObserving = new Array(derivation.observing.length + 100);
  derivation.unboundDepsCount = 0;
  derivation.runId = ++globalState.runId;
  var prevTracking = globalState.trackingDerivation;
  globalState.trackingDerivation = derivation;
  var result;

  try {
    result = f.call(context);
  } catch (e) {
    result = new CaughtException(e);
  }

  globalState.trackingDerivation = prevTracking;
  bindDependencies(derivation);
  return result;
}
/**
 * diffs newObserving with observing.
 * update observing to be newObserving with unique observables
 * notify observers that become observed/unobserved
 */


function bindDependencies(derivation) {
  // invariant(derivation.dependenciesState !== IDerivationState.NOT_TRACKING, "INTERNAL ERROR bindDependencies expects derivation.dependenciesState !== -1");
  var prevObserving = derivation.observing;
  var observing = derivation.observing = derivation.newObserving;
  var lowestNewObservingDerivationState = IDerivationState.UP_TO_DATE; // Go through all new observables and check diffValue: (this list can contain duplicates):
  //   0: first occurrence, change to 1 and keep it
  //   1: extra occurrence, drop it

  var i0 = 0,
      l = derivation.unboundDepsCount;

  for (var i = 0; i < l; i++) {
    var dep = observing[i];

    if (dep.diffValue === 0) {
      dep.diffValue = 1;
      if (i0 !== i) observing[i0] = dep;
      i0++;
    } // Upcast is 'safe' here, because if dep is IObservable, `dependenciesState` will be undefined,
    // not hitting the condition


    if (dep.dependenciesState > lowestNewObservingDerivationState) {
      lowestNewObservingDerivationState = dep.dependenciesState;
    }
  }

  observing.length = i0;
  derivation.newObserving = null; // newObserving shouldn't be needed outside tracking (statement moved down to work around FF bug, see #614)
  // Go through all old observables and check diffValue: (it is unique after last bindDependencies)
  //   0: it's not in new observables, unobserve it
  //   1: it keeps being observed, don't want to notify it. change to 0

  l = prevObserving.length;

  while (l--) {
    var dep = prevObserving[l];

    if (dep.diffValue === 0) {
      removeObserver(dep, derivation);
    }

    dep.diffValue = 0;
  } // Go through all new observables and check diffValue: (now it should be unique)
  //   0: it was set to 0 in last loop. don't need to do anything.
  //   1: it wasn't observed, let's observe it. set back to 0


  while (i0--) {
    var dep = observing[i0];

    if (dep.diffValue === 1) {
      dep.diffValue = 0;
      addObserver(dep, derivation);
    }
  } // Some new observed derivations may become stale during this derivation computation
  // so they have had no chance to propagate staleness (#916)


  if (lowestNewObservingDerivationState !== IDerivationState.UP_TO_DATE) {
    derivation.dependenciesState = lowestNewObservingDerivationState;
    derivation.onBecomeStale();
  }
}

function clearObserving(derivation) {
  // invariant(globalState.inBatch > 0, "INTERNAL ERROR clearObserving should be called only inside batch");
  var obs = derivation.observing;
  derivation.observing = [];
  var i = obs.length;

  while (i--) {
    removeObserver(obs[i], derivation);
  }

  derivation.dependenciesState = IDerivationState.NOT_TRACKING;
}

function untracked(action) {
  var prev = untrackedStart();
  var res = action();
  untrackedEnd(prev);
  return res;
}

function untrackedStart() {
  var prev = globalState.trackingDerivation;
  globalState.trackingDerivation = null;
  return prev;
}

function untrackedEnd(prev) {
  globalState.trackingDerivation = prev;
}
/**
 * needed to keep `lowestObserverState` correct. when changing from (2 or 1) to 0
 *
 */


function changeDependenciesStateTo0(derivation) {
  if (derivation.dependenciesState === IDerivationState.UP_TO_DATE) return;
  derivation.dependenciesState = IDerivationState.UP_TO_DATE;
  var obs = derivation.observing;
  var i = obs.length;

  while (i--) {
    obs[i].lowestObserverState = IDerivationState.UP_TO_DATE;
  }
}

var Reaction = function () {
  function Reaction(name, onInvalidate) {
    if (name === void 0) {
      name = "Reaction@" + getNextId();
    }

    this.name = name;
    this.onInvalidate = onInvalidate;
    this.observing = []; // nodes we are looking at. Our value depends on these nodes

    this.newObserving = [];
    this.dependenciesState = IDerivationState.NOT_TRACKING;
    this.diffValue = 0;
    this.runId = 0;
    this.unboundDepsCount = 0;
    this.__mapid = "#" + getNextId();
    this.isDisposed = false;
    this._isScheduled = false;
    this._isTrackPending = false;
    this._isRunning = false;
  }

  Reaction.prototype.onBecomeStale = function () {
    this.schedule();
  };

  Reaction.prototype.schedule = function () {
    if (!this._isScheduled) {
      this._isScheduled = true;
      globalState.pendingReactions.push(this);
      runReactions();
    }
  };

  Reaction.prototype.isScheduled = function () {
    return this._isScheduled;
  };
  /**
   * internal, use schedule() if you intend to kick off a reaction
   */


  Reaction.prototype.runReaction = function () {
    if (!this.isDisposed) {
      startBatch();
      this._isScheduled = false;

      if (shouldCompute(this)) {
        this._isTrackPending = true;
        this.onInvalidate();

        if (this._isTrackPending && isSpyEnabled()) {
          // onInvalidate didn't trigger track right away..
          spyReport({
            object: this,
            type: "scheduled-reaction"
          });
        }
      }

      endBatch();
    }
  };

  Reaction.prototype.track = function (fn) {
    startBatch();
    var notify = isSpyEnabled();
    var startTime;

    if (notify) {
      startTime = Date.now();
      spyReportStart({
        object: this,
        type: "reaction",
        fn: fn
      });
    }

    this._isRunning = true;
    var result = trackDerivedFunction(this, fn, undefined);
    this._isRunning = false;
    this._isTrackPending = false;

    if (this.isDisposed) {
      // disposed during last run. Clean up everything that was bound after the dispose call.
      clearObserving(this);
    }

    if (isCaughtException(result)) this.reportExceptionInDerivation(result.cause);

    if (notify) {
      spyReportEnd({
        time: Date.now() - startTime
      });
    }

    endBatch();
  };

  Reaction.prototype.reportExceptionInDerivation = function (error) {
    var _this = this;

    if (this.errorHandler) {
      this.errorHandler(error, this);
      return;
    }

    var message = "[mobx] Encountered an uncaught exception that was thrown by a reaction or observer component, in: '" + this;
    var messageToUser = getMessage("m037");
    console.error(message || messageToUser
    /* latter will not be true, make sure uglify doesn't remove */
    , error);
    /** If debugging brought you here, please, read the above message :-). Tnx! */

    if (isSpyEnabled()) {
      spyReport({
        type: "error",
        message: message,
        error: error,
        object: this
      });
    }

    globalState.globalReactionErrorHandlers.forEach(function (f) {
      return f(error, _this);
    });
  };

  Reaction.prototype.dispose = function () {
    if (!this.isDisposed) {
      this.isDisposed = true;

      if (!this._isRunning) {
        // if disposed while running, clean up later. Maybe not optimal, but rare case
        startBatch();
        clearObserving(this);
        endBatch();
      }
    }
  };

  Reaction.prototype.getDisposer = function () {
    var r = this.dispose.bind(this);
    r.$mobx = this;
    r.onError = registerErrorHandler;
    return r;
  };

  Reaction.prototype.toString = function () {
    return "Reaction[" + this.name + "]";
  };

  Reaction.prototype.whyRun = function () {
    var observing = unique(this._isRunning ? this.newObserving : this.observing).map(function (dep) {
      return dep.name;
    });
    return "\nWhyRun? reaction '" + this.name + "':\n * Status: [" + (this.isDisposed ? "stopped" : this._isRunning ? "running" : this.isScheduled() ? "scheduled" : "idle") + "]\n * This reaction will re-run if any of the following observables changes:\n    " + joinStrings(observing) + "\n    " + (this._isRunning ? " (... or any observable accessed during the remainder of the current run)" : "") + "\n\t" + getMessage("m038") + "\n";
  };

  return Reaction;
}();

function registerErrorHandler(handler) {
  invariant(this && this.$mobx && isReaction(this.$mobx), "Invalid `this`");
  invariant(!this.$mobx.errorHandler, "Only one onErrorHandler can be registered");
  this.$mobx.errorHandler = handler;
}

function onReactionError(handler) {
  globalState.globalReactionErrorHandlers.push(handler);
  return function () {
    var idx = globalState.globalReactionErrorHandlers.indexOf(handler);
    if (idx >= 0) globalState.globalReactionErrorHandlers.splice(idx, 1);
  };
}
/**
 * Magic number alert!
 * Defines within how many times a reaction is allowed to re-trigger itself
 * until it is assumed that this is gonna be a never ending loop...
 */


var MAX_REACTION_ITERATIONS = 100;

var reactionScheduler = function reactionScheduler(f) {
  return f();
};

function runReactions() {
  // Trampolining, if runReactions are already running, new reactions will be picked up
  if (globalState.inBatch > 0 || globalState.isRunningReactions) return;
  reactionScheduler(runReactionsHelper);
}

function runReactionsHelper() {
  globalState.isRunningReactions = true;
  var allReactions = globalState.pendingReactions;
  var iterations = 0; // While running reactions, new reactions might be triggered.
  // Hence we work with two variables and check whether
  // we converge to no remaining reactions after a while.

  while (allReactions.length > 0) {
    if (++iterations === MAX_REACTION_ITERATIONS) {
      console.error("Reaction doesn't converge to a stable state after " + MAX_REACTION_ITERATIONS + " iterations." + (" Probably there is a cycle in the reactive function: " + allReactions[0]));
      allReactions.splice(0); // clear reactions
    }

    var remainingReactions = allReactions.splice(0);

    for (var i = 0, l = remainingReactions.length; i < l; i++) {
      remainingReactions[i].runReaction();
    }
  }

  globalState.isRunningReactions = false;
}

var isReaction = createInstanceofPredicate("Reaction", Reaction);

function setReactionScheduler(fn) {
  var baseScheduler = reactionScheduler;

  reactionScheduler = function reactionScheduler(f) {
    return fn(function () {
      return baseScheduler(f);
    });
  };
}

function asReference(value) {
  deprecated("asReference is deprecated, use observable.ref instead");
  return observable.ref(value);
}

function asStructure(value) {
  deprecated("asStructure is deprecated. Use observable.struct, computed.struct or reaction options instead.");
  return observable.struct(value);
}

function asFlat(value) {
  deprecated("asFlat is deprecated, use observable.shallow instead");
  return observable.shallow(value);
}

function asMap(data) {
  deprecated("asMap is deprecated, use observable.map or observable.shallowMap instead");
  return observable.map(data || {});
}

function createComputedDecorator(equals) {
  return createClassPropertyDecorator(function (target, name, _, __, originalDescriptor) {
    invariant(typeof originalDescriptor !== "undefined", getMessage("m009"));
    invariant(typeof originalDescriptor.get === "function", getMessage("m010"));
    var adm = asObservableObject(target, "");
    defineComputedProperty(adm, name, originalDescriptor.get, originalDescriptor.set, equals, false);
  }, function (name) {
    var observable = this.$mobx.values[name];
    if (observable === undefined // See #505
    ) return undefined;
    return observable.get();
  }, function (name, value) {
    this.$mobx.values[name].set(value);
  }, false, false);
}

var computedDecorator = createComputedDecorator(comparer.default);
var computedStructDecorator = createComputedDecorator(comparer.structural);
/**
 * Decorator for class properties: @computed get value() { return expr; }.
 * For legacy purposes also invokable as ES5 observable created: `computed(() => expr)`;
 */

var computed = function computed(arg1, arg2, arg3) {
  if (typeof arg2 === "string") {
    return computedDecorator.apply(null, arguments);
  }

  invariant(typeof arg1 === "function", getMessage("m011"));
  invariant(arguments.length < 3, getMessage("m012"));
  var opts = typeof arg2 === "object" ? arg2 : {};
  opts.setter = typeof arg2 === "function" ? arg2 : opts.setter;
  var equals = opts.equals ? opts.equals : opts.compareStructural || opts.struct ? comparer.structural : comparer.default;
  return new ComputedValue(arg1, opts.context, equals, opts.name || arg1.name || "", opts.setter);
};

computed.struct = computedStructDecorator;
computed.equals = createComputedDecorator;

function getAtom(thing, property) {
  if (typeof thing === "object" && thing !== null) {
    if (isObservableArray(thing)) {
      invariant(property === undefined, getMessage("m036"));
      return thing.$mobx.atom;
    }

    if (isObservableMap(thing)) {
      var anyThing = thing;
      if (property === undefined) return getAtom(anyThing._keys);
      var observable = anyThing._data[property] || anyThing._hasMap[property];
      invariant(!!observable, "the entry '" + property + "' does not exist in the observable map '" + getDebugName(thing) + "'");
      return observable;
    } // Initializers run lazily when transpiling to babel, so make sure they are run...


    runLazyInitializers(thing);
    if (property && !thing.$mobx) thing[property]; // See #1072 // TODO: remove in 4.0

    if (isObservableObject(thing)) {
      if (!property) return fail("please specify a property");
      var observable = thing.$mobx.values[property];
      invariant(!!observable, "no observable property '" + property + "' found on the observable object '" + getDebugName(thing) + "'");
      return observable;
    }

    if (isAtom(thing) || isComputedValue(thing) || isReaction(thing)) {
      return thing;
    }
  } else if (typeof thing === "function") {
    if (isReaction(thing.$mobx)) {
      // disposer function
      return thing.$mobx;
    }
  }

  return fail("Cannot obtain atom from " + thing);
}

function getAdministration(thing, property) {
  invariant(thing, "Expecting some object");
  if (property !== undefined) return getAdministration(getAtom(thing, property));
  if (isAtom(thing) || isComputedValue(thing) || isReaction(thing)) return thing;
  if (isObservableMap(thing)) return thing; // Initializers run lazily when transpiling to babel, so make sure they are run...

  runLazyInitializers(thing);
  if (thing.$mobx) return thing.$mobx;
  invariant(false, "Cannot obtain administration from " + thing);
}

function getDebugName(thing, property) {
  var named;
  if (property !== undefined) named = getAtom(thing, property);else if (isObservableObject(thing) || isObservableMap(thing)) named = getAdministration(thing);else named = getAtom(thing); // valid for arrays as well

  return named.name;
}

function isComputed(value, property) {
  if (value === null || value === undefined) return false;

  if (property !== undefined) {
    if (isObservableObject(value) === false) return false;
    if (!value.$mobx.values[property]) return false;
    var atom = getAtom(value, property);
    return isComputedValue(atom);
  }

  return isComputedValue(value);
}

function observe(thing, propOrCb, cbOrFire, fireImmediately) {
  if (typeof cbOrFire === "function") return observeObservableProperty(thing, propOrCb, cbOrFire, fireImmediately);else return observeObservable(thing, propOrCb, cbOrFire);
}

function observeObservable(thing, listener, fireImmediately) {
  return getAdministration(thing).observe(listener, fireImmediately);
}

function observeObservableProperty(thing, property, listener, fireImmediately) {
  return getAdministration(thing, property).observe(listener, fireImmediately);
}

function intercept(thing, propOrHandler, handler) {
  if (typeof handler === "function") return interceptProperty(thing, propOrHandler, handler);else return interceptInterceptable(thing, propOrHandler);
}

function interceptInterceptable(thing, handler) {
  return getAdministration(thing).intercept(handler);
}

function interceptProperty(thing, property, handler) {
  return getAdministration(thing, property).intercept(handler);
}
/**
 * expr can be used to create temporarily views inside views.
 * This can be improved to improve performance if a value changes often, but usually doesn't affect the outcome of an expression.
 *
 * In the following example the expression prevents that a component is rerender _each time_ the selection changes;
 * instead it will only rerenders when the current todo is (de)selected.
 *
 * reactiveComponent((props) => {
 *     const todo = props.todo;
 *     const isSelected = mobx.expr(() => props.viewState.selection === todo);
 *     return <div className={isSelected ? "todo todo-selected" : "todo"}>{todo.title}</div>
 * });
 *
 */


function expr(expr, scope) {
  if (!isComputingDerivation()) console.warn(getMessage("m013")); // optimization: would be more efficient if the expr itself wouldn't be evaluated first on the next change, but just a 'changed' signal would be fired

  return computed(expr, {
    context: scope
  }).get();
}

function toJS(source, detectCycles, __alreadySeen) {
  if (detectCycles === void 0) {
    detectCycles = true;
  }

  if (__alreadySeen === void 0) {
    __alreadySeen = [];
  } // optimization: using ES6 map would be more efficient!
  // optimization: lift this function outside toJS, this makes recursion expensive


  function cache(value) {
    if (detectCycles) __alreadySeen.push([source, value]);
    return value;
  }

  if (isObservable(source)) {
    if (detectCycles && __alreadySeen === null) __alreadySeen = [];

    if (detectCycles && source !== null && typeof source === "object") {
      for (var i = 0, l = __alreadySeen.length; i < l; i++) {
        if (__alreadySeen[i][0] === source) return __alreadySeen[i][1];
      }
    }

    if (isObservableArray(source)) {
      var res = cache([]);
      var toAdd = source.map(function (value) {
        return toJS(value, detectCycles, __alreadySeen);
      });
      res.length = toAdd.length;

      for (var i = 0, l = toAdd.length; i < l; i++) {
        res[i] = toAdd[i];
      }

      return res;
    }

    if (isObservableObject(source)) {
      var res = cache({});

      for (var key in source) {
        res[key] = toJS(source[key], detectCycles, __alreadySeen);
      }

      return res;
    }

    if (isObservableMap(source)) {
      var res_1 = cache({});
      source.forEach(function (value, key) {
        return res_1[key] = toJS(value, detectCycles, __alreadySeen);
      });
      return res_1;
    }

    if (isObservableValue(source)) return toJS(source.get(), detectCycles, __alreadySeen);
  }

  return source;
}

function createTransformer(transformer, onCleanup) {
  invariant(typeof transformer === "function" && transformer.length < 2, "createTransformer expects a function that accepts one argument"); // Memoizes: object id -> reactive view that applies transformer to the object

  var objectCache = {}; // If the resetId changes, we will clear the object cache, see #163
  // This construction is used to avoid leaking refs to the objectCache directly

  var resetId = globalState.resetId; // Local transformer class specifically for this transformer

  var Transformer = function (_super) {
    __extends(Transformer, _super);

    function Transformer(sourceIdentifier, sourceObject) {
      var _this = _super.call(this, function () {
        return transformer(sourceObject);
      }, undefined, comparer.default, "Transformer-" + transformer.name + "-" + sourceIdentifier, undefined) || this;

      _this.sourceIdentifier = sourceIdentifier;
      _this.sourceObject = sourceObject;
      return _this;
    }

    Transformer.prototype.onBecomeUnobserved = function () {
      var lastValue = this.value;

      _super.prototype.onBecomeUnobserved.call(this);

      delete objectCache[this.sourceIdentifier];
      if (onCleanup) onCleanup(lastValue, this.sourceObject);
    };

    return Transformer;
  }(ComputedValue);

  return function (object) {
    if (resetId !== globalState.resetId) {
      objectCache = {};
      resetId = globalState.resetId;
    }

    var identifier = getMemoizationId(object);
    var reactiveTransformer = objectCache[identifier];
    if (reactiveTransformer) return reactiveTransformer.get(); // Not in cache; create a reactive view

    reactiveTransformer = objectCache[identifier] = new Transformer(identifier, object);
    return reactiveTransformer.get();
  };
}

function getMemoizationId(object) {
  if (typeof object === "string" || typeof object === "number") return object;
  if (object === null || typeof object !== "object") throw new Error("[mobx] transform expected some kind of object or primitive value, got: " + object);
  var tid = object.$transformId;

  if (tid === undefined) {
    tid = getNextId();
    addHiddenProp(object, "$transformId", tid);
  }

  return tid;
}

function log(msg) {
  console.log(msg);
  return msg;
}

function whyRun(thing, prop) {
  switch (arguments.length) {
    case 0:
      thing = globalState.trackingDerivation;
      if (!thing) return log(getMessage("m024"));
      break;

    case 2:
      thing = getAtom(thing, prop);
      break;
  }

  thing = getAtom(thing);
  if (isComputedValue(thing)) return log(thing.whyRun());else if (isReaction(thing)) return log(thing.whyRun());
  return fail(getMessage("m025"));
}

function getDependencyTree(thing, property) {
  return nodeToDependencyTree(getAtom(thing, property));
}

function nodeToDependencyTree(node) {
  var result = {
    name: node.name
  };
  if (node.observing && node.observing.length > 0) result.dependencies = unique(node.observing).map(nodeToDependencyTree);
  return result;
}

function getObserverTree(thing, property) {
  return nodeToObserverTree(getAtom(thing, property));
}

function nodeToObserverTree(node) {
  var result = {
    name: node.name
  };
  if (hasObservers(node)) result.observers = getObservers(node).map(nodeToObserverTree);
  return result;
}

function interceptReads(thing, propOrHandler, handler) {
  var target;

  if (isObservableMap(thing) || isObservableArray(thing) || isObservableValue(thing)) {
    target = getAdministration(thing);
  } else if (isObservableObject(thing)) {
    if (typeof propOrHandler !== "string") return fail("InterceptReads can only be used with a specific property, not with an object in general");
    target = getAdministration(thing, propOrHandler);
  } else {
    return fail("Expected observable map, object or array as first array");
  }

  if (target.dehancer !== undefined) return fail("An intercept reader was already established");
  target.dehancer = typeof propOrHandler === "function" ? propOrHandler : handler;
  return function () {
    target.dehancer = undefined;
  };
}
/**
 * (c) Michel Weststrate 2015 - 2016
 * MIT Licensed
 *
 * Welcome to the mobx sources! To get an global overview of how MobX internally works,
 * this is a good place to start:
 * https://medium.com/@mweststrate/becoming-fully-reactive-an-in-depth-explanation-of-mobservable-55995262a254#.xvbh6qd74
 *
 * Source folders:
 * ===============
 *
 * - api/     Most of the public static methods exposed by the module can be found here.
 * - core/    Implementation of the MobX algorithm; atoms, derivations, reactions, dependency trees, optimizations. Cool stuff can be found here.
 * - types/   All the magic that is need to have observable objects, arrays and values is in this folder. Including the modifiers like `asFlat`.
 * - utils/   Utility stuff.
 *
 */


var extras = {
  allowStateChanges: allowStateChanges,
  deepEqual: deepEqual,
  getAtom: getAtom,
  getDebugName: getDebugName,
  getDependencyTree: getDependencyTree,
  getAdministration: getAdministration,
  getGlobalState: getGlobalState,
  getObserverTree: getObserverTree,
  interceptReads: interceptReads,
  isComputingDerivation: isComputingDerivation,
  isSpyEnabled: isSpyEnabled,
  onReactionError: onReactionError,
  reserveArrayBuffer: reserveArrayBuffer,
  resetGlobalState: resetGlobalState,
  isolateGlobalState: isolateGlobalState,
  shareGlobalState: shareGlobalState,
  spyReport: spyReport,
  spyReportEnd: spyReportEnd,
  spyReportStart: spyReportStart,
  setReactionScheduler: setReactionScheduler
};
var everything = {
  Reaction: Reaction,
  untracked: untracked,
  Atom: Atom,
  BaseAtom: BaseAtom,
  useStrict: useStrict,
  isStrictModeEnabled: isStrictModeEnabled,
  spy: spy,
  comparer: comparer,
  asReference: asReference,
  asFlat: asFlat,
  asStructure: asStructure,
  asMap: asMap,
  isModifierDescriptor: isModifierDescriptor,
  isObservableObject: isObservableObject,
  isBoxedObservable: isObservableValue,
  isObservableArray: isObservableArray,
  ObservableMap: ObservableMap,
  isObservableMap: isObservableMap,
  map: map,
  transaction: transaction,
  observable: observable,
  computed: computed,
  isObservable: isObservable,
  isComputed: isComputed,
  extendObservable: extendObservable,
  extendShallowObservable: extendShallowObservable,
  observe: observe,
  intercept: intercept,
  autorun: autorun,
  autorunAsync: autorunAsync,
  when: when,
  reaction: reaction,
  action: action,
  isAction: isAction,
  runInAction: runInAction,
  expr: expr,
  toJS: toJS,
  createTransformer: createTransformer,
  whyRun: whyRun,
  isArrayLike: isArrayLike,
  extras: extras
};
var warnedAboutDefaultExport = false;

var _loop_1 = function _loop_1(p) {
  var val = everything[p];
  Object.defineProperty(everything, p, {
    get: function get() {
      if (!warnedAboutDefaultExport) {
        warnedAboutDefaultExport = true;
        console.warn("Using default export (`import mobx from 'mobx'`) is deprecated " + "and won’t work in mobx@4.0.0\n" + "Use `import * as mobx from 'mobx'` instead");
      }

      return val;
    }
  });
};

for (var p in everything) {
  _loop_1(p);
}

if (typeof __MOBX_DEVTOOLS_GLOBAL_HOOK__ === "object") {
  __MOBX_DEVTOOLS_GLOBAL_HOOK__.injectMobx({
    spy: spy,
    extras: extras
  });
}


/* harmony default export */ __webpack_exports__["default"] = (everything);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(58)))

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__(35);

module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;

  switch (length) {
    case 1:
      return function (a) {
        return fn.call(that, a);
      };

    case 2:
      return function (a, b) {
        return fn.call(that, a, b);
      };

    case 3:
      return function (a, b, c) {
        return fn.call(that, a, b, c);
      };
  }

  return function ()
  /* ...args */
  {
    return fn.apply(that, arguments);
  };
};

/***/ }),
/* 35 */
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};

/***/ }),
/* 36 */
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;

module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

var pIE = __webpack_require__(71);

var createDesc = __webpack_require__(48);

var toIObject = __webpack_require__(30);

var toPrimitive = __webpack_require__(44);

var has = __webpack_require__(28);

var IE8_DOM_DEFINE = __webpack_require__(128);

var gOPD = Object.getOwnPropertyDescriptor;
exports.f = __webpack_require__(20) ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) {
    /* empty */
  }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

// most Object methods by ES6 should accept primitives
var $export = __webpack_require__(1);

var core = __webpack_require__(17);

var fails = __webpack_require__(6);

module.exports = function (KEY, exec) {
  var fn = (core.Object || {})[KEY] || Object[KEY];
  var exp = {};
  exp[KEY] = exec(fn);
  $export($export.S + $export.F * fails(function () {
    fn(1);
  }), 'Object', exp);
};

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

// 0 -> Array#forEach
// 1 -> Array#map
// 2 -> Array#filter
// 3 -> Array#some
// 4 -> Array#every
// 5 -> Array#find
// 6 -> Array#findIndex
var ctx = __webpack_require__(34);

var IObject = __webpack_require__(70);

var toObject = __webpack_require__(24);

var toLength = __webpack_require__(16);

var asc = __webpack_require__(144);

module.exports = function (TYPE, $create) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  var create = $create || asc;
  return function ($this, callbackfn, that) {
    var O = toObject($this);
    var self = IObject(O);
    var f = ctx(callbackfn, that, 3);
    var length = toLength(self.length);
    var index = 0;
    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
    var val, res;

    for (; length > index; index++) {
      if (NO_HOLES || index in self) {
        val = self[index];
        res = f(val, index, O);

        if (TYPE) {
          if (IS_MAP) result[index] = res; // map
          else if (res) switch (TYPE) {
              case 3:
                return true;
              // some

              case 5:
                return val;
              // find

              case 6:
                return index;
              // findIndex

              case 2:
                result.push(val);
              // filter
            } else if (IS_EVERY) return false; // every
        }
      }
    }

    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
  };
};

/***/ }),
/* 40 */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};

/***/ }),
/* 41 */
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (__webpack_require__(20)) {
  var LIBRARY = __webpack_require__(50);

  var global = __webpack_require__(5);

  var fails = __webpack_require__(6);

  var $export = __webpack_require__(1);

  var $typed = __webpack_require__(90);

  var $buffer = __webpack_require__(123);

  var ctx = __webpack_require__(34);

  var anInstance = __webpack_require__(67);

  var propertyDesc = __webpack_require__(48);

  var hide = __webpack_require__(29);

  var redefineAll = __webpack_require__(68);

  var toInteger = __webpack_require__(36);

  var toLength = __webpack_require__(16);

  var toIndex = __webpack_require__(155);

  var toAbsoluteIndex = __webpack_require__(52);

  var toPrimitive = __webpack_require__(44);

  var has = __webpack_require__(28);

  var classof = __webpack_require__(72);

  var isObject = __webpack_require__(8);

  var toObject = __webpack_require__(24);

  var isArrayIter = __webpack_require__(115);

  var create = __webpack_require__(53);

  var getPrototypeOf = __webpack_require__(55);

  var gOPN = __webpack_require__(54).f;

  var getIterFn = __webpack_require__(117);

  var uid = __webpack_require__(49);

  var wks = __webpack_require__(13);

  var createArrayMethod = __webpack_require__(39);

  var createArrayIncludes = __webpack_require__(80);

  var speciesConstructor = __webpack_require__(73);

  var ArrayIterators = __webpack_require__(119);

  var Iterators = __webpack_require__(65);

  var $iterDetect = __webpack_require__(83);

  var setSpecies = __webpack_require__(66);

  var arrayFill = __webpack_require__(118);

  var arrayCopyWithin = __webpack_require__(146);

  var $DP = __webpack_require__(19);

  var $GOPD = __webpack_require__(37);

  var dP = $DP.f;
  var gOPD = $GOPD.f;
  var RangeError = global.RangeError;
  var TypeError = global.TypeError;
  var Uint8Array = global.Uint8Array;
  var ARRAY_BUFFER = 'ArrayBuffer';
  var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;
  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';
  var PROTOTYPE = 'prototype';
  var ArrayProto = Array[PROTOTYPE];
  var $ArrayBuffer = $buffer.ArrayBuffer;
  var $DataView = $buffer.DataView;
  var arrayForEach = createArrayMethod(0);
  var arrayFilter = createArrayMethod(2);
  var arraySome = createArrayMethod(3);
  var arrayEvery = createArrayMethod(4);
  var arrayFind = createArrayMethod(5);
  var arrayFindIndex = createArrayMethod(6);
  var arrayIncludes = createArrayIncludes(true);
  var arrayIndexOf = createArrayIncludes(false);
  var arrayValues = ArrayIterators.values;
  var arrayKeys = ArrayIterators.keys;
  var arrayEntries = ArrayIterators.entries;
  var arrayLastIndexOf = ArrayProto.lastIndexOf;
  var arrayReduce = ArrayProto.reduce;
  var arrayReduceRight = ArrayProto.reduceRight;
  var arrayJoin = ArrayProto.join;
  var arraySort = ArrayProto.sort;
  var arraySlice = ArrayProto.slice;
  var arrayToString = ArrayProto.toString;
  var arrayToLocaleString = ArrayProto.toLocaleString;
  var ITERATOR = wks('iterator');
  var TAG = wks('toStringTag');
  var TYPED_CONSTRUCTOR = uid('typed_constructor');
  var DEF_CONSTRUCTOR = uid('def_constructor');
  var ALL_CONSTRUCTORS = $typed.CONSTR;
  var TYPED_ARRAY = $typed.TYPED;
  var VIEW = $typed.VIEW;
  var WRONG_LENGTH = 'Wrong length!';
  var $map = createArrayMethod(1, function (O, length) {
    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);
  });
  var LITTLE_ENDIAN = fails(function () {
    // eslint-disable-next-line no-undef
    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;
  });
  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {
    new Uint8Array(1).set({});
  });

  var toOffset = function toOffset(it, BYTES) {
    var offset = toInteger(it);
    if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');
    return offset;
  };

  var validate = function validate(it) {
    if (isObject(it) && TYPED_ARRAY in it) return it;
    throw TypeError(it + ' is not a typed array!');
  };

  var allocate = function allocate(C, length) {
    if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {
      throw TypeError('It is not a typed array constructor!');
    }

    return new C(length);
  };

  var speciesFromList = function speciesFromList(O, list) {
    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);
  };

  var fromList = function fromList(C, list) {
    var index = 0;
    var length = list.length;
    var result = allocate(C, length);

    while (length > index) {
      result[index] = list[index++];
    }

    return result;
  };

  var addGetter = function addGetter(it, key, internal) {
    dP(it, key, {
      get: function get() {
        return this._d[internal];
      }
    });
  };

  var $from = function from(source
  /* , mapfn, thisArg */
  ) {
    var O = toObject(source);
    var aLen = arguments.length;
    var mapfn = aLen > 1 ? arguments[1] : undefined;
    var mapping = mapfn !== undefined;
    var iterFn = getIterFn(O);
    var i, length, values, result, step, iterator;

    if (iterFn != undefined && !isArrayIter(iterFn)) {
      for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {
        values.push(step.value);
      }

      O = values;
    }

    if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);

    for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {
      result[i] = mapping ? mapfn(O[i], i) : O[i];
    }

    return result;
  };

  var $of = function of()
  /* ...items */
  {
    var index = 0;
    var length = arguments.length;
    var result = allocate(this, length);

    while (length > index) {
      result[index] = arguments[index++];
    }

    return result;
  }; // iOS Safari 6.x fails here


  var TO_LOCALE_BUG = !!Uint8Array && fails(function () {
    arrayToLocaleString.call(new Uint8Array(1));
  });

  var $toLocaleString = function toLocaleString() {
    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);
  };

  var proto = {
    copyWithin: function copyWithin(target, start
    /* , end */
    ) {
      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
    },
    every: function every(callbackfn
    /* , thisArg */
    ) {
      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    fill: function fill(value
    /* , start, end */
    ) {
      // eslint-disable-line no-unused-vars
      return arrayFill.apply(validate(this), arguments);
    },
    filter: function filter(callbackfn
    /* , thisArg */
    ) {
      return speciesFromList(this, arrayFilter(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined));
    },
    find: function find(predicate
    /* , thisArg */
    ) {
      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
    },
    findIndex: function findIndex(predicate
    /* , thisArg */
    ) {
      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
    },
    forEach: function forEach(callbackfn
    /* , thisArg */
    ) {
      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    indexOf: function indexOf(searchElement
    /* , fromIndex */
    ) {
      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
    },
    includes: function includes(searchElement
    /* , fromIndex */
    ) {
      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
    },
    join: function join(separator) {
      // eslint-disable-line no-unused-vars
      return arrayJoin.apply(validate(this), arguments);
    },
    lastIndexOf: function lastIndexOf(searchElement
    /* , fromIndex */
    ) {
      // eslint-disable-line no-unused-vars
      return arrayLastIndexOf.apply(validate(this), arguments);
    },
    map: function map(mapfn
    /* , thisArg */
    ) {
      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    reduce: function reduce(callbackfn
    /* , initialValue */
    ) {
      // eslint-disable-line no-unused-vars
      return arrayReduce.apply(validate(this), arguments);
    },
    reduceRight: function reduceRight(callbackfn
    /* , initialValue */
    ) {
      // eslint-disable-line no-unused-vars
      return arrayReduceRight.apply(validate(this), arguments);
    },
    reverse: function reverse() {
      var that = this;
      var length = validate(that).length;
      var middle = Math.floor(length / 2);
      var index = 0;
      var value;

      while (index < middle) {
        value = that[index];
        that[index++] = that[--length];
        that[length] = value;
      }

      return that;
    },
    some: function some(callbackfn
    /* , thisArg */
    ) {
      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    sort: function sort(comparefn) {
      return arraySort.call(validate(this), comparefn);
    },
    subarray: function subarray(begin, end) {
      var O = validate(this);
      var length = O.length;
      var $begin = toAbsoluteIndex(begin, length);
      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(O.buffer, O.byteOffset + $begin * O.BYTES_PER_ELEMENT, toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - $begin));
    }
  };

  var $slice = function slice(start, end) {
    return speciesFromList(this, arraySlice.call(validate(this), start, end));
  };

  var $set = function set(arrayLike
  /* , offset */
  ) {
    validate(this);
    var offset = toOffset(arguments[1], 1);
    var length = this.length;
    var src = toObject(arrayLike);
    var len = toLength(src.length);
    var index = 0;
    if (len + offset > length) throw RangeError(WRONG_LENGTH);

    while (index < len) {
      this[offset + index] = src[index++];
    }
  };

  var $iterators = {
    entries: function entries() {
      return arrayEntries.call(validate(this));
    },
    keys: function keys() {
      return arrayKeys.call(validate(this));
    },
    values: function values() {
      return arrayValues.call(validate(this));
    }
  };

  var isTAIndex = function isTAIndex(target, key) {
    return isObject(target) && target[TYPED_ARRAY] && typeof key != 'symbol' && key in target && String(+key) == String(key);
  };

  var $getDesc = function getOwnPropertyDescriptor(target, key) {
    return isTAIndex(target, key = toPrimitive(key, true)) ? propertyDesc(2, target[key]) : gOPD(target, key);
  };

  var $setDesc = function defineProperty(target, key, desc) {
    if (isTAIndex(target, key = toPrimitive(key, true)) && isObject(desc) && has(desc, 'value') && !has(desc, 'get') && !has(desc, 'set') // TODO: add validation descriptor w/o calling accessors
    && !desc.configurable && (!has(desc, 'writable') || desc.writable) && (!has(desc, 'enumerable') || desc.enumerable)) {
      target[key] = desc.value;
      return target;
    }

    return dP(target, key, desc);
  };

  if (!ALL_CONSTRUCTORS) {
    $GOPD.f = $getDesc;
    $DP.f = $setDesc;
  }

  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {
    getOwnPropertyDescriptor: $getDesc,
    defineProperty: $setDesc
  });

  if (fails(function () {
    arrayToString.call({});
  })) {
    arrayToString = arrayToLocaleString = function toString() {
      return arrayJoin.call(this);
    };
  }

  var $TypedArrayPrototype$ = redefineAll({}, proto);
  redefineAll($TypedArrayPrototype$, $iterators);
  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);
  redefineAll($TypedArrayPrototype$, {
    slice: $slice,
    set: $set,
    constructor: function constructor() {
      /* noop */
    },
    toString: arrayToString,
    toLocaleString: $toLocaleString
  });
  addGetter($TypedArrayPrototype$, 'buffer', 'b');
  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');
  addGetter($TypedArrayPrototype$, 'byteLength', 'l');
  addGetter($TypedArrayPrototype$, 'length', 'e');
  dP($TypedArrayPrototype$, TAG, {
    get: function get() {
      return this[TYPED_ARRAY];
    }
  }); // eslint-disable-next-line max-statements

  module.exports = function (KEY, BYTES, wrapper, CLAMPED) {
    CLAMPED = !!CLAMPED;
    var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';
    var GETTER = 'get' + KEY;
    var SETTER = 'set' + KEY;
    var TypedArray = global[NAME];
    var Base = TypedArray || {};
    var TAC = TypedArray && getPrototypeOf(TypedArray);
    var FORCED = !TypedArray || !$typed.ABV;
    var O = {};
    var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];

    var getter = function getter(that, index) {
      var data = that._d;
      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);
    };

    var setter = function setter(that, index, value) {
      var data = that._d;
      if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;
      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);
    };

    var addElement = function addElement(that, index) {
      dP(that, index, {
        get: function get() {
          return getter(this, index);
        },
        set: function set(value) {
          return setter(this, index, value);
        },
        enumerable: true
      });
    };

    if (FORCED) {
      TypedArray = wrapper(function (that, data, $offset, $length) {
        anInstance(that, TypedArray, NAME, '_d');
        var index = 0;
        var offset = 0;
        var buffer, byteLength, length, klass;

        if (!isObject(data)) {
          length = toIndex(data);
          byteLength = length * BYTES;
          buffer = new $ArrayBuffer(byteLength);
        } else if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
          buffer = data;
          offset = toOffset($offset, BYTES);
          var $len = data.byteLength;

          if ($length === undefined) {
            if ($len % BYTES) throw RangeError(WRONG_LENGTH);
            byteLength = $len - offset;
            if (byteLength < 0) throw RangeError(WRONG_LENGTH);
          } else {
            byteLength = toLength($length) * BYTES;
            if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);
          }

          length = byteLength / BYTES;
        } else if (TYPED_ARRAY in data) {
          return fromList(TypedArray, data);
        } else {
          return $from.call(TypedArray, data);
        }

        hide(that, '_d', {
          b: buffer,
          o: offset,
          l: byteLength,
          e: length,
          v: new $DataView(buffer)
        });

        while (index < length) {
          addElement(that, index++);
        }
      });
      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);
      hide(TypedArrayPrototype, 'constructor', TypedArray);
    } else if (!fails(function () {
      TypedArray(1);
    }) || !fails(function () {
      new TypedArray(-1); // eslint-disable-line no-new
    }) || !$iterDetect(function (iter) {
      new TypedArray(); // eslint-disable-line no-new

      new TypedArray(null); // eslint-disable-line no-new

      new TypedArray(1.5); // eslint-disable-line no-new

      new TypedArray(iter); // eslint-disable-line no-new
    }, true)) {
      TypedArray = wrapper(function (that, data, $offset, $length) {
        anInstance(that, TypedArray, NAME);
        var klass; // `ws` module bug, temporarily remove validation length for Uint8Array
        // https://github.com/websockets/ws/pull/645

        if (!isObject(data)) return new Base(toIndex(data));

        if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
          return $length !== undefined ? new Base(data, toOffset($offset, BYTES), $length) : $offset !== undefined ? new Base(data, toOffset($offset, BYTES)) : new Base(data);
        }

        if (TYPED_ARRAY in data) return fromList(TypedArray, data);
        return $from.call(TypedArray, data);
      });
      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {
        if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);
      });
      TypedArray[PROTOTYPE] = TypedArrayPrototype;
      if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;
    }

    var $nativeIterator = TypedArrayPrototype[ITERATOR];
    var CORRECT_ITER_NAME = !!$nativeIterator && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined);
    var $iterator = $iterators.values;
    hide(TypedArray, TYPED_CONSTRUCTOR, true);
    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);
    hide(TypedArrayPrototype, VIEW, true);
    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);

    if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {
      dP(TypedArrayPrototype, TAG, {
        get: function get() {
          return NAME;
        }
      });
    }

    O[NAME] = TypedArray;
    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);
    $export($export.S, NAME, {
      BYTES_PER_ELEMENT: BYTES
    });
    $export($export.S + $export.F * fails(function () {
      Base.of.call(TypedArray, 1);
    }), NAME, {
      from: $from,
      of: $of
    });
    if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);
    $export($export.P, NAME, proto);
    setSpecies(NAME);
    $export($export.P + $export.F * FORCED_SET, NAME, {
      set: $set
    });
    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);
    if (!LIBRARY && TypedArrayPrototype.toString != arrayToString) TypedArrayPrototype.toString = arrayToString;
    $export($export.P + $export.F * fails(function () {
      new TypedArray(1).slice();
    }), NAME, {
      slice: $slice
    });
    $export($export.P + $export.F * (fails(function () {
      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();
    }) || !fails(function () {
      TypedArrayPrototype.toLocaleString.call([1, 2]);
    })), NAME, {
      toLocaleString: $toLocaleString
    });
    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;
    if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);
  };
} else module.exports = function () {
  /* empty */
};

/***/ }),
/* 43 */
/***/ (function(module, exports) {

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

module.exports = _assertThisInitialized;

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__(8); // instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string


module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};

/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

var META = __webpack_require__(49)('meta');

var isObject = __webpack_require__(8);

var has = __webpack_require__(28);

var setDesc = __webpack_require__(19).f;

var id = 0;

var isExtensible = Object.isExtensible || function () {
  return true;
};

var FREEZE = !__webpack_require__(6)(function () {
  return isExtensible(Object.preventExtensions({}));
});

var setMeta = function setMeta(it) {
  setDesc(it, META, {
    value: {
      i: 'O' + ++id,
      // object ID
      w: {} // weak collections IDs

    }
  });
};

var fastKey = function fastKey(it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;

  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F'; // not necessary to add metadata

    if (!create) return 'E'; // add missing metadata

    setMeta(it); // return object ID
  }

  return it[META].i;
};

var getWeak = function getWeak(it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true; // not necessary to add metadata

    if (!create) return false; // add missing metadata

    setMeta(it); // return hash weak collections IDs
  }

  return it[META].w;
}; // add metadata on freeze-family methods calling


var onFreeze = function onFreeze(it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};

var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(365);


/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;

  for (var i = parts.length - 1; i >= 0; i--) {
    var last = parts[i];

    if (last === '.') {
      parts.splice(i, 1);
    } else if (last === '..') {
      parts.splice(i, 1);
      up++;
    } else if (up) {
      parts.splice(i, 1);
      up--;
    }
  } // if the path is allowed to go above the root, restore leading ..s


  if (allowAboveRoot) {
    for (; up--; up) {
      parts.unshift('..');
    }
  }

  return parts;
} // Split a filename into [root, dir, basename, ext], unix version
// 'root' is just a slash, or nothing.


var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;

var splitPath = function splitPath(filename) {
  return splitPathRe.exec(filename).slice(1);
}; // path.resolve([from ...], to)
// posix version


exports.resolve = function () {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = i >= 0 ? arguments[i] : process.cwd(); // Skip empty and invalid entries

    if (typeof path !== 'string') {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path.charAt(0) === '/';
  } // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)
  // Normalize the path


  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function (p) {
    return !!p;
  }), !resolvedAbsolute).join('/');
  return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';
}; // path.normalize(path)
// posix version


exports.normalize = function (path) {
  var isAbsolute = exports.isAbsolute(path),
      trailingSlash = substr(path, -1) === '/'; // Normalize the path

  path = normalizeArray(filter(path.split('/'), function (p) {
    return !!p;
  }), !isAbsolute).join('/');

  if (!path && !isAbsolute) {
    path = '.';
  }

  if (path && trailingSlash) {
    path += '/';
  }

  return (isAbsolute ? '/' : '') + path;
}; // posix version


exports.isAbsolute = function (path) {
  return path.charAt(0) === '/';
}; // posix version


exports.join = function () {
  var paths = Array.prototype.slice.call(arguments, 0);
  return exports.normalize(filter(paths, function (p, index) {
    if (typeof p !== 'string') {
      throw new TypeError('Arguments to path.join must be strings');
    }

    return p;
  }).join('/'));
}; // path.relative(from, to)
// posix version


exports.relative = function (from, to) {
  from = exports.resolve(from).substr(1);
  to = exports.resolve(to).substr(1);

  function trim(arr) {
    var start = 0;

    for (; start < arr.length; start++) {
      if (arr[start] !== '') break;
    }

    var end = arr.length - 1;

    for (; end >= 0; end--) {
      if (arr[end] !== '') break;
    }

    if (start > end) return [];
    return arr.slice(start, end - start + 1);
  }

  var fromParts = trim(from.split('/'));
  var toParts = trim(to.split('/'));
  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;

  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];

  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));
  return outputParts.join('/');
};

exports.sep = '/';
exports.delimiter = ':';

exports.dirname = function (path) {
  var result = splitPath(path),
      root = result[0],
      dir = result[1];

  if (!root && !dir) {
    // No dirname whatsoever
    return '.';
  }

  if (dir) {
    // It has a dirname, strip trailing slash
    dir = dir.substr(0, dir.length - 1);
  }

  return root + dir;
};

exports.basename = function (path, ext) {
  var f = splitPath(path)[2]; // TODO: make this comparison case-insensitive on windows?

  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }

  return f;
};

exports.extname = function (path) {
  return splitPath(path)[3];
};

function filter(xs, f) {
  if (xs.filter) return xs.filter(f);
  var res = [];

  for (var i = 0; i < xs.length; i++) {
    if (f(xs[i], i, xs)) res.push(xs[i]);
  }

  return res;
} // String.prototype.substr - negative index don't work in IE8


var substr = 'ab'.substr(-1) === 'b' ? function (str, start, len) {
  return str.substr(start, len);
} : function (str, start, len) {
  if (start < 0) start = str.length + start;
  return str.substr(start, len);
};
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(98)))

/***/ }),
/* 48 */
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};

/***/ }),
/* 49 */
/***/ (function(module, exports) {

var id = 0;
var px = Math.random();

module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};

/***/ }),
/* 50 */
/***/ (function(module, exports) {

module.exports = false;

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = __webpack_require__(130);

var enumBugKeys = __webpack_require__(102);

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(36);

var max = Math.max;
var min = Math.min;

module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __webpack_require__(7);

var dPs = __webpack_require__(131);

var enumBugKeys = __webpack_require__(102);

var IE_PROTO = __webpack_require__(101)('IE_PROTO');

var Empty = function Empty() {
  /* empty */
};

var PROTOTYPE = 'prototype'; // Create object with fake `null` prototype: use iframe Object with cleared prototype

var _createDict = function createDict() {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__(99)('iframe');

  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';

  __webpack_require__(103).appendChild(iframe);

  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);

  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  _createDict = iframeDocument.F;

  while (i--) {
    delete _createDict[PROTOTYPE][enumBugKeys[i]];
  }

  return _createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;

  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null; // add "__proto__" for Object.getPrototypeOf polyfill

    result[IE_PROTO] = O;
  } else result = _createDict();

  return Properties === undefined ? result : dPs(result, Properties);
};

/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys = __webpack_require__(130);

var hiddenKeys = __webpack_require__(102).concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};

/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = __webpack_require__(28);

var toObject = __webpack_require__(24);

var IE_PROTO = __webpack_require__(101)('IE_PROTO');

var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];

  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  }

  return O instanceof Object ? ObjectProto : null;
};

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

// 22.1.3.31 Array.prototype[@@unscopables]
var UNSCOPABLES = __webpack_require__(13)('unscopables');

var ArrayProto = Array.prototype;
if (ArrayProto[UNSCOPABLES] == undefined) __webpack_require__(29)(ArrayProto, UNSCOPABLES, {});

module.exports = function (key) {
  ArrayProto[UNSCOPABLES][key] = true;
};

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(8);

module.exports = function (it, TYPE) {
  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');
  return it;
};

/***/ }),
/* 58 */
/***/ (function(module, exports) {

var g; // This works in non-strict mode

g = function () {
  return this;
}();

try {
  // This works if eval is allowed (see CSP)
  g = g || new Function("return this")();
} catch (e) {
  // This works if the window reference is available
  if (typeof window === "object") g = window;
} // g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}


module.exports = g;

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__(124);

function isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _construct(Parent, args, Class) {
  if (isNativeReflectConstruct()) {
    module.exports = _construct = Reflect.construct;
  } else {
    module.exports = _construct = function _construct(Parent, args, Class) {
      var a = [null];
      a.push.apply(a, args);
      var Constructor = Function.bind.apply(Parent, a);
      var instance = new Constructor();
      if (Class) setPrototypeOf(instance, Class.prototype);
      return instance;
    };
  }

  return _construct.apply(null, arguments);
}

module.exports = _construct;

/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithHoles = __webpack_require__(349);

var iterableToArrayLimit = __webpack_require__(350);

var nonIterableRest = __webpack_require__(351);

function _slicedToArray(arr, i) {
  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();
}

module.exports = _slicedToArray;

/***/ }),
/* 61 */
/***/ (function(module, exports) {

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

module.exports = _defineProperty;

/***/ }),
/* 62 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: /Users/jon/Projects/@skypager/src/runtime/node_modules/@babel/runtime/helpers/classCallCheck.js
var classCallCheck = __webpack_require__(9);
var classCallCheck_default = /*#__PURE__*/__webpack_require__.n(classCallCheck);

// EXTERNAL MODULE: /Users/jon/Projects/@skypager/src/runtime/node_modules/@babel/runtime/helpers/createClass.js
var createClass = __webpack_require__(14);
var createClass_default = /*#__PURE__*/__webpack_require__.n(createClass);

// EXTERNAL MODULE: /Users/jon/Projects/@skypager/src/runtime/node_modules/@babel/runtime/helpers/typeof.js
var helpers_typeof = __webpack_require__(18);
var typeof_default = /*#__PURE__*/__webpack_require__.n(helpers_typeof);

// CONCATENATED MODULE: /Users/jon/Projects/@skypager/src/runtime/lib/es/utils/qbus.js



/** @license Licenced under MIT - qbus - ©2015 Pehr Boman <github.com/unkelpehr> */

/**
 * Normalizes given path by converting double frontslashes to singles
 * and removing the slashes from the beginning and end of the string.
 *
 * @param  {String} path The path to normalize
 * @return {String}      Normalized path
 */

function normalizePath(path) {
  // Remove double slashes
  if (path.indexOf('//') !== -1) {
    path = path.replace(/\/+/g, '/');
  } // Shift slash


  if (path[0] === '/') {
    path = path.substr(1);
  } // Pop slash


  if (path[path.length - 1] === '/') {
    path = path.substr(0, path.length - 1);
  }

  return path;
}
/**
 * Helper function for fast execution of functions with dynamic parameters.
 *
 * @method     exec
 * @param      {Function}  func     Function to execute
 * @param      {Object}    context  Object used as `this`-value
 * @param      {Array}     args     Array of arguments to pass
 */


function exec(func, context, args) {
  var res;

  switch (args.length) {
    case 0:
      res = func.call(context);
      break;

    case 1:
      res = func.call(context, args[0]);
      break;

    case 2:
      res = func.call(context, args[0], args[1]);
      break;

    case 3:
      res = func.call(context, args[0], args[1], args[2]);
      break;

    case 4:
      res = func.call(context, args[0], args[1], args[2], args[3]);
      break;

    default:
      res = func.apply(context, args);
      break;
  }

  return res;
}
/**
 * Passes given query to 'this.exec' and shifts the first, mandatory, full match.
 * This function is added as a property to all RegExp-objects that passes Qbus.parse.
 *
 * @method     execQuery
 * @param      {String}  query   String execute
 * @return     {Null|Array>}     Null if it does not match, otherwise Array.
 */


function execQuery(query) {
  var match, i, arr;

  if (match = this.exec(query)) {
    arr = new Array(match.length - 1);

    for (i = 1; i < match.length; ++i) {
      arr[i - 1] = match[i];
    }

    return arr;
  }

  return match;
}
/**
 * Converts given expression to RegExp.
 * If a RegExp is given it will copy it and add 'execQuery' to its properties.
 *
 * @method     emit
 * @param      {String|RegExp}  expr   The string to convert or RegExp to add 'execQuery'.
 * @return     {RegExp}
 */


function parse(expr) {
  var finalRegexp, strSlashPref;

  if (typeof expr !== 'string') {
    // Handle RegExp `expr`
    if (expr instanceof RegExp) {
      finalRegexp = new RegExp(expr);
      finalRegexp.query = execQuery;
      return finalRegexp;
    }

    throw new TypeError('Usage: qbus.parse(<`query` = String|RegExp>)\n' + 'Got:   qbus.parse(<`' + typeof_default()(expr) + '` = ' + expr + '>)');
  }

  strSlashPref = expr[expr.length - 1] === '/'; // Trim slashes and remove doubles

  expr = normalizePath(expr); // Pass everything from and including possible beginning frontslash
  // until and not including the next frontslash, to `parseLevel`.

  expr = expr.replace(/\/?[^\/]+?(?=\/|$)/g, function (match, index) {
    // Return level if it doesn't contain any modifiers.
    // : must be preceeded by / or start of string to count
    // ? must be used with valid : to count (so we don't need to check for that)
    // * always counts
    if (match.indexOf('*') === -1 && (match.length <= 2 || !/(^|\/)+\:+?/.test(match))) {
      return match.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
    }

    var slashSuff = match[0] === '/' ? '/' : '',
        slashPref = !!expr[match.length + index] || strSlashPref,
        level = slashSuff ? match.substr(1) : match,
        firstChar = level[0],
        lastChar = level.substr(-1); // Handle captures

    if (firstChar === ':') {
      // Handle optional :capture?
      if (lastChar === '?') {
        // Wrap any preceding slash in the optional capture group
        return slashSuff ? '(?:/([^/]+?))?' : '([^/]+?)?';
      } // Handle mandatory :capture


      return slashSuff + '([^/]+?)';
    } // All matches that end with a slash or does not end with * are easy.
    // We'll just choose to capture anything except a frontslash.
    //
    // /some/stuff*/   =>   /some/stuff([^/]+)?/
    // /some/st*ff/    =>   /some/st([^/]+)?ff/


    if (slashPref || lastChar !== '*') {
      return slashSuff + level.replace(/\*/g, '([^/]+)?');
    } // Handle all matches that ends with * and are not followd by frontslash; 'stuff*', '*'.
    // We'll replace all asterisks except the last with catch-alls. The last one is omitted and replaced with
    // a pattern that matches everything up until, but not included, the last frontslash in the string or end-of-string.
    //
    // /some/stuff* => some/stuff(.*?(?:(?=\/$)|(?=$)))?
    // /some/st*ff* => some/st(.*)?ff(.*?(?:(?=\/$)|(?=$)))?
    // /*           => (.*?(?:(?=\\/$)|(?=$)))?


    return slashSuff + level.replace(/\*(?!$)/g, '(.*)?').slice(0, -1) + '(.*?(?:(?=/$)|(?=$)))?';
  }); // Create RegExp object from the parsed query

  finalRegexp = new RegExp('^/?' + expr + '/?$', 'i'); // Add `execQuery` to it's properties

  finalRegexp.query = execQuery;
  return finalRegexp;
}
/**
 * Extracts the static portion of a query; i.e. everything up until a modifier.
 * /*                     = /
 * /get/some/:stuff?/     = /get/some
 * /get/some/*            = /get/some
 * /get/some/stu*         = /get/some
 * /get/some/stuff/       = /get/some/stuff
 *
 * @param  {String} query The query to extract the static portion of
 * @return {String}       The static portion of the query given
 */


function getFixed(query) {
  var fixed, iOP, iOW; // Search for the the first occurence of a wildcard or capture portion

  iOP = query.search(/(^|\/)+?:+?[^\/]+?/);
  iOW = query.search(/(^|\/)+?[^\/]*?\*{1}/); // Both negative - static query

  if (iOP === -1 && iOW === -1) {
    return query;
  } // Extract static portion


  fixed = query.substr(0, Math.min(iOP !== -1 ? iOP : query.length, iOW !== -1 ? iOW : query.length)); // Pop slash

  if (fixed[fixed.length - 1] === '/') {
    fixed = fixed.substr(0, fixed.length - 1);
  }

  return fixed;
}

var qbus_Qbus =
/*#__PURE__*/
function () {
  function Qbus(parent) {
    classCallCheck_default()(this, Qbus);

    Object.defineProperty(this, 'qbus', {
      enumerable: false,
      value: {
        paths: {},
        parse: parse,
        parent: parent || null
      }
    });
  }
  /**
   * Attaches a new query handler for the given function.
   *
   * @method     on
   * @param      {String|RegExp}  expr     Expression to match against. String or a RegExp object
   * @param      {Function}       handler  A function to execute when the expression is matched.
   * @return     {Object}  `this`
   */


  createClass_default()(Qbus, [{
    key: "on",
    value: function on(expr, handler) {
      var paths = this.qbus.paths,
          normal,
          fixed,
          isRegExp = expr instanceof RegExp;

      if (!isRegExp && typeof expr !== 'string' || typeof handler !== 'function') {
        throw new TypeError('Usage: qbus.on(<`expr` = String|RegExp>, <`handler` = Function>)\n' + 'Got:   qbus.on(<`' + typeof_default()(expr) + '` = ' + expr + '>, <`' + typeof_default()(handler) + '` = ' + handler + '>)');
      } // Handle RegExp queries


      if (isRegExp) {
        ;
        (paths['/'] || (paths['/'] = [])).push({
          input: expr.source,
          handler: handler,
          expr: parse(expr)
        });
        return this;
      } // Trim slashes and remove doubles


      normal = normalizePath(expr); // Get the static portion of the expression or fallback on '/'.

      fixed = getFixed(normal) || '/'; // Create namespace

      if (!paths[fixed]) {
        paths[fixed] = [];
      } // All done


      paths[fixed].push({
        input: normal,
        handler: handler,
        // If the fixed portion of the expr equals the normal
        // then this is a simple, non-regexp expr that can use string comparison.
        expr: normal === fixed ? normal : parse(expr)
      });
      return this;
    }
    /**
     * Attaches a new query handler for the given function.
     * The query handler will only be called once.
     *
     * @method     on
     * @param      {String|RegExp}  expr     Expression to match against. String or a RegExp object
     * @param      {Function}       handler  A function to execute when the expression is matched.
     * @return     {Object}  `this`
     */

  }, {
    key: "once",
    value: function once(expr, handler) {
      var self = this;

      if (typeof handler !== 'function' || typeof expr !== 'string' && !(expr instanceof RegExp)) {
        throw new TypeError('Usage: qbus.once(<`expr` = String|RegExp>, <`handler` = Function>)\n' + 'Got:   qbus.once(<`' + typeof_default()(expr) + '` = ' + expr + '>, <`' + typeof_default()(handler) + '` = ' + handler + '>)');
      }

      return this.on(expr, function temp() {
        var i = 0,
            args = new Array(arguments.length);

        for (; i < args.length; ++i) {
          args[i] = arguments[i];
        }

        self.off(expr, temp);
        exec(handler, self, args);
      });
    }
    /**
     * Removes all subscriptions matching `expr` and the optional `handler` function.
     *
     * @method     off
     * @param      {String|RegExp}  expr     Expression to match
     * @param      {Function=}  handler      Function to match
     * @return     {Object}                  `this`
     */

  }, {
    key: "off",
    value: function off(expr, handler) {
      var paths = this.qbus.paths,
          isRegExp,
          parent,
          i;

      if (typeof expr !== 'string' && !(isRegExp = expr instanceof RegExp) || typeof handler !== 'undefined' && typeof handler !== 'function') {
        throw new TypeError('Usage: qbus.off(<`expr` = String|RegExp>[, <`handler` = Function>])\n' + 'Got:   qbus.off(<`' + typeof_default()(expr) + '` = ' + expr + '>, <`' + typeof_default()(handler) + '` = ' + handler + '>)');
      }

      var updatePaths; // Convert RegExp' queries to strings

      if (isRegExp) {
        expr = expr.source;
        parent = paths['/'];

        updatePaths = function updatePaths(newPaths) {
          return paths['/'] = newPaths;
        };
      } else {
        expr = normalizePath(expr);
        parent = paths[getFixed(expr) || '/'];

        updatePaths = function updatePaths(newPaths) {
          return paths[getFixed(expr) || '/'] = newPaths;
        };
      }

      if (parent) {
        parent = parent.filter(function (_ref) {
          var fn = _ref.handler,
              input = _ref.input;

          if (input === expr && (!fn || fn === handler)) {
            return false;
          } else {
            return true;
          }
        });
        updatePaths(parent);
      }

      return this;
    }
    /**
     * Executes all stored handlers that has an expression that matches `query`.
     *
     * @method     emit
     * @param      {String}  query   The string to match against
     * @return     {Object}          `this`
     */

  }, {
    key: "emit",
    value: function emit(query) {
      var paths = this.qbus.paths,
          i,
          x,
          sub,
          match,
          args = [],
          parent,
          needle,
          returned,
          slashEnd,
          normal,
          argsLen = arguments.length; // Get all arguments after `query` as a regular array

      if (argsLen > 1) {
        for (i = 1; i < argsLen; ++i) {
          args.push(arguments[i]);
        }
      } // Typecheck after converting the arguments to a regular array so we can include `args` in the message.
      // Dropping the `arguments` bomb causes V8 bailout: Bad value context for arguments value.


      if (typeof query !== 'string') {
        throw new TypeError('Usage: qbus.emit(<`query` = String>[, <`arg1` = *>], <`arg2` = *>, ...)\n' + 'Got:   qbus.emit(<`' + typeof_default()(query) + '` = ' + query + '>, ' + args + ')');
      }

      slashEnd = query[query.length - 1] == '/' ? '/' : ''; // `needle` will be modified while we look for listeners so
      // `normal` will be the value that we'll compare against.

      needle = normal = normalizePath(query); // Skip a do...while by setting `needle` to '/' if it's empty.
      // It will be empty if the query equaled '/' before normalizePath trimmed the slashes.

      needle = needle || '/';

      while (needle) {
        parent = paths[needle];

        if (parent) {
          for (i = 0; i < parent.length; ++i) {
            sub = parent[i]; // RegExp matching

            if (sub.expr.query) {
              if (match = sub.expr.query(normal + slashEnd)) {
                // Extend `args` into matches
                for (x = 0; x < args.length; ++x) {
                  match.push(args[x]);
                }

                returned = exec(sub.handler, this, match);
              }
            } // String comparison
            else if (normal == sub.expr) {
                returned = exec(sub.handler, this, args);
              } // Discontinue if a handler returned false


            if (returned === false) {
              return this;
            }
          }
        } // Break after processing '/'


        if (needle.length === 1) {
          break;
        } // For each run we pop a part of the needle
        // 'foo/bar/baz'.substr(0, 7) => foo/bar
        // 'foo/bar'
        // 'foo'
        // ''
        //
        // By looping it backwards we let the most explicit listeners
        // have a running chance to break the loop by returning false.
        //
        // They are also guaranteed to be executed before a less explicit
        // listener breaks the loop.


        needle = needle.substr(0, needle.lastIndexOf('/')) || '/';
      } // Bubble


      if (this.qbus.parent) {
        this.qbus.parent.emit.apply(this.qbus.parent, arguments);
      }

      return this;
    }
  }]);

  return Qbus;
}(); // Add parse as a property to the constructor



qbus_Qbus.parse = parse;
// CONCATENATED MODULE: /Users/jon/Projects/@skypager/src/runtime/lib/es/utils/emitter.js
/* unused harmony export attachTo */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return attachEmitter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return attach; });


function hide(target, property, value) {
  var configurable = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;
  Object.defineProperty(target, property, {
    value: value,
    configurable: !!configurable,
    enumerable: false
  });
  return target;
}

function attachTo(host) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var emitter = new qbus_Qbus();
  var _options$configurable = options.configurable,
      configurable = _options$configurable === void 0 ? true : _options$configurable;
  hide(host, 'emitter', emitter, configurable);
  hide(host, 'on', emitter.on.bind(emitter), configurable);
  hide(host, 'addListener', emitter.on.bind(emitter), configurable);
  hide(host, 'once', emitter.once.bind(emitter), configurable);
  hide(host, 'off', emitter.off.bind(emitter), configurable);
  hide(host, 'removeAllListeners', emitter.off.bind(emitter), configurable);
  hide(host, 'emit', emitter.emit.bind(emitter), configurable);
  hide(host, 'trigger', emitter.emit.bind(emitter), configurable);
  return emitter;
}
var attachEmitter = attachTo;
var attach = attachTo;

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

var def = __webpack_require__(19).f;

var has = __webpack_require__(28);

var TAG = __webpack_require__(13)('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, {
    configurable: true,
    value: tag
  });
};

/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(1);

var defined = __webpack_require__(41);

var fails = __webpack_require__(6);

var spaces = __webpack_require__(105);

var space = '[' + spaces + ']';
var non = "\u200B\x85";
var ltrim = RegExp('^' + space + space + '*');
var rtrim = RegExp(space + space + '*$');

var exporter = function exporter(KEY, exec, ALIAS) {
  var exp = {};
  var FORCE = fails(function () {
    return !!spaces[KEY]() || non[KEY]() != non;
  });
  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];
  if (ALIAS) exp[ALIAS] = fn;
  $export($export.P + $export.F * FORCE, 'String', exp);
}; // 1 -> String#trimLeft
// 2 -> String#trimRight
// 3 -> String#trim


var trim = exporter.trim = function (string, TYPE) {
  string = String(defined(string));
  if (TYPE & 1) string = string.replace(ltrim, '');
  if (TYPE & 2) string = string.replace(rtrim, '');
  return string;
};

module.exports = exporter;

/***/ }),
/* 65 */
/***/ (function(module, exports) {

module.exports = {};

/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var global = __webpack_require__(5);

var dP = __webpack_require__(19);

var DESCRIPTORS = __webpack_require__(20);

var SPECIES = __webpack_require__(13)('species');

module.exports = function (KEY) {
  var C = global[KEY];
  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
    configurable: true,
    get: function get() {
      return this;
    }
  });
};

/***/ }),
/* 67 */
/***/ (function(module, exports) {

module.exports = function (it, Constructor, name, forbiddenField) {
  if (!(it instanceof Constructor) || forbiddenField !== undefined && forbiddenField in it) {
    throw TypeError(name + ': incorrect invocation!');
  }

  return it;
};

/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

var redefine = __webpack_require__(26);

module.exports = function (target, src, safe) {
  for (var key in src) {
    redefine(target, key, src[key], safe);
  }

  return target;
};

/***/ }),
/* 69 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _babel_polyfill_noConflict__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(127);
/* harmony import */ var _babel_polyfill_noConflict__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_polyfill_noConflict__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(74);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _runtime__WEBPACK_IMPORTED_MODULE_1__["a"]; });




/**
 * @type {Runtime}
 */

var runtime = Object(_runtime__WEBPACK_IMPORTED_MODULE_1__[/* createSingleton */ "b"])();
/* harmony default export */ __webpack_exports__["b"] = (runtime);

/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__(40); // eslint-disable-next-line no-prototype-builtins


module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};

/***/ }),
/* 71 */
/***/ (function(module, exports) {

exports.f = {}.propertyIsEnumerable;

/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = __webpack_require__(40);

var TAG = __webpack_require__(13)('toStringTag'); // ES3 wrong here


var ARG = cof(function () {
  return arguments;
}()) == 'Arguments'; // fallback for IE11 Script Access Denied error

var tryGet = function tryGet(it, key) {
  try {
    return it[key];
  } catch (e) {
    /* empty */
  }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null' // @@toStringTag case
  : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T // builtinTag case
  : ARG ? cof(O) // ES3 arguments fallback
  : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};

/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

// 7.3.20 SpeciesConstructor(O, defaultConstructor)
var anObject = __webpack_require__(7);

var aFunction = __webpack_require__(35);

var SPECIES = __webpack_require__(13)('species');

module.exports = function (O, D) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
};

/***/ }),
/* 74 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process, global) {/* unused harmony export observableMap */
/* unused harmony export urlUtils */
/* unused harmony export pathUtils */
/* unused harmony export ContextRegistry */
/* unused harmony export registerHelper */
/* unused harmony export createRegistry */
/* unused harmony export helpers */
/* unused harmony export features */
/* unused harmony export events */
/* unused harmony export Runtime */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return createSingleton; });
/* unused harmony export INITIALIZING */
/* unused harmony export INITIALIZED */
/* unused harmony export PREPARING */
/* unused harmony export READY */
/* unused harmony export STARTING */
/* unused harmony export RUNNING */
/* unused harmony export START_FAILURE */
/* unused harmony export PREPARE_FAILURE */
/* unused harmony export INITIALIZE_FAILURE */
/* unused harmony export stages */
/* unused harmony export initializeSequence */
/* unused harmony export prepareSequence */
/* unused harmony export startSequence */
/* unused harmony export makeStateful */
/* harmony import */ var _babel_runtime_helpers_construct__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(59);
/* harmony import */ var _babel_runtime_helpers_construct__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_construct__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(15);
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(60);
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(10);
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(25);
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(3);
/* harmony import */ var _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(9);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(14);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(2);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _babel_polyfill_noConflict__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(127);
/* harmony import */ var _babel_polyfill_noConflict__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_babel_polyfill_noConflict__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(0);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(33);
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(47);
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var querystring__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(125);
/* harmony import */ var querystring__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(querystring__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(126);
/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(url__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(91);
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(uuid__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var _cache__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(162);
/* harmony import */ var _feature__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(31);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _feature__WEBPACK_IMPORTED_MODULE_17__["a"]; });

/* harmony import */ var _features_profiler__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(165);
/* harmony import */ var _features_vm__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(166);
/* harmony import */ var _helper__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(11);
/* harmony import */ var _utils_emitter__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(62);
/* harmony import */ var _utils_mware__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(97);
/* harmony import */ var _utils_properties__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(4);
/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(12);
/* harmony import */ var _weak_cache__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(167);


























var propertyUtils = _utils_properties__WEBPACK_IMPORTED_MODULE_23__["propertyUtils"];

var observableMap = mobx__WEBPACK_IMPORTED_MODULE_11__["observable"].map;
var urlUtils = {
  parseUrl: url__WEBPACK_IMPORTED_MODULE_14__["parse"],
  formatUrl: url__WEBPACK_IMPORTED_MODULE_14__["format"],
  parseQueryString: querystring__WEBPACK_IMPORTED_MODULE_13__["parse"]
};
var pathUtils = {
  join: path__WEBPACK_IMPORTED_MODULE_12__["join"],
  parse: path__WEBPACK_IMPORTED_MODULE_12__["parse"],
  resolve: path__WEBPACK_IMPORTED_MODULE_12__["resolve"],
  sep: path__WEBPACK_IMPORTED_MODULE_12__["sep"],
  basename: path__WEBPACK_IMPORTED_MODULE_12__["basename"],
  dirname: path__WEBPACK_IMPORTED_MODULE_12__["dirname"],
  relative: path__WEBPACK_IMPORTED_MODULE_12__["relative"]
};
var ContextRegistry = _helper__WEBPACK_IMPORTED_MODULE_20__[/* Helper */ "a"].ContextRegistry;
var _registerHelper = _helper__WEBPACK_IMPORTED_MODULE_20__[/* Helper */ "a"].registerHelper;

var createRegistry = _helper__WEBPACK_IMPORTED_MODULE_20__[/* Helper */ "a"].createRegistry;
var helpers = _helper__WEBPACK_IMPORTED_MODULE_20__[/* Helper */ "a"].registry;
var features = _feature__WEBPACK_IMPORTED_MODULE_17__[/* Feature */ "a"].registry;
var events = Object(_utils_emitter__WEBPACK_IMPORTED_MODULE_21__[/* attachEmitter */ "b"])({});
var camelCase = _utils_string__WEBPACK_IMPORTED_MODULE_24__["camelCase"],
    snakeCase = _utils_string__WEBPACK_IMPORTED_MODULE_24__["snakeCase"];
var _hashObject = _utils_properties__WEBPACK_IMPORTED_MODULE_23__["hashObject"],
    entity = _utils_properties__WEBPACK_IMPORTED_MODULE_23__["createEntity"],
    hide = _utils_properties__WEBPACK_IMPORTED_MODULE_23__["hide"],
    enhanceObject = _utils_properties__WEBPACK_IMPORTED_MODULE_23__["enhanceObject"];
var _observe = mobx__WEBPACK_IMPORTED_MODULE_11__["observe"],
    extendObservable = mobx__WEBPACK_IMPORTED_MODULE_11__["extendObservable"],
    observable = mobx__WEBPACK_IMPORTED_MODULE_11__["observable"],
    toJS = mobx__WEBPACK_IMPORTED_MODULE_11__["toJS"],
    computed = mobx__WEBPACK_IMPORTED_MODULE_11__["computed"],
    action = mobx__WEBPACK_IMPORTED_MODULE_11__["action"],
    autorun = mobx__WEBPACK_IMPORTED_MODULE_11__["autorun"];
var selectorCache = new WeakMap();
var _result = lodash__WEBPACK_IMPORTED_MODULE_10___default.a.result,
    keys = lodash__WEBPACK_IMPORTED_MODULE_10___default.a.keys,
    pick = lodash__WEBPACK_IMPORTED_MODULE_10___default.a.pick,
    _get = lodash__WEBPACK_IMPORTED_MODULE_10___default.a.get,
    isFunction = lodash__WEBPACK_IMPORTED_MODULE_10___default.a.isFunction,
    omitBy = lodash__WEBPACK_IMPORTED_MODULE_10___default.a.omitBy,
    mapValues = lodash__WEBPACK_IMPORTED_MODULE_10___default.a.mapValues,
    toPairs = lodash__WEBPACK_IMPORTED_MODULE_10___default.a.toPairs,
    zipObjectDeep = lodash__WEBPACK_IMPORTED_MODULE_10___default.a.zipObjectDeep,
    uniq = lodash__WEBPACK_IMPORTED_MODULE_10___default.a.uniq,
    castArray = lodash__WEBPACK_IMPORTED_MODULE_10___default.a.castArray,
    defaults = lodash__WEBPACK_IMPORTED_MODULE_10___default.a.defaultsDeep,
    isArray = lodash__WEBPACK_IMPORTED_MODULE_10___default.a.isArray,
    isObject = lodash__WEBPACK_IMPORTED_MODULE_10___default.a.isObject,
    isUndefined = lodash__WEBPACK_IMPORTED_MODULE_10___default.a.isUndefined,
    flatten = lodash__WEBPACK_IMPORTED_MODULE_10___default.a.flatten;
var runtimesRegistry;
var frameworkRuntime;
var singleton;
var windowIsAvailable = typeof window !== 'undefined';
var documentIsAvailable = typeof document !== 'undefined';
var processIsAvailable = typeof process !== 'undefined';

var defaultOptions = _result(global, 'SkypagerDefaultOptions', {});

var defaultContext = _result(global, 'SkypagerDefaultContext', {});

var contextTypes = _result(global, 'SkypagerContextTypes', {});

var optionTypes = _result(global, 'SkypagerOptionTypes', {});

var enableStrictMode = _get(global, 'process.env.SKYPAGER_STRICT_MODE', _get(global, 'SkypagerStrictMode', false));
/**
 * @typedef {Object<String,Function>} Mixin
 */

/**
 *
 * @typedef {Object} MixinOptions
 * @prop {Array} partial - an array of objects to be passed as arguments to the function
 * @prop {Boolean} right - whether to append the arguments
 * @prop {Boolean} insertOptions - whether to pass an empty object as the first arg automatically
 * @prop {Boolean} hidden - make the property non-enumerable
 * @prop {Boolean} configurable - make the property non-configurable
 */

/**
 *
 * @typedef {Object} Logger
 * @prop {Function} log
 * @prop {Function} info
 * @prop {Function} debug
 * @prop {Function} warn
 * @prop {Function} error
 */

/**
 * @mixin Stateful
 * @property {Map} state
 * @property {Object} currentState
 * @property {Function} setState
 * @property {Function} replaceState
 * @property {String} cacheKey
 * @property {String} stateHash
 */

/**
 * Create a new instance of the skypager.Runtime
 *
 * @class Runtime
 * @classdesc The Runtime is similar to the window or document global in the browser, or the module / process globals in node.
 * You can extend Runtime and define your own process global singleton that acts as a state machine, event emitter,
 * module registry, dependency injector.  Typically you can just do this with features instead of subclassing.
 * @mixes Stateful
 * @param {object} [options] - the props, or argv, for the runtime instance at the time it is created
 * @param {object} [context] - the context, environment, static config, or similar global values that may be relevant to some component in the runtime
 * @param {function} [middlewareFn] - this function will be called when the runtime is asynchronously loaded and the plugins have run *
 */


var Runtime =
/*#__PURE__*/
function () {
  function Runtime() {
    var _middlewares,
        _this = this;

    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var middlewareFn = arguments.length > 2 ? arguments[2] : undefined;

    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_6___default()(this, Runtime);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8___default()(this, "displayName", 'Skypager');

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8___default()(this, "stateVersion", 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8___default()(this, "Helper", _helper__WEBPACK_IMPORTED_MODULE_20__[/* Helper */ "a"]);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8___default()(this, "Feature", _feature__WEBPACK_IMPORTED_MODULE_17__[/* Feature */ "a"]);

    if (isFunction(options)) {
      middlewareFn = options;
      options = {};
      context = context || {};
    }

    if (isFunction(context)) {
      middlewareFn = context;
      context = {};
    }

    enhanceObject(this, {
      propUtils: false,
      includeLodashMethods: false,
      includeChain: false
    }, lodash__WEBPACK_IMPORTED_MODULE_10___default.a);

    Object(_utils_emitter__WEBPACK_IMPORTED_MODULE_21__[/* attachEmitter */ "b"])(this);

    extendObservable(this, {
      state: observable.shallowMap(toPairs(this.initialState)),
      currentState: computed(this.getCurrentState.bind(this)),
      stateHash: computed(this.getStateHash.bind(this)),
      cacheKey: computed(this.getCacheKey.bind(this)),
      setState: action(this.setState.bind(this)),
      replaceState: action(this.replaceState.bind(this)),
      featureStatus: observable.shallowMap([])
    });

    var cwd = _result(options, 'cwd', function () {
      return !isUndefined(process) ? _result(process, 'cwd', '/') : '/';
    });

    this.hideProperties({
      _logger: console,
      _parent: context.parent || singleton,
      _cwd: cwd,
      _uuid: uuid__WEBPACK_IMPORTED_MODULE_15___default()(),
      _name: options.name || camelCase(snakeCase(cwd.split('/').pop())),
      _cache: new _cache__WEBPACK_IMPORTED_MODULE_16__[/* default */ "a"](options.cacheData || []),
      _weakCache: new _weak_cache__WEBPACK_IMPORTED_MODULE_25__[/* default */ "a"](options.cacheData || []),
      rawOptions: options,
      rawContext: context,
      _enabledFeatures: {},
      middlewares: (_middlewares = {}, _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8___default()(_middlewares, STARTING, Object(_utils_mware__WEBPACK_IMPORTED_MODULE_22__[/* default */ "a"])(this)), _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8___default()(_middlewares, PREPARING, Object(_utils_mware__WEBPACK_IMPORTED_MODULE_22__[/* default */ "a"])(this)), _middlewares),
      _registries: new ContextRegistry('registries', {
        context: _helper__WEBPACK_IMPORTED_MODULE_20__[/* Helper */ "a"].createMockContext({})
      }),
      _selectors: new ContextRegistry('selectors', {
        context: _helper__WEBPACK_IMPORTED_MODULE_20__[/* Helper */ "a"].createMockContext({})
      })
    });
    var start = this.start,
        initialize = this.initialize,
        prepare = this.prepare;
    if (isFunction(options.initialize)) initialize = lodash__WEBPACK_IMPORTED_MODULE_10___default.a.flow(this.initialize, options.initialize);
    if (isFunction(options.prepare)) prepare = lodash__WEBPACK_IMPORTED_MODULE_10___default.a.flow(this.prepare, options.prepare);
    this.initialize = initializeSequence.bind(this, this, initialize);
    this.prepare = prepareSequence.bind(this, this, prepare);
    this.start = startSequence.bind(this, this, start);
    this.events.emit('runtimeWasCreated', this, this.constructor);
    this.applyRuntimeInitializers(); // autoAdd refers to require.contexts that should be added to our registries
    // this step is deferred until all helpers have been attached.

    this.constructor.autoAdd.forEach(function (item) {
      var type = item.type,
          ctx = item.ctx;

      _this.invoke("".concat(type, ".add"), ctx);
    });
    this.attachAllHelpers();
    _feature__WEBPACK_IMPORTED_MODULE_17__[/* Feature */ "a"].attach(this);
    this.features.register('profiler', function () {
      return {
        "default": _features_profiler__WEBPACK_IMPORTED_MODULE_18__[/* default */ "a"]
      };
    });
    this.features.register('vm', function () {
      return _features_vm__WEBPACK_IMPORTED_MODULE_19__[/* default */ "a"];
    });
    this.enableFeatures(this.autoEnabledFeatures);

    if (typeof middlewareFn === 'function') {
      this.use(middlewareFn.bind(this), INITIALIZING);
    }

    if (this.autoInitialize) this.initialize();
  }
  /**
   * Extend the runtime with a middleware function, plugin object, or helper class.
   *
   * @example chain them as necessary
   *
   * runtime
   *  .use((next) => { })
   *  .use({ attach(runtime) { } })
   *  .use(MyFeature)
   *  .use('some-feature-thats-been-registered')
   *
   * @example using a function, deferred until runtime.start() is called
   *
   * runtime.use((next) => {
   *  doSomethingAsync().then(() => next()).catch((error) => next(error))
   * })
   *
   * @example using a plugin object with an attach function
   *
   * runtime.use({
   *  attach(runtime) {
   *    console.log('runs immediately')
   *    runtime.use((next) => {
   *      console.log('called at runtime start() like normal')
   *    })
   *  }
   * })
   *
   * @example specifying the PREPARING stage to run before any starting middlewares are called
   *
   * runtime
   *  .use(runOnStart)
   *  .use(runBeforeStart, 'PREPARING')
   *
   * @example using a feature class will register and enable the feature
   *
   * export default class MyFeature extends Feature {
   *  featureId = 'registered-in-the-registry-with-this'
   *
   *  featureWasEnabled(config) {
   *    console.log('enabled with', config) // enabled with { option: 'passed to feature enable' }
   *  }
   * }
   *
   * // in another module
   * import MyFeature from 'myFeature'
   *
   * runtime.use(MyFeature, { option: 'passed to feature enable' })
   *
   * @example passing a string which refers to an already existing feature
   *
   * runtime.use('some-registered-feature')
   *
   * @memberof Runtime
   * @param {Function|Object|Feature|Helper} extension an object that meets the requirements to be an extension
   * @param {String|Object} [stage=INITIALIZING] which stage to run this middleware in (INITIALIZING, PREPARING, STARTING)
   * @returns {Runtime}
   */


  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_7___default()(Runtime, [{
    key: "use",
    value: function use(extension, stage) {
      var runtime = this;

      if (isObject(extension) && isFunction(extension.initializer)) {
        return this.use(extension.initializer.bind(this), INITIALIZING);
      } else if (isFunction(extension) && extension.isSkypagerFeature) {
        var featureId = extension.featureId || extension.shortcut || extension.prototype.shortcut || extension.name;

        if (!this.features.checkKey(featureId)) {
          this.features.register(featureId, function () {
            return extension;
          });
          var myFeature = this.feature(featureId, isObject(stage) ? _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_5___default()({}, this.options, stage) : this.options);
          myFeature.enable(_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_5___default()({}, this.options, isObject(stage) ? stage : {}));
          return this;
        }
      } else if (isObject(extension) && isFunction(extension.attach)) {
        extension.attach.call(this, this, isObject(stage) ? _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_5___default()({}, this.options, stage) : this.options, this.context);
      } else if (isObject(extension) && extension["default"]) {
        return this.use(extension["default"], stage);
      }

      var m = extension.middleware || extension.use;

      if (isObject(extension) && isFunction(m)) {
        extension = m;
      }

      if (typeof extension === 'string') {
        if (runtime.availableFeatures.indexOf(extension) >= 0) {
          var _featureId = extension;

          extension = function extension() {
            return runtime.feature(_featureId).enable();
          };

          stage = stage || INITIALIZING;
        } else {
          try {
            console.error("Can not do dynamic requires anymore: You tried: ".concat(extension));
          } catch (error) {}
        }
      }

      if (isFunction(extension) && stage === INITIALIZING) {
        extension.call(runtime, function (err) {
          if (err) {
            runtime.error(err.message || "Error while using extension ".concat(extension.name), {
              error: err
            });
            throw err;
          }
        });
        return this;
      }

      if (typeof extension !== 'function') {
        return this;
      }

      if (typeof stage === 'undefined' && this.isPrepared) {
        stage = STARTING;
      }

      var pipeline = runtime.result(['middlewares', stage || STARTING], function () {
        var p = Object(_utils_mware__WEBPACK_IMPORTED_MODULE_22__[/* default */ "a"])(runtime);
        runtime.set(['middlewares', stage || STARTING], p);
        return p;
      });
      pipeline.use(extension.bind(runtime));
      return this;
    }
  }, {
    key: "lazy",

    /**
     * Creates a lazy loading property on an object.
     *
     * @param {String} attribute The property name
     * @param {Function} fn The function that will be memoized
     * @param {Boolean} enumerable Whether to make the property enumerable when it is loaded
     * @return {Helper#}
     */
    value: function lazy(attribute, fn) {
      var enumerable = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
      return propertyUtils(this).lazy(attribute, fn, enumerable);
    }
    /**
     * creates a non enumerable property on the target object
     *
     * @param {String} attribute
     * @param {*} value
     * @param {Object} options
     * @memberof Helper#
     *
     */

  }, {
    key: "hide",
    value: function hide(attribute, value) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      return propertyUtils(this).hide(attribute, value, options);
    }
    /**
     * creates a non enumerable property on the helper
     *
     * @param {String} attribute
     * @param {*} value
     * @param {Object} options
     * @memberof Helper#
     *
     */

  }, {
    key: "hideProperty",
    value: function hideProperty(attribute, value) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      return propertyUtils(this).hide(attribute, value, options);
    }
    /**
     * creates multiple non-enumerable properties on the helper
     *
     * @param {Object<string,object>} properties
     * @memberof Helper#
     *
     */

  }, {
    key: "hideProperties",
    value: function hideProperties() {
      var properties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      return propertyUtils(this).hideProperties(properties);
    }
    /**
     * Create a hidden getter property on the object.
     *
     * @param {String} attribute    The name of the property
     * @param {Function} fn      A function to call to return the desired value
     * @param {Object} [options={}]
     * @param {Object} [options.scope=this]
     * @param {Array} [options.args=[]] arguments that will be passed to the function
     * @memberof Helper#
     * @return {Helper#}
     */

  }, {
    key: "hideGetter",
    value: function hideGetter(attribute, fn) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      return propertyUtils(this).hideGetter(attribute, fn, options);
    }
    /**
     * Create a hidden getter property on the object.
     *
     * @param {String} attribute    The name of the property
     * @param {Function} fn      A function to call to return the desired value
     * @param {Object} [options={}]
     * @param {Object} [options.scope=this]
     * @param {Array} [options.args=[]] arguments that will be passed to the function
     * @memberof Helper#
     * @return {Helper}
     */

  }, {
    key: "getter",
    value: function getter(attribute, fn) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      return propertyUtils(this).getter(attribute, fn, options);
    }
    /**
     * @param {Mixin} methods - an object of functions that will be applied to the target
     * @param {MixinOptions} options - options for the mixin attributes
     */

  }, {
    key: "applyInterface",
    value: function applyInterface() {
      var methods = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      return propertyUtils(this).applyInterface(methods, options);
    }
  }, {
    key: "at",
    value: function at() {
      for (var _len = arguments.length, paths = new Array(_len), _key = 0; _key < _len; _key++) {
        paths[_key] = arguments[_key];
      }

      return lodash__WEBPACK_IMPORTED_MODULE_10___default.a.at.apply(lodash__WEBPACK_IMPORTED_MODULE_10___default.a, [this].concat(paths));
    }
    /**
     * Set the value at an object path. Uses lodash.set
     *
     * @param {*} path
     * @param {*} value
     * @returns {?}
     * @memberof Runtime
     */

  }, {
    key: "set",
    value: function set(path, value) {
      return lodash__WEBPACK_IMPORTED_MODULE_10___default.a.set(this, path, value);
    }
    /**
     * Get the value at an object path.  Uses lodash.get
     *
     * @param {String} path
     * @param {*} defaultValue
     * @returns {?}
     * @memberof Runtime
     */

  }, {
    key: "get",
    value: function get(path, defaultValue) {
      return _get(this, path, defaultValue);
    }
    /**
     * Get the value at an object path. If that path is a function, we'll call it.
     * Uses lodash.result
     *
     * @param {*} path
     * @param {*} defaultValue
     * @returns {?}
     * @memberof Runtime
     */

  }, {
    key: "result",
    value: function result(path, defaultValue) {
      for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      return _result.apply(void 0, [this, path, defaultValue].concat(args));
    }
    /**
     * Check if runtime has a property
     *
     * @param {*} path
     * @param {*} defaultValue
     * @returns {Boolean}
     * @memberof Runtime
     */

  }, {
    key: "has",
    value: function has(path) {
      return lodash__WEBPACK_IMPORTED_MODULE_10___default.a.has(this, path);
    }
    /**
     * Invoke a function at a nested path
     *
     * @param {*} functionAtPath
     * @param {...*} args
     * @returns {?}
     * @memberof Runtime
     */

  }, {
    key: "invoke",
    value: function invoke(functionAtPath) {
      for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
        args[_key3 - 1] = arguments[_key3];
      }

      return lodash__WEBPACK_IMPORTED_MODULE_10___default.a.invoke.apply(lodash__WEBPACK_IMPORTED_MODULE_10___default.a, [this].concat(args));
    }
  }, {
    key: "pick",
    value: function pick() {
      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }

      return lodash__WEBPACK_IMPORTED_MODULE_10___default.a.pick.apply(lodash__WEBPACK_IMPORTED_MODULE_10___default.a, [this].concat(args));
    }
    /**
      The Context Types API defines a schema for properties that will be made available via the runtime's context system.
       You can specify your own context types when you are extending the Runtime class.  If you are using Skypager as
      a global singleton, you won't have the opportunity if you just require('skypager-runtime'), so you can define
      a global variable SkypagerContextTypes and it will use these instead.
    */

  }, {
    key: "spawn",

    /**
     * Spawn a new Runtime instance
     *
     * @param {Object} [options={}]
     * @param {Object} [context={}]
     * @param {Function} [middlewareFn]
     * @returns {Runtime}
     * @memberof Runtime
     */
    value: function spawn() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var middlewareFn = arguments.length > 2 ? arguments[2] : undefined;

      if (isFunction(options)) {
        middlewareFn = options;
        options = {};
        context = context || {};
      }

      if (isFunction(context)) {
        middlewareFn = context;
        context = {};
      }

      return this.constructor.spawn(options, context, middlewareFn);
    }
  }, {
    key: "registerRuntime",
    value: function registerRuntime() {
      var _this$constructor;

      return (_this$constructor = this.constructor).registerRuntime.apply(_this$constructor, arguments);
    }
    /**
     * If you have code that depends on a particular helper registry being available
     * on the runtime, you can pass a callback which will run when ever it exists and
     * is ready.  This is useful for example, when developing a feature which includes a
     * client and a server helper to go along with it.  If the runtime is web, you wouldn't
     * have a server helper so you wouldn't want to load that code.  If the same runtime is
     * used on a server, then you would run that code.
     *
     * @param {string} registryPropName - the name of the registry you want to wait for
     * @param {Function} callback - a function that will be called with runtime, the helperClass, and the options passed when attaching that helper
     * @memberof Runtime#
     *
     * @example @lang js <caption>Conditionally running code when the servers helper is attached</caption>
     *
     * runtime.onRegistration("servers", () => {
     *  runtime.servers.register('my-server', () => require('./my-server'))
     * })
     *
     */

  }, {
    key: "onRegistration",
    value: function onRegistration(registryPropName, callback) {
      // to refactor the dynamic method attachment of various helpers,
      // i an prefixing their names with _ and then creating actual properties
      // on runtime so that I can jsdoc them
      registryPropName = registryPropName.replace(/^_/, '');

      if (typeof callback !== 'function') {
        throw new Error('Must pass a callback');
      }

      var alreadyRegistered = this.has(registryPropName);

      if (!alreadyRegistered) {
        _helper__WEBPACK_IMPORTED_MODULE_20__[/* Helper */ "a"].events.on('attached', function (runtime, helperClass) {
          var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

          var _ref = options || {},
              _ref$registry = _ref.registry,
              registry = _ref$registry === void 0 ? {} : _ref$registry;

          if (registry && registry.name === registryPropName) {
            callback(null, runtime, helperClass, options);
          }
        });
        return;
      }

      var isValidHelper = this.helpers.checkKey(registryPropName) || this.helpers.checkKey(_utils_string__WEBPACK_IMPORTED_MODULE_24__["singularize"](registryPropName));

      if (!isValidHelper) {
        callback(new Error("".concat(registryPropName, " does not appear to be a valid helper")));
      } else {
        callback(null, this, this.helpers.lookup(isValidHelper), {
          registry: this.get(registryPropName)
        });
      }
    }
  }, {
    key: "registerHelper",

    /**
     * Register a Helper class as being available to our Runtime class
     *
     * @param {String} helperName - the name of the helper class
     * @param {Class} helperClass - a subclass of Helper
     *
     * @returns {Class} the helper class you registered
     */
    value: function registerHelper() {
      var _this$constructor2;

      return (_this$constructor2 = this.constructor).registerHelper.apply(_this$constructor2, arguments);
    }
    /**
     * Register a Helper class as being available to this Runtime class
     *
     * @param {String} helperName - the name of the helper class
     * @param {Class} helperClass - a subclass of Helper
     *
     * @returns {Class} the helper class you registered
     */

  }, {
    key: "log",
    value: function log() {
      var _console;

      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        args[_key5] = arguments[_key5];
      }

      this.emit.apply(this, ['loggingInfo'].concat(args));

      (_console = console).log.apply(_console, args);
    }
  }, {
    key: "warn",
    value: function warn() {
      var _console2, _console3;

      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        args[_key6] = arguments[_key6];
      }

      this.emit.apply(this, ['loggingWarning'].concat(args));
      console.warn ? (_console2 = console).warn.apply(_console2, args) : (_console3 = console).log.apply(_console3, args);
    }
  }, {
    key: "debug",
    value: function debug() {
      var _console4, _console5;

      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        args[_key7] = arguments[_key7];
      }

      this.emit.apply(this, ['loggingDebug'].concat(args));
      console.debug ? (_console4 = console).debug.apply(_console4, args) : (_console5 = console).log.apply(_console5, args);
    }
  }, {
    key: "error",
    value: function error() {
      var _console6, _console7;

      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
        args[_key8] = arguments[_key8];
      }

      this.emit.apply(this, ['loggingError'].concat(args));
      console.error ? (_console6 = console).error.apply(_console6, args) : (_console7 = console).log.apply(_console7, args);
    }
  }, {
    key: "info",
    value: function info() {
      var _console8, _console9;

      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {
        args[_key9] = arguments[_key9];
      }

      this.emit.apply(this, ['loggingInfo'].concat(args));
      console.info ? (_console8 = console).info.apply(_console8, args) : (_console9 = console).log.apply(_console9, args);
    }
  }, {
    key: "applyRuntimeInitializers",

    /**
     * A Runtime class will have certain initializer functions that it runs automatically
     * as part of the startup lifecycle, which initializers will be dependent on the target (e.g. node, web)
     * as well as the NODE_ENV environment (production, development, test)
     *
     * @private
     */
    value: function applyRuntimeInitializers() {
      var _this2 = this;

      var mapValues = this.lodash.mapValues;
      var matches = this.runtimeInitializers;
      _helper__WEBPACK_IMPORTED_MODULE_20__[/* Helper */ "a"].attachAll(this, this.helperOptions);
      mapValues(matches, function (fn, id) {
        try {
          _this2.use(fn.bind(_this2), INITIALIZING);
        } catch (error) {
          _this2.error("Error while applying initializer ".concat(id), {
            error: error
          });
        }
      });
      _helper__WEBPACK_IMPORTED_MODULE_20__[/* Helper */ "a"].attachAll(this, this.helperOptions);
      return this;
    }
    /**
     * Attach all registered helpers to the runtime
     *
     * @private
     * @returns {Runtime}
     */

  }, {
    key: "attachAllHelpers",
    value: function attachAllHelpers() {
      _helper__WEBPACK_IMPORTED_MODULE_20__[/* Helper */ "a"].attachAll(this, this.helperOptions);
      return this;
    }
    /**
     * A Mixin is an object of functions.  These functions will get created as properties on this instance.
     *
     * @param {Mixin} mixin
     * @param {MixinOptions} options
     */

  }, {
    key: "mixin",
    value: function mixin() {
      var _mixin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      this.applyInterface(_mixin, _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_5___default()({
        transformKeys: true,
        scope: this,
        partial: [],
        right: true,
        insertOptions: false,
        hidden: false
      }, options));
      return this;
    }
    /**
     * If you subclass Runtime, you can define your own initialize function which will be called during the constructor phase
     *
     * @abstract
     * @private
     * @memberof Runtime#
     * @returns {Runtime}
     */

  }, {
    key: "initialize",
    value: function initialize() {
      return this;
    }
    /**
     * If you subclass Runtime, you can define your own prepare function which will be called after the constructor phase
     *
     * @abstract
     * @private
     * @returns {Promise<Runtime>}
     * @memberof Runtime#
     */

  }, {
    key: "prepare",
    value: function () {
      var _prepare = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4___default()(
      /*#__PURE__*/
      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.mark(function _callee() {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", this);

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function prepare() {
        return _prepare.apply(this, arguments);
      }

      return prepare;
    }()
    /**
     * If you subclass Runtime, you can define your own prepare function which will be called after the constructor phase
     *
     * @abstract
     * @private
     * @memberof Runtime#
     * @returns {Promise<Runtime>}
     */

  }, {
    key: "start",
    value: function () {
      var _start = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4___default()(
      /*#__PURE__*/
      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.mark(function _callee2() {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                return _context2.abrupt("return", this);

              case 1:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function start() {
        return _start.apply(this, arguments);
      }

      return start;
    }()
  }, {
    key: "runMiddleware",

    /**
     * Any middleware functions which were added to runtime using the use function
     * get pushed onto a queue.  This function runs that queue
     * @private
     */
    value: function runMiddleware(stage) {
      stage = stage || this.stage;
      var runtime = this;
      var pipeline = runtime.get(['middlewares', stage]);

      if (!pipeline) {
        return Promise.resolve(this);
      }

      if (pipeline.getCount() === 0) {
        pipeline.use(function (next) {
          next();
        });
      }

      return new Promise(function (resolve, reject) {
        pipeline.run(function (err) {
          err ? reject(err) : resolve(err);
        });
      });
    }
  }, {
    key: "getStateHash",
    value: function getStateHash() {
      return this.hashObject(this.currentState);
    }
  }, {
    key: "getCurrentState",
    value: function getCurrentState() {
      var convertToJS = this.convertToJS;
      var mapValues = this.lodash.mapValues;
      return this.state.toJSON();
    }
  }, {
    key: "getCacheKey",
    value: function getCacheKey() {
      return "".concat(this.namespace, ":").concat(this.stateVersion);
    }
  }, {
    key: "whenStarted",

    /**
     * Accepts a callback function which will be called when the runtime is started
     *
     * @param {Function} fn
     * @returns {Runtime}
     * @memberof Runtime
     */
    value: function whenStarted(fn) {
      var _this3 = this;

      if (typeof fn !== 'function') {
        return this.whenStartedAsync();
      }

      if (this.isStarted) {
        fn.call(this, this, this.options, this.context);
      } else if (this.isFailed) {
        fn.call(this, this.currentStart.error, this.options, this.context);
      } else {
        this.once('runtimeDidStart', function () {
          return fn.call(_this3, _this3.options, _this3.context);
        });
        this.once('runtimeFailedStart', function (error) {
          return fn.call(_this3, error, _this3.options, _this3.context);
        });
      }

      return this;
    }
    /**
     * Returns a promise that will resolve when the runtime is started.
     *
     * @returns {Promise<Runtime>}
     * @memberof Runtime
     */

  }, {
    key: "whenStartedAsync",
    value: function whenStartedAsync() {
      var _this4 = this;

      return new Promise(function (resolve, reject) {
        if (_this4.isStarted) {
          resolve(_this4);
          return;
        } else if (_this4.sandbox.isFailed) {
          reject(_this4.currentState.error);
          return;
        }

        _this4.once('runtimeDidStart', function () {
          return resolve(_this4);
        });

        _this4.once('runtimeFailedToStart', function (error) {
          return reject(error);
        });
      });
    }
    /**
     * @alias whenPrepared
     */

  }, {
    key: "whenReady",
    value: function whenReady(fn, onError) {
      return this.whenPrepared(fn, onError);
    }
    /**
     * @alias whenReadyAsync
     */

  }, {
    key: "whenReadyAsync",
    value: function whenReadyAsync() {
      return this.whenPreparedAsync();
    }
    /**
     * Takes a callback which will get called once this runtime is prepared
     *
     * @param {Function} fn
     * @param {Function} onError
     * @returns {Promise<Runtime>}
     * @memberof Runtime
     */

  }, {
    key: "whenPrepared",
    value: function whenPrepared(fn, onError) {
      var _this5 = this;

      if (!isFunction(fn)) {
        return this.whenPreparedAsync();
      }

      try {
        if (this.isPrepared) {
          fn.call(this, this, this.options, this.context);
        } else {
          this.once('runtimeIsPrepared', function () {
            return fn.call(_this5, _this5.options, _this5.context);
          });
        }
      } catch (error) {
        onError && onError(error);
      }

      return this;
    }
    /**
     * Returns a promise which will resolve once the runtime is prepared
     *
     * @returns {Promise<Runtime>}
     * @memberof Runtime
     */

  }, {
    key: "whenPreparedAsync",
    value: function whenPreparedAsync() {
      var _this6 = this;

      return new Promise(function (resolve, reject) {
        if (_this6.isPrepared) {
          resolve(_this6);
        } else {
          _this6.once('runtimeIsPrepared', function () {
            return resolve(_this6);
          });
        }
      });
    }
  }, {
    key: "beginTrackingState",

    /**
     * This will get called as part of the initialization sequence
     * @private
     */
    value: function beginTrackingState() {
      var _this7 = this;

      if (this.mainDisposer) {
        return this;
      }

      var mainDisposer = autorun(function () {
        var _this7$events;

        _this7.stateVersion = _this7.stateVersion + 1;
        var currentState = _this7.currentState,
            stateVersion = _this7.stateVersion;

        for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {
          args[_key10] = arguments[_key10];
        }

        _this7.emit.apply(_this7, ['change', currentState, stateVersion].concat(args));

        _this7.fireHook.apply(_this7, ['stateDidChange', currentState, stateVersion].concat(args)); // emit an event on the global event bus


        (_this7$events = _this7.events).emit.apply(_this7$events, ['runtimeDidChange', _this7, currentState, stateVersion].concat(args));
      });
      var stateDisposer = this.state.observe(function () {
        var update = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var currentState = _this7.currentState,
            stateVersion = _this7.stateVersion;

        _this7.fireHook("".concat(update.name, "DidChangeState"), update, currentState, stateVersion);

        _this7.emit('stateWasUpdated', update, currentState, stateVersion);
      });
      this.hide('mainDisposer', function () {
        mainDisposer();
        stateDisposer();
        return _this7;
      });
      return this;
    }
    /**
     * Replace the current state with the new state.  `newState` can be an object or a function which returns the new state
     *
     * @param {Object|Function} [newState={}] - a new object containing the state you wish the runtime to have
     * @param {Function} [cb] - a function we'll call when the state is replaced
     * @returns {Object} the current state after being replaced
     * @memberof Runtime
     * @fires Runtime#stateWillChange
     * @fires Runtime#stateWillReplace
     */

  }, {
    key: "replaceState",
    value: function replaceState() {
      var newState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var cb = arguments.length > 1 ? arguments[1] : undefined;
      var _this$lodash = this.lodash,
          isFunction = _this$lodash.isFunction,
          toPairs = _this$lodash.toPairs;
      /**
       * @event Runtime#stateWillChange
       */

      this.emit('stateWillChange', this.currentState, newState);
      /**
       * @event Runtime#stateWillReplace
       */

      this.emit('stateWillReplace', this.currentState, newState);

      if (isFunction(newState)) {
        newState = newState(this.currentState, this);
      }

      var result = this.state.replace(toPairs(newState));

      if (isFunction(cb)) {
        cb(this.currentState);
      }

      return result;
    }
    /**
     * Replace the current state with the new state
     *
     * @param {Object|Function} [newState={}] - a new object containing the state you wish the runtime to have
     * @param {Function} [cb] - a function we'll call when the state is replaced
     * @returns {Object} the current state after being replaced
     * @memberof Runtime
     * @fires Runtime#stateWillChange
     */

  }, {
    key: "setState",
    value: function setState() {
      var newState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var cb = arguments.length > 1 ? arguments[1] : undefined;
      var _this$lodash2 = this.lodash,
          isFunction = _this$lodash2.isFunction,
          toPairs = _this$lodash2.toPairs;

      if (isFunction(newState)) {
        newState = newState(this.currentState, this);
      }
      /**
       * @event Runtime#stateWillChange
       */


      this.emit('stateWillChange', this.currentState, newState);
      var result = this.state.merge(toPairs(newState));

      if (isFunction(cb)) {
        cb(this.currentState);
      }

      return result;
    }
    /**
     * @abstract
     */

  }, {
    key: "stateDidChange",
    value: function stateDidChange() {}
  }, {
    key: "observe",
    value: function observe(listener) {
      var _this8 = this;

      var prop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'state';
      return _observe(prop ? this.get(prop) : this, function (change) {
        return listener.call(_this8, change);
      });
    }
  }, {
    key: "makeObservable",
    value: function makeObservable() {
      var properties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var target = arguments.length > 1 ? arguments[1] : undefined;
      target = target || this;
      properties = omitBy(properties, function (val, key) {
        return lodash__WEBPACK_IMPORTED_MODULE_10___default.a.has(target, key);
      }); // WOW clean this up
      // prettier-ignore

      return extendObservable(target, mapValues(properties, function (val) {
        if (!isArray(val)) {
          return val;
        }

        var _val = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_2___default()(val, 2),
            observableType = _val[0],
            initialValue = _val[1];

        var f = observable[observableType];

        if (observableType !== 'action' && observableType !== 'computed' && !f) {
          throw new Error("Invalid Observable: ".concat(observableType));
        }

        if (observableType === "map" && isObject(initialValue)) {
          return f(toPairs(initialValue));
        } else if (observableType === "shallowMap" && isObject(initialValue)) {
          return f(toPairs(initialValue));
        } else if (observableType === "object") {
          return f(val[1] || {});
        } else if (observableType === "shallowObject") {
          return f(val[1] || {});
        } else if (observableType === "shallowArray") {
          return f(val[1] || []);
        } else if (observableType === "array") {
          return f(val[1] || []);
        } else if (observableType === "struct") {
          return f(val[1] || []);
        } else if (observableType === "computed" && isFunction(initialValue)) {
          return computed(val[1].bind(target));
        } else if (observableType === "action" && isFunction(initialValue)) {
          return action(val[1].bind(target));
        } else {
          return val;
        }
      }));
    }
  }, {
    key: "createObservable",
    value: function createObservable() {
      var _this9 = this;

      var properties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var observerFn = arguments.length > 1 ? arguments[1] : undefined;
      var scope = arguments.length > 2 ? arguments[2] : undefined;
      var instance = observable(properties);

      if (observerFn) {
        var disposer = _observe(instance, function (change) {
          return observerFn.call(scope || instance, change, instance, _this9.context);
        });

        hide(instance, 'cancelObserver', function () {
          disposer();
          return instance;
        });
      }

      hide(instance, 'toJS', function () {
        return toJS(instance);
      });
      return instance;
    }
  }, {
    key: "observeState",
    value: function observeState(handler) {
      return this.state.observe(handler);
    }
  }, {
    key: "interceptState",
    value: function interceptState(handler) {
      return this.state.intercept(handler);
    }
  }, {
    key: "convertToJS",
    value: function convertToJS() {
      return toJS.apply(void 0, arguments);
    }
    /**
     * This function is a hook that gets called by the helper.createInstance lifecycle
     *
     * I believe i originally had this setup as a hook on runtime so that, either:
     *
     *  1) runtime could be in control of what observability means, and the helpers just expect an interface to it
     *  2) as a form of code splitting? since runtime has the mobx dependency bundled with it, and we want to be able to export a small helper class?
     *
     * This hook decorates the instance of the helper with mobx observable properties, which includes
     * observable objects, actions, and computed attribute getters
     */

  }, {
    key: "didCreateObservableHelper",
    value: function didCreateObservableHelper(helperInstance, helperClass) {
      if (helperInstance.tryGet('observables')) {
        var observables = helperInstance.tryResult('observables', {});
        this.makeObservable(observables, helperInstance);
      }

      if (!helperInstance.has('state')) {
        makeStateful(helperInstance);
      } // can't think of any classes which define it as a static property


      if (helperClass.observables) {
        var _observables = isFunction(helperClass.observables) ? helperClass.observables.call(helperInstance, helperInstance.options, helperInstance.context, helperInstance) : helperClass.observables;

        this.makeObservable(_observables, helperInstance);
      }

      Promise.resolve(helperInstance.setInitialState());
    }
  }, {
    key: "isFeatureEnabled",

    /**
     * Tells you if a feature is enabled or not.
     *
     * @param {String} name
     * @returns {Boolean}
     * @memberof Runtime#
     */
    value: function isFeatureEnabled(name) {
      var item = this.featureStatus.get(name);

      if (!item) {
        return false;
      }

      if (item && item.status === 'enabled') {
        return true;
      }

      return false;
    }
    /**
     * Enable multiple features at a time
     *
     * @param {*} [options={}]
     * @returns
     * @memberof Runtime
     */

  }, {
    key: "enableFeatures",
    value: function enableFeatures() {
      var _this10 = this;

      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var availableFeatures = this.availableFeatures;

      if (typeof options === 'string' || typeof options === 'undefined') {
        options = [options].filter(function (v) {
          return v;
        });
      }

      if (isArray(options)) {
        options = options.reduce(function (memo, val) {
          if (typeof val === 'string') {
            memo[val] = {};
          } else if (isArray(val)) {
            memo[val[0]] = val[1];
          } else {}

          return memo;
        }, {});
      }

      return mapValues(pick(options, availableFeatures), function (cfg, id) {
        var feature;

        try {
          if (_this10.features.checkKey(id)) {
            feature = _this10.feature(id);
          } else if (_this10.constructor.features.available.indexOf(id) >= 0) {
            feature = _this10.feature(id, {
              provider: _this10.constructor.features.lookup(id)
            });
          }

          feature.enable(cfg);

          _this10.fireHook('featureWasEnabled', feature, _this10);

          _helper__WEBPACK_IMPORTED_MODULE_20__[/* Helper */ "a"].attachAll(_this10, _this10.helperOptions);
          return feature;
        } catch (error) {
          _this10.fireHook('featureFailedToEnable', feature, error);

          return error;
        }
      });
    }
    /**
     * Runs a life cycle hook method on the runtime. A hook method can either be
     * a standard instance method on runtime, and if one does not exist, an event is
     * also emitted by the same name
     *
     * @param {String} hookName the name of the hook method
     * @param {...*} args any args you want to pass to the hook
     * @returns {Runtime}
     * @memberof Runtime#
     * @emits Runtime#firingHook
     */

  }, {
    key: "fireHook",
    value: function fireHook(hookName) {
      var _this$runtimeEvents;

      for (var _len11 = arguments.length, args = new Array(_len11 > 1 ? _len11 - 1 : 0), _key11 = 1; _key11 < _len11; _key11++) {
        args[_key11 - 1] = arguments[_key11];
      }

      if (this.argv.debugHooks) {
        this.debug("Firing Hook", {
          hookName: hookName,
          argsLength: args.length
        });
      }

      var fnHandler = this.get(['options', hookName], this.get(hookName));

      (_this$runtimeEvents = this.runtimeEvents).emit.apply(_this$runtimeEvents, ["runtime:".concat(hookName), this].concat(args));

      this.emit.apply(this, ["firingHook", hookName].concat(args));
      this.emit.apply(this, [hookName].concat(args));

      if (fnHandler) {
        try {
          fnHandler.call.apply(fnHandler, [this].concat(args));
        } catch (error) {
          this.argv.debugHooks && this.error("Error while firing hook: ".concat(hookName), {
            error: error.message
          });
          this.emit('hookError', hookName, error);
        }
      } else {
        if (this.argv.debugHooks) {
          this.debug("No hook named ".concat(hookName, " present"));
        }
      }

      return this;
    }
    /**
     * Returns the base Feature class that the runtime uses.  You shouldn't need to change this,
     * however you can use one class in production and another in dev / test if you want to,
     *
     * @readonly
     * @memberof Runtime#
     */

  }, {
    key: "feature",

    /**
     * Create an instance of a Feature from one of the available Feature providers in the registry.
     *
     * Calling this method more than once with the same options, will return the same object, unless that
     * Helper class or the registry it is a part sets isCacheable = false
     *
     * @param {String} featureModuleId
     * @param {Object} [options={}]
     * @param {Object} [context={}]
     * @returns {Feature}
     * @memberof Runtime
     */
    value: function feature(featureModuleId) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      return this._feature(featureModuleId, options, context);
    }
    /**
     * Provides access to the Feature helper's registry
     *
     * @readonly
     * @memberof Runtime#
     */

  }, {
    key: "createRegistry",
    value: function createRegistry(name) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var registry = _helper__WEBPACK_IMPORTED_MODULE_20__[/* Helper */ "a"].createRegistry(name, _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_5___default()({
        context: _helper__WEBPACK_IMPORTED_MODULE_20__[/* Helper */ "a"].createMockContext({})
      }, options));
      this.fireHook('registryWasCreated', name, registry, options);
      return registry;
    }
  }, {
    key: "createSandbox",
    value: function createSandbox() {
      var ctx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      return _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_5___default()({
        // all aliases i've used over time for the same thing. should deprecrate them gracefully
        project: this,
        runtime: this,
        skypager: this,
        host: this,
        propUtils: _utils_properties__WEBPACK_IMPORTED_MODULE_23__,
        stringUtils: _utils_string__WEBPACK_IMPORTED_MODULE_24__,
        urlUtils: urlUtils,
        lodash: lodash__WEBPACK_IMPORTED_MODULE_10___default.a,
        currentState: this.currentState
      }, this.featureRefs, ctx);
    }
    /**
     * Returns an md5 hash for any JavaScript object
     *
     * @param {Object} anyObject - any object you want to calculate a unique hash for
     */

  }, {
    key: "hashObject",
    value: function hashObject(anyObject) {
      return _hashObject(anyObject);
    }
    /**
     * Creates an entity object from any slice of runtime properties / values
     */

  }, {
    key: "createEntityFrom",
    value: function createEntityFrom() {
      var src = this.slice.apply(this, arguments);
      return entity(toJS(src));
    }
    /**
     * Select a slice of state using a list of object paths, can be multiple levels deep a.b.c
     *
     * @param {*} properties - an array of strings representing object paths
     * @returns {*}
     * @memberof Runtime
     */

  }, {
    key: "slice",
    value: function slice() {
      for (var _len12 = arguments.length, properties = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {
        properties[_key12] = arguments[_key12];
      }

      return toJS(zipObjectDeep(properties, this.at(properties)));
    }
    /**
     * Fetch a object from runtime.options or runtime.context
     *
     * If the method is a function, it will be called in the scope of the helper,
     * with the helpers options and context
     *
     * @param {String} objectPath the dot.path to the property
     * @param {*} defaultValue the default value
     * @memberof Runtime
     */

  }, {
    key: "tryGet",
    value: function tryGet(objectPath, defaultValue) {
      return this.at("options.".concat(objectPath), "context.".concat(objectPath)).filter(function (v) {
        return typeof v !== 'undefined';
      })[0] || defaultValue;
    }
    /**
     * Fetch a object from runtime.options or runtime.context
     *
     * If the method is a function, it will be called in the scope of the helper,
     * with the helpers options and context
     *
     * @param {String} objectPath the dot.path to the property
     * @param {*} defaultValue the default value
     * @param {Object} options options object which will be passed to the property if it is a function
     * @param {Object} context context object which will be passed to the property if it is a function
     * @returns {*}
     * @memberof Runtime#
     */

  }, {
    key: "tryResult",
    value: function tryResult(objectPath, defaultValue) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var context = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
      var val = this.tryGet(objectPath);

      if (!val) {
        return typeof defaultValue === 'function' ? defaultValue.call(this, _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_5___default()({}, this.options, options), _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_5___default()({}, this.context, context)) : defaultValue;
      } else if (typeof val === 'function') {
        return val.call(this, _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_5___default()({}, this.options, options), _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_5___default()({}, this.context, context));
      } else {
        return val;
      }
    } // Merge the objects found at k starting with at options, provider, projectConfig

  }, {
    key: "mergeGet",
    value: function mergeGet(key) {
      var _this11 = this;

      var namespaces = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ['options', 'argv', 'config'];
      key = typeof key === 'string' ? key.split('.') : key;
      key = flatten(castArray(key));
      return defaults.apply(void 0, [{}].concat(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default()(namespaces.map(function (n) {
        return _this11.get([n].concat(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default()(key)));
      }))));
    } // Merge the objects found at k starting with at options, provider, projectConfig
    // If the property is a function, it will be called in the scope of the helper, with the helpers options and context

  }, {
    key: "mergeResult",
    value: function mergeResult(key) {
      var _this12 = this;

      var namespaces = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ['options', 'argv', 'config'];
      key = typeof key === 'string' ? key.split('.') : key;
      key = flatten(castArray(key));

      var ifFunc = function ifFunc(v) {
        return typeof v === 'function' ? v.call(_this12, _this12.options, _this12.context) : v;
      };

      return defaults.apply(void 0, [{}].concat(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default()(namespaces.map(function (n) {
        return _this12.get([n].concat(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default()(key)));
      }).map(ifFunc))));
    }
    /**
     * Runs a selector function by first checking against the selectorCache
     *
     * @param {*} selectorId
     * @param {*} args
     * @returns {Promise<*>}
     * @memberof Runtime
     */

  }, {
    key: "selectCached",
    value: function () {
      var _selectCached = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4___default()(
      /*#__PURE__*/
      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.mark(function _callee3(selectorId) {
        var _len13,
            args,
            _key13,
            _args3 = arguments;

        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                if (!this.selectorCache.get(selectorId)) {
                  _context3.next = 2;
                  break;
                }

                return _context3.abrupt("return", this.selectorCache.get(selectorId));

              case 2:
                for (_len13 = _args3.length, args = new Array(_len13 > 1 ? _len13 - 1 : 0), _key13 = 1; _key13 < _len13; _key13++) {
                  args[_key13 - 1] = _args3[_key13];
                }

                return _context3.abrupt("return", this.select.apply(this, [selectorId].concat(args)));

              case 4:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function selectCached(_x) {
        return _selectCached.apply(this, arguments);
      }

      return selectCached;
    }()
    /**
     * Runs an async selector function from the registry.
     *
     * A selector function will be passed an instance of `lodash.chain({Runtime})` and should return that chain.
     *
     * @param {String} selectorId a selector function that exists in the selectors registry
     * @param {*} args
     * @returns {Promise<*>}
     * @memberof Runtime
     * @example @lang js
     *
     * runtime.selectors.register('something', () => async (chain, eachItem) => {
     *  const results = await doStuff()
     *  return chain
     *    .plant(results)
     *    .groupBy('column')
     *    .mapValues((groupName, items) => items.map(eachItem))
     * })
     *
     * const value = await runtime.select('something', (item) => item + 1)
     */

  }, {
    key: "select",
    value: function () {
      var _select = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4___default()(
      /*#__PURE__*/
      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.mark(function _callee4(selectorId) {
        var _selector;

        var selector,
            _len14,
            args,
            _key14,
            result,
            _args4 = arguments;

        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                selector = this.selectors.lookup(selectorId);
                selector = isFunction(selector["default"]) ? selector["default"] : selector;

                for (_len14 = _args4.length, args = new Array(_len14 > 1 ? _len14 - 1 : 0), _key14 = 1; _key14 < _len14; _key14++) {
                  args[_key14 - 1] = _args4[_key14];
                }

                _context4.next = 5;
                return (_selector = selector).call.apply(_selector, [this, this.chain].concat(args));

              case 5:
                result = _context4.sent;
                return _context4.abrupt("return", isFunction(result.value) ? result.value() : result);

              case 7:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function select(_x2) {
        return _select.apply(this, arguments);
      }

      return select;
    }()
    /**
     * Same as `select` but accepts passing a function as the last argument.
     * This function will be called with the result of the selector function
     *
     * @param {String} selectorId a selector function that exists in the selectors registry
     * @param {*} args args to pass thru to the function. the last argument should be a function.
     * @memberof Runtime
     * @returns {Promise<*>}
     */

  }, {
    key: "selectThru",
    value: function () {
      var _selectThru = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4___default()(
      /*#__PURE__*/
      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.mark(function _callee5(selectorId) {
        var _len15,
            args,
            _key15,
            fn,
            response,
            _args5 = arguments;

        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                for (_len15 = _args5.length, args = new Array(_len15 > 1 ? _len15 - 1 : 0), _key15 = 1; _key15 < _len15; _key15++) {
                  args[_key15 - 1] = _args5[_key15];
                }

                fn = args.length && typeof args[args.length - 1] === 'function' ? args[args.length - 1] : this.lodash.identity;
                _context5.next = 4;
                return this.selectChain.apply(this, [selectorId].concat(args));

              case 4:
                response = _context5.sent;
                return _context5.abrupt("return", response.thru(fn).value());

              case 6:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function selectThru(_x3) {
        return _selectThru.apply(this, arguments);
      }

      return selectThru;
    }()
    /**
     * Same as `selectThru` but returns the resulting lodash chain still in chain mode
     *
     * @param {string} selectorId the id of the registered selector function
     * @param {...*} args args to pass thru to the selector.  if the last arg is a function
     *                    it will receive the value as a lodash chain.thru()
     */

  }, {
    key: "selectChainThru",
    value: function () {
      var _selectChainThru = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4___default()(
      /*#__PURE__*/
      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.mark(function _callee6(selectorId) {
        var _len16,
            args,
            _key16,
            fn,
            response,
            _args6 = arguments;

        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                for (_len16 = _args6.length, args = new Array(_len16 > 1 ? _len16 - 1 : 0), _key16 = 1; _key16 < _len16; _key16++) {
                  args[_key16 - 1] = _args6[_key16];
                }

                fn = args.length && typeof args[args.length - 1] === 'function' ? args[args.length - 1] : this.lodash.identity;
                _context6.next = 4;
                return this.selectChain.apply(this, [selectorId].concat(args));

              case 4:
                response = _context6.sent;
                return _context6.abrupt("return", response.thru(fn));

              case 6:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      function selectChainThru(_x4) {
        return _selectChainThru.apply(this, arguments);
      }

      return selectChainThru;
    }()
    /**
     * Same as `select` but returns the resulting lodash chain still in chain mode.
     *
     * @param {String} selectorId a selector function that exists in the selectors registry
     * @param {*} args arguments to be passed thru to the selector function
     * @returns {Promise<*>}
     */

  }, {
    key: "selectChain",
    value: function () {
      var _selectChain = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4___default()(
      /*#__PURE__*/
      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.mark(function _callee7(selectorId) {
        var _len17,
            args,
            _key17,
            results,
            _args7 = arguments;

        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                for (_len17 = _args7.length, args = new Array(_len17 > 1 ? _len17 - 1 : 0), _key17 = 1; _key17 < _len17; _key17++) {
                  args[_key17 - 1] = _args7[_key17];
                }

                _context7.next = 3;
                return this.select.apply(this, [selectorId].concat(args));

              case 3:
                results = _context7.sent;
                return _context7.abrupt("return", lodash__WEBPACK_IMPORTED_MODULE_10___default.a.chain(results));

              case 5:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7, this);
      }));

      function selectChain(_x5) {
        return _selectChain.apply(this, arguments);
      }

      return selectChain;
    }()
    /**
     * @returns {Runtime} the runtime singleton
     */

  }, {
    key: "uuid",
    get: function get() {
      return this._uuid;
    }
  }, {
    key: "cwd",
    get: function get() {
      return this._cwd;
    }
  }, {
    key: "name",
    get: function get() {
      return this._name;
    },
    set: function set(val) {
      this.hide('_name', val, true);
    }
  }, {
    key: "logger",
    get: function get() {
      return this._logger;
    }
  }, {
    key: "cache",
    get: function get() {
      return this._cache;
    }
  }, {
    key: "selectors",
    get: function get() {
      return this._selectors;
    }
  }, {
    key: "selectorCache",
    get: function get() {
      return selectorCache.get(this);
    }
    /**
     * Yo dawg, I heard you like registries so here's a registry for your registries.
     *
     * @type {ContextRegistry}
     * @readonly
     * @memberof Runtime
     */

  }, {
    key: "registries",
    get: function get() {
      return this._registries;
    }
    /**
     * Returns a lodash chain object, using this helper instance as the source value
     *
     * @readonly
     * @memberof Helper
     */

  }, {
    key: "chain",
    get: function get() {
      return lodash__WEBPACK_IMPORTED_MODULE_10___default.a.chain(this);
    }
  }, {
    key: "contextTypes",

    /**
     * Returns the contextTypes declarations for our Runtime class.
     *
     * @readonly
     * @memberof Runtime
     */
    get: function get() {
      return defaults({}, _result('constructor.contextTypes'), {
        lodash: 'func',
        runtime: 'object',
        skypager: 'object',
        host: 'object',
        project: 'object'
      });
    }
    /**
     * the optionTypes declarations for our Runtime class
     *
     * @readonly
     * @memberof Runtime
     */

  }, {
    key: "optionTypes",
    get: function get() {
      return _result(this.constructor, 'optionTypes', {});
    }
    /**
     * Returns the default context value for this runtime
     *
     * @readonly
     * @memberof Runtime
     */

  }, {
    key: "defaultContext",
    get: function get() {
      return _result(this.constructor, 'defaultContext', {});
    }
    /**
     * Returns the default options for this runtime
     *
     * @readonly
     * @memberof Runtime
     */

  }, {
    key: "defaultOptions",
    get: function get() {
      return defaults({}, _get(this, 'projectConfig'), _result(this.constructor, 'defaultOptions'), // Find some way to be able to inject ARGV in projects which consume skypager via webpack
      global.SKYPAGER_ARGV, global.ARGV);
    }
  }, {
    key: "optionsWithDefaults",
    get: function get() {
      return defaults({}, this.rawOptions, this.defaultOptions);
    }
  }, {
    key: "strictMode",
    get: function get() {
      return !!_get(this, 'rawOptions.strictMode', this.constructor.strictMode);
    }
    /**
     * @readonly
     * @memberof Runtime
     *
     * The options are what the runtime was initialized with.  Runtimes can be strict about which options they accept.
     */

  }, {
    key: "options",
    get: function get() {
      return this.strictMode ? pick(this.optionsWithDefaults, keys(this.optionTypes)) : this.optionsWithDefaults;
    }
  }, {
    key: "context",
    get: function get() {
      return defaults({}, pick(this.rawContext, keys(this.contextTypes)), this.defaultContext, {
        runtime: this,
        lodash: this.lodash
      }, pick(global, keys(this.contextTypes)));
    }
  }, {
    key: "initializers",
    get: function get() {
      return this.constructor.initializers || Runtime.initializers;
    }
  }, {
    key: "runtimes",
    get: function get() {
      return this.constructor.runtimes || Runtime.runtimes;
    }
    /**
     * @type {EventEmitter}
     */

  }, {
    key: "autoInitialize",
    get: function get() {
      return this.at('argv.autoInitialize', 'constructor.autoInitialize').find(function (v) {
        return typeof v !== 'undefined';
      }) !== false;
    }
  }, {
    key: "autoPrepare",
    get: function get() {
      return this.at('argv.autoPrepare', 'constructor.autoPrepare').find(function (v) {
        return typeof v !== 'undefined';
      }) !== false;
    }
  }, {
    key: "autoEnabledFeatures",
    get: function get() {
      var _this13 = this;

      var _this$helperTags = this.helperTags,
          helperTags = _this$helperTags === void 0 ? [] : _this$helperTags;
      return this.chain // whatever our constructor defines
      .get('constructor.autoEnable', {}).keys().concat(this.chain.get('config.features', {}).pickBy(function (v) {
        return v && v.disabled !== true && v.enabled !== false && v.disable !== true && v.enable !== false;
      }).keys().value()) // plus whatever features are already available whose name matches a helper tag prefix
      .concat(this.availableFeatures.filter(function (id) {
        return helperTags.find(function (tag) {
          return id.indexOf(tag) === 0;
        });
      })) // plus whatever features are requested in the options passed to our constructor
      .concat(castArray(this.get('argv.enable', []))).flatten().uniq().reject(function (featureId) {
        return _this13.availableFeatures.indexOf(featureId) === -1;
      }).value();
    }
  }, {
    key: "runtimeInitializers",
    get: function get() {
      var runtime = this;
      var initializers = runtime.initializers,
          tags = runtime.helperTags;
      var pickBy = this.lodash.pickBy;
      return pickBy(initializers.allMembers(), function (fn, id) {
        return !!tags.find(function (tag) {
          return id.indexOf(tag) === 0;
        });
      });
    }
  }, {
    key: "url",
    get: function get() {
      return this.isBrowser ? window.location : urlUtils.parse("file://".concat(this.cwd));
    }
    /**
      argv will refer to the initial options passed to the runtime, along with any default values that have been set
    */

  }, {
    key: "argv",
    get: function get() {
      return this.get('rawOptions', {});
    },
    set: function set(val) {
      this.set('rawOptions', _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_5___default()({}, this.rawOptions, val));
    }
  }, {
    key: "env",
    get: function get() {
      if (this.isTest) return 'test';
      if (this.isDevelopment) return 'development';
      if (this.isProduction) return 'production';
      return 'development';
    }
    /**
     * Based on the detected or specified platform the Runtime thinks it is in,
     * target will give us its name.  This can be used to auto-discover and register certain
     * helpers and features.
     *
     * @type {String}
     * @readonly
     * @memberof Runtime#
     */

  }, {
    key: "target",
    get: function get() {
      var _this$argv = this.argv,
          universal = _this$argv.universal,
          target = _this$argv.target;
      if (universal) return 'universal';
      if (target) return target;
      if (this.isElectron) return 'electron';
      if (this.isNode) return 'node';
      if (this.isBrowser) return 'web';
      if (this.isReactNative) return 'native';
      return 'node';
    }
    /**
     * Returns a list of tags that can be used to filter all of the available helpers and features
     * to only those whose registry id or alias includes one of the tags.
     *
     * @type {Array<String>}
     * @readonly
     * @memberof Runtime#
     *
     * @example
     *
     *  runtime.helperTags // => ['development', 'development/node', 'node', 'node/development', 'universal']
     */

  }, {
    key: "helperTags",
    get: function get() {
      return this.get('options.helperTags', [this.env, "".concat(this.env, "/").concat(this.target), this.target, "".concat(this.target, "/").concat(this.env), 'universal']);
    }
    /**
     * Returns true if the runtime is running inside of a browser.
     *
     * @readonly
     * @memberof Runtime#
     */

  }, {
    key: "isBrowser",
    get: function get() {
      return windowIsAvailable && documentIsAvailable;
    }
    /**
     * Returns true if the runtime is running inside of node.
     *
     * @readonly
     * @memberof Runtime#
     */

  }, {
    key: "isNode",
    get: function get() {
      try {
        var isNode = Object.prototype.toString.call(global.process) === '[object process]';
        return isNode;
      } catch (e) {
        return processIsAvailable && (process.title === 'node' || "".concat(process.title).endsWith('.exe'));
      }
    }
    /**
     * Returns true if running node in windows
     *
     * @readonly
     * @memberof Runtime#
     */

  }, {
    key: "isWindows",
    get: function get() {
      return this.isNode && "".concat(process.title).endsWith('.exe');
    }
    /**
     * Returns true if the runtime is running inside of electron
     *
     * @readonly
     * @memberof Runtime#
     */

  }, {
    key: "isElectron",
    get: function get() {
      return processIsAvailable && !isUndefined(process.type) && !isUndefined(process.title) && (process.title.match(/electron/i) || process.versions['electron']);
    }
    /**
     * Returns true if the runtime is running inside of electron's renderer process
     *
     * @readonly
     * @memberof Runtime#
     */

  }, {
    key: "isElectronRenderer",
    get: function get() {
      return !isUndefined(process) && process.type === 'renderer' && windowIsAvailable && documentIsAvailable;
    }
    /**
     * Returns true if the runtime is running inside of React-Native
     *
     * @readonly
     * @memberof Runtime#
     */

  }, {
    key: "isReactNative",
    get: function get() {
      try {
        return !isUndefined(global) && typeof navigator !== 'undefined' && navigator.product === 'ReactNative';
      } catch (error) {
        return false;
      }
    }
    /**
     * Returns true if the process was started with a debug flag
     *
     * @readonly
     * @memberof Runtime#
     */

  }, {
    key: "isDebug",
    get: function get() {
      var _this$argv2 = this.argv,
          argv = _this$argv2 === void 0 ? {} : _this$argv2;
      return !!argv.debug || argv.debugBrk || argv.inspect || argv.inspectBrk;
    }
    /**
     * Returns true if the runtime is running in node process and common CI environment variables are detected
     *
     * @readonly
     * @memberof Runtime#
     */

  }, {
    key: "isCI",
    get: function get() {
      return this.isNode && (Object({"NODE_ENV":"production","PUBLIC_URL":"","RELEASE_PACKAGE_NAME":"@skypager/web","RELEASE_VERSION":"1.1.4","GIT_SHA":"1e6fb35f00","GIT_BRANCH":"master"}).CI || Object({"NODE_ENV":"production","PUBLIC_URL":"","RELEASE_PACKAGE_NAME":"@skypager/web","RELEASE_VERSION":"1.1.4","GIT_SHA":"1e6fb35f00","GIT_BRANCH":"master"}).JOB_NAME && Object({"NODE_ENV":"production","PUBLIC_URL":"","RELEASE_PACKAGE_NAME":"@skypager/web","RELEASE_VERSION":"1.1.4","GIT_SHA":"1e6fb35f00","GIT_BRANCH":"master"}).BRANCH_NAME);
    }
    /**
     * returns true when running in a process where NODE_ENV is set to development, or in a process started with the development flag
     *
     * @readonly
     * @memberof Runtime#
     */

  }, {
    key: "isDevelopment",
    get: function get() {
      var _this$argv3 = this.argv,
          argv = _this$argv3 === void 0 ? {} : _this$argv3;
      return !this.isProduction && !this.isTest && (argv.env === 'development' || "production" === 'development');
    }
    /**
     * returns true when running in a process where NODE_ENV is set to test, or in a process started with the test flag
     *
     * @readonly
     * @memberof Runtime#
     */

  }, {
    key: "isTest",
    get: function get() {
      var _this$argv4 = this.argv,
          argv = _this$argv4 === void 0 ? {} : _this$argv4;
      return argv.env === 'test' || "production" === 'test';
    }
    /**
     * returns true when running in a process where NODE_ENV is set to production, or in a process started with the test flag
     *
     * @readonly
     * @memberof Runtime#
     */

  }, {
    key: "isProduction",
    get: function get() {
      var argv = this.argv;
      return argv.env === 'production' || "production" === 'production';
    }
  }, {
    key: "initialState",
    get: function get() {
      return defaults({
        stage: 'CREATED'
      }, this.get('argv.initialState'), global.__INITIAL_STATE__, _result(global, 'SkypagerInitialState'), this.constructor.initialState);
    }
  }, {
    key: "stage",
    get: function get() {
      return this.get('currentState.stage');
    }
  }, {
    key: "isInitialized",
    get: function get() {
      return this.get('currentState.initialized', false);
    }
  }, {
    key: "isFailed",
    get: function get() {
      return this.stage === START_FAILURE;
    }
  }, {
    key: "isPrepared",
    get: function get() {
      return this.get('currentState.prepared', this.isRunning || this.isStarted);
    }
  }, {
    key: "isRunning",
    get: function get() {
      return this.get('currentState.started', false);
    }
  }, {
    key: "isStarted",
    get: function get() {
      return this.get('currentState.started', false);
    }
  }, {
    key: "mobx",
    get: function get() {
      return mobx__WEBPACK_IMPORTED_MODULE_11__;
    }
  }, {
    key: "observableMap",
    get: function get() {
      return observable.map;
    }
  }, {
    key: "lodash",
    get: function get() {
      return lodash__WEBPACK_IMPORTED_MODULE_10___default.a;
    }
  }, {
    key: "pathUtils",
    get: function get() {
      return pathUtils;
    }
  }, {
    key: "stringUtils",
    get: function get() {
      return _utils_string__WEBPACK_IMPORTED_MODULE_24__;
    }
  }, {
    key: "propUtils",
    get: function get() {
      return _utils_properties__WEBPACK_IMPORTED_MODULE_23__;
    }
  }, {
    key: "urlUtils",
    get: function get() {
      return urlUtils;
    }
  }, {
    key: "Runtime",
    get: function get() {
      return Runtime;
    }
  }, {
    key: "BaseRuntime",
    get: function get() {
      return Runtime;
    }
  }, {
    key: "helperEvents",
    get: function get() {
      return _helper__WEBPACK_IMPORTED_MODULE_20__[/* Helper */ "a"].events;
    }
  }, {
    key: "runtimeEvents",
    get: function get() {
      return events;
    }
    /**
     * Provides access to the global event bus shared by all runtime or helper instances
     *
     * @readonly
     * @memberof Runtime#
     */

  }, {
    key: "events",
    get: function get() {
      return events;
    }
    /**
     * Creates a context variable that can be pass down to helpers, or used with the VM
     * to run scripts or modules in an arbitrary global scope
     *
     * @readonly
     * @memberof Runtime#
     */

  }, {
    key: "sandbox",
    get: function get() {
      return this.createSandbox(this.context);
    }
    /**
     * Gets the ids of all of the features that are available in the runtime's feature registry,
     * as well as any features that are part of the runtime's class level feature registry.
     * @type {Array<String>}
     * @readonly
     * @memberof Runtime#
     */

  }, {
    key: "availableFeatures",
    get: function get() {
      var mine = this.get('features.available', []);
      var constructors = this.get('constructor.features.available', []);
      return uniq([].concat(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default()(mine), _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default()(constructors)));
    }
    /**
     * Returns an object the features that are enabled.  The keys are going to be
     * the registry id of that feature, and the values will be the feature helper instance
     *
     * @type {Object<String, Feature>}
     * @readonly
     * @memberof Runtime#
     */

  }, {
    key: "enabledFeatures",
    get: function get() {
      var _this14 = this;

      return this.chain.invoke('featureStatus.toJSON').pickBy(function (v) {
        return v.status === 'enabled';
      }).mapValues(function (v) {
        return _this14.cache.get(v.cacheKey);
      }).omitBy(function (v) {
        return !v;
      }).value();
    }
    /**
     * Returns the ids of the features that are enabled.
     *
     * @type {Array<String>}
     * @readonly
     * @memberof Runtime#
     */

  }, {
    key: "enabledFeatureIds",
    get: function get() {
      var keys = this.lodash.keys;
      return keys(this.enabledFeatures);
    }
    /**
     * Returns an object of the enabled features, the keys will be the shortcut property
     * that is defined on the feature.  If the feature does not define one, then it won't
     * show up here.
     *
     * @readonly
     * @memberof Runtime#
     */

  }, {
    key: "featureRefs",
    get: function get() {
      var _this$lodash3 = this.lodash,
          mapKeys = _this$lodash3.mapKeys,
          omitBy = _this$lodash3.omitBy,
          isEmpty = _this$lodash3.isEmpty;
      var enabledFeatures = this.enabledFeatures;
      var withShortcuts = mapKeys(enabledFeatures, function (feature) {
        return feature.tryGet('shortcut', feature.tryGet('createGetter'));
      });
      return omitBy(withShortcuts, function (v, k) {
        return isEmpty(k);
      });
    }
  }, {
    key: "helpers",

    /**
     * Provides access to the Helper registry
     *
     * @readonly
     * @memberof Runtime#
     */
    get: function get() {
      return this.Helper.registry;
    }
    /**
     * Provides access to all of the Helper classes that have been registered
     *
     * @readonly
     * @memberof Runtime#
     */

  }, {
    key: "allHelpers",
    get: function get() {
      return this.Helper.allHelpers;
    }
    /**
     * The default options that will be passed to Helper.attach.
     *
     * @readonly
     * @memberof Runtime#
     */

  }, {
    key: "helperOptions",
    get: function get() {
      return this.get('options.helperOptions', this.get('context.helperOptions', {}));
    }
    /**
     * Returns the base Feature class that the runtime uses.  You shouldn't need to change this,
     * however you can use one class in production and another in dev / test if you want to,
     *
     * @memberof Runtime#
     */

  }, {
    key: "features",
    get: function get() {
      return this._features || _feature__WEBPACK_IMPORTED_MODULE_17__[/* Feature */ "a"].registry;
    }
  }, {
    key: "namespace",
    get: function get() {
      return this.get('options.namespace', 'runtime');
    }
  }], [{
    key: "spawn",
    value: function spawn() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var fn = arguments.length > 2 ? arguments[2] : undefined;
      return new Runtime(options, context, fn);
    }
  }, {
    key: "attachEmitter",
    value: function attachEmitter() {
      return _utils_emitter__WEBPACK_IMPORTED_MODULE_21__[/* attachEmitter */ "b"].apply(void 0, arguments);
    }
  }, {
    key: "registerRuntime",
    value: function registerRuntime(name, runtimeClass) {
      Runtime.runtimes.register(name, function () {
        return runtimeClass;
      });
      return runtimeClass;
    }
  }, {
    key: "registerHelper",
    value: function registerHelper(name, helperClass) {
      _registerHelper(name, function () {
        return helperClass;
      });

      return helperClass;
    }
  }, {
    key: "createSingleton",

    /**
     * @returns {Runtime} the runtime singleton
     */
    value: function createSingleton(options, context, middlewareFn) {
      return singleton = singleton || new this(options, context, middlewareFn);
    }
    /**
     * Access the Helper class, which you can extend to create your own Helpers
     *
     * @static
     * @memberof Runtime
     */

  }, {
    key: "runtimes",
    get: function get() {
      var base = this;

      if (runtimesRegistry) {
        return runtimesRegistry;
      }

      runtimesRegistry = new ContextRegistry('runtimes', {
        context: _helper__WEBPACK_IMPORTED_MODULE_20__[/* Helper */ "a"].createMockContext(),
        wrapper: function wrapper(fn) {
          return function () {
            for (var _len18 = arguments.length, args = new Array(_len18), _key18 = 0; _key18 < _len18; _key18++) {
              args[_key18] = arguments[_key18];
            }

            return _babel_runtime_helpers_construct__WEBPACK_IMPORTED_MODULE_0___default()(fn, args);
          };
        },
        fallback: function fallback(id) {
          return base || Runtime;
        }
      });
      runtimesRegistry.register('universal', function () {
        return Runtime;
      });
      return runtimesRegistry;
    }
  }, {
    key: "features",
    get: function get() {
      return _feature__WEBPACK_IMPORTED_MODULE_17__[/* Feature */ "a"].registry;
    }
  }, {
    key: "framework",
    get: function get() {
      return frameworkRuntime = frameworkRuntime || this.createSingleton();
    }
  }]);

  return Runtime;
}();

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8___default()(Runtime, "contextTypes", contextTypes);

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8___default()(Runtime, "optionTypes", optionTypes);

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8___default()(Runtime, "defaultContext", defaultContext);

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8___default()(Runtime, "defaultOptions", defaultOptions);

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8___default()(Runtime, "strictMode", enableStrictMode.toString() !== 'false');

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8___default()(Runtime, "initializers", new ContextRegistry('initializers', {
  context: _helper__WEBPACK_IMPORTED_MODULE_20__[/* Helper */ "a"].createMockContext(),
  useDefaultExport: true
}));

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8___default()(Runtime, "events", events);

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8___default()(Runtime, "autoEnable", {
  vm: {}
});

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8___default()(Runtime, "initialState", {});

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8___default()(Runtime, "ContextRegistry", ContextRegistry);

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8___default()(Runtime, "mobx", mobx__WEBPACK_IMPORTED_MODULE_11__);

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8___default()(Runtime, "observableMap", observable.map);

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8___default()(Runtime, "lodash", lodash__WEBPACK_IMPORTED_MODULE_10___default.a);

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8___default()(Runtime, "pathUtils", pathUtils);

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8___default()(Runtime, "stringUtils", _utils_string__WEBPACK_IMPORTED_MODULE_24__);

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8___default()(Runtime, "propUtils", _utils_properties__WEBPACK_IMPORTED_MODULE_23__);

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8___default()(Runtime, "urlUtils", urlUtils);

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8___default()(Runtime, "Helper", _helper__WEBPACK_IMPORTED_MODULE_20__[/* Helper */ "a"]);

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8___default()(Runtime, "Feature", _feature__WEBPACK_IMPORTED_MODULE_17__[/* Feature */ "a"]);

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8___default()(Runtime, "autoConfigs", []);

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8___default()(Runtime, "autoAdd", []);

var createSingleton = Runtime.createSingleton.bind(Runtime);
var INITIALIZING = 'INITIALIZING';
var INITIALIZED = 'INITIALIZED';
var PREPARING = 'PREPARING';
var READY = 'READY';
var STARTING = 'STARTING';
var RUNNING = 'RUNNING';
var START_FAILURE = 'START_FAILURE';
var PREPARE_FAILURE = 'PREPARE_FAILURE';
var INITIALIZE_FAILURE = 'INITIALIZE_FAILURE';
var stages = {
  INITIALIZING: INITIALIZING,
  INITIALIZED: INITIALIZED,
  PREPARING: PREPARING,
  READY: READY,
  STARTING: STARTING,
  RUNNING: RUNNING,
  START_FAILURE: START_FAILURE,
  INITIALIZE_FAILURE: INITIALIZE_FAILURE,
  PREPARE_FAILURE: PREPARE_FAILURE
};
function initializeSequence(runtime, initializeMethod) {
  if (runtime.isInitialized) return runtime;
  runtime.fireHook('beforeInitialize', runtime);
  runtime.beginTrackingState();
  runtime.setState({
    stage: INITIALIZING,
    initialized: true
  });

  try {
    initializeMethod.call(runtime);
  } catch (error) {
    runtime.setState({
      stage: INITIALIZE_FAILURE,
      error: error
    });
    throw error;
  }

  runtime.fireHook('afterInitialize', runtime);
  runtime.setState({
    stage: INITIALIZED
  });
  events.emit('runtimeDidInitialize', runtime, runtime.constructor);
  runtime.attachAllHelpers();
  if (runtime.autoPrepare !== false) Promise.resolve(runtime.prepare());
  return runtime;
}
function prepareSequence(_x6, _x7) {
  return _prepareSequence.apply(this, arguments);
}

function _prepareSequence() {
  _prepareSequence = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4___default()(
  /*#__PURE__*/
  _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.mark(function _callee8(runtime, prepareMethod) {
    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.wrap(function _callee8$(_context8) {
      while (1) {
        switch (_context8.prev = _context8.next) {
          case 0:
            if (!runtime.isPrepared) {
              _context8.next = 2;
              break;
            }

            return _context8.abrupt("return", runtime);

          case 2:
            runtime.setState({
              stage: PREPARING
            });
            runtime.fireHook('preparing');
            _context8.prev = 4;
            _context8.next = 7;
            return this.runMiddleware(PREPARING);

          case 7:
            _context8.next = 14;
            break;

          case 9:
            _context8.prev = 9;
            _context8.t0 = _context8["catch"](4);
            runtime.setState({
              stage: PREPARE_FAILURE,
              error: _context8.t0
            });
            runtime.fireHook('prepareDidFail', _context8.t0);
            throw _context8.t0;

          case 14:
            _context8.prev = 14;

            if (!(typeof runtime.options.prepare === 'function')) {
              _context8.next = 18;
              break;
            }

            _context8.next = 18;
            return Promise.resolve(runtime.options.prepare.call(runtime, runtime.argv, runtime.sandbox));

          case 18:
            _context8.next = 20;
            return prepareMethod.call(runtime, runtime.argv, runtime.sandbox);

          case 20:
            runtime.setState({
              stage: READY,
              prepared: true
            });
            _context8.next = 28;
            break;

          case 23:
            _context8.prev = 23;
            _context8.t1 = _context8["catch"](14);
            runtime.setState({
              stage: PREPARE_FAILURE,
              error: _context8.t1
            });
            runtime.fireHook('prepareDidFail', _context8.t1);
            throw _context8.t1;

          case 28:
            runtime.fireHook('runtimeIsPrepared');
            return _context8.abrupt("return", runtime);

          case 30:
          case "end":
            return _context8.stop();
        }
      }
    }, _callee8, this, [[4, 9], [14, 23]]);
  }));
  return _prepareSequence.apply(this, arguments);
}

function startSequence(_x8, _x9) {
  return _startSequence.apply(this, arguments);
}

function _startSequence() {
  _startSequence = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4___default()(
  /*#__PURE__*/
  _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.mark(function _callee9(runtime, startMethod) {
    var beforeHooks;
    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.wrap(function _callee9$(_context9) {
      while (1) {
        switch (_context9.prev = _context9.next) {
          case 0:
            if (!(runtime.stage === RUNNING)) {
              _context9.next = 2;
              break;
            }

            return _context9.abrupt("return", runtime);

          case 2:
            if (!runtime.isStarted) {
              _context9.next = 4;
              break;
            }

            return _context9.abrupt("return", runtime);

          case 4:
            beforeHooks = runtime.at('options.beforeStart', 'beforeStart', 'options.runtimeWillStart', 'runtimeWillStart').filter(function (f) {
              return typeof f === 'function';
            });
            events.emit('runtimeIsStarting', runtime, runtime.constructor);

            if (!(beforeHooks.length > 0)) {
              _context9.next = 17;
              break;
            }

            _context9.prev = 7;
            _context9.next = 10;
            return Promise.all(beforeHooks.map(function (fn) {
              return fn.call(runtime, runtime.argv, runtime.sandbox);
            }));

          case 10:
            _context9.next = 17;
            break;

          case 12:
            _context9.prev = 12;
            _context9.t0 = _context9["catch"](7);
            events.emit('runtimeStartFailure', _context9.t0, runtime, runtime.constructor);
            runtime.setState({
              stage: START_FAILURE,
              error: _context9.t0,
              failureStage: 'beforeHooks'
            });
            throw _context9.t0;

          case 17:
            _context9.prev = 17;
            runtime.setState({
              stage: STARTING
            });
            _context9.next = 21;
            return this.runMiddleware(STARTING);

          case 21:
            _context9.next = 29;
            break;

          case 23:
            _context9.prev = 23;
            _context9.t1 = _context9["catch"](17);
            events.emit('runtimeFailedStart', _context9.t1, runtime, runtime.constructor);
            runtime.fireHook('runtimeFailedStart', _context9.t1, runtime, runtime.constructor);
            runtime.setState({
              stage: START_FAILURE,
              error: _context9.t1,
              failureStage: 'middlewares'
            });
            throw _context9.t1;

          case 29:
            _context9.prev = 29;
            _context9.next = 32;
            return startMethod.call(runtime, runtime.options);

          case 32:
            _context9.next = 40;
            break;

          case 34:
            _context9.prev = 34;
            _context9.t2 = _context9["catch"](29);
            events.emit('runtimeFailedStart', _context9.t2, runtime, runtime.constructor);
            runtime.setState({
              stage: START_FAILURE,
              error: _context9.t2,
              failureStage: 'startMethod'
            });
            runtime.fireHook('runtimeFailedStart', _context9.t2, runtime, runtime.currentState);
            throw _context9.t2;

          case 40:
            runtime.setState({
              stage: RUNNING,
              started: true
            });
            runtime.fireHook('runtimeDidStart', runtime, runtime.currentState);
            events.emit('runtimeDidStart', runtime, runtime.currentState, runtime.constructor);
            return _context9.abrupt("return", this);

          case 44:
          case "end":
            return _context9.stop();
        }
      }
    }, _callee9, this, [[7, 12], [17, 23], [29, 34]]);
  }));
  return _startSequence.apply(this, arguments);
}

function makeStateful() {
  var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  obj.stateVersion = 0;
  extendObservable(obj, {
    state: observable.shallowMap(toPairs(obj.initialState || {})),
    currentState: computed(function () {
      return obj.state.toJSON();
    })
  });
  autorun(function () {
    var stateVersion = obj.stateVersion = obj.stateVersion + 1;
    var currentState = obj.currentState;
    obj.emit && obj.emit('change', obj, currentState, stateVersion);
    obj.fireHook && obj.fireHook('stateDidChange', currentState, stateVersion);
  });
  obj.state.observe(function () {
    var update = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    obj.fireHook && obj.fireHook("".concat(update.name, "DidChangeState"), update);

    if (obj.emit) {
      obj.emit('stateDidChange', update);
      obj.emit("".concat(update.name, "DidChangeState"), update);
    }
  }); // obj.getter('currentState', () => obj.state.toJSON())

  return obj;
}
/* unused harmony default export */ var _unused_webpack_default_export = (Runtime);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(98), __webpack_require__(58)))

/***/ }),
/* 75 */
/***/ (function(module, exports) {

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

module.exports = _assertThisInitialized;

/***/ }),
/* 76 */
/***/ (function(module, exports) {

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }

  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}

function _asyncToGenerator(fn) {
  return function () {
    var self = this,
        args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);

      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }

      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }

      _next(undefined);
    });
  };
}

module.exports = _asyncToGenerator;

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

var defineProperty = __webpack_require__(61);

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      defineProperty(target, key, source[key]);
    });
  }

  return target;
}

module.exports = _objectSpread;

/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

var getPrototypeOf = __webpack_require__(21);

var setPrototypeOf = __webpack_require__(124);

var isNativeFunction = __webpack_require__(360);

var construct = __webpack_require__(59);

function _wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? new Map() : undefined;

  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {
    if (Class === null || !isNativeFunction(Class)) return Class;

    if (typeof Class !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }

    if (typeof _cache !== "undefined") {
      if (_cache.has(Class)) return _cache.get(Class);

      _cache.set(Class, Wrapper);
    }

    function Wrapper() {
      return construct(Class, arguments, getPrototypeOf(this).constructor);
    }

    Wrapper.prototype = Object.create(Class.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return setPrototypeOf(Wrapper, Class);
  };

  return _wrapNativeSuper(Class);
}

module.exports = _wrapNativeSuper;

/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

var core = __webpack_require__(17);

var global = __webpack_require__(5);

var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});
(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: __webpack_require__(50) ? 'pure' : 'global',
  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
});

/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__(30);

var toLength = __webpack_require__(16);

var toAbsoluteIndex = __webpack_require__(52);

module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value; // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare

    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++]; // eslint-disable-next-line no-self-compare

      if (value != value) return true; // Array#indexOf ignores holes, Array#includes - not
    } else for (; length > index; index++) {
      if (IS_INCLUDES || index in O) {
        if (O[index] === el) return IS_INCLUDES || index || 0;
      }
    }
    return !IS_INCLUDES && -1;
  };
};

/***/ }),
/* 81 */
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;

/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

// 7.2.2 IsArray(argument)
var cof = __webpack_require__(40);

module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};

/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

var ITERATOR = __webpack_require__(13)('iterator');

var SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR]();

  riter['return'] = function () {
    SAFE_CLOSING = true;
  }; // eslint-disable-next-line no-throw-literal


  Array.from(riter, function () {
    throw 2;
  });
} catch (e) {
  /* empty */
}

module.exports = function (exec, skipClosing) {
  if (!skipClosing && !SAFE_CLOSING) return false;
  var safe = false;

  try {
    var arr = [7];
    var iter = arr[ITERATOR]();

    iter.next = function () {
      return {
        done: safe = true
      };
    };

    arr[ITERATOR] = function () {
      return iter;
    };

    exec(arr);
  } catch (e) {
    /* empty */
  }

  return safe;
};

/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // 21.2.5.3 get RegExp.prototype.flags

var anObject = __webpack_require__(7);

module.exports = function () {
  var that = anObject(this);
  var result = '';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.unicode) result += 'u';
  if (that.sticky) result += 'y';
  return result;
};

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var classof = __webpack_require__(72);

var builtinExec = RegExp.prototype.exec; // `RegExpExec` abstract operation
// https://tc39.github.io/ecma262/#sec-regexpexec

module.exports = function (R, S) {
  var exec = R.exec;

  if (typeof exec === 'function') {
    var result = exec.call(R, S);

    if (typeof result !== 'object') {
      throw new TypeError('RegExp exec method returned something other than an Object or null');
    }

    return result;
  }

  if (classof(R) !== 'RegExp') {
    throw new TypeError('RegExp#exec called on incompatible receiver');
  }

  return builtinExec.call(R, S);
};

/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__(148);

var redefine = __webpack_require__(26);

var hide = __webpack_require__(29);

var fails = __webpack_require__(6);

var defined = __webpack_require__(41);

var wks = __webpack_require__(13);

var regexpExec = __webpack_require__(120);

var SPECIES = wks('species');
var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {
  // #replace needs built-in support for named groups.
  // #match works fine because it just return the exec results, even if it has
  // a "grops" property.
  var re = /./;

  re.exec = function () {
    var result = [];
    result.groups = {
      a: '7'
    };
    return result;
  };

  return ''.replace(re, '$<a>') !== '7';
});

var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = function () {
  // Chrome 51 has a buggy "split" implementation when RegExp#exec !== nativeExec
  var re = /(?:)/;
  var originalExec = re.exec;

  re.exec = function () {
    return originalExec.apply(this, arguments);
  };

  var result = 'ab'.split(re);
  return result.length === 2 && result[0] === 'a' && result[1] === 'b';
}();

module.exports = function (KEY, length, exec) {
  var SYMBOL = wks(KEY);
  var DELEGATES_TO_SYMBOL = !fails(function () {
    // String methods call symbol-named RegEp methods
    var O = {};

    O[SYMBOL] = function () {
      return 7;
    };

    return ''[KEY](O) != 7;
  });
  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL ? !fails(function () {
    // Symbol-named RegExp methods call .exec
    var execCalled = false;
    var re = /a/;

    re.exec = function () {
      execCalled = true;
      return null;
    };

    if (KEY === 'split') {
      // RegExp[@@split] doesn't call the regex's exec method, but first creates
      // a new one. We need to return the patched regex when creating the new one.
      re.constructor = {};

      re.constructor[SPECIES] = function () {
        return re;
      };
    }

    re[SYMBOL]('');
    return !execCalled;
  }) : undefined;

  if (!DELEGATES_TO_SYMBOL || !DELEGATES_TO_EXEC || KEY === 'replace' && !REPLACE_SUPPORTS_NAMED_GROUPS || KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC) {
    var nativeRegExpMethod = /./[SYMBOL];
    var fns = exec(defined, SYMBOL, ''[KEY], function maybeCallNative(nativeMethod, regexp, str, arg2, forceStringMethod) {
      if (regexp.exec === regexpExec) {
        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
          // The native String method already delegates to @@method (this
          // polyfilled function), leasing to infinite recursion.
          // We avoid it by directly calling the native @@method method.
          return {
            done: true,
            value: nativeRegExpMethod.call(regexp, str, arg2)
          };
        }

        return {
          done: true,
          value: nativeMethod.call(str, regexp, arg2)
        };
      }

      return {
        done: false
      };
    });
    var strfn = fns[0];
    var rxfn = fns[1];
    redefine(String.prototype, KEY, strfn);
    hide(RegExp.prototype, SYMBOL, length == 2 // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
    // 21.2.5.11 RegExp.prototype[@@split](string, limit)
    ? function (string, arg) {
      return rxfn.call(string, this, arg);
    } // 21.2.5.6 RegExp.prototype[@@match](string)
    // 21.2.5.9 RegExp.prototype[@@search](string)
    : function (string) {
      return rxfn.call(string, this);
    });
  }
};

/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

var ctx = __webpack_require__(34);

var call = __webpack_require__(143);

var isArrayIter = __webpack_require__(115);

var anObject = __webpack_require__(7);

var toLength = __webpack_require__(16);

var getIterFn = __webpack_require__(117);

var BREAK = {};
var RETURN = {};

var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
  var iterFn = ITERATOR ? function () {
    return iterable;
  } : getIterFn(iterable);
  var f = ctx(fn, that, entries ? 2 : 1);
  var index = 0;
  var length, step, iterator, result;
  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!'); // fast case for arrays with default iterator

  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
    if (result === BREAK || result === RETURN) return result;
  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
    result = call(iterator, f, step.value, entries);
    if (result === BREAK || result === RETURN) return result;
  }
};

exports.BREAK = BREAK;
exports.RETURN = RETURN;

/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(5);

var navigator = global.navigator;
module.exports = navigator && navigator.userAgent || '';

/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var global = __webpack_require__(5);

var $export = __webpack_require__(1);

var redefine = __webpack_require__(26);

var redefineAll = __webpack_require__(68);

var meta = __webpack_require__(45);

var forOf = __webpack_require__(87);

var anInstance = __webpack_require__(67);

var isObject = __webpack_require__(8);

var fails = __webpack_require__(6);

var $iterDetect = __webpack_require__(83);

var setToStringTag = __webpack_require__(63);

var inheritIfRequired = __webpack_require__(106);

module.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {
  var Base = global[NAME];
  var C = Base;
  var ADDER = IS_MAP ? 'set' : 'add';
  var proto = C && C.prototype;
  var O = {};

  var fixMethod = function fixMethod(KEY) {
    var fn = proto[KEY];
    redefine(proto, KEY, KEY == 'delete' ? function (a) {
      return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
    } : KEY == 'has' ? function has(a) {
      return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
    } : KEY == 'get' ? function get(a) {
      return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);
    } : KEY == 'add' ? function add(a) {
      fn.call(this, a === 0 ? 0 : a);
      return this;
    } : function set(a, b) {
      fn.call(this, a === 0 ? 0 : a, b);
      return this;
    });
  };

  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {
    new C().entries().next();
  }))) {
    // create collection constructor
    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
    redefineAll(C.prototype, methods);
    meta.NEED = true;
  } else {
    var instance = new C(); // early implementations not supports chaining

    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance; // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false

    var THROWS_ON_PRIMITIVES = fails(function () {
      instance.has(1);
    }); // most early implementations doesn't supports iterables, most modern - not close it correctly

    var ACCEPT_ITERABLES = $iterDetect(function (iter) {
      new C(iter);
    }); // eslint-disable-line no-new
    // for early implementations -0 and +0 not the same

    var BUGGY_ZERO = !IS_WEAK && fails(function () {
      // V8 ~ Chromium 42- fails only with 5+ elements
      var $instance = new C();
      var index = 5;

      while (index--) {
        $instance[ADDER](index, index);
      }

      return !$instance.has(-0);
    });

    if (!ACCEPT_ITERABLES) {
      C = wrapper(function (target, iterable) {
        anInstance(target, C, NAME);
        var that = inheritIfRequired(new Base(), target, C);
        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
        return that;
      });
      C.prototype = proto;
      proto.constructor = C;
    }

    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
      fixMethod('delete');
      fixMethod('has');
      IS_MAP && fixMethod('get');
    }

    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER); // weak collections should not contains .clear method

    if (IS_WEAK && proto.clear) delete proto.clear;
  }

  setToStringTag(C, NAME);
  O[NAME] = C;
  $export($export.G + $export.W + $export.F * (C != Base), O);
  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);
  return C;
};

/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(5);

var hide = __webpack_require__(29);

var uid = __webpack_require__(49);

var TYPED = uid('typed_array');
var VIEW = uid('view');
var ABV = !!(global.ArrayBuffer && global.DataView);
var CONSTR = ABV;
var i = 0;
var l = 9;
var Typed;
var TypedArrayConstructors = 'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'.split(',');

while (i < l) {
  if (Typed = global[TypedArrayConstructors[i++]]) {
    hide(Typed.prototype, TYPED, true);
    hide(Typed.prototype, VIEW, true);
  } else CONSTR = false;
}

module.exports = {
  ABV: ABV,
  CONSTR: CONSTR,
  TYPED: TYPED,
  VIEW: VIEW
};

/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

var v1 = __webpack_require__(357);

var v4 = __webpack_require__(358);

var uuid = v4;
uuid.v1 = v1;
uuid.v4 = v4;
module.exports = uuid;

/***/ }),
/* 92 */
/***/ (function(module, exports) {

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

module.exports = _classCallCheck;

/***/ }),
/* 93 */
/***/ (function(module, exports) {

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

module.exports = _createClass;

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(370);

var assertThisInitialized = __webpack_require__(75);

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return assertThisInitialized(self);
}

module.exports = _possibleConstructorReturn;

/***/ }),
/* 95 */
/***/ (function(module, exports) {

function _getPrototypeOf(o) {
  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

module.exports = _getPrototypeOf;

/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__(371);

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) setPrototypeOf(subClass, superClass);
}

module.exports = _inherits;

/***/ }),
/* 97 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(15);
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);

/* eslint-disable */

/* @copyright github/tur-nr */

/* harmony default export */ __webpack_exports__["a"] = (function (bindTo) {
  var stack = [];

  var use = function use() {
    for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {
      fns[_key] = arguments[_key];
    }

    var i = fns.length;

    while (i--) {
      var fn = fns[i];
      if (Array.isArray(fn)) return use.apply(void 0, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(fn));
      if ('function' === typeof fn) stack.unshift(fn);
    }
  };

  var run = function run(done) {
    var i = stack.length;

    var next = function next() {
      var err = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
      var fin = arguments.length > 1 ? arguments[1] : undefined;

      if (err || fin || !i) {
        if ('function' === typeof done) done(err);
        return;
      }

      var mw = stack[--i];
      if (mw && typeof mw.apply !== 'undefined') mw.call(bindTo, next);
    };

    next();
  };

  var getCount = function getCount() {
    return stack.length;
  };

  return {
    use: use,
    run: run,
    getCount: getCount
  };
});

/***/ }),
/* 98 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {}; // cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
  throw new Error('setTimeout has not been defined');
}

function defaultClearTimeout() {
  throw new Error('clearTimeout has not been defined');
}

(function () {
  try {
    if (typeof setTimeout === 'function') {
      cachedSetTimeout = setTimeout;
    } else {
      cachedSetTimeout = defaultSetTimout;
    }
  } catch (e) {
    cachedSetTimeout = defaultSetTimout;
  }

  try {
    if (typeof clearTimeout === 'function') {
      cachedClearTimeout = clearTimeout;
    } else {
      cachedClearTimeout = defaultClearTimeout;
    }
  } catch (e) {
    cachedClearTimeout = defaultClearTimeout;
  }
})();

function runTimeout(fun) {
  if (cachedSetTimeout === setTimeout) {
    //normal enviroments in sane situations
    return setTimeout(fun, 0);
  } // if setTimeout wasn't available but was latter defined


  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
    cachedSetTimeout = setTimeout;
    return setTimeout(fun, 0);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedSetTimeout(fun, 0);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
      return cachedSetTimeout.call(null, fun, 0);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
      return cachedSetTimeout.call(this, fun, 0);
    }
  }
}

function runClearTimeout(marker) {
  if (cachedClearTimeout === clearTimeout) {
    //normal enviroments in sane situations
    return clearTimeout(marker);
  } // if clearTimeout wasn't available but was latter defined


  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
    cachedClearTimeout = clearTimeout;
    return clearTimeout(marker);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedClearTimeout(marker);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
      return cachedClearTimeout.call(null, marker);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
      // Some versions of I.E. have different rules for clearTimeout vs setTimeout
      return cachedClearTimeout.call(this, marker);
    }
  }
}

var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
  if (!draining || !currentQueue) {
    return;
  }

  draining = false;

  if (currentQueue.length) {
    queue = currentQueue.concat(queue);
  } else {
    queueIndex = -1;
  }

  if (queue.length) {
    drainQueue();
  }
}

function drainQueue() {
  if (draining) {
    return;
  }

  var timeout = runTimeout(cleanUpNextTick);
  draining = true;
  var len = queue.length;

  while (len) {
    currentQueue = queue;
    queue = [];

    while (++queueIndex < len) {
      if (currentQueue) {
        currentQueue[queueIndex].run();
      }
    }

    queueIndex = -1;
    len = queue.length;
  }

  currentQueue = null;
  draining = false;
  runClearTimeout(timeout);
}

process.nextTick = function (fun) {
  var args = new Array(arguments.length - 1);

  if (arguments.length > 1) {
    for (var i = 1; i < arguments.length; i++) {
      args[i - 1] = arguments[i];
    }
  }

  queue.push(new Item(fun, args));

  if (queue.length === 1 && !draining) {
    runTimeout(drainQueue);
  }
}; // v8 likes predictible objects


function Item(fun, array) {
  this.fun = fun;
  this.array = array;
}

Item.prototype.run = function () {
  this.fun.apply(null, this.array);
};

process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues

process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) {
  return [];
};

process.binding = function (name) {
  throw new Error('process.binding is not supported');
};

process.cwd = function () {
  return '/';
};

process.chdir = function (dir) {
  throw new Error('process.chdir is not supported');
};

process.umask = function () {
  return 0;
};

/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(8);

var document = __webpack_require__(5).document; // typeof document.createElement is 'object' in old IE


var is = isObject(document) && isObject(document.createElement);

module.exports = function (it) {
  return is ? document.createElement(it) : {};
};

/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

exports.f = __webpack_require__(13);

/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__(79)('keys');

var uid = __webpack_require__(49);

module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};

/***/ }),
/* 102 */
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(',');

/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

var document = __webpack_require__(5).document;

module.exports = document && document.documentElement;

/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

// Works with __proto__ only. Old v8 can't work with null proto objects.

/* eslint-disable no-proto */
var isObject = __webpack_require__(8);

var anObject = __webpack_require__(7);

var check = function check(O, proto) {
  anObject(O);
  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
};

module.exports = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
  function (test, buggy, set) {
    try {
      set = __webpack_require__(34)(Function.call, __webpack_require__(37).f(Object.prototype, '__proto__').set, 2);
      set(test, []);
      buggy = !(test instanceof Array);
    } catch (e) {
      buggy = true;
    }

    return function setPrototypeOf(O, proto) {
      check(O, proto);
      if (buggy) O.__proto__ = proto;else set(O, proto);
      return O;
    };
  }({}, false) : undefined),
  check: check
};

/***/ }),
/* 105 */
/***/ (function(module, exports) {

module.exports = "\t\n\x0B\f\r \xA0\u1680\u180E\u2000\u2001\u2002\u2003" + "\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF";

/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(8);

var setPrototypeOf = __webpack_require__(104).set;

module.exports = function (that, target, C) {
  var S = target.constructor;
  var P;

  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {
    setPrototypeOf(that, P);
  }

  return that;
};

/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var toInteger = __webpack_require__(36);

var defined = __webpack_require__(41);

module.exports = function repeat(count) {
  var str = String(defined(this));
  var res = '';
  var n = toInteger(count);
  if (n < 0 || n == Infinity) throw RangeError("Count can't be negative");

  for (; n > 0; (n >>>= 1) && (str += str)) {
    if (n & 1) res += str;
  }

  return res;
};

/***/ }),
/* 108 */
/***/ (function(module, exports) {

// 20.2.2.28 Math.sign(x)
module.exports = Math.sign || function sign(x) {
  // eslint-disable-next-line no-self-compare
  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
};

/***/ }),
/* 109 */
/***/ (function(module, exports) {

// 20.2.2.14 Math.expm1(x)
var $expm1 = Math.expm1;
module.exports = !$expm1 // Old FF bug
|| $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168 // Tor Browser bug
|| $expm1(-2e-17) != -2e-17 ? function expm1(x) {
  return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;
} : $expm1;

/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(36);

var defined = __webpack_require__(41); // true  -> String#at
// false -> String#codePointAt


module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};

/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var LIBRARY = __webpack_require__(50);

var $export = __webpack_require__(1);

var redefine = __webpack_require__(26);

var hide = __webpack_require__(29);

var Iterators = __webpack_require__(65);

var $iterCreate = __webpack_require__(142);

var setToStringTag = __webpack_require__(63);

var getPrototypeOf = __webpack_require__(55);

var ITERATOR = __webpack_require__(13)('iterator');

var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`

var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function returnThis() {
  return this;
};

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);

  var getMethod = function getMethod(kind) {
    if (!BUGGY && kind in proto) return proto[kind];

    switch (kind) {
      case KEYS:
        return function keys() {
          return new Constructor(this, kind);
        };

      case VALUES:
        return function values() {
          return new Constructor(this, kind);
        };
    }

    return function entries() {
      return new Constructor(this, kind);
    };
  };

  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype; // Fix native

  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));

    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true); // fix for some old engines

      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  } // fix Array#{values, @@iterator}.name in V8 / FF


  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;

    $default = function values() {
      return $native.call(this);
    };
  } // Define iterator


  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  } // Plug for library


  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;

  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }

  return methods;
};

/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

// helper for String#{startsWith, endsWith, includes}
var isRegExp = __webpack_require__(113);

var defined = __webpack_require__(41);

module.exports = function (that, searchString, NAME) {
  if (isRegExp(searchString)) throw TypeError('String#' + NAME + " doesn't accept regex!");
  return String(defined(that));
};

/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

// 7.2.8 IsRegExp(argument)
var isObject = __webpack_require__(8);

var cof = __webpack_require__(40);

var MATCH = __webpack_require__(13)('match');

module.exports = function (it) {
  var isRegExp;
  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
};

/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

var MATCH = __webpack_require__(13)('match');

module.exports = function (KEY) {
  var re = /./;

  try {
    '/./'[KEY](re);
  } catch (e) {
    try {
      re[MATCH] = false;
      return !'/./'[KEY](re);
    } catch (f) {
      /* empty */
    }
  }

  return true;
};

/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

// check on default Array iterator
var Iterators = __webpack_require__(65);

var ITERATOR = __webpack_require__(13)('iterator');

var ArrayProto = Array.prototype;

module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
};

/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $defineProperty = __webpack_require__(19);

var createDesc = __webpack_require__(48);

module.exports = function (object, index, value) {
  if (index in object) $defineProperty.f(object, index, createDesc(0, value));else object[index] = value;
};

/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(72);

var ITERATOR = __webpack_require__(13)('iterator');

var Iterators = __webpack_require__(65);

module.exports = __webpack_require__(17).getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];
};

/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)


var toObject = __webpack_require__(24);

var toAbsoluteIndex = __webpack_require__(52);

var toLength = __webpack_require__(16);

module.exports = function fill(value
/* , start = 0, end = @length */
) {
  var O = toObject(this);
  var length = toLength(O.length);
  var aLen = arguments.length;
  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);
  var end = aLen > 2 ? arguments[2] : undefined;
  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);

  while (endPos > index) {
    O[index++] = value;
  }

  return O;
};

/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var addToUnscopables = __webpack_require__(56);

var step = __webpack_require__(147);

var Iterators = __webpack_require__(65);

var toIObject = __webpack_require__(30); // 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()


module.exports = __webpack_require__(111)(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target

  this._i = 0; // next index

  this._k = kind; // kind
  // 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;

  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }

  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values'); // argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)

Iterators.Arguments = Iterators.Array;
addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');

/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var regexpFlags = __webpack_require__(84);

var nativeExec = RegExp.prototype.exec; // This always refers to the native implementation, because the
// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,
// which loads this file before patching the method.

var nativeReplace = String.prototype.replace;
var patchedExec = nativeExec;
var LAST_INDEX = 'lastIndex';

var UPDATES_LAST_INDEX_WRONG = function () {
  var re1 = /a/,
      re2 = /b*/g;
  nativeExec.call(re1, 'a');
  nativeExec.call(re2, 'a');
  return re1[LAST_INDEX] !== 0 || re2[LAST_INDEX] !== 0;
}(); // nonparticipating capturing group, copied from es5-shim's String#split patch.


var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;
var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;

if (PATCH) {
  patchedExec = function exec(str) {
    var re = this;
    var lastIndex, reCopy, match, i;

    if (NPCG_INCLUDED) {
      reCopy = new RegExp('^' + re.source + '$(?!\\s)', regexpFlags.call(re));
    }

    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re[LAST_INDEX];
    match = nativeExec.call(re, str);

    if (UPDATES_LAST_INDEX_WRONG && match) {
      re[LAST_INDEX] = re.global ? match.index + match[0].length : lastIndex;
    }

    if (NPCG_INCLUDED && match && match.length > 1) {
      // Fix browsers whose `exec` methods don't consistently return `undefined`
      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
      // eslint-disable-next-line no-loop-func
      nativeReplace.call(match[0], reCopy, function () {
        for (i = 1; i < arguments.length - 2; i++) {
          if (arguments[i] === undefined) match[i] = undefined;
        }
      });
    }

    return match;
  };
}

module.exports = patchedExec;

/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var at = __webpack_require__(110)(true); // `AdvanceStringIndex` abstract operation
// https://tc39.github.io/ecma262/#sec-advancestringindex


module.exports = function (S, index, unicode) {
  return index + (unicode ? at(S, index).length : 1);
};

/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

var ctx = __webpack_require__(34);

var invoke = __webpack_require__(136);

var html = __webpack_require__(103);

var cel = __webpack_require__(99);

var global = __webpack_require__(5);

var process = global.process;
var setTask = global.setImmediate;
var clearTask = global.clearImmediate;
var MessageChannel = global.MessageChannel;
var Dispatch = global.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer, channel, port;

var run = function run() {
  var id = +this; // eslint-disable-next-line no-prototype-builtins

  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};

var listener = function listener(event) {
  run.call(event.data);
}; // Node.js 0.9+ & IE10+ has setImmediate, otherwise:


if (!setTask || !clearTask) {
  setTask = function setImmediate(fn) {
    var args = [];
    var i = 1;

    while (arguments.length > i) {
      args.push(arguments[i++]);
    }

    queue[++counter] = function () {
      // eslint-disable-next-line no-new-func
      invoke(typeof fn == 'function' ? fn : Function(fn), args);
    };

    defer(counter);
    return counter;
  };

  clearTask = function clearImmediate(id) {
    delete queue[id];
  }; // Node.js 0.8-


  if (__webpack_require__(40)(process) == 'process') {
    defer = function defer(id) {
      process.nextTick(ctx(run, id, 1));
    }; // Sphere (JS game engine) Dispatch API

  } else if (Dispatch && Dispatch.now) {
    defer = function defer(id) {
      Dispatch.now(ctx(run, id, 1));
    }; // Browsers with MessageChannel, includes WebWorkers

  } else if (MessageChannel) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = ctx(port.postMessage, port, 1); // Browsers with postMessage, skip WebWorkers
    // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
    defer = function defer(id) {
      global.postMessage(id + '', '*');
    };

    global.addEventListener('message', listener, false); // IE8-
  } else if (ONREADYSTATECHANGE in cel('script')) {
    defer = function defer(id) {
      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run.call(id);
      };
    }; // Rest old browsers

  } else {
    defer = function defer(id) {
      setTimeout(ctx(run, id, 1), 0);
    };
  }
}

module.exports = {
  set: setTask,
  clear: clearTask
};

/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var global = __webpack_require__(5);

var DESCRIPTORS = __webpack_require__(20);

var LIBRARY = __webpack_require__(50);

var $typed = __webpack_require__(90);

var hide = __webpack_require__(29);

var redefineAll = __webpack_require__(68);

var fails = __webpack_require__(6);

var anInstance = __webpack_require__(67);

var toInteger = __webpack_require__(36);

var toLength = __webpack_require__(16);

var toIndex = __webpack_require__(155);

var gOPN = __webpack_require__(54).f;

var dP = __webpack_require__(19).f;

var arrayFill = __webpack_require__(118);

var setToStringTag = __webpack_require__(63);

var ARRAY_BUFFER = 'ArrayBuffer';
var DATA_VIEW = 'DataView';
var PROTOTYPE = 'prototype';
var WRONG_LENGTH = 'Wrong length!';
var WRONG_INDEX = 'Wrong index!';
var $ArrayBuffer = global[ARRAY_BUFFER];
var $DataView = global[DATA_VIEW];
var Math = global.Math;
var RangeError = global.RangeError; // eslint-disable-next-line no-shadow-restricted-names

var Infinity = global.Infinity;
var BaseBuffer = $ArrayBuffer;
var abs = Math.abs;
var pow = Math.pow;
var floor = Math.floor;
var log = Math.log;
var LN2 = Math.LN2;
var BUFFER = 'buffer';
var BYTE_LENGTH = 'byteLength';
var BYTE_OFFSET = 'byteOffset';
var $BUFFER = DESCRIPTORS ? '_b' : BUFFER;
var $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH;
var $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET; // IEEE754 conversions based on https://github.com/feross/ieee754

function packIEEE754(value, mLen, nBytes) {
  var buffer = new Array(nBytes);
  var eLen = nBytes * 8 - mLen - 1;
  var eMax = (1 << eLen) - 1;
  var eBias = eMax >> 1;
  var rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0;
  var i = 0;
  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
  var e, m, c;
  value = abs(value); // eslint-disable-next-line no-self-compare

  if (value != value || value === Infinity) {
    // eslint-disable-next-line no-self-compare
    m = value != value ? 1 : 0;
    e = eMax;
  } else {
    e = floor(log(value) / LN2);

    if (value * (c = pow(2, -e)) < 1) {
      e--;
      c *= 2;
    }

    if (e + eBias >= 1) {
      value += rt / c;
    } else {
      value += rt * pow(2, 1 - eBias);
    }

    if (value * c >= 2) {
      e++;
      c /= 2;
    }

    if (e + eBias >= eMax) {
      m = 0;
      e = eMax;
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * pow(2, mLen);
      e = e + eBias;
    } else {
      m = value * pow(2, eBias - 1) * pow(2, mLen);
      e = 0;
    }
  }

  for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8) {
    ;
  }

  e = e << mLen | m;
  eLen += mLen;

  for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8) {
    ;
  }

  buffer[--i] |= s * 128;
  return buffer;
}

function unpackIEEE754(buffer, mLen, nBytes) {
  var eLen = nBytes * 8 - mLen - 1;
  var eMax = (1 << eLen) - 1;
  var eBias = eMax >> 1;
  var nBits = eLen - 7;
  var i = nBytes - 1;
  var s = buffer[i--];
  var e = s & 127;
  var m;
  s >>= 7;

  for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8) {
    ;
  }

  m = e & (1 << -nBits) - 1;
  e >>= -nBits;
  nBits += mLen;

  for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8) {
    ;
  }

  if (e === 0) {
    e = 1 - eBias;
  } else if (e === eMax) {
    return m ? NaN : s ? -Infinity : Infinity;
  } else {
    m = m + pow(2, mLen);
    e = e - eBias;
  }

  return (s ? -1 : 1) * m * pow(2, e - mLen);
}

function unpackI32(bytes) {
  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];
}

function packI8(it) {
  return [it & 0xff];
}

function packI16(it) {
  return [it & 0xff, it >> 8 & 0xff];
}

function packI32(it) {
  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];
}

function packF64(it) {
  return packIEEE754(it, 52, 8);
}

function packF32(it) {
  return packIEEE754(it, 23, 4);
}

function addGetter(C, key, internal) {
  dP(C[PROTOTYPE], key, {
    get: function get() {
      return this[internal];
    }
  });
}

function get(view, bytes, index, isLittleEndian) {
  var numIndex = +index;
  var intIndex = toIndex(numIndex);
  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
  var store = view[$BUFFER]._b;
  var start = intIndex + view[$OFFSET];
  var pack = store.slice(start, start + bytes);
  return isLittleEndian ? pack : pack.reverse();
}

function set(view, bytes, index, conversion, value, isLittleEndian) {
  var numIndex = +index;
  var intIndex = toIndex(numIndex);
  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
  var store = view[$BUFFER]._b;
  var start = intIndex + view[$OFFSET];
  var pack = conversion(+value);

  for (var i = 0; i < bytes; i++) {
    store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];
  }
}

if (!$typed.ABV) {
  $ArrayBuffer = function ArrayBuffer(length) {
    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);
    var byteLength = toIndex(length);
    this._b = arrayFill.call(new Array(byteLength), 0);
    this[$LENGTH] = byteLength;
  };

  $DataView = function DataView(buffer, byteOffset, byteLength) {
    anInstance(this, $DataView, DATA_VIEW);
    anInstance(buffer, $ArrayBuffer, DATA_VIEW);
    var bufferLength = buffer[$LENGTH];
    var offset = toInteger(byteOffset);
    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');
    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);
    this[$BUFFER] = buffer;
    this[$OFFSET] = offset;
    this[$LENGTH] = byteLength;
  };

  if (DESCRIPTORS) {
    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');
    addGetter($DataView, BUFFER, '_b');
    addGetter($DataView, BYTE_LENGTH, '_l');
    addGetter($DataView, BYTE_OFFSET, '_o');
  }

  redefineAll($DataView[PROTOTYPE], {
    getInt8: function getInt8(byteOffset) {
      return get(this, 1, byteOffset)[0] << 24 >> 24;
    },
    getUint8: function getUint8(byteOffset) {
      return get(this, 1, byteOffset)[0];
    },
    getInt16: function getInt16(byteOffset
    /* , littleEndian */
    ) {
      var bytes = get(this, 2, byteOffset, arguments[1]);
      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
    },
    getUint16: function getUint16(byteOffset
    /* , littleEndian */
    ) {
      var bytes = get(this, 2, byteOffset, arguments[1]);
      return bytes[1] << 8 | bytes[0];
    },
    getInt32: function getInt32(byteOffset
    /* , littleEndian */
    ) {
      return unpackI32(get(this, 4, byteOffset, arguments[1]));
    },
    getUint32: function getUint32(byteOffset
    /* , littleEndian */
    ) {
      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;
    },
    getFloat32: function getFloat32(byteOffset
    /* , littleEndian */
    ) {
      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);
    },
    getFloat64: function getFloat64(byteOffset
    /* , littleEndian */
    ) {
      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);
    },
    setInt8: function setInt8(byteOffset, value) {
      set(this, 1, byteOffset, packI8, value);
    },
    setUint8: function setUint8(byteOffset, value) {
      set(this, 1, byteOffset, packI8, value);
    },
    setInt16: function setInt16(byteOffset, value
    /* , littleEndian */
    ) {
      set(this, 2, byteOffset, packI16, value, arguments[2]);
    },
    setUint16: function setUint16(byteOffset, value
    /* , littleEndian */
    ) {
      set(this, 2, byteOffset, packI16, value, arguments[2]);
    },
    setInt32: function setInt32(byteOffset, value
    /* , littleEndian */
    ) {
      set(this, 4, byteOffset, packI32, value, arguments[2]);
    },
    setUint32: function setUint32(byteOffset, value
    /* , littleEndian */
    ) {
      set(this, 4, byteOffset, packI32, value, arguments[2]);
    },
    setFloat32: function setFloat32(byteOffset, value
    /* , littleEndian */
    ) {
      set(this, 4, byteOffset, packF32, value, arguments[2]);
    },
    setFloat64: function setFloat64(byteOffset, value
    /* , littleEndian */
    ) {
      set(this, 8, byteOffset, packF64, value, arguments[2]);
    }
  });
} else {
  if (!fails(function () {
    $ArrayBuffer(1);
  }) || !fails(function () {
    new $ArrayBuffer(-1); // eslint-disable-line no-new
  }) || fails(function () {
    new $ArrayBuffer(); // eslint-disable-line no-new

    new $ArrayBuffer(1.5); // eslint-disable-line no-new

    new $ArrayBuffer(NaN); // eslint-disable-line no-new

    return $ArrayBuffer.name != ARRAY_BUFFER;
  })) {
    $ArrayBuffer = function ArrayBuffer(length) {
      anInstance(this, $ArrayBuffer);
      return new BaseBuffer(toIndex(length));
    };

    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];

    for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j;) {
      if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);
    }

    if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;
  } // iOS Safari 7.x bug


  var view = new $DataView(new $ArrayBuffer(2));
  var $setInt8 = $DataView[PROTOTYPE].setInt8;
  view.setInt8(0, 2147483648);
  view.setInt8(1, 2147483649);
  if (view.getInt8(0) || !view.getInt8(1)) redefineAll($DataView[PROTOTYPE], {
    setInt8: function setInt8(byteOffset, value) {
      $setInt8.call(this, byteOffset, value << 24 >> 24);
    },
    setUint8: function setUint8(byteOffset, value) {
      $setInt8.call(this, byteOffset, value << 24 >> 24);
    }
  }, true);
}

setToStringTag($ArrayBuffer, ARRAY_BUFFER);
setToStringTag($DataView, DATA_VIEW);
hide($DataView[PROTOTYPE], $typed.VIEW, true);
exports[ARRAY_BUFFER] = $ArrayBuffer;
exports[DATA_VIEW] = $DataView;

/***/ }),
/* 124 */
/***/ (function(module, exports) {

function _setPrototypeOf(o, p) {
  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

module.exports = _setPrototypeOf;

/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.decode = exports.parse = __webpack_require__(353);
exports.encode = exports.stringify = __webpack_require__(354);

/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.


var punycode = __webpack_require__(355);

var util = __webpack_require__(356);

exports.parse = urlParse;
exports.resolve = urlResolve;
exports.resolveObject = urlResolveObject;
exports.format = urlFormat;
exports.Url = Url;

function Url() {
  this.protocol = null;
  this.slashes = null;
  this.auth = null;
  this.host = null;
  this.port = null;
  this.hostname = null;
  this.hash = null;
  this.search = null;
  this.query = null;
  this.pathname = null;
  this.path = null;
  this.href = null;
} // Reference: RFC 3986, RFC 1808, RFC 2396
// define these here so at least they only have to be
// compiled once on the first module load.


var protocolPattern = /^([a-z0-9.+-]+:)/i,
    portPattern = /:[0-9]*$/,
    // Special case for a simple path URL
simplePathPattern = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,
    // RFC 2396: characters reserved for delimiting URLs.
// We actually just auto-escape these.
delims = ['<', '>', '"', '`', ' ', '\r', '\n', '\t'],
    // RFC 2396: characters not allowed for various reasons.
unwise = ['{', '}', '|', '\\', '^', '`'].concat(delims),
    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.
autoEscape = ['\''].concat(unwise),
    // Characters that are never ever allowed in a hostname.
// Note that any invalid chars are also handled, but these
// are the ones that are *expected* to be seen, so we fast-path
// them.
nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),
    hostEndingChars = ['/', '?', '#'],
    hostnameMaxLen = 255,
    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,
    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,
    // protocols that can allow "unsafe" and "unwise" chars.
unsafeProtocol = {
  'javascript': true,
  'javascript:': true
},
    // protocols that never have a hostname.
hostlessProtocol = {
  'javascript': true,
  'javascript:': true
},
    // protocols that always contain a // bit.
slashedProtocol = {
  'http': true,
  'https': true,
  'ftp': true,
  'gopher': true,
  'file': true,
  'http:': true,
  'https:': true,
  'ftp:': true,
  'gopher:': true,
  'file:': true
},
    querystring = __webpack_require__(125);

function urlParse(url, parseQueryString, slashesDenoteHost) {
  if (url && util.isObject(url) && url instanceof Url) return url;
  var u = new Url();
  u.parse(url, parseQueryString, slashesDenoteHost);
  return u;
}

Url.prototype.parse = function (url, parseQueryString, slashesDenoteHost) {
  if (!util.isString(url)) {
    throw new TypeError("Parameter 'url' must be a string, not " + typeof url);
  } // Copy chrome, IE, opera backslash-handling behavior.
  // Back slashes before the query string get converted to forward slashes
  // See: https://code.google.com/p/chromium/issues/detail?id=25916


  var queryIndex = url.indexOf('?'),
      splitter = queryIndex !== -1 && queryIndex < url.indexOf('#') ? '?' : '#',
      uSplit = url.split(splitter),
      slashRegex = /\\/g;
  uSplit[0] = uSplit[0].replace(slashRegex, '/');
  url = uSplit.join(splitter);
  var rest = url; // trim before proceeding.
  // This is to support parse stuff like "  http://foo.com  \n"

  rest = rest.trim();

  if (!slashesDenoteHost && url.split('#').length === 1) {
    // Try fast path regexp
    var simplePath = simplePathPattern.exec(rest);

    if (simplePath) {
      this.path = rest;
      this.href = rest;
      this.pathname = simplePath[1];

      if (simplePath[2]) {
        this.search = simplePath[2];

        if (parseQueryString) {
          this.query = querystring.parse(this.search.substr(1));
        } else {
          this.query = this.search.substr(1);
        }
      } else if (parseQueryString) {
        this.search = '';
        this.query = {};
      }

      return this;
    }
  }

  var proto = protocolPattern.exec(rest);

  if (proto) {
    proto = proto[0];
    var lowerProto = proto.toLowerCase();
    this.protocol = lowerProto;
    rest = rest.substr(proto.length);
  } // figure out if it's got a host
  // user@server is *always* interpreted as a hostname, and url
  // resolution will treat //foo/bar as host=foo,path=bar because that's
  // how the browser resolves relative URLs.


  if (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) {
    var slashes = rest.substr(0, 2) === '//';

    if (slashes && !(proto && hostlessProtocol[proto])) {
      rest = rest.substr(2);
      this.slashes = true;
    }
  }

  if (!hostlessProtocol[proto] && (slashes || proto && !slashedProtocol[proto])) {
    // there's a hostname.
    // the first instance of /, ?, ;, or # ends the host.
    //
    // If there is an @ in the hostname, then non-host chars *are* allowed
    // to the left of the last @ sign, unless some host-ending character
    // comes *before* the @-sign.
    // URLs are obnoxious.
    //
    // ex:
    // http://a@b@c/ => user:a@b host:c
    // http://a@b?@c => user:a host:c path:/?@c
    // v0.12 TODO(isaacs): This is not quite how Chrome does things.
    // Review our test case against browsers more comprehensively.
    // find the first instance of any hostEndingChars
    var hostEnd = -1;

    for (var i = 0; i < hostEndingChars.length; i++) {
      var hec = rest.indexOf(hostEndingChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) hostEnd = hec;
    } // at this point, either we have an explicit point where the
    // auth portion cannot go past, or the last @ char is the decider.


    var auth, atSign;

    if (hostEnd === -1) {
      // atSign can be anywhere.
      atSign = rest.lastIndexOf('@');
    } else {
      // atSign must be in auth portion.
      // http://a@b/c@d => host:b auth:a path:/c@d
      atSign = rest.lastIndexOf('@', hostEnd);
    } // Now we have a portion which is definitely the auth.
    // Pull that off.


    if (atSign !== -1) {
      auth = rest.slice(0, atSign);
      rest = rest.slice(atSign + 1);
      this.auth = decodeURIComponent(auth);
    } // the host is the remaining to the left of the first non-host char


    hostEnd = -1;

    for (var i = 0; i < nonHostChars.length; i++) {
      var hec = rest.indexOf(nonHostChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) hostEnd = hec;
    } // if we still have not hit it, then the entire thing is a host.


    if (hostEnd === -1) hostEnd = rest.length;
    this.host = rest.slice(0, hostEnd);
    rest = rest.slice(hostEnd); // pull out port.

    this.parseHost(); // we've indicated that there is a hostname,
    // so even if it's empty, it has to be present.

    this.hostname = this.hostname || ''; // if hostname begins with [ and ends with ]
    // assume that it's an IPv6 address.

    var ipv6Hostname = this.hostname[0] === '[' && this.hostname[this.hostname.length - 1] === ']'; // validate a little.

    if (!ipv6Hostname) {
      var hostparts = this.hostname.split(/\./);

      for (var i = 0, l = hostparts.length; i < l; i++) {
        var part = hostparts[i];
        if (!part) continue;

        if (!part.match(hostnamePartPattern)) {
          var newpart = '';

          for (var j = 0, k = part.length; j < k; j++) {
            if (part.charCodeAt(j) > 127) {
              // we replace non-ASCII char with a temporary placeholder
              // we need this to make sure size of hostname is not
              // broken by replacing non-ASCII by nothing
              newpart += 'x';
            } else {
              newpart += part[j];
            }
          } // we test again with ASCII char only


          if (!newpart.match(hostnamePartPattern)) {
            var validParts = hostparts.slice(0, i);
            var notHost = hostparts.slice(i + 1);
            var bit = part.match(hostnamePartStart);

            if (bit) {
              validParts.push(bit[1]);
              notHost.unshift(bit[2]);
            }

            if (notHost.length) {
              rest = '/' + notHost.join('.') + rest;
            }

            this.hostname = validParts.join('.');
            break;
          }
        }
      }
    }

    if (this.hostname.length > hostnameMaxLen) {
      this.hostname = '';
    } else {
      // hostnames are always lower case.
      this.hostname = this.hostname.toLowerCase();
    }

    if (!ipv6Hostname) {
      // IDNA Support: Returns a punycoded representation of "domain".
      // It only converts parts of the domain name that
      // have non-ASCII characters, i.e. it doesn't matter if
      // you call it with a domain that already is ASCII-only.
      this.hostname = punycode.toASCII(this.hostname);
    }

    var p = this.port ? ':' + this.port : '';
    var h = this.hostname || '';
    this.host = h + p;
    this.href += this.host; // strip [ and ] from the hostname
    // the host field still retains them, though

    if (ipv6Hostname) {
      this.hostname = this.hostname.substr(1, this.hostname.length - 2);

      if (rest[0] !== '/') {
        rest = '/' + rest;
      }
    }
  } // now rest is set to the post-host stuff.
  // chop off any delim chars.


  if (!unsafeProtocol[lowerProto]) {
    // First, make 100% sure that any "autoEscape" chars get
    // escaped, even if encodeURIComponent doesn't think they
    // need to be.
    for (var i = 0, l = autoEscape.length; i < l; i++) {
      var ae = autoEscape[i];
      if (rest.indexOf(ae) === -1) continue;
      var esc = encodeURIComponent(ae);

      if (esc === ae) {
        esc = escape(ae);
      }

      rest = rest.split(ae).join(esc);
    }
  } // chop off from the tail first.


  var hash = rest.indexOf('#');

  if (hash !== -1) {
    // got a fragment string.
    this.hash = rest.substr(hash);
    rest = rest.slice(0, hash);
  }

  var qm = rest.indexOf('?');

  if (qm !== -1) {
    this.search = rest.substr(qm);
    this.query = rest.substr(qm + 1);

    if (parseQueryString) {
      this.query = querystring.parse(this.query);
    }

    rest = rest.slice(0, qm);
  } else if (parseQueryString) {
    // no query string, but parseQueryString still requested
    this.search = '';
    this.query = {};
  }

  if (rest) this.pathname = rest;

  if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {
    this.pathname = '/';
  } //to support http.request


  if (this.pathname || this.search) {
    var p = this.pathname || '';
    var s = this.search || '';
    this.path = p + s;
  } // finally, reconstruct the href based on what has been validated.


  this.href = this.format();
  return this;
}; // format a parsed object into a url string


function urlFormat(obj) {
  // ensure it's an object, and not a string url.
  // If it's an obj, this is a no-op.
  // this way, you can call url_format() on strings
  // to clean up potentially wonky urls.
  if (util.isString(obj)) obj = urlParse(obj);
  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);
  return obj.format();
}

Url.prototype.format = function () {
  var auth = this.auth || '';

  if (auth) {
    auth = encodeURIComponent(auth);
    auth = auth.replace(/%3A/i, ':');
    auth += '@';
  }

  var protocol = this.protocol || '',
      pathname = this.pathname || '',
      hash = this.hash || '',
      host = false,
      query = '';

  if (this.host) {
    host = auth + this.host;
  } else if (this.hostname) {
    host = auth + (this.hostname.indexOf(':') === -1 ? this.hostname : '[' + this.hostname + ']');

    if (this.port) {
      host += ':' + this.port;
    }
  }

  if (this.query && util.isObject(this.query) && Object.keys(this.query).length) {
    query = querystring.stringify(this.query);
  }

  var search = this.search || query && '?' + query || '';
  if (protocol && protocol.substr(-1) !== ':') protocol += ':'; // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.
  // unless they had them to begin with.

  if (this.slashes || (!protocol || slashedProtocol[protocol]) && host !== false) {
    host = '//' + (host || '');
    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;
  } else if (!host) {
    host = '';
  }

  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;
  if (search && search.charAt(0) !== '?') search = '?' + search;
  pathname = pathname.replace(/[?#]/g, function (match) {
    return encodeURIComponent(match);
  });
  search = search.replace('#', '%23');
  return protocol + host + pathname + search + hash;
};

function urlResolve(source, relative) {
  return urlParse(source, false, true).resolve(relative);
}

Url.prototype.resolve = function (relative) {
  return this.resolveObject(urlParse(relative, false, true)).format();
};

function urlResolveObject(source, relative) {
  if (!source) return relative;
  return urlParse(source, false, true).resolveObject(relative);
}

Url.prototype.resolveObject = function (relative) {
  if (util.isString(relative)) {
    var rel = new Url();
    rel.parse(relative, false, true);
    relative = rel;
  }

  var result = new Url();
  var tkeys = Object.keys(this);

  for (var tk = 0; tk < tkeys.length; tk++) {
    var tkey = tkeys[tk];
    result[tkey] = this[tkey];
  } // hash is always overridden, no matter what.
  // even href="" will remove it.


  result.hash = relative.hash; // if the relative url is empty, then there's nothing left to do here.

  if (relative.href === '') {
    result.href = result.format();
    return result;
  } // hrefs like //foo/bar always cut to the protocol.


  if (relative.slashes && !relative.protocol) {
    // take everything except the protocol from relative
    var rkeys = Object.keys(relative);

    for (var rk = 0; rk < rkeys.length; rk++) {
      var rkey = rkeys[rk];
      if (rkey !== 'protocol') result[rkey] = relative[rkey];
    } //urlParse appends trailing / to urls like http://www.example.com


    if (slashedProtocol[result.protocol] && result.hostname && !result.pathname) {
      result.path = result.pathname = '/';
    }

    result.href = result.format();
    return result;
  }

  if (relative.protocol && relative.protocol !== result.protocol) {
    // if it's a known url protocol, then changing
    // the protocol does weird things
    // first, if it's not file:, then we MUST have a host,
    // and if there was a path
    // to begin with, then we MUST have a path.
    // if it is file:, then the host is dropped,
    // because that's known to be hostless.
    // anything else is assumed to be absolute.
    if (!slashedProtocol[relative.protocol]) {
      var keys = Object.keys(relative);

      for (var v = 0; v < keys.length; v++) {
        var k = keys[v];
        result[k] = relative[k];
      }

      result.href = result.format();
      return result;
    }

    result.protocol = relative.protocol;

    if (!relative.host && !hostlessProtocol[relative.protocol]) {
      var relPath = (relative.pathname || '').split('/');

      while (relPath.length && !(relative.host = relPath.shift())) {
        ;
      }

      if (!relative.host) relative.host = '';
      if (!relative.hostname) relative.hostname = '';
      if (relPath[0] !== '') relPath.unshift('');
      if (relPath.length < 2) relPath.unshift('');
      result.pathname = relPath.join('/');
    } else {
      result.pathname = relative.pathname;
    }

    result.search = relative.search;
    result.query = relative.query;
    result.host = relative.host || '';
    result.auth = relative.auth;
    result.hostname = relative.hostname || relative.host;
    result.port = relative.port; // to support http.request

    if (result.pathname || result.search) {
      var p = result.pathname || '';
      var s = result.search || '';
      result.path = p + s;
    }

    result.slashes = result.slashes || relative.slashes;
    result.href = result.format();
    return result;
  }

  var isSourceAbs = result.pathname && result.pathname.charAt(0) === '/',
      isRelAbs = relative.host || relative.pathname && relative.pathname.charAt(0) === '/',
      mustEndAbs = isRelAbs || isSourceAbs || result.host && relative.pathname,
      removeAllDots = mustEndAbs,
      srcPath = result.pathname && result.pathname.split('/') || [],
      relPath = relative.pathname && relative.pathname.split('/') || [],
      psychotic = result.protocol && !slashedProtocol[result.protocol]; // if the url is a non-slashed url, then relative
  // links like ../.. should be able
  // to crawl up to the hostname, as well.  This is strange.
  // result.protocol has already been set by now.
  // Later on, put the first path part into the host field.

  if (psychotic) {
    result.hostname = '';
    result.port = null;

    if (result.host) {
      if (srcPath[0] === '') srcPath[0] = result.host;else srcPath.unshift(result.host);
    }

    result.host = '';

    if (relative.protocol) {
      relative.hostname = null;
      relative.port = null;

      if (relative.host) {
        if (relPath[0] === '') relPath[0] = relative.host;else relPath.unshift(relative.host);
      }

      relative.host = null;
    }

    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');
  }

  if (isRelAbs) {
    // it's absolute.
    result.host = relative.host || relative.host === '' ? relative.host : result.host;
    result.hostname = relative.hostname || relative.hostname === '' ? relative.hostname : result.hostname;
    result.search = relative.search;
    result.query = relative.query;
    srcPath = relPath; // fall through to the dot-handling below.
  } else if (relPath.length) {
    // it's relative
    // throw away the existing file, and take the new path instead.
    if (!srcPath) srcPath = [];
    srcPath.pop();
    srcPath = srcPath.concat(relPath);
    result.search = relative.search;
    result.query = relative.query;
  } else if (!util.isNullOrUndefined(relative.search)) {
    // just pull out the search.
    // like href='?foo'.
    // Put this after the other two cases because it simplifies the booleans
    if (psychotic) {
      result.hostname = result.host = srcPath.shift(); //occationaly the auth can get stuck only in host
      //this especially happens in cases like
      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')

      var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;

      if (authInHost) {
        result.auth = authInHost.shift();
        result.host = result.hostname = authInHost.shift();
      }
    }

    result.search = relative.search;
    result.query = relative.query; //to support http.request

    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
      result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');
    }

    result.href = result.format();
    return result;
  }

  if (!srcPath.length) {
    // no path at all.  easy.
    // we've already handled the other stuff above.
    result.pathname = null; //to support http.request

    if (result.search) {
      result.path = '/' + result.search;
    } else {
      result.path = null;
    }

    result.href = result.format();
    return result;
  } // if a url ENDs in . or .., then it must get a trailing slash.
  // however, if it ends in anything else non-slashy,
  // then it must NOT get a trailing slash.


  var last = srcPath.slice(-1)[0];
  var hasTrailingSlash = (result.host || relative.host || srcPath.length > 1) && (last === '.' || last === '..') || last === ''; // strip single dots, resolve double dots to parent dir
  // if the path tries to go above the root, `up` ends up > 0

  var up = 0;

  for (var i = srcPath.length; i >= 0; i--) {
    last = srcPath[i];

    if (last === '.') {
      srcPath.splice(i, 1);
    } else if (last === '..') {
      srcPath.splice(i, 1);
      up++;
    } else if (up) {
      srcPath.splice(i, 1);
      up--;
    }
  } // if the path is allowed to go above the root, restore leading ..s


  if (!mustEndAbs && !removeAllDots) {
    for (; up--; up) {
      srcPath.unshift('..');
    }
  }

  if (mustEndAbs && srcPath[0] !== '' && (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {
    srcPath.unshift('');
  }

  if (hasTrailingSlash && srcPath.join('/').substr(-1) !== '/') {
    srcPath.push('');
  }

  var isAbsolute = srcPath[0] === '' || srcPath[0] && srcPath[0].charAt(0) === '/'; // put the host back

  if (psychotic) {
    result.hostname = result.host = isAbsolute ? '' : srcPath.length ? srcPath.shift() : ''; //occationaly the auth can get stuck only in host
    //this especially happens in cases like
    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')

    var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;

    if (authInHost) {
      result.auth = authInHost.shift();
      result.host = result.hostname = authInHost.shift();
    }
  }

  mustEndAbs = mustEndAbs || result.host && srcPath.length;

  if (mustEndAbs && !isAbsolute) {
    srcPath.unshift('');
  }

  if (!srcPath.length) {
    result.pathname = null;
    result.path = null;
  } else {
    result.pathname = srcPath.join('/');
  } //to support request.http


  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
    result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');
  }

  result.auth = relative.auth || result.auth;
  result.slashes = result.slashes || relative.slashes;
  result.href = result.format();
  return result;
};

Url.prototype.parseHost = function () {
  var host = this.host;
  var port = portPattern.exec(host);

  if (port) {
    port = port[0];

    if (port !== ':') {
      this.port = port.substr(1);
    }

    host = host.substr(0, host.length - port.length);
  }

  if (host) this.hostname = host;
};

/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(174);

/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__(20) && !__webpack_require__(6)(function () {
  return Object.defineProperty(__webpack_require__(99)('div'), 'a', {
    get: function get() {
      return 7;
    }
  }).a != 7;
});

/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(5);

var core = __webpack_require__(17);

var LIBRARY = __webpack_require__(50);

var wksExt = __webpack_require__(100);

var defineProperty = __webpack_require__(19).f;

module.exports = function (name) {
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, {
    value: wksExt.f(name)
  });
};

/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__(28);

var toIObject = __webpack_require__(30);

var arrayIndexOf = __webpack_require__(80)(false);

var IE_PROTO = __webpack_require__(101)('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;

  for (key in O) {
    if (key != IE_PROTO) has(O, key) && result.push(key);
  } // Don't enum bug & hidden keys


  while (names.length > i) {
    if (has(O, key = names[i++])) {
      ~arrayIndexOf(result, key) || result.push(key);
    }
  }

  return result;
};

/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(19);

var anObject = __webpack_require__(7);

var getKeys = __webpack_require__(51);

module.exports = __webpack_require__(20) ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;

  while (length > i) {
    dP.f(O, P = keys[i++], Properties[P]);
  }

  return O;
};

/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = __webpack_require__(30);

var gOPN = __webpack_require__(54).f;

var toString = {}.toString;
var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function getWindowNames(it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};

/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // 19.1.2.1 Object.assign(target, source, ...)

var getKeys = __webpack_require__(51);

var gOPS = __webpack_require__(81);

var pIE = __webpack_require__(71);

var toObject = __webpack_require__(24);

var IObject = __webpack_require__(70);

var $assign = Object.assign; // should work with symbols and should have deterministic property order (V8 bug)

module.exports = !$assign || __webpack_require__(6)(function () {
  var A = {};
  var B = {}; // eslint-disable-next-line no-undef

  var S = Symbol();
  var K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function (k) {
    B[k] = k;
  });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source) {
  // eslint-disable-line no-unused-vars
  var T = toObject(target);
  var aLen = arguments.length;
  var index = 1;
  var getSymbols = gOPS.f;
  var isEnum = pIE.f;

  while (aLen > index) {
    var S = IObject(arguments[index++]);
    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
    var length = keys.length;
    var j = 0;
    var key;

    while (length > j) {
      if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
    }
  }

  return T;
} : $assign;

/***/ }),
/* 134 */
/***/ (function(module, exports) {

// 7.2.9 SameValue(x, y)
module.exports = Object.is || function is(x, y) {
  // eslint-disable-next-line no-self-compare
  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
};

/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var aFunction = __webpack_require__(35);

var isObject = __webpack_require__(8);

var invoke = __webpack_require__(136);

var arraySlice = [].slice;
var factories = {};

var construct = function construct(F, len, args) {
  if (!(len in factories)) {
    for (var n = [], i = 0; i < len; i++) {
      n[i] = 'a[' + i + ']';
    } // eslint-disable-next-line no-new-func


    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');
  }

  return factories[len](F, args);
};

module.exports = Function.bind || function bind(that
/* , ...args */
) {
  var fn = aFunction(this);
  var partArgs = arraySlice.call(arguments, 1);

  var bound = function bound()
  /* args... */
  {
    var args = partArgs.concat(arraySlice.call(arguments));
    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);
  };

  if (isObject(fn.prototype)) bound.prototype = fn.prototype;
  return bound;
};

/***/ }),
/* 136 */
/***/ (function(module, exports) {

// fast apply, http://jsperf.lnkit.com/fast-apply/5
module.exports = function (fn, args, that) {
  var un = that === undefined;

  switch (args.length) {
    case 0:
      return un ? fn() : fn.call(that);

    case 1:
      return un ? fn(args[0]) : fn.call(that, args[0]);

    case 2:
      return un ? fn(args[0], args[1]) : fn.call(that, args[0], args[1]);

    case 3:
      return un ? fn(args[0], args[1], args[2]) : fn.call(that, args[0], args[1], args[2]);

    case 4:
      return un ? fn(args[0], args[1], args[2], args[3]) : fn.call(that, args[0], args[1], args[2], args[3]);
  }

  return fn.apply(that, args);
};

/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

var $parseInt = __webpack_require__(5).parseInt;

var $trim = __webpack_require__(64).trim;

var ws = __webpack_require__(105);

var hex = /^[-+]?0[xX]/;
module.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix) {
  var string = $trim(String(str), 3);
  return $parseInt(string, radix >>> 0 || (hex.test(string) ? 16 : 10));
} : $parseInt;

/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

var $parseFloat = __webpack_require__(5).parseFloat;

var $trim = __webpack_require__(64).trim;

module.exports = 1 / $parseFloat(__webpack_require__(105) + '-0') !== -Infinity ? function parseFloat(str) {
  var string = $trim(String(str), 3);
  var result = $parseFloat(string);
  return result === 0 && string.charAt(0) == '-' ? -0 : result;
} : $parseFloat;

/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

var cof = __webpack_require__(40);

module.exports = function (it, msg) {
  if (typeof it != 'number' && cof(it) != 'Number') throw TypeError(msg);
  return +it;
};

/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

// 20.1.2.3 Number.isInteger(number)
var isObject = __webpack_require__(8);

var floor = Math.floor;

module.exports = function isInteger(it) {
  return !isObject(it) && isFinite(it) && floor(it) === it;
};

/***/ }),
/* 141 */
/***/ (function(module, exports) {

// 20.2.2.20 Math.log1p(x)
module.exports = Math.log1p || function log1p(x) {
  return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);
};

/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var create = __webpack_require__(53);

var descriptor = __webpack_require__(48);

var setToStringTag = __webpack_require__(63);

var IteratorPrototype = {}; // 25.1.2.1.1 %IteratorPrototype%[@@iterator]()

__webpack_require__(29)(IteratorPrototype, __webpack_require__(13)('iterator'), function () {
  return this;
});

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, {
    next: descriptor(1, next)
  });
  setToStringTag(Constructor, NAME + ' Iterator');
};

/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

// call something on iterator step with safe closing on error
var anObject = __webpack_require__(7);

module.exports = function (iterator, fn, value, entries) {
  try {
    return entries ? fn(anObject(value)[0], value[1]) : fn(value); // 7.4.6 IteratorClose(iterator, completion)
  } catch (e) {
    var ret = iterator['return'];
    if (ret !== undefined) anObject(ret.call(iterator));
    throw e;
  }
};

/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
var speciesConstructor = __webpack_require__(267);

module.exports = function (original, length) {
  return new (speciesConstructor(original))(length);
};

/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

var aFunction = __webpack_require__(35);

var toObject = __webpack_require__(24);

var IObject = __webpack_require__(70);

var toLength = __webpack_require__(16);

module.exports = function (that, callbackfn, aLen, memo, isRight) {
  aFunction(callbackfn);
  var O = toObject(that);
  var self = IObject(O);
  var length = toLength(O.length);
  var index = isRight ? length - 1 : 0;
  var i = isRight ? -1 : 1;
  if (aLen < 2) for (;;) {
    if (index in self) {
      memo = self[index];
      index += i;
      break;
    }

    index += i;

    if (isRight ? index < 0 : length <= index) {
      throw TypeError('Reduce of empty array with no initial value');
    }
  }

  for (; isRight ? index >= 0 : length > index; index += i) {
    if (index in self) {
      memo = callbackfn(memo, self[index], index, O);
    }
  }

  return memo;
};

/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)


var toObject = __webpack_require__(24);

var toAbsoluteIndex = __webpack_require__(52);

var toLength = __webpack_require__(16);

module.exports = [].copyWithin || function copyWithin(target
/* = 0 */
, start
/* = 0, end = @length */
) {
  var O = toObject(this);
  var len = toLength(O.length);
  var to = toAbsoluteIndex(target, len);
  var from = toAbsoluteIndex(start, len);
  var end = arguments.length > 2 ? arguments[2] : undefined;
  var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);
  var inc = 1;

  if (from < to && to < from + count) {
    inc = -1;
    from += count - 1;
    to += count - 1;
  }

  while (count-- > 0) {
    if (from in O) O[to] = O[from];else delete O[to];
    to += inc;
    from += inc;
  }

  return O;
};

/***/ }),
/* 147 */
/***/ (function(module, exports) {

module.exports = function (done, value) {
  return {
    value: value,
    done: !!done
  };
};

/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var regexpExec = __webpack_require__(120);

__webpack_require__(1)({
  target: 'RegExp',
  proto: true,
  forced: regexpExec !== /./.exec
}, {
  exec: regexpExec
});

/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

// 21.2.5.3 get RegExp.prototype.flags()
if (__webpack_require__(20) && /./g.flags != 'g') __webpack_require__(19).f(RegExp.prototype, 'flags', {
  configurable: true,
  get: __webpack_require__(84)
});

/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var LIBRARY = __webpack_require__(50);

var global = __webpack_require__(5);

var ctx = __webpack_require__(34);

var classof = __webpack_require__(72);

var $export = __webpack_require__(1);

var isObject = __webpack_require__(8);

var aFunction = __webpack_require__(35);

var anInstance = __webpack_require__(67);

var forOf = __webpack_require__(87);

var speciesConstructor = __webpack_require__(73);

var task = __webpack_require__(122).set;

var microtask = __webpack_require__(287)();

var newPromiseCapabilityModule = __webpack_require__(151);

var perform = __webpack_require__(288);

var userAgent = __webpack_require__(88);

var promiseResolve = __webpack_require__(152);

var PROMISE = 'Promise';
var TypeError = global.TypeError;
var process = global.process;
var versions = process && process.versions;
var v8 = versions && versions.v8 || '';
var $Promise = global[PROMISE];
var isNode = classof(process) == 'process';

var empty = function empty() {
  /* empty */
};

var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
var newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;
var USE_NATIVE = !!function () {
  try {
    // correct subclassing with @@species support
    var promise = $Promise.resolve(1);

    var FakePromise = (promise.constructor = {})[__webpack_require__(13)('species')] = function (exec) {
      exec(empty, empty);
    }; // unhandled rejections tracking support, NodeJS Promise without it fails @@species test


    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
    // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
    // we can't detect it synchronously, so just check versions
    && v8.indexOf('6.6') !== 0 && userAgent.indexOf('Chrome/66') === -1;
  } catch (e) {
    /* empty */
  }
}(); // helpers

var isThenable = function isThenable(it) {
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};

var notify = function notify(promise, isReject) {
  if (promise._n) return;
  promise._n = true;
  var chain = promise._c;
  microtask(function () {
    var value = promise._v;
    var ok = promise._s == 1;
    var i = 0;

    var run = function run(reaction) {
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;

      try {
        if (handler) {
          if (!ok) {
            if (promise._h == 2) onHandleUnhandled(promise);
            promise._h = 1;
          }

          if (handler === true) result = value;else {
            if (domain) domain.enter();
            result = handler(value); // may throw

            if (domain) {
              domain.exit();
              exited = true;
            }
          }

          if (result === reaction.promise) {
            reject(TypeError('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (e) {
        if (domain && !exited) domain.exit();
        reject(e);
      }
    };

    while (chain.length > i) {
      run(chain[i++]);
    } // variable length - can't use forEach


    promise._c = [];
    promise._n = false;
    if (isReject && !promise._h) onUnhandled(promise);
  });
};

var onUnhandled = function onUnhandled(promise) {
  task.call(global, function () {
    var value = promise._v;
    var unhandled = isUnhandled(promise);
    var result, handler, console;

    if (unhandled) {
      result = perform(function () {
        if (isNode) {
          process.emit('unhandledRejection', value, promise);
        } else if (handler = global.onunhandledrejection) {
          handler({
            promise: promise,
            reason: value
          });
        } else if ((console = global.console) && console.error) {
          console.error('Unhandled promise rejection', value);
        }
      }); // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should

      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
    }

    promise._a = undefined;
    if (unhandled && result.e) throw result.v;
  });
};

var isUnhandled = function isUnhandled(promise) {
  return promise._h !== 1 && (promise._a || promise._c).length === 0;
};

var onHandleUnhandled = function onHandleUnhandled(promise) {
  task.call(global, function () {
    var handler;

    if (isNode) {
      process.emit('rejectionHandled', promise);
    } else if (handler = global.onrejectionhandled) {
      handler({
        promise: promise,
        reason: promise._v
      });
    }
  });
};

var $reject = function $reject(value) {
  var promise = this;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap

  promise._v = value;
  promise._s = 2;
  if (!promise._a) promise._a = promise._c.slice();
  notify(promise, true);
};

var $resolve = function $resolve(value) {
  var promise = this;
  var then;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap

  try {
    if (promise === value) throw TypeError("Promise can't be resolved itself");

    if (then = isThenable(value)) {
      microtask(function () {
        var wrapper = {
          _w: promise,
          _d: false
        }; // wrap

        try {
          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
        } catch (e) {
          $reject.call(wrapper, e);
        }
      });
    } else {
      promise._v = value;
      promise._s = 1;
      notify(promise, false);
    }
  } catch (e) {
    $reject.call({
      _w: promise,
      _d: false
    }, e); // wrap
  }
}; // constructor polyfill


if (!USE_NATIVE) {
  // 25.4.3.1 Promise(executor)
  $Promise = function Promise(executor) {
    anInstance(this, $Promise, PROMISE, '_h');
    aFunction(executor);
    Internal.call(this);

    try {
      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
    } catch (err) {
      $reject.call(this, err);
    }
  }; // eslint-disable-next-line no-unused-vars


  Internal = function Promise(executor) {
    this._c = []; // <- awaiting reactions

    this._a = undefined; // <- checked in isUnhandled reactions

    this._s = 0; // <- state

    this._d = false; // <- done

    this._v = undefined; // <- value

    this._h = 0; // <- rejection state, 0 - default, 1 - handled, 2 - unhandled

    this._n = false; // <- notify
  };

  Internal.prototype = __webpack_require__(68)($Promise.prototype, {
    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
    then: function then(onFulfilled, onRejected) {
      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = isNode ? process.domain : undefined;

      this._c.push(reaction);

      if (this._a) this._a.push(reaction);
      if (this._s) notify(this, false);
      return reaction.promise;
    },
    // 25.4.5.1 Promise.prototype.catch(onRejected)
    'catch': function _catch(onRejected) {
      return this.then(undefined, onRejected);
    }
  });

  OwnPromiseCapability = function OwnPromiseCapability() {
    var promise = new Internal();
    this.promise = promise;
    this.resolve = ctx($resolve, promise, 1);
    this.reject = ctx($reject, promise, 1);
  };

  newPromiseCapabilityModule.f = newPromiseCapability = function newPromiseCapability(C) {
    return C === $Promise || C === Wrapper ? new OwnPromiseCapability(C) : newGenericPromiseCapability(C);
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, {
  Promise: $Promise
});

__webpack_require__(63)($Promise, PROMISE);

__webpack_require__(66)(PROMISE);

Wrapper = __webpack_require__(17)[PROMISE]; // statics

$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
  // 25.4.4.5 Promise.reject(r)
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    var $$reject = capability.reject;
    $$reject(r);
    return capability.promise;
  }
});
$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
  // 25.4.4.6 Promise.resolve(x)
  resolve: function resolve(x) {
    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);
  }
});
$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(83)(function (iter) {
  $Promise.all(iter)['catch'](empty);
})), PROMISE, {
  // 25.4.4.1 Promise.all(iterable)
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var values = [];
      var index = 0;
      var remaining = 1;
      forOf(iterable, false, function (promise) {
        var $index = index++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        C.resolve(promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[$index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.e) reject(result.v);
    return capability.promise;
  },
  // 25.4.4.4 Promise.race(iterable)
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      forOf(iterable, false, function (promise) {
        C.resolve(promise).then(capability.resolve, reject);
      });
    });
    if (result.e) reject(result.v);
    return capability.promise;
  }
});

/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // 25.4.1.5 NewPromiseCapability(C)

var aFunction = __webpack_require__(35);

function PromiseCapability(C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject = aFunction(reject);
}

module.exports.f = function (C) {
  return new PromiseCapability(C);
};

/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(7);

var isObject = __webpack_require__(8);

var newPromiseCapability = __webpack_require__(151);

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};

/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var dP = __webpack_require__(19).f;

var create = __webpack_require__(53);

var redefineAll = __webpack_require__(68);

var ctx = __webpack_require__(34);

var anInstance = __webpack_require__(67);

var forOf = __webpack_require__(87);

var $iterDefine = __webpack_require__(111);

var step = __webpack_require__(147);

var setSpecies = __webpack_require__(66);

var DESCRIPTORS = __webpack_require__(20);

var fastKey = __webpack_require__(45).fastKey;

var validate = __webpack_require__(57);

var SIZE = DESCRIPTORS ? '_s' : 'size';

var getEntry = function getEntry(that, key) {
  // fast case
  var index = fastKey(key);
  var entry;
  if (index !== 'F') return that._i[index]; // frozen object case

  for (entry = that._f; entry; entry = entry.n) {
    if (entry.k == key) return entry;
  }
};

module.exports = {
  getConstructor: function getConstructor(wrapper, NAME, IS_MAP, ADDER) {
    var C = wrapper(function (that, iterable) {
      anInstance(that, C, NAME, '_i');
      that._t = NAME; // collection type

      that._i = create(null); // index

      that._f = undefined; // first entry

      that._l = undefined; // last entry

      that[SIZE] = 0; // size

      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
    });
    redefineAll(C.prototype, {
      // 23.1.3.1 Map.prototype.clear()
      // 23.2.3.2 Set.prototype.clear()
      clear: function clear() {
        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {
          entry.r = true;
          if (entry.p) entry.p = entry.p.n = undefined;
          delete data[entry.i];
        }

        that._f = that._l = undefined;
        that[SIZE] = 0;
      },
      // 23.1.3.3 Map.prototype.delete(key)
      // 23.2.3.4 Set.prototype.delete(value)
      'delete': function _delete(key) {
        var that = validate(this, NAME);
        var entry = getEntry(that, key);

        if (entry) {
          var next = entry.n;
          var prev = entry.p;
          delete that._i[entry.i];
          entry.r = true;
          if (prev) prev.n = next;
          if (next) next.p = prev;
          if (that._f == entry) that._f = next;
          if (that._l == entry) that._l = prev;
          that[SIZE]--;
        }

        return !!entry;
      },
      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
      forEach: function forEach(callbackfn
      /* , that = undefined */
      ) {
        validate(this, NAME);
        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
        var entry;

        while (entry = entry ? entry.n : this._f) {
          f(entry.v, entry.k, this); // revert to the last existing entry

          while (entry && entry.r) {
            entry = entry.p;
          }
        }
      },
      // 23.1.3.7 Map.prototype.has(key)
      // 23.2.3.7 Set.prototype.has(value)
      has: function has(key) {
        return !!getEntry(validate(this, NAME), key);
      }
    });
    if (DESCRIPTORS) dP(C.prototype, 'size', {
      get: function get() {
        return validate(this, NAME)[SIZE];
      }
    });
    return C;
  },
  def: function def(that, key, value) {
    var entry = getEntry(that, key);
    var prev, index; // change existing entry

    if (entry) {
      entry.v = value; // create new entry
    } else {
      that._l = entry = {
        i: index = fastKey(key, true),
        // <- index
        k: key,
        // <- key
        v: value,
        // <- value
        p: prev = that._l,
        // <- previous entry
        n: undefined,
        // <- next entry
        r: false // <- removed

      };
      if (!that._f) that._f = entry;
      if (prev) prev.n = entry;
      that[SIZE]++; // add to index

      if (index !== 'F') that._i[index] = entry;
    }

    return that;
  },
  getEntry: getEntry,
  setStrong: function setStrong(C, NAME, IS_MAP) {
    // add .keys, .values, .entries, [@@iterator]
    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
    $iterDefine(C, NAME, function (iterated, kind) {
      this._t = validate(iterated, NAME); // target

      this._k = kind; // kind

      this._l = undefined; // previous
    }, function () {
      var that = this;
      var kind = that._k;
      var entry = that._l; // revert to the last existing entry

      while (entry && entry.r) {
        entry = entry.p;
      } // get next entry


      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {
        // or finish the iteration
        that._t = undefined;
        return step(1);
      } // return step by kind


      if (kind == 'keys') return step(0, entry.k);
      if (kind == 'values') return step(0, entry.v);
      return step(0, [entry.k, entry.v]);
    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true); // add [@@species], 23.1.2.2, 23.2.2.2

    setSpecies(NAME);
  }
};

/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var redefineAll = __webpack_require__(68);

var getWeak = __webpack_require__(45).getWeak;

var anObject = __webpack_require__(7);

var isObject = __webpack_require__(8);

var anInstance = __webpack_require__(67);

var forOf = __webpack_require__(87);

var createArrayMethod = __webpack_require__(39);

var $has = __webpack_require__(28);

var validate = __webpack_require__(57);

var arrayFind = createArrayMethod(5);
var arrayFindIndex = createArrayMethod(6);
var id = 0; // fallback for uncaught frozen keys

var uncaughtFrozenStore = function uncaughtFrozenStore(that) {
  return that._l || (that._l = new UncaughtFrozenStore());
};

var UncaughtFrozenStore = function UncaughtFrozenStore() {
  this.a = [];
};

var findUncaughtFrozen = function findUncaughtFrozen(store, key) {
  return arrayFind(store.a, function (it) {
    return it[0] === key;
  });
};

UncaughtFrozenStore.prototype = {
  get: function get(key) {
    var entry = findUncaughtFrozen(this, key);
    if (entry) return entry[1];
  },
  has: function has(key) {
    return !!findUncaughtFrozen(this, key);
  },
  set: function set(key, value) {
    var entry = findUncaughtFrozen(this, key);
    if (entry) entry[1] = value;else this.a.push([key, value]);
  },
  'delete': function _delete(key) {
    var index = arrayFindIndex(this.a, function (it) {
      return it[0] === key;
    });
    if (~index) this.a.splice(index, 1);
    return !!~index;
  }
};
module.exports = {
  getConstructor: function getConstructor(wrapper, NAME, IS_MAP, ADDER) {
    var C = wrapper(function (that, iterable) {
      anInstance(that, C, NAME, '_i');
      that._t = NAME; // collection type

      that._i = id++; // collection id

      that._l = undefined; // leak store for uncaught frozen objects

      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
    });
    redefineAll(C.prototype, {
      // 23.3.3.2 WeakMap.prototype.delete(key)
      // 23.4.3.3 WeakSet.prototype.delete(value)
      'delete': function _delete(key) {
        if (!isObject(key)) return false;
        var data = getWeak(key);
        if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);
        return data && $has(data, this._i) && delete data[this._i];
      },
      // 23.3.3.4 WeakMap.prototype.has(key)
      // 23.4.3.4 WeakSet.prototype.has(value)
      has: function has(key) {
        if (!isObject(key)) return false;
        var data = getWeak(key);
        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);
        return data && $has(data, this._i);
      }
    });
    return C;
  },
  def: function def(that, key, value) {
    var data = getWeak(anObject(key), true);
    if (data === true) uncaughtFrozenStore(that).set(key, value);else data[that._i] = value;
    return that;
  },
  ufstore: uncaughtFrozenStore
};

/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

// https://tc39.github.io/ecma262/#sec-toindex
var toInteger = __webpack_require__(36);

var toLength = __webpack_require__(16);

module.exports = function (it) {
  if (it === undefined) return 0;
  var number = toInteger(it);
  var length = toLength(number);
  if (number !== length) throw RangeError('Wrong length!');
  return length;
};

/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

// all object keys, includes non-enumerable and symbols
var gOPN = __webpack_require__(54);

var gOPS = __webpack_require__(81);

var anObject = __webpack_require__(7);

var Reflect = __webpack_require__(5).Reflect;

module.exports = Reflect && Reflect.ownKeys || function ownKeys(it) {
  var keys = gOPN.f(anObject(it));
  var getSymbols = gOPS.f;
  return getSymbols ? keys.concat(getSymbols(it)) : keys;
};

/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-string-pad-start-end
var toLength = __webpack_require__(16);

var repeat = __webpack_require__(107);

var defined = __webpack_require__(41);

module.exports = function (that, maxLength, fillString, left) {
  var S = String(defined(that));
  var stringLength = S.length;
  var fillStr = fillString === undefined ? ' ' : String(fillString);
  var intMaxLength = toLength(maxLength);
  if (intMaxLength <= stringLength || fillStr == '') return S;
  var fillLen = intMaxLength - stringLength;
  var stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));
  if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);
  return left ? stringFiller + S : S + stringFiller;
};

/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

var getKeys = __webpack_require__(51);

var toIObject = __webpack_require__(30);

var isEnum = __webpack_require__(71).f;

module.exports = function (isEntries) {
  return function (it) {
    var O = toIObject(it);
    var keys = getKeys(O);
    var length = keys.length;
    var i = 0;
    var result = [];
    var key;

    while (length > i) {
      if (isEnum.call(O, key = keys[i++])) {
        result.push(isEntries ? [key, O[key]] : O[key]);
      }
    }

    return result;
  };
};

/***/ }),
/* 159 */
/***/ (function(module, exports) {

module.exports = function (module) {
  if (!module.webpackPolyfill) {
    module.deprecate = function () {};

    module.paths = []; // module.parent = undefined by default

    if (!module.children) module.children = [];
    Object.defineProperty(module, "loaded", {
      enumerable: true,
      get: function get() {
        return module.l;
      }
    });
    Object.defineProperty(module, "id", {
      enumerable: true,
      get: function get() {
        return module.i;
      }
    });
    module.webpackPolyfill = 1;
  }

  return module;
};

/***/ }),
/* 160 */
/***/ (function(module, exports) {

// Unique ID creation requires a high quality random # generator.  In the
// browser this is a little complicated due to unknown quality of Math.random()
// and inconsistent support for the `crypto` API.  We do the best we can via
// feature-detection
// getRandomValues needs to be invoked in a context where "this" is a Crypto
// implementation. Also, find the complete implementation of crypto on IE11.
var getRandomValues = typeof crypto != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto);

if (getRandomValues) {
  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto
  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef

  module.exports = function whatwgRNG() {
    getRandomValues(rnds8);
    return rnds8;
  };
} else {
  // Math.random()-based (RNG)
  //
  // If all else fails, use Math.random().  It's fast, but is of unspecified
  // quality.
  var rnds = new Array(16);

  module.exports = function mathRNG() {
    for (var i = 0, r; i < 16; i++) {
      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;
      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;
    }

    return rnds;
  };
}

/***/ }),
/* 161 */
/***/ (function(module, exports) {

/**
 * Convert array of 16 byte values to UUID string format of the form:
 * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
 */
var byteToHex = [];

for (var i = 0; i < 256; ++i) {
  byteToHex[i] = (i + 0x100).toString(16).substr(1);
}

function bytesToUuid(buf, offset) {
  var i = offset || 0;
  var bth = byteToHex; // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4

  return [bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]]].join('');
}

module.exports = bytesToUuid;

/***/ }),
/* 162 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export Cache */
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(14);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);


var Cache =
/*#__PURE__*/
function () {
  function Cache(init) {
    var _this = this;

    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, Cache);

    hide(this, 'hide', function () {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return hide.apply(void 0, [_this].concat(args));
    });
    this.clear(init);

    this.write = function (k, v) {
      return _this.set(k, v).get(k);
    };
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(Cache, [{
    key: "fetch",
    value: function fetch(k, defaultValue) {
      if (this.has(k)) {
        return this.get(k);
      } else {
        this.set(k, typeof defaultValue === 'function' ? defaultValue(k) : defaultValue);
        return this.get(k);
      }
    }
  }, {
    key: "clear",
    value: function clear(init) {
      delete this._wm;
      this._wm = new Map(init);
    }
  }, {
    key: "delete",
    value: function _delete(k) {
      return this._wm["delete"](k);
    }
  }, {
    key: "get",
    value: function get(k) {
      return this._wm.get(k);
    }
  }, {
    key: "has",
    value: function has(k) {
      return this._wm.has(k);
    }
  }, {
    key: "set",
    value: function set(k, v) {
      this._wm.set(k, v);

      return this;
    }
  }]);

  return Cache;
}();
/* harmony default export */ __webpack_exports__["a"] = (Cache);

function hide(target, propName, value) {
  var configurable = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
  Object.defineProperty(target, propName, {
    enumerable: false,
    configurable: configurable,
    value: value
  });
  return target;
}

/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

var objectWithoutPropertiesLoose = __webpack_require__(359);

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = objectWithoutPropertiesLoose(source, excluded);
  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

module.exports = _objectWithoutProperties;

/***/ }),
/* 164 */
/***/ (function(module, exports) {

function _defineEnumerableProperties(obj, descs) {
  for (var key in descs) {
    var desc = descs[key];
    desc.configurable = desc.enumerable = true;
    if ("value" in desc) desc.writable = true;
    Object.defineProperty(obj, key, desc);
  }

  if (Object.getOwnPropertySymbols) {
    var objectSymbols = Object.getOwnPropertySymbols(descs);

    for (var i = 0; i < objectSymbols.length; i++) {
      var sym = objectSymbols[i];
      var desc = descs[sym];
      desc.configurable = desc.enumerable = true;
      if ("value" in desc) desc.writable = true;
      Object.defineProperty(obj, sym, desc);
    }
  }

  return obj;
}

module.exports = _defineEnumerableProperties;

/***/ }),
/* 165 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ProfilerFeature; });
/* harmony import */ var _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(9);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(14);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(22);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(21);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(43);
/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(23);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(2);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _feature__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(31);









/**
 * @class ProfilerFeature
 * @classdesc provides basic profiling capabilities for named events.
 * @example
 *
 *  runtime.feature('profiler').enable()
 *
 *
 *  runtime.profiler
 *
 *  profiler.start('something')
 *
 *  somethingTakesAMinute().then(() => {
 *    profiler.end('something')
 *  })
 */

var ProfilerFeature =
/*#__PURE__*/
function (_Feature) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_6___default()(ProfilerFeature, _Feature);

  function ProfilerFeature() {
    var _getPrototypeOf2;

    var _this;

    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, ProfilerFeature);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default()(this, (_getPrototypeOf2 = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(ProfilerFeature)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5___default()(_this), "shortcut", 'profiler');

    return _this;
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(ProfilerFeature, [{
    key: "observables",
    value: function observables() {
      /**
       * @property {Map} timings
       * @memberof ProfilerFeature
       */
      return {
        timings: ['shallowMap', []]
      };
    }
    /**
     * @param {String} eventName the name of the event you're finished timing
     * @memberof ProfilerFeature
     */

  }, {
    key: "end",
    value: function end(eventName) {
      return this.profileEnd(eventName);
    }
  }, {
    key: "profileEnd",
    value: function profileEnd(eventName) {
      try {
        var stamp = +new Date();
        this.timings.set(eventName, _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default()({}, this.timings.get(eventName) || {}, {
          end: stamp
        }));
      } catch (error) {}
    }
    /**
     * @param {String} eventName the name of the event you're starting to time
     * @memberof ProfilerFeature
     */

  }, {
    key: "start",
    value: function start(eventName) {
      this.profileStart(eventName);
    }
  }, {
    key: "profileStart",
    value: function profileStart(eventName) {
      var stamp = +new Date();

      try {
        this.timings.set(eventName, {
          start: stamp
        });
      } catch (error) {}

      return stamp;
    }
  }, {
    key: "report",

    /**
     * @typedef {Object} TimingReport
     * @property {Number} start
     * @property {Number} stop
     * @property {Number} duration
     */

    /**
     * @typedef {Object<String, TimingReport>} TimingsReport
     */

    /**
     * @type {TimingsReport}
     */
    get: function get() {
      var timings = this.runtime.convertToJS(this.timings.toJSON());
      return this.chain.plant(timings).pickBy(function (v) {
        return v.start && v.end;
      }).mapValues(function (_ref) {
        var start = _ref.start,
            end = _ref.end;
        return {
          start: start,
          end: end,
          duration: end - start
        };
      }).value();
    }
  }]);

  return ProfilerFeature;
}(_feature__WEBPACK_IMPORTED_MODULE_8__[/* Feature */ "a"]);

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(ProfilerFeature, "shortcut", 'profiler');



/***/ }),
/* 166 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return VmFeature; });
/* unused harmony export createModule */
/* unused harmony export createContext */
/* unused harmony export createScript */
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(10);
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
/* harmony import */ var _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(25);
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(9);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(14);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(22);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(21);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(23);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(2);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _feature__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(31);










/**
 * @class VmFeature
 * @extends Feature
 * @classdesc The Feature helper encapsulates any functionality provided by a module, in a stateful object that can be configured and enabled at runtime
 * whenever it is needed by an application.  The @skypager/node runtime is just a collection of features that only make sense in a node process.  A web process
 * could mimic the node feature interface, and swap out direct file access with a rest controller.  A Feature exists to provide a common abstract interface for platform functionality.
 *
 * @example
 *
 *  runtime.feature('vm').enable()
 *
 *  const { exports: exp } = runtime.createModule(`
 *    module.exports = {
 *      hello: 'World'
 *    }
 *  `)
 *
 *   console.log(exp.hello) // => 'World'
 *
 */

var VmFeature =
/*#__PURE__*/
function (_Feature) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_7___default()(VmFeature, _Feature);

  function VmFeature() {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3___default()(this, VmFeature);

    return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default()(VmFeature).apply(this, arguments));
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4___default()(VmFeature, [{
    key: "featureWasEnabled",

    /**
     * This makes sure the runtime has a vm property that will work in that environment.  The browser needs vm-browserify to work
     */
    value: function featureWasEnabled() {
      if (this.runtime.isNode) {
        this.runtime.hide('vm', __webpack_require__(362));
      } else {
        var vmBrowserify = __webpack_require__(364);

        this.runtime.hide('vm', vmBrowserify.createContext ? vmBrowserify : vmBrowserify["default"] || vmBrowserify);
      }
    }
  }], [{
    key: "createCodeRunner",

    /**
     * When the vm is enabled, these methods get mixed into the runtime itself
     */

    /**
     * Creates a function which will asynchronously run a string of code in a given
     * vm context.  By default, that is the sandbox
     *
     * @static
     * @param {*} code
     * @param {Object} [options={}]
     * @param {Object} sandbox
     * @returns {Function}
     * @memberof Runtime
     */
    value: function createCodeRunner(code) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var sandbox = arguments.length > 2 ? arguments[2] : undefined;
      var vm = this.vm;
      var _options$thisContext = options.thisContext,
          thisContext = _options$thisContext === void 0 ? false : _options$thisContext;
      var hashObject = this.propUtils.hashObject;
      sandbox = sandbox || this.sandbox;
      var vmContext = (vm.isContext ? vm.isContext(sandbox) : false) ? sandbox : !thisContext && vm.createContext(sandbox);
      return (
        /*#__PURE__*/
        _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default()(
        /*#__PURE__*/
        _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {
          var argv,
              throwErrors,
              script,
              result,
              _args = arguments;
          return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  argv = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};
                  throwErrors = options.throwErrors || argv.throwErrors;
                  script = typeof code === 'function' ? vm.createScript(code.call(this, _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_1___default()({
                    displayErrors: true
                  }, options, argv), sandbox), options) : vm.createScript(code, _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_1___default()({
                    displayErrors: true
                  }, options, argv));
                  _context.prev = 3;
                  result = vmContext ? script.runInContext(vmContext) : thisContext ? script.runInThisContext() : script.runInNewContext(sandbox);
                  return _context.abrupt("return", {
                    result: result,
                    code: code,
                    usedContext: vmContext ? 'vmContext' : thisContext ? 'thisContext' : 'sandboxedContext',
                    hash: hashObject({
                      code: code
                    })
                  });

                case 8:
                  _context.prev = 8;
                  _context.t0 = _context["catch"](3);

                  if (!throwErrors) {
                    _context.next = 12;
                    break;
                  }

                  throw _context.t0;

                case 12:
                  return _context.abrupt("return", {
                    error: {
                      message: _context.t0.message,
                      stack: _context.t0.stack
                    },
                    code: code
                  });

                case 13:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee, this, [[3, 8]]);
        }))
      );
    }
    /**
     * Creates a function which will asynchronously evaluate a string of code in the provided context, (i.e. with the object you pass treated as what is in scope in the code)
     */

    /**
     * Creates a module from a string of code.  The string of code will be evaluated with the standard module, module.exports, require, __dirname, __filename being defined,
     * as well as any other global context you provide.  The returned object will have module.exports on it and can be used as normal.
     */

  }]);

  return VmFeature;
}(_feature__WEBPACK_IMPORTED_MODULE_9__[/* Feature */ "a"]);

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8___default()(VmFeature, "shortcut", 'vm');

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8___default()(VmFeature, "hostMethods", ['createCodeRunner', 'createModule', 'createScript', 'createContext']);

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8___default()(VmFeature, "createModule", createModule);

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8___default()(VmFeature, "createScript", createScript);

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8___default()(VmFeature, "createContext", createContext);


function createModule(code) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var sandbox = arguments.length > 2 ? arguments[2] : undefined;
  sandbox = sandbox || this.sandbox;
  var wrapped = "(function (exports, require, module, __filename, __dirname) {\n\n".concat(code, "\n\n});");
  var script = this.createScript(wrapped);
  var context = this.vm.isContext(sandbox) ? sandbox : this.createContext(sandbox);
  var hash = this.hashObject({
    code: code
  });
  var filename = options.filename || (this.resolve ? this.resolve("".concat(hash, ".js")) : "".concat(hash, ".js"));
  var id = options.id || filename;
  var dirname = options.dirname || this.cwd || '/';
  var req = options.require || this.get('currentModule.require');
  var parent = options.parent || this.get('currentModule');
  var newModule = {
    id: id,
    children: [],
    parent: parent,
    require: req,
    exports: {},
    loaded: false
  };
  newModule.require = req;

  var moduleLoader = function moduleLoader() {
    return script.runInContext(context)(newModule.exports, newModule.require, newModule, filename, dirname);
  };

  if (options.lazy) {
    return function () {
      var mod = moduleLoader();
      mod.loaded = true;
      mod.parent = parent;
      return mod;
    };
  } else {
    moduleLoader();
    newModule.loaded = true;
    newModule.parent = parent;
    return newModule;
  }
}
function createContext() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return this.vm.createContext(_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_1___default()({}, this.sandbox, options));
}
function createScript() {
  var code = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return new this.vm.Script(code.toString(), options);
}

/***/ }),
/* 167 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export WeakCache */
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(14);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _utils_properties__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(4);




var privates = new WeakMap();

var createMap = function createMap() {
  var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  if (Object(lodash__WEBPACK_IMPORTED_MODULE_2__["isObject"])(obj)) obj = Object(lodash__WEBPACK_IMPORTED_MODULE_2__["toPairs"])(obj);
  return new Map(obj);
};

var WeakCache =
/*#__PURE__*/
function () {
  function WeakCache() {
    var _this = this;

    var init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, WeakCache);

    this.hide = function () {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _utils_properties__WEBPACK_IMPORTED_MODULE_3__["hide"].apply(void 0, [_this].concat(args));
    };

    this.hideGetter = function () {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      return _utils_properties__WEBPACK_IMPORTED_MODULE_3__["hideGetter"].apply(void 0, [_this].concat(args));
    };

    var anchor = this;

    this.clear = function (init) {
      privates["delete"](anchor);
      privates.set(anchor, createMap(init));
      return _this;
    };

    this.hideGetter('_wm', function () {
      if (privates.has(anchor)) {
        return privates.get(anchor);
      }

      return privates.set(anchor, createMap(init)).get(anchor);
    });
    this.clear(init);

    this.write = function (k, v) {
      return _this.set(k, v).get(k);
    };
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(WeakCache, [{
    key: "fetch",
    value: function fetch(k, defaultValue) {
      if (this.has(k)) {
        return this.get(k);
      } else {
        this.set(k, typeof defaultValue === 'function' ? defaultValue(k) : defaultValue);
        return this.get(k);
      }
    }
  }, {
    key: "delete",
    value: function _delete(k) {
      return this._wm["delete"](k);
    }
  }, {
    key: "get",
    value: function get(k) {
      return this._wm.get(k);
    }
  }, {
    key: "has",
    value: function has(k) {
      return this._wm.has(k);
    }
  }, {
    key: "set",
    value: function set(k, v) {
      this._wm.set(k, v);

      return this;
    }
  }]);

  return WeakCache;
}();
/* harmony default export */ __webpack_exports__["a"] = (WeakCache);

/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

!function (t, e) {
   true ? module.exports = e() : undefined;
}(window, function () {
  return function (t) {
    var e = {};

    function n(r) {
      if (e[r]) return e[r].exports;
      var i = e[r] = {
        i: r,
        l: !1,
        exports: {}
      };
      return t[r].call(i.exports, i, i.exports, n), i.l = !0, i.exports;
    }

    return n.m = t, n.c = e, n.d = function (t, e, r) {
      n.o(t, e) || Object.defineProperty(t, e, {
        enumerable: !0,
        get: r
      });
    }, n.r = function (t) {
      "undefined" !== typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
        value: "Module"
      }), Object.defineProperty(t, "__esModule", {
        value: !0
      });
    }, n.t = function (t, e) {
      if (1 & e && (t = n(t)), 8 & e) return t;
      if (4 & e && "object" === typeof t && t && t.__esModule) return t;
      var r = Object.create(null);
      if (n.r(r), Object.defineProperty(r, "default", {
        enumerable: !0,
        value: t
      }), 2 & e && "string" != typeof t) for (var i in t) {
        n.d(r, i, function (e) {
          return t[e];
        }.bind(null, i));
      }
      return r;
    }, n.n = function (t) {
      var e = t && t.__esModule ? function () {
        return t.default;
      } : function () {
        return t;
      };
      return n.d(e, "a", e), e;
    }, n.o = function (t, e) {
      return Object.prototype.hasOwnProperty.call(t, e);
    }, n.p = "/", n(n.s = 19);
  }([function (t, e, n) {
    "use strict";

    var r = n(6),
        i = n(25),
        o = Object.prototype.toString;

    function u(t) {
      return "[object Array]" === o.call(t);
    }

    function a(t) {
      return null !== t && "object" === typeof t;
    }

    function c(t) {
      return "[object Function]" === o.call(t);
    }

    function s(t, e) {
      if (null !== t && "undefined" !== typeof t) if ("object" !== typeof t && (t = [t]), u(t)) for (var n = 0, r = t.length; n < r; n++) {
        e.call(null, t[n], n, t);
      } else for (var i in t) {
        Object.prototype.hasOwnProperty.call(t, i) && e.call(null, t[i], i, t);
      }
    }

    t.exports = {
      isArray: u,
      isArrayBuffer: function isArrayBuffer(t) {
        return "[object ArrayBuffer]" === o.call(t);
      },
      isBuffer: i,
      isFormData: function isFormData(t) {
        return "undefined" !== typeof FormData && t instanceof FormData;
      },
      isArrayBufferView: function isArrayBufferView(t) {
        return "undefined" !== typeof ArrayBuffer && ArrayBuffer.isView ? ArrayBuffer.isView(t) : t && t.buffer && t.buffer instanceof ArrayBuffer;
      },
      isString: function isString(t) {
        return "string" === typeof t;
      },
      isNumber: function isNumber(t) {
        return "number" === typeof t;
      },
      isObject: a,
      isUndefined: function isUndefined(t) {
        return "undefined" === typeof t;
      },
      isDate: function isDate(t) {
        return "[object Date]" === o.call(t);
      },
      isFile: function isFile(t) {
        return "[object File]" === o.call(t);
      },
      isBlob: function isBlob(t) {
        return "[object Blob]" === o.call(t);
      },
      isFunction: c,
      isStream: function isStream(t) {
        return a(t) && c(t.pipe);
      },
      isURLSearchParams: function isURLSearchParams(t) {
        return "undefined" !== typeof URLSearchParams && t instanceof URLSearchParams;
      },
      isStandardBrowserEnv: function isStandardBrowserEnv() {
        return ("undefined" === typeof navigator || "ReactNative" !== navigator.product && "NativeScript" !== navigator.product && "NS" !== navigator.product) && "undefined" !== typeof window && "undefined" !== typeof document;
      },
      forEach: s,
      merge: function t() {
        var e = {};

        function n(n, r) {
          "object" === typeof e[r] && "object" === typeof n ? e[r] = t(e[r], n) : e[r] = n;
        }

        for (var r = 0, i = arguments.length; r < i; r++) {
          s(arguments[r], n);
        }

        return e;
      },
      deepMerge: function t() {
        var e = {};

        function n(n, r) {
          "object" === typeof e[r] && "object" === typeof n ? e[r] = t(e[r], n) : e[r] = "object" === typeof n ? t({}, n) : n;
        }

        for (var r = 0, i = arguments.length; r < i; r++) {
          s(arguments[r], n);
        }

        return e;
      },
      extend: function extend(t, e, n) {
        return s(e, function (e, i) {
          t[i] = n && "function" === typeof e ? r(e, n) : e;
        }), t;
      },
      trim: function trim(t) {
        return t.replace(/^\s*/, "").replace(/\s*$/, "");
      }
    };
  }, function (t, e) {
    t.exports = function (t, e, n) {
      return e in t ? Object.defineProperty(t, e, {
        value: n,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : t[e] = n, t;
    };
  }, function (t, e, n) {
    t.exports = n(24);
  }, function (t, e, n) {
    var r = n(1);

    t.exports = function (t) {
      for (var e = 1; e < arguments.length; e++) {
        var n = null != arguments[e] ? arguments[e] : {},
            i = Object.keys(n);
        "function" === typeof Object.getOwnPropertySymbols && (i = i.concat(Object.getOwnPropertySymbols(n).filter(function (t) {
          return Object.getOwnPropertyDescriptor(n, t).enumerable;
        }))), i.forEach(function (e) {
          r(t, e, n[e]);
        });
      }

      return t;
    };
  }, function (t, e) {
    function n(t) {
      return (n = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function (t) {
        return typeof t;
      } : function (t) {
        return t && "function" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
      })(t);
    }

    function r(e) {
      return "function" === typeof Symbol && "symbol" === n(Symbol.iterator) ? t.exports = r = function r(t) {
        return n(t);
      } : t.exports = r = function r(t) {
        return t && "function" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : n(t);
      }, r(e);
    }

    t.exports = r;
  }, function (module, exports, __webpack_require__) {
    var e;
    window, e = function e() {
      return function (t) {
        var e = {};

        function n(r) {
          if (e[r]) return e[r].exports;
          var i = e[r] = {
            i: r,
            l: !1,
            exports: {}
          };
          return t[r].call(i.exports, i, i.exports, n), i.l = !0, i.exports;
        }

        return n.m = t, n.c = e, n.d = function (t, e, r) {
          n.o(t, e) || Object.defineProperty(t, e, {
            enumerable: !0,
            get: r
          });
        }, n.r = function (t) {
          "undefined" !== typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
            value: "Module"
          }), Object.defineProperty(t, "__esModule", {
            value: !0
          });
        }, n.t = function (t, e) {
          if (1 & e && (t = n(t)), 8 & e) return t;
          if (4 & e && "object" === typeof t && t && t.__esModule) return t;
          var r = Object.create(null);
          if (n.r(r), Object.defineProperty(r, "default", {
            enumerable: !0,
            value: t
          }), 2 & e && "string" != typeof t) for (var i in t) {
            n.d(r, i, function (e) {
              return t[e];
            }.bind(null, i));
          }
          return r;
        }, n.n = function (t) {
          var e = t && t.__esModule ? function () {
            return t.default;
          } : function () {
            return t;
          };
          return n.d(e, "a", e), e;
        }, n.o = function (t, e) {
          return Object.prototype.hasOwnProperty.call(t, e);
        }, n.p = "/", n(n.s = 156);
      }([function (t, e, n) {
        (function (t, r) {
          var i;
          (function () {
            var o,
                u = 200,
                a = "Expected a function",
                c = "__lodash_hash_undefined__",
                s = "__lodash_placeholder__",
                f = 1,
                l = 2,
                h = 4,
                p = 1,
                v = 2,
                d = 1,
                y = 2,
                g = 4,
                m = 8,
                b = 16,
                x = 32,
                w = 64,
                _ = 128,
                k = 256,
                S = 512,
                O = 800,
                E = 16,
                j = 1 / 0,
                A = 9007199254740991,
                R = 1.7976931348623157e308,
                I = NaN,
                C = 4294967295,
                P = C - 1,
                T = C >>> 1,
                M = [["ary", _], ["bind", d], ["bindKey", y], ["curry", m], ["curryRight", b], ["flip", S], ["partial", x], ["partialRight", w], ["rearg", k]],
                L = "[object Arguments]",
                N = "[object Array]",
                F = "[object AsyncFunction]",
                D = "[object Boolean]",
                U = "[object Date]",
                z = "[object DOMException]",
                $ = "[object Error]",
                B = "[object Function]",
                V = "[object GeneratorFunction]",
                G = "[object Map]",
                H = "[object Number]",
                W = "[object Null]",
                q = "[object Object]",
                K = "[object Proxy]",
                J = "[object RegExp]",
                Y = "[object Set]",
                Z = "[object String]",
                X = "[object Symbol]",
                Q = "[object Undefined]",
                tt = "[object WeakMap]",
                et = "[object ArrayBuffer]",
                nt = "[object DataView]",
                rt = "[object Float32Array]",
                it = "[object Float64Array]",
                ot = "[object Int8Array]",
                ut = "[object Int16Array]",
                at = "[object Int32Array]",
                ct = "[object Uint8Array]",
                st = "[object Uint8ClampedArray]",
                ft = "[object Uint16Array]",
                lt = "[object Uint32Array]",
                ht = /\b__p \+= '';/g,
                pt = /\b(__p \+=) '' \+/g,
                vt = /(__e\(.*?\)|\b__t\)) \+\n'';/g,
                dt = /&(?:amp|lt|gt|quot|#39);/g,
                yt = /[&<>"']/g,
                gt = RegExp(dt.source),
                mt = RegExp(yt.source),
                bt = /<%-([\s\S]+?)%>/g,
                xt = /<%([\s\S]+?)%>/g,
                wt = /<%=([\s\S]+?)%>/g,
                _t = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
                kt = /^\w*$/,
                St = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,
                Ot = /[\\^$.*+?()[\]{}|]/g,
                Et = RegExp(Ot.source),
                jt = /^\s+|\s+$/g,
                At = /^\s+/,
                Rt = /\s+$/,
                It = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
                Ct = /\{\n\/\* \[wrapped with (.+)\] \*/,
                Pt = /,? & /,
                Tt = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,
                Mt = /\\(\\)?/g,
                Lt = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,
                Nt = /\w*$/,
                Ft = /^[-+]0x[0-9a-f]+$/i,
                Dt = /^0b[01]+$/i,
                Ut = /^\[object .+?Constructor\]$/,
                zt = /^0o[0-7]+$/i,
                $t = /^(?:0|[1-9]\d*)$/,
                Bt = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,
                Vt = /($^)/,
                Gt = /['\n\r\u2028\u2029\\]/g,
                Ht = "\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff",
                Wt = "\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",
                qt = "[" + Wt + "]",
                Kt = "[" + Ht + "]",
                Jt = "\\d+",
                Yt = "[a-z\\xdf-\\xf6\\xf8-\\xff]",
                Zt = "[^\\ud800-\\udfff" + Wt + Jt + "\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde]",
                Xt = "\\ud83c[\\udffb-\\udfff]",
                Qt = "[^\\ud800-\\udfff]",
                te = "(?:\\ud83c[\\udde6-\\uddff]){2}",
                ee = "[\\ud800-\\udbff][\\udc00-\\udfff]",
                ne = "[A-Z\\xc0-\\xd6\\xd8-\\xde]",
                re = "(?:" + Yt + "|" + Zt + ")",
                ie = "(?:" + ne + "|" + Zt + ")",
                oe = "(?:" + Kt + "|" + Xt + ")?",
                ue = "[\\ufe0e\\ufe0f]?" + oe + "(?:\\u200d(?:" + [Qt, te, ee].join("|") + ")[\\ufe0e\\ufe0f]?" + oe + ")*",
                ae = "(?:" + ["[\\u2700-\\u27bf]", te, ee].join("|") + ")" + ue,
                ce = "(?:" + [Qt + Kt + "?", Kt, te, ee, "[\\ud800-\\udfff]"].join("|") + ")",
                se = RegExp("['\u2019]", "g"),
                fe = RegExp(Kt, "g"),
                le = RegExp(Xt + "(?=" + Xt + ")|" + ce + ue, "g"),
                he = RegExp([ne + "?" + Yt + "+(?:['\u2019](?:d|ll|m|re|s|t|ve))?(?=" + [qt, ne, "$"].join("|") + ")", ie + "+(?:['\u2019](?:D|LL|M|RE|S|T|VE))?(?=" + [qt, ne + re, "$"].join("|") + ")", ne + "?" + re + "+(?:['\u2019](?:d|ll|m|re|s|t|ve))?", ne + "+(?:['\u2019](?:D|LL|M|RE|S|T|VE))?", "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", Jt, ae].join("|"), "g"),
                pe = RegExp("[\\u200d\\ud800-\\udfff" + Ht + "\\ufe0e\\ufe0f]"),
                ve = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,
                de = ["Array", "Buffer", "DataView", "Date", "Error", "Float32Array", "Float64Array", "Function", "Int8Array", "Int16Array", "Int32Array", "Map", "Math", "Object", "Promise", "RegExp", "Set", "String", "Symbol", "TypeError", "Uint8Array", "Uint8ClampedArray", "Uint16Array", "Uint32Array", "WeakMap", "_", "clearTimeout", "isFinite", "parseInt", "setTimeout"],
                ye = -1,
                ge = {};
            ge[rt] = ge[it] = ge[ot] = ge[ut] = ge[at] = ge[ct] = ge[st] = ge[ft] = ge[lt] = !0, ge[L] = ge[N] = ge[et] = ge[D] = ge[nt] = ge[U] = ge[$] = ge[B] = ge[G] = ge[H] = ge[q] = ge[J] = ge[Y] = ge[Z] = ge[tt] = !1;
            var me = {};
            me[L] = me[N] = me[et] = me[nt] = me[D] = me[U] = me[rt] = me[it] = me[ot] = me[ut] = me[at] = me[G] = me[H] = me[q] = me[J] = me[Y] = me[Z] = me[X] = me[ct] = me[st] = me[ft] = me[lt] = !0, me[$] = me[B] = me[tt] = !1;

            var be = {
              "\\": "\\",
              "'": "'",
              "\n": "n",
              "\r": "r",
              "\u2028": "u2028",
              "\u2029": "u2029"
            },
                xe = parseFloat,
                we = parseInt,
                _e = "object" == typeof t && t && t.Object === Object && t,
                ke = "object" == typeof self && self && self.Object === Object && self,
                Se = _e || ke || Function("return this")(),
                Oe = e && !e.nodeType && e,
                Ee = Oe && "object" == typeof r && r && !r.nodeType && r,
                je = Ee && Ee.exports === Oe,
                Ae = je && _e.process,
                Re = function () {
              try {
                return Ee && Ee.require && Ee.require("util").types || Ae && Ae.binding && Ae.binding("util");
              } catch (e) {}
            }(),
                Ie = Re && Re.isArrayBuffer,
                Ce = Re && Re.isDate,
                Pe = Re && Re.isMap,
                Te = Re && Re.isRegExp,
                Me = Re && Re.isSet,
                Le = Re && Re.isTypedArray;

            function Ne(t, e, n) {
              switch (n.length) {
                case 0:
                  return t.call(e);

                case 1:
                  return t.call(e, n[0]);

                case 2:
                  return t.call(e, n[0], n[1]);

                case 3:
                  return t.call(e, n[0], n[1], n[2]);
              }

              return t.apply(e, n);
            }

            function Fe(t, e, n, r) {
              for (var i = -1, o = null == t ? 0 : t.length; ++i < o;) {
                var u = t[i];
                e(r, u, n(u), t);
              }

              return r;
            }

            function De(t, e) {
              for (var n = -1, r = null == t ? 0 : t.length; ++n < r && !1 !== e(t[n], n, t);) {
                ;
              }

              return t;
            }

            function Ue(t, e) {
              for (var n = -1, r = null == t ? 0 : t.length; ++n < r;) {
                if (!e(t[n], n, t)) return !1;
              }

              return !0;
            }

            function ze(t, e) {
              for (var n = -1, r = null == t ? 0 : t.length, i = 0, o = []; ++n < r;) {
                var u = t[n];
                e(u, n, t) && (o[i++] = u);
              }

              return o;
            }

            function $e(t, e) {
              return !(null == t || !t.length) && Ze(t, e, 0) > -1;
            }

            function Be(t, e, n) {
              for (var r = -1, i = null == t ? 0 : t.length; ++r < i;) {
                if (n(e, t[r])) return !0;
              }

              return !1;
            }

            function Ve(t, e) {
              for (var n = -1, r = null == t ? 0 : t.length, i = Array(r); ++n < r;) {
                i[n] = e(t[n], n, t);
              }

              return i;
            }

            function Ge(t, e) {
              for (var n = -1, r = e.length, i = t.length; ++n < r;) {
                t[i + n] = e[n];
              }

              return t;
            }

            function He(t, e, n, r) {
              var i = -1,
                  o = null == t ? 0 : t.length;

              for (r && o && (n = t[++i]); ++i < o;) {
                n = e(n, t[i], i, t);
              }

              return n;
            }

            function We(t, e, n, r) {
              var i = null == t ? 0 : t.length;

              for (r && i && (n = t[--i]); i--;) {
                n = e(n, t[i], i, t);
              }

              return n;
            }

            function qe(t, e) {
              for (var n = -1, r = null == t ? 0 : t.length; ++n < r;) {
                if (e(t[n], n, t)) return !0;
              }

              return !1;
            }

            var Ke = en("length");

            function Je(t, e, n) {
              var r;
              return n(t, function (t, n, i) {
                if (e(t, n, i)) return r = n, !1;
              }), r;
            }

            function Ye(t, e, n, r) {
              for (var i = t.length, o = n + (r ? 1 : -1); r ? o-- : ++o < i;) {
                if (e(t[o], o, t)) return o;
              }

              return -1;
            }

            function Ze(t, e, n) {
              return e === e ? function (t, e, n) {
                for (var r = n - 1, i = t.length; ++r < i;) {
                  if (t[r] === e) return r;
                }

                return -1;
              }(t, e, n) : Ye(t, Qe, n);
            }

            function Xe(t, e, n, r) {
              for (var i = n - 1, o = t.length; ++i < o;) {
                if (r(t[i], e)) return i;
              }

              return -1;
            }

            function Qe(t) {
              return t !== t;
            }

            function tn(t, e) {
              var n = null == t ? 0 : t.length;
              return n ? on(t, e) / n : I;
            }

            function en(t) {
              return function (e) {
                return null == e ? o : e[t];
              };
            }

            function nn(t) {
              return function (e) {
                return null == t ? o : t[e];
              };
            }

            function rn(t, e, n, r, i) {
              return i(t, function (t, i, o) {
                n = r ? (r = !1, t) : e(n, t, i, o);
              }), n;
            }

            function on(t, e) {
              for (var n, r = -1, i = t.length; ++r < i;) {
                var u = e(t[r]);
                u !== o && (n = n === o ? u : n + u);
              }

              return n;
            }

            function un(t, e) {
              for (var n = -1, r = Array(t); ++n < t;) {
                r[n] = e(n);
              }

              return r;
            }

            function an(t) {
              return function (e) {
                return t(e);
              };
            }

            function cn(t, e) {
              return Ve(e, function (e) {
                return t[e];
              });
            }

            function sn(t, e) {
              return t.has(e);
            }

            function fn(t, e) {
              for (var n = -1, r = t.length; ++n < r && Ze(e, t[n], 0) > -1;) {
                ;
              }

              return n;
            }

            function ln(t, e) {
              for (var n = t.length; n-- && Ze(e, t[n], 0) > -1;) {
                ;
              }

              return n;
            }

            var hn = nn({
              "\xc0": "A",
              "\xc1": "A",
              "\xc2": "A",
              "\xc3": "A",
              "\xc4": "A",
              "\xc5": "A",
              "\xe0": "a",
              "\xe1": "a",
              "\xe2": "a",
              "\xe3": "a",
              "\xe4": "a",
              "\xe5": "a",
              "\xc7": "C",
              "\xe7": "c",
              "\xd0": "D",
              "\xf0": "d",
              "\xc8": "E",
              "\xc9": "E",
              "\xca": "E",
              "\xcb": "E",
              "\xe8": "e",
              "\xe9": "e",
              "\xea": "e",
              "\xeb": "e",
              "\xcc": "I",
              "\xcd": "I",
              "\xce": "I",
              "\xcf": "I",
              "\xec": "i",
              "\xed": "i",
              "\xee": "i",
              "\xef": "i",
              "\xd1": "N",
              "\xf1": "n",
              "\xd2": "O",
              "\xd3": "O",
              "\xd4": "O",
              "\xd5": "O",
              "\xd6": "O",
              "\xd8": "O",
              "\xf2": "o",
              "\xf3": "o",
              "\xf4": "o",
              "\xf5": "o",
              "\xf6": "o",
              "\xf8": "o",
              "\xd9": "U",
              "\xda": "U",
              "\xdb": "U",
              "\xdc": "U",
              "\xf9": "u",
              "\xfa": "u",
              "\xfb": "u",
              "\xfc": "u",
              "\xdd": "Y",
              "\xfd": "y",
              "\xff": "y",
              "\xc6": "Ae",
              "\xe6": "ae",
              "\xde": "Th",
              "\xfe": "th",
              "\xdf": "ss",
              "\u0100": "A",
              "\u0102": "A",
              "\u0104": "A",
              "\u0101": "a",
              "\u0103": "a",
              "\u0105": "a",
              "\u0106": "C",
              "\u0108": "C",
              "\u010A": "C",
              "\u010C": "C",
              "\u0107": "c",
              "\u0109": "c",
              "\u010B": "c",
              "\u010D": "c",
              "\u010E": "D",
              "\u0110": "D",
              "\u010F": "d",
              "\u0111": "d",
              "\u0112": "E",
              "\u0114": "E",
              "\u0116": "E",
              "\u0118": "E",
              "\u011A": "E",
              "\u0113": "e",
              "\u0115": "e",
              "\u0117": "e",
              "\u0119": "e",
              "\u011B": "e",
              "\u011C": "G",
              "\u011E": "G",
              "\u0120": "G",
              "\u0122": "G",
              "\u011D": "g",
              "\u011F": "g",
              "\u0121": "g",
              "\u0123": "g",
              "\u0124": "H",
              "\u0126": "H",
              "\u0125": "h",
              "\u0127": "h",
              "\u0128": "I",
              "\u012A": "I",
              "\u012C": "I",
              "\u012E": "I",
              "\u0130": "I",
              "\u0129": "i",
              "\u012B": "i",
              "\u012D": "i",
              "\u012F": "i",
              "\u0131": "i",
              "\u0134": "J",
              "\u0135": "j",
              "\u0136": "K",
              "\u0137": "k",
              "\u0138": "k",
              "\u0139": "L",
              "\u013B": "L",
              "\u013D": "L",
              "\u013F": "L",
              "\u0141": "L",
              "\u013A": "l",
              "\u013C": "l",
              "\u013E": "l",
              "\u0140": "l",
              "\u0142": "l",
              "\u0143": "N",
              "\u0145": "N",
              "\u0147": "N",
              "\u014A": "N",
              "\u0144": "n",
              "\u0146": "n",
              "\u0148": "n",
              "\u014B": "n",
              "\u014C": "O",
              "\u014E": "O",
              "\u0150": "O",
              "\u014D": "o",
              "\u014F": "o",
              "\u0151": "o",
              "\u0154": "R",
              "\u0156": "R",
              "\u0158": "R",
              "\u0155": "r",
              "\u0157": "r",
              "\u0159": "r",
              "\u015A": "S",
              "\u015C": "S",
              "\u015E": "S",
              "\u0160": "S",
              "\u015B": "s",
              "\u015D": "s",
              "\u015F": "s",
              "\u0161": "s",
              "\u0162": "T",
              "\u0164": "T",
              "\u0166": "T",
              "\u0163": "t",
              "\u0165": "t",
              "\u0167": "t",
              "\u0168": "U",
              "\u016A": "U",
              "\u016C": "U",
              "\u016E": "U",
              "\u0170": "U",
              "\u0172": "U",
              "\u0169": "u",
              "\u016B": "u",
              "\u016D": "u",
              "\u016F": "u",
              "\u0171": "u",
              "\u0173": "u",
              "\u0174": "W",
              "\u0175": "w",
              "\u0176": "Y",
              "\u0177": "y",
              "\u0178": "Y",
              "\u0179": "Z",
              "\u017B": "Z",
              "\u017D": "Z",
              "\u017A": "z",
              "\u017C": "z",
              "\u017E": "z",
              "\u0132": "IJ",
              "\u0133": "ij",
              "\u0152": "Oe",
              "\u0153": "oe",
              "\u0149": "'n",
              "\u017F": "s"
            }),
                pn = nn({
              "&": "&amp;",
              "<": "&lt;",
              ">": "&gt;",
              '"': "&quot;",
              "'": "&#39;"
            });

            function vn(t) {
              return "\\" + be[t];
            }

            function dn(t) {
              return pe.test(t);
            }

            function yn(t) {
              var e = -1,
                  n = Array(t.size);
              return t.forEach(function (t, r) {
                n[++e] = [r, t];
              }), n;
            }

            function gn(t, e) {
              return function (n) {
                return t(e(n));
              };
            }

            function mn(t, e) {
              for (var n = -1, r = t.length, i = 0, o = []; ++n < r;) {
                var u = t[n];
                u !== e && u !== s || (t[n] = s, o[i++] = n);
              }

              return o;
            }

            function bn(t) {
              var e = -1,
                  n = Array(t.size);
              return t.forEach(function (t) {
                n[++e] = t;
              }), n;
            }

            function xn(t) {
              return dn(t) ? function (t) {
                for (var e = le.lastIndex = 0; le.test(t);) {
                  ++e;
                }

                return e;
              }(t) : Ke(t);
            }

            function wn(t) {
              return dn(t) ? function (t) {
                return t.match(le) || [];
              }(t) : function (t) {
                return t.split("");
              }(t);
            }

            var _n = nn({
              "&amp;": "&",
              "&lt;": "<",
              "&gt;": ">",
              "&quot;": '"',
              "&#39;": "'"
            }),
                kn = function t(e) {
              var n = (e = null == e ? Se : kn.defaults(Se.Object(), e, kn.pick(Se, de))).Array,
                  r = e.Date,
                  i = e.Error,
                  Ht = e.Function,
                  Wt = e.Math,
                  qt = e.Object,
                  Kt = e.RegExp,
                  Jt = e.String,
                  Yt = e.TypeError,
                  Zt = n.prototype,
                  Xt = Ht.prototype,
                  Qt = qt.prototype,
                  te = e["__core-js_shared__"],
                  ee = Xt.toString,
                  ne = Qt.hasOwnProperty,
                  re = 0,
                  ie = function () {
                var t = /[^.]+$/.exec(te && te.keys && te.keys.IE_PROTO || "");
                return t ? "Symbol(src)_1." + t : "";
              }(),
                  oe = Qt.toString,
                  ue = ee.call(qt),
                  ae = Se._,
                  ce = Kt("^" + ee.call(ne).replace(Ot, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"),
                  le = je ? e.Buffer : o,
                  pe = e.Symbol,
                  be = e.Uint8Array,
                  _e = le ? le.allocUnsafe : o,
                  ke = gn(qt.getPrototypeOf, qt),
                  Oe = qt.create,
                  Ee = Qt.propertyIsEnumerable,
                  Ae = Zt.splice,
                  Re = pe ? pe.isConcatSpreadable : o,
                  Ke = pe ? pe.iterator : o,
                  nn = pe ? pe.toStringTag : o,
                  Sn = function () {
                try {
                  var t = ko(qt, "defineProperty");
                  return t({}, "", {}), t;
                } catch (e) {}
              }(),
                  On = e.clearTimeout !== Se.clearTimeout && e.clearTimeout,
                  En = r && r.now !== Se.Date.now && r.now,
                  jn = e.setTimeout !== Se.setTimeout && e.setTimeout,
                  An = Wt.ceil,
                  Rn = Wt.floor,
                  In = qt.getOwnPropertySymbols,
                  Cn = le ? le.isBuffer : o,
                  Pn = e.isFinite,
                  Tn = Zt.join,
                  Mn = gn(qt.keys, qt),
                  Ln = Wt.max,
                  Nn = Wt.min,
                  Fn = r.now,
                  Dn = e.parseInt,
                  Un = Wt.random,
                  zn = Zt.reverse,
                  $n = ko(e, "DataView"),
                  Bn = ko(e, "Map"),
                  Vn = ko(e, "Promise"),
                  Gn = ko(e, "Set"),
                  Hn = ko(e, "WeakMap"),
                  Wn = ko(qt, "create"),
                  qn = Hn && new Hn(),
                  Kn = {},
                  Jn = Jo($n),
                  Yn = Jo(Bn),
                  Zn = Jo(Vn),
                  Xn = Jo(Gn),
                  Qn = Jo(Hn),
                  tr = pe ? pe.prototype : o,
                  er = tr ? tr.valueOf : o,
                  nr = tr ? tr.toString : o;

              function rr(t) {
                if (ha(t) && !ea(t) && !(t instanceof ar)) {
                  if (t instanceof ur) return t;
                  if (ne.call(t, "__wrapped__")) return Yo(t);
                }

                return new ur(t);
              }

              var ir = function () {
                function t() {}

                return function (e) {
                  if (!la(e)) return {};
                  if (Oe) return Oe(e);
                  t.prototype = e;
                  var n = new t();
                  return t.prototype = o, n;
                };
              }();

              function or() {}

              function ur(t, e) {
                this.__wrapped__ = t, this.__actions__ = [], this.__chain__ = !!e, this.__index__ = 0, this.__values__ = o;
              }

              function ar(t) {
                this.__wrapped__ = t, this.__actions__ = [], this.__dir__ = 1, this.__filtered__ = !1, this.__iteratees__ = [], this.__takeCount__ = C, this.__views__ = [];
              }

              function cr(t) {
                var e = -1,
                    n = null == t ? 0 : t.length;

                for (this.clear(); ++e < n;) {
                  var r = t[e];
                  this.set(r[0], r[1]);
                }
              }

              function sr(t) {
                var e = -1,
                    n = null == t ? 0 : t.length;

                for (this.clear(); ++e < n;) {
                  var r = t[e];
                  this.set(r[0], r[1]);
                }
              }

              function fr(t) {
                var e = -1,
                    n = null == t ? 0 : t.length;

                for (this.clear(); ++e < n;) {
                  var r = t[e];
                  this.set(r[0], r[1]);
                }
              }

              function lr(t) {
                var e = -1,
                    n = null == t ? 0 : t.length;

                for (this.__data__ = new fr(); ++e < n;) {
                  this.add(t[e]);
                }
              }

              function hr(t) {
                var e = this.__data__ = new sr(t);
                this.size = e.size;
              }

              function pr(t, e) {
                var n = ea(t),
                    r = !n && ta(t),
                    i = !n && !r && oa(t),
                    o = !n && !r && !i && xa(t),
                    u = n || r || i || o,
                    a = u ? un(t.length, Jt) : [],
                    c = a.length;

                for (var s in t) {
                  !e && !ne.call(t, s) || u && ("length" == s || i && ("offset" == s || "parent" == s) || o && ("buffer" == s || "byteLength" == s || "byteOffset" == s) || Io(s, c)) || a.push(s);
                }

                return a;
              }

              function vr(t) {
                var e = t.length;
                return e ? t[ci(0, e - 1)] : o;
              }

              function dr(t, e, n) {
                (n === o || Zu(t[e], n)) && (n !== o || e in t) || xr(t, e, n);
              }

              function yr(t, e, n) {
                var r = t[e];
                ne.call(t, e) && Zu(r, n) && (n !== o || e in t) || xr(t, e, n);
              }

              function gr(t, e) {
                for (var n = t.length; n--;) {
                  if (Zu(t[n][0], e)) return n;
                }

                return -1;
              }

              function mr(t, e, n, r) {
                return jr(t, function (t, i, o) {
                  e(r, t, n(t), o);
                }), r;
              }

              function br(t, e) {
                return t && $i(e, Ba(e), t);
              }

              function xr(t, e, n) {
                "__proto__" == e && Sn ? Sn(t, e, {
                  configurable: !0,
                  enumerable: !0,
                  value: n,
                  writable: !0
                }) : t[e] = n;
              }

              function wr(t, e) {
                for (var r = -1, i = e.length, u = n(i), a = null == t; ++r < i;) {
                  u[r] = a ? o : Fa(t, e[r]);
                }

                return u;
              }

              function _r(t, e, n) {
                return t === t && (n !== o && (t = t <= n ? t : n), e !== o && (t = t >= e ? t : e)), t;
              }

              function kr(t, e, n, r, i, u) {
                var a,
                    c = e & f,
                    s = e & l,
                    p = e & h;
                if (n && (a = i ? n(t, r, i, u) : n(t)), a !== o) return a;
                if (!la(t)) return t;
                var v = ea(t);

                if (v) {
                  if (a = function (t) {
                    var e = t.length,
                        n = new t.constructor(e);
                    return e && "string" == typeof t[0] && ne.call(t, "index") && (n.index = t.index, n.input = t.input), n;
                  }(t), !c) return zi(t, a);
                } else {
                  var d = Eo(t),
                      y = d == B || d == V;
                  if (oa(t)) return Mi(t, c);

                  if (d == q || d == L || y && !i) {
                    if (a = s || y ? {} : Ao(t), !c) return s ? function (t, e) {
                      return $i(t, Oo(t), e);
                    }(t, function (t, e) {
                      return t && $i(e, Va(e), t);
                    }(a, t)) : function (t, e) {
                      return $i(t, So(t), e);
                    }(t, br(a, t));
                  } else {
                    if (!me[d]) return i ? t : {};

                    a = function (t, e, n) {
                      var r,
                          i = t.constructor;

                      switch (e) {
                        case et:
                          return Li(t);

                        case D:
                        case U:
                          return new i(+t);

                        case nt:
                          return function (t, e) {
                            var n = e ? Li(t.buffer) : t.buffer;
                            return new t.constructor(n, t.byteOffset, t.byteLength);
                          }(t, n);

                        case rt:
                        case it:
                        case ot:
                        case ut:
                        case at:
                        case ct:
                        case st:
                        case ft:
                        case lt:
                          return Ni(t, n);

                        case G:
                          return new i();

                        case H:
                        case Z:
                          return new i(t);

                        case J:
                          return function (t) {
                            var e = new t.constructor(t.source, Nt.exec(t));
                            return e.lastIndex = t.lastIndex, e;
                          }(t);

                        case Y:
                          return new i();

                        case X:
                          return r = t, er ? qt(er.call(r)) : {};
                      }
                    }(t, d, c);
                  }
                }

                u || (u = new hr());
                var g = u.get(t);
                if (g) return g;
                if (u.set(t, a), ga(t)) return t.forEach(function (r) {
                  a.add(kr(r, e, n, r, t, u));
                }), a;
                if (pa(t)) return t.forEach(function (r, i) {
                  a.set(i, kr(r, e, n, i, t, u));
                }), a;
                var m = v ? o : (p ? s ? yo : vo : s ? Va : Ba)(t);
                return De(m || t, function (r, i) {
                  m && (r = t[i = r]), yr(a, i, kr(r, e, n, i, t, u));
                }), a;
              }

              function Sr(t, e, n) {
                var r = n.length;
                if (null == t) return !r;

                for (t = qt(t); r--;) {
                  var i = n[r],
                      u = e[i],
                      a = t[i];
                  if (a === o && !(i in t) || !u(a)) return !1;
                }

                return !0;
              }

              function Or(t, e, n) {
                if ("function" != typeof t) throw new Yt(a);
                return Bo(function () {
                  t.apply(o, n);
                }, e);
              }

              function Er(t, e, n, r) {
                var i = -1,
                    o = $e,
                    a = !0,
                    c = t.length,
                    s = [],
                    f = e.length;
                if (!c) return s;
                n && (e = Ve(e, an(n))), r ? (o = Be, a = !1) : e.length >= u && (o = sn, a = !1, e = new lr(e));

                t: for (; ++i < c;) {
                  var l = t[i],
                      h = null == n ? l : n(l);

                  if (l = r || 0 !== l ? l : 0, a && h === h) {
                    for (var p = f; p--;) {
                      if (e[p] === h) continue t;
                    }

                    s.push(l);
                  } else o(e, h, r) || s.push(l);
                }

                return s;
              }

              rr.templateSettings = {
                escape: bt,
                evaluate: xt,
                interpolate: wt,
                variable: "",
                imports: {
                  _: rr
                }
              }, rr.prototype = or.prototype, rr.prototype.constructor = rr, ur.prototype = ir(or.prototype), ur.prototype.constructor = ur, ar.prototype = ir(or.prototype), ar.prototype.constructor = ar, cr.prototype.clear = function () {
                this.__data__ = Wn ? Wn(null) : {}, this.size = 0;
              }, cr.prototype.delete = function (t) {
                var e = this.has(t) && delete this.__data__[t];
                return this.size -= e ? 1 : 0, e;
              }, cr.prototype.get = function (t) {
                var e = this.__data__;

                if (Wn) {
                  var n = e[t];
                  return n === c ? o : n;
                }

                return ne.call(e, t) ? e[t] : o;
              }, cr.prototype.has = function (t) {
                var e = this.__data__;
                return Wn ? e[t] !== o : ne.call(e, t);
              }, cr.prototype.set = function (t, e) {
                var n = this.__data__;
                return this.size += this.has(t) ? 0 : 1, n[t] = Wn && e === o ? c : e, this;
              }, sr.prototype.clear = function () {
                this.__data__ = [], this.size = 0;
              }, sr.prototype.delete = function (t) {
                var e = this.__data__,
                    n = gr(e, t);
                return !(n < 0) && (n == e.length - 1 ? e.pop() : Ae.call(e, n, 1), --this.size, !0);
              }, sr.prototype.get = function (t) {
                var e = this.__data__,
                    n = gr(e, t);
                return n < 0 ? o : e[n][1];
              }, sr.prototype.has = function (t) {
                return gr(this.__data__, t) > -1;
              }, sr.prototype.set = function (t, e) {
                var n = this.__data__,
                    r = gr(n, t);
                return r < 0 ? (++this.size, n.push([t, e])) : n[r][1] = e, this;
              }, fr.prototype.clear = function () {
                this.size = 0, this.__data__ = {
                  hash: new cr(),
                  map: new (Bn || sr)(),
                  string: new cr()
                };
              }, fr.prototype.delete = function (t) {
                var e = wo(this, t).delete(t);
                return this.size -= e ? 1 : 0, e;
              }, fr.prototype.get = function (t) {
                return wo(this, t).get(t);
              }, fr.prototype.has = function (t) {
                return wo(this, t).has(t);
              }, fr.prototype.set = function (t, e) {
                var n = wo(this, t),
                    r = n.size;
                return n.set(t, e), this.size += n.size == r ? 0 : 1, this;
              }, lr.prototype.add = lr.prototype.push = function (t) {
                return this.__data__.set(t, c), this;
              }, lr.prototype.has = function (t) {
                return this.__data__.has(t);
              }, hr.prototype.clear = function () {
                this.__data__ = new sr(), this.size = 0;
              }, hr.prototype.delete = function (t) {
                var e = this.__data__,
                    n = e.delete(t);
                return this.size = e.size, n;
              }, hr.prototype.get = function (t) {
                return this.__data__.get(t);
              }, hr.prototype.has = function (t) {
                return this.__data__.has(t);
              }, hr.prototype.set = function (t, e) {
                var n = this.__data__;

                if (n instanceof sr) {
                  var r = n.__data__;
                  if (!Bn || r.length < u - 1) return r.push([t, e]), this.size = ++n.size, this;
                  n = this.__data__ = new fr(r);
                }

                return n.set(t, e), this.size = n.size, this;
              };
              var jr = Gi(Lr),
                  Ar = Gi(Nr, !0);

              function Rr(t, e) {
                var n = !0;
                return jr(t, function (t, r, i) {
                  return n = !!e(t, r, i);
                }), n;
              }

              function Ir(t, e, n) {
                for (var r = -1, i = t.length; ++r < i;) {
                  var u = t[r],
                      a = e(u);
                  if (null != a && (c === o ? a === a && !ba(a) : n(a, c))) var c = a,
                      s = u;
                }

                return s;
              }

              function Cr(t, e) {
                var n = [];
                return jr(t, function (t, r, i) {
                  e(t, r, i) && n.push(t);
                }), n;
              }

              function Pr(t, e, n, r, i) {
                var o = -1,
                    u = t.length;

                for (n || (n = Ro), i || (i = []); ++o < u;) {
                  var a = t[o];
                  e > 0 && n(a) ? e > 1 ? Pr(a, e - 1, n, r, i) : Ge(i, a) : r || (i[i.length] = a);
                }

                return i;
              }

              var Tr = Hi(),
                  Mr = Hi(!0);

              function Lr(t, e) {
                return t && Tr(t, e, Ba);
              }

              function Nr(t, e) {
                return t && Mr(t, e, Ba);
              }

              function Fr(t, e) {
                return ze(e, function (e) {
                  return ca(t[e]);
                });
              }

              function Dr(t, e) {
                for (var n = 0, r = (e = Ii(e, t)).length; null != t && n < r;) {
                  t = t[Ko(e[n++])];
                }

                return n && n == r ? t : o;
              }

              function Ur(t, e, n) {
                var r = e(t);
                return ea(t) ? r : Ge(r, n(t));
              }

              function zr(t) {
                return null == t ? t === o ? Q : W : nn && nn in qt(t) ? function (t) {
                  var e = ne.call(t, nn),
                      n = t[nn];

                  try {
                    t[nn] = o;
                    var r = !0;
                  } catch (u) {}

                  var i = oe.call(t);
                  return r && (e ? t[nn] = n : delete t[nn]), i;
                }(t) : function (t) {
                  return oe.call(t);
                }(t);
              }

              function $r(t, e) {
                return t > e;
              }

              function Br(t, e) {
                return null != t && ne.call(t, e);
              }

              function Vr(t, e) {
                return null != t && e in qt(t);
              }

              function Gr(t, e, r) {
                for (var i = r ? Be : $e, u = t[0].length, a = t.length, c = a, s = n(a), f = 1 / 0, l = []; c--;) {
                  var h = t[c];
                  c && e && (h = Ve(h, an(e))), f = Nn(h.length, f), s[c] = !r && (e || u >= 120 && h.length >= 120) ? new lr(c && h) : o;
                }

                h = t[0];
                var p = -1,
                    v = s[0];

                t: for (; ++p < u && l.length < f;) {
                  var d = h[p],
                      y = e ? e(d) : d;

                  if (d = r || 0 !== d ? d : 0, !(v ? sn(v, y) : i(l, y, r))) {
                    for (c = a; --c;) {
                      var g = s[c];
                      if (!(g ? sn(g, y) : i(t[c], y, r))) continue t;
                    }

                    v && v.push(y), l.push(d);
                  }
                }

                return l;
              }

              function Hr(t, e, n) {
                var r = null == (t = Uo(t, e = Ii(e, t))) ? t : t[Ko(au(e))];
                return null == r ? o : Ne(r, t, n);
              }

              function Wr(t) {
                return ha(t) && zr(t) == L;
              }

              function qr(t, e, n, r, i) {
                return t === e || (null == t || null == e || !ha(t) && !ha(e) ? t !== t && e !== e : function (t, e, n, r, i, u) {
                  var a = ea(t),
                      c = ea(e),
                      s = a ? N : Eo(t),
                      f = c ? N : Eo(e),
                      l = (s = s == L ? q : s) == q,
                      h = (f = f == L ? q : f) == q,
                      d = s == f;

                  if (d && oa(t)) {
                    if (!oa(e)) return !1;
                    a = !0, l = !1;
                  }

                  if (d && !l) return u || (u = new hr()), a || xa(t) ? ho(t, e, n, r, i, u) : function (t, e, n, r, i, o, u) {
                    switch (n) {
                      case nt:
                        if (t.byteLength != e.byteLength || t.byteOffset != e.byteOffset) return !1;
                        t = t.buffer, e = e.buffer;

                      case et:
                        return !(t.byteLength != e.byteLength || !o(new be(t), new be(e)));

                      case D:
                      case U:
                      case H:
                        return Zu(+t, +e);

                      case $:
                        return t.name == e.name && t.message == e.message;

                      case J:
                      case Z:
                        return t == e + "";

                      case G:
                        var a = yn;

                      case Y:
                        var c = r & p;
                        if (a || (a = bn), t.size != e.size && !c) return !1;
                        var s = u.get(t);
                        if (s) return s == e;
                        r |= v, u.set(t, e);
                        var f = ho(a(t), a(e), r, i, o, u);
                        return u.delete(t), f;

                      case X:
                        if (er) return er.call(t) == er.call(e);
                    }

                    return !1;
                  }(t, e, s, n, r, i, u);

                  if (!(n & p)) {
                    var y = l && ne.call(t, "__wrapped__"),
                        g = h && ne.call(e, "__wrapped__");

                    if (y || g) {
                      var m = y ? t.value() : t,
                          b = g ? e.value() : e;
                      return u || (u = new hr()), i(m, b, n, r, u);
                    }
                  }

                  return !!d && (u || (u = new hr()), function (t, e, n, r, i, u) {
                    var a = n & p,
                        c = vo(t),
                        s = c.length;
                    if (s != vo(e).length && !a) return !1;

                    for (var f = s; f--;) {
                      var l = c[f];
                      if (!(a ? l in e : ne.call(e, l))) return !1;
                    }

                    var h = u.get(t);
                    if (h && u.get(e)) return h == e;
                    var v = !0;
                    u.set(t, e), u.set(e, t);

                    for (var d = a; ++f < s;) {
                      var y = t[l = c[f]],
                          g = e[l];
                      if (r) var m = a ? r(g, y, l, e, t, u) : r(y, g, l, t, e, u);

                      if (!(m === o ? y === g || i(y, g, n, r, u) : m)) {
                        v = !1;
                        break;
                      }

                      d || (d = "constructor" == l);
                    }

                    if (v && !d) {
                      var b = t.constructor,
                          x = e.constructor;
                      b != x && "constructor" in t && "constructor" in e && !("function" == typeof b && b instanceof b && "function" == typeof x && x instanceof x) && (v = !1);
                    }

                    return u.delete(t), u.delete(e), v;
                  }(t, e, n, r, i, u));
                }(t, e, n, r, qr, i));
              }

              function Kr(t, e, n, r) {
                var i = n.length,
                    u = i,
                    a = !r;
                if (null == t) return !u;

                for (t = qt(t); i--;) {
                  var c = n[i];
                  if (a && c[2] ? c[1] !== t[c[0]] : !(c[0] in t)) return !1;
                }

                for (; ++i < u;) {
                  var s = (c = n[i])[0],
                      f = t[s],
                      l = c[1];

                  if (a && c[2]) {
                    if (f === o && !(s in t)) return !1;
                  } else {
                    var h = new hr();
                    if (r) var d = r(f, l, s, t, e, h);
                    if (!(d === o ? qr(l, f, p | v, r, h) : d)) return !1;
                  }
                }

                return !0;
              }

              function Jr(t) {
                return !(!la(t) || (e = t, ie && ie in e)) && (ca(t) ? ce : Ut).test(Jo(t));
                var e;
              }

              function Yr(t) {
                return "function" == typeof t ? t : null == t ? vc : "object" == typeof t ? ea(t) ? ei(t[0], t[1]) : ti(t) : kc(t);
              }

              function Zr(t) {
                if (!Lo(t)) return Mn(t);
                var e = [];

                for (var n in qt(t)) {
                  ne.call(t, n) && "constructor" != n && e.push(n);
                }

                return e;
              }

              function Xr(t, e) {
                return t < e;
              }

              function Qr(t, e) {
                var r = -1,
                    i = ra(t) ? n(t.length) : [];
                return jr(t, function (t, n, o) {
                  i[++r] = e(t, n, o);
                }), i;
              }

              function ti(t) {
                var e = _o(t);

                return 1 == e.length && e[0][2] ? Fo(e[0][0], e[0][1]) : function (n) {
                  return n === t || Kr(n, t, e);
                };
              }

              function ei(t, e) {
                return Po(t) && No(e) ? Fo(Ko(t), e) : function (n) {
                  var r = Fa(n, t);
                  return r === o && r === e ? Da(n, t) : qr(e, r, p | v);
                };
              }

              function ni(t, e, n, r, i) {
                t !== e && Tr(e, function (u, a) {
                  if (la(u)) i || (i = new hr()), function (t, e, n, r, i, u, a) {
                    var c = zo(t, n),
                        s = zo(e, n),
                        f = a.get(s);
                    if (f) dr(t, n, f);else {
                      var l = u ? u(c, s, n + "", t, e, a) : o,
                          h = l === o;

                      if (h) {
                        var p = ea(s),
                            v = !p && oa(s),
                            d = !p && !v && xa(s);
                        l = s, p || v || d ? ea(c) ? l = c : ia(c) ? l = zi(c) : v ? (h = !1, l = Mi(s, !0)) : d ? (h = !1, l = Ni(s, !0)) : l = [] : da(s) || ta(s) ? (l = c, ta(c) ? l = Aa(c) : la(c) && !ca(c) || (l = Ao(s))) : h = !1;
                      }

                      h && (a.set(s, l), i(l, s, r, u, a), a.delete(s)), dr(t, n, l);
                    }
                  }(t, e, a, n, ni, r, i);else {
                    var c = r ? r(zo(t, a), u, a + "", t, e, i) : o;
                    c === o && (c = u), dr(t, a, c);
                  }
                }, Va);
              }

              function ri(t, e) {
                var n = t.length;
                if (n) return Io(e += e < 0 ? n : 0, n) ? t[e] : o;
              }

              function ii(t, e, n) {
                var r = -1;
                return e = Ve(e.length ? e : [vc], an(xo())), function (t, e) {
                  var n = t.length;

                  for (t.sort(e); n--;) {
                    t[n] = t[n].value;
                  }

                  return t;
                }(Qr(t, function (t, n, i) {
                  return {
                    criteria: Ve(e, function (e) {
                      return e(t);
                    }),
                    index: ++r,
                    value: t
                  };
                }), function (t, e) {
                  return function (t, e, n) {
                    for (var r = -1, i = t.criteria, o = e.criteria, u = i.length, a = n.length; ++r < u;) {
                      var c = Fi(i[r], o[r]);
                      if (c) return r >= a ? c : c * ("desc" == n[r] ? -1 : 1);
                    }

                    return t.index - e.index;
                  }(t, e, n);
                });
              }

              function oi(t, e, n) {
                for (var r = -1, i = e.length, o = {}; ++r < i;) {
                  var u = e[r],
                      a = Dr(t, u);
                  n(a, u) && li(o, Ii(u, t), a);
                }

                return o;
              }

              function ui(t, e, n, r) {
                var i = r ? Xe : Ze,
                    o = -1,
                    u = e.length,
                    a = t;

                for (t === e && (e = zi(e)), n && (a = Ve(t, an(n))); ++o < u;) {
                  for (var c = 0, s = e[o], f = n ? n(s) : s; (c = i(a, f, c, r)) > -1;) {
                    a !== t && Ae.call(a, c, 1), Ae.call(t, c, 1);
                  }
                }

                return t;
              }

              function ai(t, e) {
                for (var n = t ? e.length : 0, r = n - 1; n--;) {
                  var i = e[n];

                  if (n == r || i !== o) {
                    var o = i;
                    Io(i) ? Ae.call(t, i, 1) : _i(t, i);
                  }
                }

                return t;
              }

              function ci(t, e) {
                return t + Rn(Un() * (e - t + 1));
              }

              function si(t, e) {
                var n = "";
                if (!t || e < 1 || e > A) return n;

                do {
                  e % 2 && (n += t), (e = Rn(e / 2)) && (t += t);
                } while (e);

                return n;
              }

              function fi(t, e) {
                return Vo(Do(t, e, vc), t + "");
              }

              function li(t, e, n, r) {
                if (!la(t)) return t;

                for (var i = -1, u = (e = Ii(e, t)).length, a = u - 1, c = t; null != c && ++i < u;) {
                  var s = Ko(e[i]),
                      f = n;

                  if (i != a) {
                    var l = c[s];
                    (f = r ? r(l, s, c) : o) === o && (f = la(l) ? l : Io(e[i + 1]) ? [] : {});
                  }

                  yr(c, s, f), c = c[s];
                }

                return t;
              }

              var hi = qn ? function (t, e) {
                return qn.set(t, e), t;
              } : vc,
                  pi = Sn ? function (t, e) {
                return Sn(t, "toString", {
                  configurable: !0,
                  enumerable: !1,
                  value: lc(e),
                  writable: !0
                });
              } : vc;

              function vi(t, e, r) {
                var i = -1,
                    o = t.length;
                e < 0 && (e = -e > o ? 0 : o + e), (r = r > o ? o : r) < 0 && (r += o), o = e > r ? 0 : r - e >>> 0, e >>>= 0;

                for (var u = n(o); ++i < o;) {
                  u[i] = t[i + e];
                }

                return u;
              }

              function di(t, e) {
                var n;
                return jr(t, function (t, r, i) {
                  return !(n = e(t, r, i));
                }), !!n;
              }

              function yi(t, e, n) {
                var r = 0,
                    i = null == t ? r : t.length;

                if ("number" == typeof e && e === e && i <= T) {
                  for (; r < i;) {
                    var o = r + i >>> 1,
                        u = t[o];
                    null !== u && !ba(u) && (n ? u <= e : u < e) ? r = o + 1 : i = o;
                  }

                  return i;
                }

                return gi(t, e, vc, n);
              }

              function gi(t, e, n, r) {
                e = n(e);

                for (var i = 0, u = null == t ? 0 : t.length, a = e !== e, c = null === e, s = ba(e), f = e === o; i < u;) {
                  var l = Rn((i + u) / 2),
                      h = n(t[l]),
                      p = h !== o,
                      v = null === h,
                      d = h === h,
                      y = ba(h);
                  if (a) var g = r || d;else g = f ? d && (r || p) : c ? d && p && (r || !v) : s ? d && p && !v && (r || !y) : !v && !y && (r ? h <= e : h < e);
                  g ? i = l + 1 : u = l;
                }

                return Nn(u, P);
              }

              function mi(t, e) {
                for (var n = -1, r = t.length, i = 0, o = []; ++n < r;) {
                  var u = t[n],
                      a = e ? e(u) : u;

                  if (!n || !Zu(a, c)) {
                    var c = a;
                    o[i++] = 0 === u ? 0 : u;
                  }
                }

                return o;
              }

              function bi(t) {
                return "number" == typeof t ? t : ba(t) ? I : +t;
              }

              function xi(t) {
                if ("string" == typeof t) return t;
                if (ea(t)) return Ve(t, xi) + "";
                if (ba(t)) return nr ? nr.call(t) : "";
                var e = t + "";
                return "0" == e && 1 / t == -j ? "-0" : e;
              }

              function wi(t, e, n) {
                var r = -1,
                    i = $e,
                    o = t.length,
                    a = !0,
                    c = [],
                    s = c;
                if (n) a = !1, i = Be;else if (o >= u) {
                  var f = e ? null : uo(t);
                  if (f) return bn(f);
                  a = !1, i = sn, s = new lr();
                } else s = e ? [] : c;

                t: for (; ++r < o;) {
                  var l = t[r],
                      h = e ? e(l) : l;

                  if (l = n || 0 !== l ? l : 0, a && h === h) {
                    for (var p = s.length; p--;) {
                      if (s[p] === h) continue t;
                    }

                    e && s.push(h), c.push(l);
                  } else i(s, h, n) || (s !== c && s.push(h), c.push(l));
                }

                return c;
              }

              function _i(t, e) {
                return null == (t = Uo(t, e = Ii(e, t))) || delete t[Ko(au(e))];
              }

              function ki(t, e, n, r) {
                return li(t, e, n(Dr(t, e)), r);
              }

              function Si(t, e, n, r) {
                for (var i = t.length, o = r ? i : -1; (r ? o-- : ++o < i) && e(t[o], o, t);) {
                  ;
                }

                return n ? vi(t, r ? 0 : o, r ? o + 1 : i) : vi(t, r ? o + 1 : 0, r ? i : o);
              }

              function Oi(t, e) {
                var n = t;
                return n instanceof ar && (n = n.value()), He(e, function (t, e) {
                  return e.func.apply(e.thisArg, Ge([t], e.args));
                }, n);
              }

              function Ei(t, e, r) {
                var i = t.length;
                if (i < 2) return i ? wi(t[0]) : [];

                for (var o = -1, u = n(i); ++o < i;) {
                  for (var a = t[o], c = -1; ++c < i;) {
                    c != o && (u[o] = Er(u[o] || a, t[c], e, r));
                  }
                }

                return wi(Pr(u, 1), e, r);
              }

              function ji(t, e, n) {
                for (var r = -1, i = t.length, u = e.length, a = {}; ++r < i;) {
                  var c = r < u ? e[r] : o;
                  n(a, t[r], c);
                }

                return a;
              }

              function Ai(t) {
                return ia(t) ? t : [];
              }

              function Ri(t) {
                return "function" == typeof t ? t : vc;
              }

              function Ii(t, e) {
                return ea(t) ? t : Po(t, e) ? [t] : qo(Ra(t));
              }

              var Ci = fi;

              function Pi(t, e, n) {
                var r = t.length;
                return n = n === o ? r : n, !e && n >= r ? t : vi(t, e, n);
              }

              var Ti = On || function (t) {
                return Se.clearTimeout(t);
              };

              function Mi(t, e) {
                if (e) return t.slice();
                var n = t.length,
                    r = _e ? _e(n) : new t.constructor(n);
                return t.copy(r), r;
              }

              function Li(t) {
                var e = new t.constructor(t.byteLength);
                return new be(e).set(new be(t)), e;
              }

              function Ni(t, e) {
                var n = e ? Li(t.buffer) : t.buffer;
                return new t.constructor(n, t.byteOffset, t.length);
              }

              function Fi(t, e) {
                if (t !== e) {
                  var n = t !== o,
                      r = null === t,
                      i = t === t,
                      u = ba(t),
                      a = e !== o,
                      c = null === e,
                      s = e === e,
                      f = ba(e);
                  if (!c && !f && !u && t > e || u && a && s && !c && !f || r && a && s || !n && s || !i) return 1;
                  if (!r && !u && !f && t < e || f && n && i && !r && !u || c && n && i || !a && i || !s) return -1;
                }

                return 0;
              }

              function Di(t, e, r, i) {
                for (var o = -1, u = t.length, a = r.length, c = -1, s = e.length, f = Ln(u - a, 0), l = n(s + f), h = !i; ++c < s;) {
                  l[c] = e[c];
                }

                for (; ++o < a;) {
                  (h || o < u) && (l[r[o]] = t[o]);
                }

                for (; f--;) {
                  l[c++] = t[o++];
                }

                return l;
              }

              function Ui(t, e, r, i) {
                for (var o = -1, u = t.length, a = -1, c = r.length, s = -1, f = e.length, l = Ln(u - c, 0), h = n(l + f), p = !i; ++o < l;) {
                  h[o] = t[o];
                }

                for (var v = o; ++s < f;) {
                  h[v + s] = e[s];
                }

                for (; ++a < c;) {
                  (p || o < u) && (h[v + r[a]] = t[o++]);
                }

                return h;
              }

              function zi(t, e) {
                var r = -1,
                    i = t.length;

                for (e || (e = n(i)); ++r < i;) {
                  e[r] = t[r];
                }

                return e;
              }

              function $i(t, e, n, r) {
                var i = !n;
                n || (n = {});

                for (var u = -1, a = e.length; ++u < a;) {
                  var c = e[u],
                      s = r ? r(n[c], t[c], c, n, t) : o;
                  s === o && (s = t[c]), i ? xr(n, c, s) : yr(n, c, s);
                }

                return n;
              }

              function Bi(t, e) {
                return function (n, r) {
                  var i = ea(n) ? Fe : mr,
                      o = e ? e() : {};
                  return i(n, t, xo(r, 2), o);
                };
              }

              function Vi(t) {
                return fi(function (e, n) {
                  var r = -1,
                      i = n.length,
                      u = i > 1 ? n[i - 1] : o,
                      a = i > 2 ? n[2] : o;

                  for (u = t.length > 3 && "function" == typeof u ? (i--, u) : o, a && Co(n[0], n[1], a) && (u = i < 3 ? o : u, i = 1), e = qt(e); ++r < i;) {
                    var c = n[r];
                    c && t(e, c, r, u);
                  }

                  return e;
                });
              }

              function Gi(t, e) {
                return function (n, r) {
                  if (null == n) return n;
                  if (!ra(n)) return t(n, r);

                  for (var i = n.length, o = e ? i : -1, u = qt(n); (e ? o-- : ++o < i) && !1 !== r(u[o], o, u);) {
                    ;
                  }

                  return n;
                };
              }

              function Hi(t) {
                return function (e, n, r) {
                  for (var i = -1, o = qt(e), u = r(e), a = u.length; a--;) {
                    var c = u[t ? a : ++i];
                    if (!1 === n(o[c], c, o)) break;
                  }

                  return e;
                };
              }

              function Wi(t) {
                return function (e) {
                  var n = dn(e = Ra(e)) ? wn(e) : o,
                      r = n ? n[0] : e.charAt(0),
                      i = n ? Pi(n, 1).join("") : e.slice(1);
                  return r[t]() + i;
                };
              }

              function qi(t) {
                return function (e) {
                  return He(cc(tc(e).replace(se, "")), t, "");
                };
              }

              function Ki(t) {
                return function () {
                  var e = arguments;

                  switch (e.length) {
                    case 0:
                      return new t();

                    case 1:
                      return new t(e[0]);

                    case 2:
                      return new t(e[0], e[1]);

                    case 3:
                      return new t(e[0], e[1], e[2]);

                    case 4:
                      return new t(e[0], e[1], e[2], e[3]);

                    case 5:
                      return new t(e[0], e[1], e[2], e[3], e[4]);

                    case 6:
                      return new t(e[0], e[1], e[2], e[3], e[4], e[5]);

                    case 7:
                      return new t(e[0], e[1], e[2], e[3], e[4], e[5], e[6]);
                  }

                  var n = ir(t.prototype),
                      r = t.apply(n, e);
                  return la(r) ? r : n;
                };
              }

              function Ji(t) {
                return function (e, n, r) {
                  var i = qt(e);

                  if (!ra(e)) {
                    var u = xo(n, 3);
                    e = Ba(e), n = function n(t) {
                      return u(i[t], t, i);
                    };
                  }

                  var a = t(e, n, r);
                  return a > -1 ? i[u ? e[a] : a] : o;
                };
              }

              function Yi(t) {
                return po(function (e) {
                  var n = e.length,
                      r = n,
                      i = ur.prototype.thru;

                  for (t && e.reverse(); r--;) {
                    var u = e[r];
                    if ("function" != typeof u) throw new Yt(a);
                    if (i && !c && "wrapper" == mo(u)) var c = new ur([], !0);
                  }

                  for (r = c ? r : n; ++r < n;) {
                    var s = mo(u = e[r]),
                        f = "wrapper" == s ? go(u) : o;
                    c = f && To(f[0]) && f[1] == (_ | m | x | k) && !f[4].length && 1 == f[9] ? c[mo(f[0])].apply(c, f[3]) : 1 == u.length && To(u) ? c[s]() : c.thru(u);
                  }

                  return function () {
                    var t = arguments,
                        r = t[0];
                    if (c && 1 == t.length && ea(r)) return c.plant(r).value();

                    for (var i = 0, o = n ? e[i].apply(this, t) : r; ++i < n;) {
                      o = e[i].call(this, o);
                    }

                    return o;
                  };
                });
              }

              function Zi(t, e, r, i, u, a, c, s, f, l) {
                var h = e & _,
                    p = e & d,
                    v = e & y,
                    g = e & (m | b),
                    x = e & S,
                    w = v ? o : Ki(t);
                return function d() {
                  for (var y = arguments.length, m = n(y), b = y; b--;) {
                    m[b] = arguments[b];
                  }

                  if (g) var _ = bo(d),
                      k = function (t, e) {
                    for (var n = t.length, r = 0; n--;) {
                      t[n] === e && ++r;
                    }

                    return r;
                  }(m, _);

                  if (i && (m = Di(m, i, u, g)), a && (m = Ui(m, a, c, g)), y -= k, g && y < l) {
                    var S = mn(m, _);
                    return io(t, e, Zi, d.placeholder, r, m, S, s, f, l - y);
                  }

                  var O = p ? r : this,
                      E = v ? O[t] : t;
                  return y = m.length, s ? m = function (t, e) {
                    for (var n = t.length, r = Nn(e.length, n), i = zi(t); r--;) {
                      var u = e[r];
                      t[r] = Io(u, n) ? i[u] : o;
                    }

                    return t;
                  }(m, s) : x && y > 1 && m.reverse(), h && f < y && (m.length = f), this && this !== Se && this instanceof d && (E = w || Ki(E)), E.apply(O, m);
                };
              }

              function Xi(t, e) {
                return function (n, r) {
                  return function (t, e, n, r) {
                    return Lr(t, function (t, i, o) {
                      e(r, n(t), i, o);
                    }), r;
                  }(n, t, e(r), {});
                };
              }

              function Qi(t, e) {
                return function (n, r) {
                  var i;
                  if (n === o && r === o) return e;

                  if (n !== o && (i = n), r !== o) {
                    if (i === o) return r;
                    "string" == typeof n || "string" == typeof r ? (n = xi(n), r = xi(r)) : (n = bi(n), r = bi(r)), i = t(n, r);
                  }

                  return i;
                };
              }

              function to(t) {
                return po(function (e) {
                  return e = Ve(e, an(xo())), fi(function (n) {
                    var r = this;
                    return t(e, function (t) {
                      return Ne(t, r, n);
                    });
                  });
                });
              }

              function eo(t, e) {
                var n = (e = e === o ? " " : xi(e)).length;
                if (n < 2) return n ? si(e, t) : e;
                var r = si(e, An(t / xn(e)));
                return dn(e) ? Pi(wn(r), 0, t).join("") : r.slice(0, t);
              }

              function no(t) {
                return function (e, r, i) {
                  return i && "number" != typeof i && Co(e, r, i) && (r = i = o), e = Sa(e), r === o ? (r = e, e = 0) : r = Sa(r), function (t, e, r, i) {
                    for (var o = -1, u = Ln(An((e - t) / (r || 1)), 0), a = n(u); u--;) {
                      a[i ? u : ++o] = t, t += r;
                    }

                    return a;
                  }(e, r, i = i === o ? e < r ? 1 : -1 : Sa(i), t);
                };
              }

              function ro(t) {
                return function (e, n) {
                  return "string" == typeof e && "string" == typeof n || (e = ja(e), n = ja(n)), t(e, n);
                };
              }

              function io(t, e, n, r, i, u, a, c, s, f) {
                var l = e & m;
                e |= l ? x : w, (e &= ~(l ? w : x)) & g || (e &= ~(d | y));
                var h = [t, e, i, l ? u : o, l ? a : o, l ? o : u, l ? o : a, c, s, f],
                    p = n.apply(o, h);
                return To(t) && $o(p, h), p.placeholder = r, Go(p, t, e);
              }

              function oo(t) {
                var e = Wt[t];
                return function (t, n) {
                  if (t = ja(t), n = null == n ? 0 : Nn(Oa(n), 292)) {
                    var r = (Ra(t) + "e").split("e");
                    return +((r = (Ra(e(r[0] + "e" + (+r[1] + n))) + "e").split("e"))[0] + "e" + (+r[1] - n));
                  }

                  return e(t);
                };
              }

              var uo = Gn && 1 / bn(new Gn([, -0]))[1] == j ? function (t) {
                return new Gn(t);
              } : bc;

              function ao(t) {
                return function (e) {
                  var n = Eo(e);
                  return n == G ? yn(e) : n == Y ? function (t) {
                    var e = -1,
                        n = Array(t.size);
                    return t.forEach(function (t) {
                      n[++e] = [t, t];
                    }), n;
                  }(e) : function (t, e) {
                    return Ve(e, function (e) {
                      return [e, t[e]];
                    });
                  }(e, t(e));
                };
              }

              function co(t, e, r, i, u, c, f, l) {
                var h = e & y;
                if (!h && "function" != typeof t) throw new Yt(a);
                var p = i ? i.length : 0;

                if (p || (e &= ~(x | w), i = u = o), f = f === o ? f : Ln(Oa(f), 0), l = l === o ? l : Oa(l), p -= u ? u.length : 0, e & w) {
                  var v = i,
                      S = u;
                  i = u = o;
                }

                var O = h ? o : go(t),
                    E = [t, e, r, i, u, v, S, c, f, l];
                if (O && function (t, e) {
                  var n = t[1],
                      r = e[1],
                      i = n | r,
                      o = i < (d | y | _),
                      u = r == _ && n == m || r == _ && n == k && t[7].length <= e[8] || r == (_ | k) && e[7].length <= e[8] && n == m;
                  if (!o && !u) return t;
                  r & d && (t[2] = e[2], i |= n & d ? 0 : g);
                  var a = e[3];

                  if (a) {
                    var c = t[3];
                    t[3] = c ? Di(c, a, e[4]) : a, t[4] = c ? mn(t[3], s) : e[4];
                  }

                  (a = e[5]) && (c = t[5], t[5] = c ? Ui(c, a, e[6]) : a, t[6] = c ? mn(t[5], s) : e[6]), (a = e[7]) && (t[7] = a), r & _ && (t[8] = null == t[8] ? e[8] : Nn(t[8], e[8])), null == t[9] && (t[9] = e[9]), t[0] = e[0], t[1] = i;
                }(E, O), t = E[0], e = E[1], r = E[2], i = E[3], u = E[4], !(l = E[9] = E[9] === o ? h ? 0 : t.length : Ln(E[9] - p, 0)) && e & (m | b) && (e &= ~(m | b)), e && e != d) j = e == m || e == b ? function (t, e, r) {
                  var i = Ki(t);
                  return function u() {
                    for (var a = arguments.length, c = n(a), s = a, f = bo(u); s--;) {
                      c[s] = arguments[s];
                    }

                    var l = a < 3 && c[0] !== f && c[a - 1] !== f ? [] : mn(c, f);
                    return (a -= l.length) < r ? io(t, e, Zi, u.placeholder, o, c, l, o, o, r - a) : Ne(this && this !== Se && this instanceof u ? i : t, this, c);
                  };
                }(t, e, l) : e != x && e != (d | x) || u.length ? Zi.apply(o, E) : function (t, e, r, i) {
                  var o = e & d,
                      u = Ki(t);
                  return function e() {
                    for (var a = -1, c = arguments.length, s = -1, f = i.length, l = n(f + c), h = this && this !== Se && this instanceof e ? u : t; ++s < f;) {
                      l[s] = i[s];
                    }

                    for (; c--;) {
                      l[s++] = arguments[++a];
                    }

                    return Ne(h, o ? r : this, l);
                  };
                }(t, e, r, i);else var j = function (t, e, n) {
                  var r = e & d,
                      i = Ki(t);
                  return function e() {
                    return (this && this !== Se && this instanceof e ? i : t).apply(r ? n : this, arguments);
                  };
                }(t, e, r);
                return Go((O ? hi : $o)(j, E), t, e);
              }

              function so(t, e, n, r) {
                return t === o || Zu(t, Qt[n]) && !ne.call(r, n) ? e : t;
              }

              function fo(t, e, n, r, i, u) {
                return la(t) && la(e) && (u.set(e, t), ni(t, e, o, fo, u), u.delete(e)), t;
              }

              function lo(t) {
                return da(t) ? o : t;
              }

              function ho(t, e, n, r, i, u) {
                var a = n & p,
                    c = t.length,
                    s = e.length;
                if (c != s && !(a && s > c)) return !1;
                var f = u.get(t);
                if (f && u.get(e)) return f == e;
                var l = -1,
                    h = !0,
                    d = n & v ? new lr() : o;

                for (u.set(t, e), u.set(e, t); ++l < c;) {
                  var y = t[l],
                      g = e[l];
                  if (r) var m = a ? r(g, y, l, e, t, u) : r(y, g, l, t, e, u);

                  if (m !== o) {
                    if (m) continue;
                    h = !1;
                    break;
                  }

                  if (d) {
                    if (!qe(e, function (t, e) {
                      if (!sn(d, e) && (y === t || i(y, t, n, r, u))) return d.push(e);
                    })) {
                      h = !1;
                      break;
                    }
                  } else if (y !== g && !i(y, g, n, r, u)) {
                    h = !1;
                    break;
                  }
                }

                return u.delete(t), u.delete(e), h;
              }

              function po(t) {
                return Vo(Do(t, o, nu), t + "");
              }

              function vo(t) {
                return Ur(t, Ba, So);
              }

              function yo(t) {
                return Ur(t, Va, Oo);
              }

              var go = qn ? function (t) {
                return qn.get(t);
              } : bc;

              function mo(t) {
                for (var e = t.name + "", n = Kn[e], r = ne.call(Kn, e) ? n.length : 0; r--;) {
                  var i = n[r],
                      o = i.func;
                  if (null == o || o == t) return i.name;
                }

                return e;
              }

              function bo(t) {
                return (ne.call(rr, "placeholder") ? rr : t).placeholder;
              }

              function xo() {
                var t = rr.iteratee || dc;
                return t = t === dc ? Yr : t, arguments.length ? t(arguments[0], arguments[1]) : t;
              }

              function wo(t, e) {
                var n = t.__data__;
                return function (t) {
                  var e = typeof t;
                  return "string" == e || "number" == e || "symbol" == e || "boolean" == e ? "__proto__" !== t : null === t;
                }(e) ? n["string" == typeof e ? "string" : "hash"] : n.map;
              }

              function _o(t) {
                for (var e = Ba(t), n = e.length; n--;) {
                  var r = e[n],
                      i = t[r];
                  e[n] = [r, i, No(i)];
                }

                return e;
              }

              function ko(t, e) {
                var n = function (t, e) {
                  return null == t ? o : t[e];
                }(t, e);

                return Jr(n) ? n : o;
              }

              var So = In ? function (t) {
                return null == t ? [] : (t = qt(t), ze(In(t), function (e) {
                  return Ee.call(t, e);
                }));
              } : Ec,
                  Oo = In ? function (t) {
                for (var e = []; t;) {
                  Ge(e, So(t)), t = ke(t);
                }

                return e;
              } : Ec,
                  Eo = zr;

              function jo(t, e, n) {
                for (var r = -1, i = (e = Ii(e, t)).length, o = !1; ++r < i;) {
                  var u = Ko(e[r]);
                  if (!(o = null != t && n(t, u))) break;
                  t = t[u];
                }

                return o || ++r != i ? o : !!(i = null == t ? 0 : t.length) && fa(i) && Io(u, i) && (ea(t) || ta(t));
              }

              function Ao(t) {
                return "function" != typeof t.constructor || Lo(t) ? {} : ir(ke(t));
              }

              function Ro(t) {
                return ea(t) || ta(t) || !!(Re && t && t[Re]);
              }

              function Io(t, e) {
                var n = typeof t;
                return !!(e = null == e ? A : e) && ("number" == n || "symbol" != n && $t.test(t)) && t > -1 && t % 1 == 0 && t < e;
              }

              function Co(t, e, n) {
                if (!la(n)) return !1;
                var r = typeof e;
                return !!("number" == r ? ra(n) && Io(e, n.length) : "string" == r && e in n) && Zu(n[e], t);
              }

              function Po(t, e) {
                if (ea(t)) return !1;
                var n = typeof t;
                return !("number" != n && "symbol" != n && "boolean" != n && null != t && !ba(t)) || kt.test(t) || !_t.test(t) || null != e && t in qt(e);
              }

              function To(t) {
                var e = mo(t),
                    n = rr[e];
                if ("function" != typeof n || !(e in ar.prototype)) return !1;
                if (t === n) return !0;
                var r = go(n);
                return !!r && t === r[0];
              }

              ($n && Eo(new $n(new ArrayBuffer(1))) != nt || Bn && Eo(new Bn()) != G || Vn && "[object Promise]" != Eo(Vn.resolve()) || Gn && Eo(new Gn()) != Y || Hn && Eo(new Hn()) != tt) && (Eo = function Eo(t) {
                var e = zr(t),
                    n = e == q ? t.constructor : o,
                    r = n ? Jo(n) : "";
                if (r) switch (r) {
                  case Jn:
                    return nt;

                  case Yn:
                    return G;

                  case Zn:
                    return "[object Promise]";

                  case Xn:
                    return Y;

                  case Qn:
                    return tt;
                }
                return e;
              });
              var Mo = te ? ca : jc;

              function Lo(t) {
                var e = t && t.constructor;
                return t === ("function" == typeof e && e.prototype || Qt);
              }

              function No(t) {
                return t === t && !la(t);
              }

              function Fo(t, e) {
                return function (n) {
                  return null != n && n[t] === e && (e !== o || t in qt(n));
                };
              }

              function Do(t, e, r) {
                return e = Ln(e === o ? t.length - 1 : e, 0), function () {
                  for (var i = arguments, o = -1, u = Ln(i.length - e, 0), a = n(u); ++o < u;) {
                    a[o] = i[e + o];
                  }

                  o = -1;

                  for (var c = n(e + 1); ++o < e;) {
                    c[o] = i[o];
                  }

                  return c[e] = r(a), Ne(t, this, c);
                };
              }

              function Uo(t, e) {
                return e.length < 2 ? t : Dr(t, vi(e, 0, -1));
              }

              function zo(t, e) {
                if ("__proto__" != e) return t[e];
              }

              var $o = Ho(hi),
                  Bo = jn || function (t, e) {
                return Se.setTimeout(t, e);
              },
                  Vo = Ho(pi);

              function Go(t, e, n) {
                var r = e + "";
                return Vo(t, function (t, e) {
                  var n = e.length;
                  if (!n) return t;
                  var r = n - 1;
                  return e[r] = (n > 1 ? "& " : "") + e[r], e = e.join(n > 2 ? ", " : " "), t.replace(It, "{\n/* [wrapped with " + e + "] */\n");
                }(r, function (t, e) {
                  return De(M, function (n) {
                    var r = "_." + n[0];
                    e & n[1] && !$e(t, r) && t.push(r);
                  }), t.sort();
                }(function (t) {
                  var e = r.match(Ct);
                  return e ? e[1].split(Pt) : [];
                }(), n)));
              }

              function Ho(t) {
                var e = 0,
                    n = 0;
                return function () {
                  var r = Fn(),
                      i = E - (r - n);

                  if (n = r, i > 0) {
                    if (++e >= O) return arguments[0];
                  } else e = 0;

                  return t.apply(o, arguments);
                };
              }

              function Wo(t, e) {
                var n = -1,
                    r = t.length,
                    i = r - 1;

                for (e = e === o ? r : e; ++n < e;) {
                  var u = ci(n, i),
                      a = t[u];
                  t[u] = t[n], t[n] = a;
                }

                return t.length = e, t;
              }

              var qo = function (t) {
                var e = Hu(function (t) {
                  var e = [];
                  return 46 === t.charCodeAt(0) && e.push(""), t.replace(St, function (t, n, r, i) {
                    e.push(r ? i.replace(Mt, "$1") : n || t);
                  }), e;
                }, function (t) {
                  return 500 === n.size && n.clear(), t;
                }),
                    n = e.cache;
                return e;
              }();

              function Ko(t) {
                if ("string" == typeof t || ba(t)) return t;
                var e = t + "";
                return "0" == e && 1 / t == -j ? "-0" : e;
              }

              function Jo(t) {
                if (null != t) {
                  try {
                    return ee.call(t);
                  } catch (e) {}

                  try {
                    return t + "";
                  } catch (e) {}
                }

                return "";
              }

              function Yo(t) {
                if (t instanceof ar) return t.clone();
                var e = new ur(t.__wrapped__, t.__chain__);
                return e.__actions__ = zi(t.__actions__), e.__index__ = t.__index__, e.__values__ = t.__values__, e;
              }

              var Zo = fi(function (t, e) {
                return ia(t) ? Er(t, Pr(e, 1, ia, !0)) : [];
              }),
                  Xo = fi(function (t, e) {
                var n = au(e);
                return ia(n) && (n = o), ia(t) ? Er(t, Pr(e, 1, ia, !0), xo(n, 2)) : [];
              }),
                  Qo = fi(function (t, e) {
                var n = au(e);
                return ia(n) && (n = o), ia(t) ? Er(t, Pr(e, 1, ia, !0), o, n) : [];
              });

              function tu(t, e, n) {
                var r = null == t ? 0 : t.length;
                if (!r) return -1;
                var i = null == n ? 0 : Oa(n);
                return i < 0 && (i = Ln(r + i, 0)), Ye(t, xo(e, 3), i);
              }

              function eu(t, e, n) {
                var r = null == t ? 0 : t.length;
                if (!r) return -1;
                var i = r - 1;
                return n !== o && (i = Oa(n), i = n < 0 ? Ln(r + i, 0) : Nn(i, r - 1)), Ye(t, xo(e, 3), i, !0);
              }

              function nu(t) {
                return null != t && t.length ? Pr(t, 1) : [];
              }

              function ru(t) {
                return t && t.length ? t[0] : o;
              }

              var iu = fi(function (t) {
                var e = Ve(t, Ai);
                return e.length && e[0] === t[0] ? Gr(e) : [];
              }),
                  ou = fi(function (t) {
                var e = au(t),
                    n = Ve(t, Ai);
                return e === au(n) ? e = o : n.pop(), n.length && n[0] === t[0] ? Gr(n, xo(e, 2)) : [];
              }),
                  uu = fi(function (t) {
                var e = au(t),
                    n = Ve(t, Ai);
                return (e = "function" == typeof e ? e : o) && n.pop(), n.length && n[0] === t[0] ? Gr(n, o, e) : [];
              });

              function au(t) {
                var e = null == t ? 0 : t.length;
                return e ? t[e - 1] : o;
              }

              var cu = fi(su);

              function su(t, e) {
                return t && t.length && e && e.length ? ui(t, e) : t;
              }

              var fu = po(function (t, e) {
                var n = null == t ? 0 : t.length,
                    r = wr(t, e);
                return ai(t, Ve(e, function (t) {
                  return Io(t, n) ? +t : t;
                }).sort(Fi)), r;
              });

              function lu(t) {
                return null == t ? t : zn.call(t);
              }

              var hu = fi(function (t) {
                return wi(Pr(t, 1, ia, !0));
              }),
                  pu = fi(function (t) {
                var e = au(t);
                return ia(e) && (e = o), wi(Pr(t, 1, ia, !0), xo(e, 2));
              }),
                  vu = fi(function (t) {
                var e = au(t);
                return e = "function" == typeof e ? e : o, wi(Pr(t, 1, ia, !0), o, e);
              });

              function du(t) {
                if (!t || !t.length) return [];
                var e = 0;
                return t = ze(t, function (t) {
                  if (ia(t)) return e = Ln(t.length, e), !0;
                }), un(e, function (e) {
                  return Ve(t, en(e));
                });
              }

              function yu(t, e) {
                if (!t || !t.length) return [];
                var n = du(t);
                return null == e ? n : Ve(n, function (t) {
                  return Ne(e, o, t);
                });
              }

              var gu = fi(function (t, e) {
                return ia(t) ? Er(t, e) : [];
              }),
                  mu = fi(function (t) {
                return Ei(ze(t, ia));
              }),
                  bu = fi(function (t) {
                var e = au(t);
                return ia(e) && (e = o), Ei(ze(t, ia), xo(e, 2));
              }),
                  xu = fi(function (t) {
                var e = au(t);
                return e = "function" == typeof e ? e : o, Ei(ze(t, ia), o, e);
              }),
                  wu = fi(du),
                  _u = fi(function (t) {
                var e = t.length,
                    n = e > 1 ? t[e - 1] : o;
                return n = "function" == typeof n ? (t.pop(), n) : o, yu(t, n);
              });

              function ku(t) {
                var e = rr(t);
                return e.__chain__ = !0, e;
              }

              function Su(t, e) {
                return e(t);
              }

              var Ou = po(function (t) {
                var e = t.length,
                    n = e ? t[0] : 0,
                    r = this.__wrapped__,
                    i = function i(e) {
                  return wr(e, t);
                };

                return !(e > 1 || this.__actions__.length) && r instanceof ar && Io(n) ? ((r = r.slice(n, +n + (e ? 1 : 0))).__actions__.push({
                  func: Su,
                  args: [i],
                  thisArg: o
                }), new ur(r, this.__chain__).thru(function (t) {
                  return e && !t.length && t.push(o), t;
                })) : this.thru(i);
              }),
                  Eu = Bi(function (t, e, n) {
                ne.call(t, n) ? ++t[n] : xr(t, n, 1);
              }),
                  ju = Ji(tu),
                  Au = Ji(eu);

              function Ru(t, e) {
                return (ea(t) ? De : jr)(t, xo(e, 3));
              }

              function Iu(t, e) {
                return (ea(t) ? function (t, e) {
                  for (var n = null == t ? 0 : t.length; n-- && !1 !== e(t[n], n, t);) {
                    ;
                  }

                  return t;
                } : Ar)(t, xo(e, 3));
              }

              var Cu = Bi(function (t, e, n) {
                ne.call(t, n) ? t[n].push(e) : xr(t, n, [e]);
              }),
                  Pu = fi(function (t, e, r) {
                var i = -1,
                    o = "function" == typeof e,
                    u = ra(t) ? n(t.length) : [];
                return jr(t, function (t) {
                  u[++i] = o ? Ne(e, t, r) : Hr(t, e, r);
                }), u;
              }),
                  Tu = Bi(function (t, e, n) {
                xr(t, n, e);
              });

              function Mu(t, e) {
                return (ea(t) ? Ve : Qr)(t, xo(e, 3));
              }

              var Lu = Bi(function (t, e, n) {
                t[n ? 0 : 1].push(e);
              }, function () {
                return [[], []];
              }),
                  Nu = fi(function (t, e) {
                if (null == t) return [];
                var n = e.length;
                return n > 1 && Co(t, e[0], e[1]) ? e = [] : n > 2 && Co(e[0], e[1], e[2]) && (e = [e[0]]), ii(t, Pr(e, 1), []);
              }),
                  Fu = En || function () {
                return Se.Date.now();
              };

              function Du(t, e, n) {
                return e = n ? o : e, e = t && null == e ? t.length : e, co(t, _, o, o, o, o, e);
              }

              function Uu(t, e) {
                var n;
                if ("function" != typeof e) throw new Yt(a);
                return t = Oa(t), function () {
                  return --t > 0 && (n = e.apply(this, arguments)), t <= 1 && (e = o), n;
                };
              }

              var zu = fi(function (t, e, n) {
                var r = d;

                if (n.length) {
                  var i = mn(n, bo(zu));
                  r |= x;
                }

                return co(t, r, e, n, i);
              }),
                  $u = fi(function (t, e, n) {
                var r = d | y;

                if (n.length) {
                  var i = mn(n, bo($u));
                  r |= x;
                }

                return co(e, r, t, n, i);
              });

              function Bu(t, e, n) {
                var r,
                    i,
                    u,
                    c,
                    s,
                    f,
                    l = 0,
                    h = !1,
                    p = !1,
                    v = !0;
                if ("function" != typeof t) throw new Yt(a);

                function d(e) {
                  var n = r,
                      u = i;
                  return r = i = o, l = e, c = t.apply(u, n);
                }

                function y(t) {
                  var n = t - f;
                  return f === o || n >= e || n < 0 || p && t - l >= u;
                }

                function g() {
                  var t = Fu();
                  if (y(t)) return m(t);
                  s = Bo(g, function (t) {
                    var n = e - (t - f);
                    return p ? Nn(n, u - (t - l)) : n;
                  }(t));
                }

                function m(t) {
                  return s = o, v && r ? d(t) : (r = i = o, c);
                }

                function b() {
                  var t = Fu(),
                      n = y(t);

                  if (r = arguments, i = this, f = t, n) {
                    if (s === o) return function (t) {
                      return l = t, s = Bo(g, e), h ? d(t) : c;
                    }(f);
                    if (p) return s = Bo(g, e), d(f);
                  }

                  return s === o && (s = Bo(g, e)), c;
                }

                return e = ja(e) || 0, la(n) && (h = !!n.leading, u = (p = "maxWait" in n) ? Ln(ja(n.maxWait) || 0, e) : u, v = "trailing" in n ? !!n.trailing : v), b.cancel = function () {
                  s !== o && Ti(s), l = 0, r = f = i = s = o;
                }, b.flush = function () {
                  return s === o ? c : m(Fu());
                }, b;
              }

              var Vu = fi(function (t, e) {
                return Or(t, 1, e);
              }),
                  Gu = fi(function (t, e, n) {
                return Or(t, ja(e) || 0, n);
              });

              function Hu(t, e) {
                if ("function" != typeof t || null != e && "function" != typeof e) throw new Yt(a);

                var n = function n() {
                  var r = arguments,
                      i = e ? e.apply(this, r) : r[0],
                      o = n.cache;
                  if (o.has(i)) return o.get(i);
                  var u = t.apply(this, r);
                  return n.cache = o.set(i, u) || o, u;
                };

                return n.cache = new (Hu.Cache || fr)(), n;
              }

              function Wu(t) {
                if ("function" != typeof t) throw new Yt(a);
                return function () {
                  var e = arguments;

                  switch (e.length) {
                    case 0:
                      return !t.call(this);

                    case 1:
                      return !t.call(this, e[0]);

                    case 2:
                      return !t.call(this, e[0], e[1]);

                    case 3:
                      return !t.call(this, e[0], e[1], e[2]);
                  }

                  return !t.apply(this, e);
                };
              }

              Hu.Cache = fr;
              var qu = Ci(function (t, e) {
                var n = (e = 1 == e.length && ea(e[0]) ? Ve(e[0], an(xo())) : Ve(Pr(e, 1), an(xo()))).length;
                return fi(function (r) {
                  for (var i = -1, o = Nn(r.length, n); ++i < o;) {
                    r[i] = e[i].call(this, r[i]);
                  }

                  return Ne(t, this, r);
                });
              }),
                  Ku = fi(function (t, e) {
                var n = mn(e, bo(Ku));
                return co(t, x, o, e, n);
              }),
                  Ju = fi(function (t, e) {
                var n = mn(e, bo(Ju));
                return co(t, w, o, e, n);
              }),
                  Yu = po(function (t, e) {
                return co(t, k, o, o, o, e);
              });

              function Zu(t, e) {
                return t === e || t !== t && e !== e;
              }

              var Xu = ro($r),
                  Qu = ro(function (t, e) {
                return t >= e;
              }),
                  ta = Wr(function () {
                return arguments;
              }()) ? Wr : function (t) {
                return ha(t) && ne.call(t, "callee") && !Ee.call(t, "callee");
              },
                  ea = n.isArray,
                  na = Ie ? an(Ie) : function (t) {
                return ha(t) && zr(t) == et;
              };

              function ra(t) {
                return null != t && fa(t.length) && !ca(t);
              }

              function ia(t) {
                return ha(t) && ra(t);
              }

              var oa = Cn || jc,
                  ua = Ce ? an(Ce) : function (t) {
                return ha(t) && zr(t) == U;
              };

              function aa(t) {
                if (!ha(t)) return !1;
                var e = zr(t);
                return e == $ || e == z || "string" == typeof t.message && "string" == typeof t.name && !da(t);
              }

              function ca(t) {
                if (!la(t)) return !1;
                var e = zr(t);
                return e == B || e == V || e == F || e == K;
              }

              function sa(t) {
                return "number" == typeof t && t == Oa(t);
              }

              function fa(t) {
                return "number" == typeof t && t > -1 && t % 1 == 0 && t <= A;
              }

              function la(t) {
                var e = typeof t;
                return null != t && ("object" == e || "function" == e);
              }

              function ha(t) {
                return null != t && "object" == typeof t;
              }

              var pa = Pe ? an(Pe) : function (t) {
                return ha(t) && Eo(t) == G;
              };

              function va(t) {
                return "number" == typeof t || ha(t) && zr(t) == H;
              }

              function da(t) {
                if (!ha(t) || zr(t) != q) return !1;
                var e = ke(t);
                if (null === e) return !0;
                var n = ne.call(e, "constructor") && e.constructor;
                return "function" == typeof n && n instanceof n && ee.call(n) == ue;
              }

              var ya = Te ? an(Te) : function (t) {
                return ha(t) && zr(t) == J;
              },
                  ga = Me ? an(Me) : function (t) {
                return ha(t) && Eo(t) == Y;
              };

              function ma(t) {
                return "string" == typeof t || !ea(t) && ha(t) && zr(t) == Z;
              }

              function ba(t) {
                return "symbol" == typeof t || ha(t) && zr(t) == X;
              }

              var xa = Le ? an(Le) : function (t) {
                return ha(t) && fa(t.length) && !!ge[zr(t)];
              },
                  wa = ro(Xr),
                  _a = ro(function (t, e) {
                return t <= e;
              });

              function ka(t) {
                if (!t) return [];
                if (ra(t)) return ma(t) ? wn(t) : zi(t);
                if (Ke && t[Ke]) return function (t) {
                  for (var e, n = []; !(e = t.next()).done;) {
                    n.push(e.value);
                  }

                  return n;
                }(t[Ke]());
                var e = Eo(t);
                return (e == G ? yn : e == Y ? bn : Za)(t);
              }

              function Sa(t) {
                return t ? (t = ja(t)) === j || t === -j ? (t < 0 ? -1 : 1) * R : t === t ? t : 0 : 0 === t ? t : 0;
              }

              function Oa(t) {
                var e = Sa(t),
                    n = e % 1;
                return e === e ? n ? e - n : e : 0;
              }

              function Ea(t) {
                return t ? _r(Oa(t), 0, C) : 0;
              }

              function ja(t) {
                if ("number" == typeof t) return t;
                if (ba(t)) return I;

                if (la(t)) {
                  var e = "function" == typeof t.valueOf ? t.valueOf() : t;
                  t = la(e) ? e + "" : e;
                }

                if ("string" != typeof t) return 0 === t ? t : +t;
                t = t.replace(jt, "");
                var n = Dt.test(t);
                return n || zt.test(t) ? we(t.slice(2), n ? 2 : 8) : Ft.test(t) ? I : +t;
              }

              function Aa(t) {
                return $i(t, Va(t));
              }

              function Ra(t) {
                return null == t ? "" : xi(t);
              }

              var Ia = Vi(function (t, e) {
                if (Lo(e) || ra(e)) $i(e, Ba(e), t);else for (var n in e) {
                  ne.call(e, n) && yr(t, n, e[n]);
                }
              }),
                  Ca = Vi(function (t, e) {
                $i(e, Va(e), t);
              }),
                  Pa = Vi(function (t, e, n, r) {
                $i(e, Va(e), t, r);
              }),
                  Ta = Vi(function (t, e, n, r) {
                $i(e, Ba(e), t, r);
              }),
                  Ma = po(wr),
                  La = fi(function (t, e) {
                t = qt(t);
                var n = -1,
                    r = e.length,
                    i = r > 2 ? e[2] : o;

                for (i && Co(e[0], e[1], i) && (r = 1); ++n < r;) {
                  for (var u = e[n], a = Va(u), c = -1, s = a.length; ++c < s;) {
                    var f = a[c],
                        l = t[f];
                    (l === o || Zu(l, Qt[f]) && !ne.call(t, f)) && (t[f] = u[f]);
                  }
                }

                return t;
              }),
                  Na = fi(function (t) {
                return t.push(o, fo), Ne(Ha, o, t);
              });

              function Fa(t, e, n) {
                var r = null == t ? o : Dr(t, e);
                return r === o ? n : r;
              }

              function Da(t, e) {
                return null != t && jo(t, e, Vr);
              }

              var Ua = Xi(function (t, e, n) {
                null != e && "function" != typeof e.toString && (e = oe.call(e)), t[e] = n;
              }, lc(vc)),
                  za = Xi(function (t, e, n) {
                null != e && "function" != typeof e.toString && (e = oe.call(e)), ne.call(t, e) ? t[e].push(n) : t[e] = [n];
              }, xo),
                  $a = fi(Hr);

              function Ba(t) {
                return ra(t) ? pr(t) : Zr(t);
              }

              function Va(t) {
                return ra(t) ? pr(t, !0) : function (t) {
                  if (!la(t)) return function (t) {
                    var e = [];
                    if (null != t) for (var n in qt(t)) {
                      e.push(n);
                    }
                    return e;
                  }(t);
                  var e = Lo(t),
                      n = [];

                  for (var r in t) {
                    ("constructor" != r || !e && ne.call(t, r)) && n.push(r);
                  }

                  return n;
                }(t);
              }

              var Ga = Vi(function (t, e, n) {
                ni(t, e, n);
              }),
                  Ha = Vi(function (t, e, n, r) {
                ni(t, e, n, r);
              }),
                  Wa = po(function (t, e) {
                var n = {};
                if (null == t) return n;
                var r = !1;
                e = Ve(e, function (e) {
                  return e = Ii(e, t), r || (r = e.length > 1), e;
                }), $i(t, yo(t), n), r && (n = kr(n, f | l | h, lo));

                for (var i = e.length; i--;) {
                  _i(n, e[i]);
                }

                return n;
              }),
                  qa = po(function (t, e) {
                return null == t ? {} : function (t, e) {
                  return oi(t, e, function (e, n) {
                    return Da(t, n);
                  });
                }(t, e);
              });

              function Ka(t, e) {
                if (null == t) return {};
                var n = Ve(yo(t), function (t) {
                  return [t];
                });
                return e = xo(e), oi(t, n, function (t, n) {
                  return e(t, n[0]);
                });
              }

              var Ja = ao(Ba),
                  Ya = ao(Va);

              function Za(t) {
                return null == t ? [] : cn(t, Ba(t));
              }

              var Xa = qi(function (t, e, n) {
                return e = e.toLowerCase(), t + (n ? Qa(e) : e);
              });

              function Qa(t) {
                return ac(Ra(t).toLowerCase());
              }

              function tc(t) {
                return (t = Ra(t)) && t.replace(Bt, hn).replace(fe, "");
              }

              var ec = qi(function (t, e, n) {
                return t + (n ? "-" : "") + e.toLowerCase();
              }),
                  nc = qi(function (t, e, n) {
                return t + (n ? " " : "") + e.toLowerCase();
              }),
                  rc = Wi("toLowerCase"),
                  ic = qi(function (t, e, n) {
                return t + (n ? "_" : "") + e.toLowerCase();
              }),
                  oc = qi(function (t, e, n) {
                return t + (n ? " " : "") + ac(e);
              }),
                  uc = qi(function (t, e, n) {
                return t + (n ? " " : "") + e.toUpperCase();
              }),
                  ac = Wi("toUpperCase");

              function cc(t, e, n) {
                return t = Ra(t), (e = n ? o : e) === o ? function (t) {
                  return ve.test(t);
                }(t) ? function (t) {
                  return t.match(he) || [];
                }(t) : function (t) {
                  return t.match(Tt) || [];
                }(t) : t.match(e) || [];
              }

              var sc = fi(function (t, e) {
                try {
                  return Ne(t, o, e);
                } catch (n) {
                  return aa(n) ? n : new i(n);
                }
              }),
                  fc = po(function (t, e) {
                return De(e, function (e) {
                  e = Ko(e), xr(t, e, zu(t[e], t));
                }), t;
              });

              function lc(t) {
                return function () {
                  return t;
                };
              }

              var hc = Yi(),
                  pc = Yi(!0);

              function vc(t) {
                return t;
              }

              function dc(t) {
                return Yr("function" == typeof t ? t : kr(t, f));
              }

              var yc = fi(function (t, e) {
                return function (n) {
                  return Hr(n, t, e);
                };
              }),
                  gc = fi(function (t, e) {
                return function (n) {
                  return Hr(t, n, e);
                };
              });

              function mc(t, e, n) {
                var r = Ba(e),
                    i = Fr(e, r);
                null != n || la(e) && (i.length || !r.length) || (n = e, e = t, t = this, i = Fr(e, Ba(e)));
                var o = !(la(n) && "chain" in n) || !!n.chain,
                    u = ca(t);
                return De(i, function (n) {
                  var r = e[n];
                  t[n] = r, u && (t.prototype[n] = function () {
                    var e = this.__chain__;

                    if (o || e) {
                      var n = t(this.__wrapped__);
                      return (n.__actions__ = zi(this.__actions__)).push({
                        func: r,
                        args: arguments,
                        thisArg: t
                      }), n.__chain__ = e, n;
                    }

                    return r.apply(t, Ge([this.value()], arguments));
                  });
                }), t;
              }

              function bc() {}

              var xc = to(Ve),
                  wc = to(Ue),
                  _c = to(qe);

              function kc(t) {
                return Po(t) ? en(Ko(t)) : function (t) {
                  return function (e) {
                    return Dr(e, t);
                  };
                }(t);
              }

              var Sc = no(),
                  Oc = no(!0);

              function Ec() {
                return [];
              }

              function jc() {
                return !1;
              }

              var Ac = Qi(function (t, e) {
                return t + e;
              }, 0),
                  Rc = oo("ceil"),
                  Ic = Qi(function (t, e) {
                return t / e;
              }, 1),
                  Cc = oo("floor"),
                  Pc = Qi(function (t, e) {
                return t * e;
              }, 1),
                  Tc = oo("round"),
                  Mc = Qi(function (t, e) {
                return t - e;
              }, 0);
              return rr.after = function (t, e) {
                if ("function" != typeof e) throw new Yt(a);
                return t = Oa(t), function () {
                  if (--t < 1) return e.apply(this, arguments);
                };
              }, rr.ary = Du, rr.assign = Ia, rr.assignIn = Ca, rr.assignInWith = Pa, rr.assignWith = Ta, rr.at = Ma, rr.before = Uu, rr.bind = zu, rr.bindAll = fc, rr.bindKey = $u, rr.castArray = function () {
                if (!arguments.length) return [];
                var t = arguments[0];
                return ea(t) ? t : [t];
              }, rr.chain = ku, rr.chunk = function (t, e, r) {
                e = (r ? Co(t, e, r) : e === o) ? 1 : Ln(Oa(e), 0);
                var i = null == t ? 0 : t.length;
                if (!i || e < 1) return [];

                for (var u = 0, a = 0, c = n(An(i / e)); u < i;) {
                  c[a++] = vi(t, u, u += e);
                }

                return c;
              }, rr.compact = function (t) {
                for (var e = -1, n = null == t ? 0 : t.length, r = 0, i = []; ++e < n;) {
                  var o = t[e];
                  o && (i[r++] = o);
                }

                return i;
              }, rr.concat = function () {
                var t = arguments.length;
                if (!t) return [];

                for (var e = n(t - 1), r = arguments[0], i = t; i--;) {
                  e[i - 1] = arguments[i];
                }

                return Ge(ea(r) ? zi(r) : [r], Pr(e, 1));
              }, rr.cond = function (t) {
                var e = null == t ? 0 : t.length,
                    n = xo();
                return t = e ? Ve(t, function (t) {
                  if ("function" != typeof t[1]) throw new Yt(a);
                  return [n(t[0]), t[1]];
                }) : [], fi(function (n) {
                  for (var r = -1; ++r < e;) {
                    var i = t[r];
                    if (Ne(i[0], this, n)) return Ne(i[1], this, n);
                  }
                });
              }, rr.conforms = function (t) {
                return function (t) {
                  var e = Ba(t);
                  return function (n) {
                    return Sr(n, t, e);
                  };
                }(kr(t, f));
              }, rr.constant = lc, rr.countBy = Eu, rr.create = function (t, e) {
                var n = ir(t);
                return null == e ? n : br(n, e);
              }, rr.curry = function t(e, n, r) {
                var i = co(e, m, o, o, o, o, o, n = r ? o : n);
                return i.placeholder = t.placeholder, i;
              }, rr.curryRight = function t(e, n, r) {
                var i = co(e, b, o, o, o, o, o, n = r ? o : n);
                return i.placeholder = t.placeholder, i;
              }, rr.debounce = Bu, rr.defaults = La, rr.defaultsDeep = Na, rr.defer = Vu, rr.delay = Gu, rr.difference = Zo, rr.differenceBy = Xo, rr.differenceWith = Qo, rr.drop = function (t, e, n) {
                var r = null == t ? 0 : t.length;
                return r ? vi(t, (e = n || e === o ? 1 : Oa(e)) < 0 ? 0 : e, r) : [];
              }, rr.dropRight = function (t, e, n) {
                var r = null == t ? 0 : t.length;
                return r ? vi(t, 0, (e = r - (e = n || e === o ? 1 : Oa(e))) < 0 ? 0 : e) : [];
              }, rr.dropRightWhile = function (t, e) {
                return t && t.length ? Si(t, xo(e, 3), !0, !0) : [];
              }, rr.dropWhile = function (t, e) {
                return t && t.length ? Si(t, xo(e, 3), !0) : [];
              }, rr.fill = function (t, e, n, r) {
                var i = null == t ? 0 : t.length;
                return i ? (n && "number" != typeof n && Co(t, e, n) && (n = 0, r = i), function (t, e, n, r) {
                  var i = t.length;

                  for ((n = Oa(n)) < 0 && (n = -n > i ? 0 : i + n), (r = r === o || r > i ? i : Oa(r)) < 0 && (r += i), r = n > r ? 0 : Ea(r); n < r;) {
                    t[n++] = e;
                  }

                  return t;
                }(t, e, n, r)) : [];
              }, rr.filter = function (t, e) {
                return (ea(t) ? ze : Cr)(t, xo(e, 3));
              }, rr.flatMap = function (t, e) {
                return Pr(Mu(t, e), 1);
              }, rr.flatMapDeep = function (t, e) {
                return Pr(Mu(t, e), j);
              }, rr.flatMapDepth = function (t, e, n) {
                return n = n === o ? 1 : Oa(n), Pr(Mu(t, e), n);
              }, rr.flatten = nu, rr.flattenDeep = function (t) {
                return null != t && t.length ? Pr(t, j) : [];
              }, rr.flattenDepth = function (t, e) {
                return null != t && t.length ? Pr(t, e = e === o ? 1 : Oa(e)) : [];
              }, rr.flip = function (t) {
                return co(t, S);
              }, rr.flow = hc, rr.flowRight = pc, rr.fromPairs = function (t) {
                for (var e = -1, n = null == t ? 0 : t.length, r = {}; ++e < n;) {
                  var i = t[e];
                  r[i[0]] = i[1];
                }

                return r;
              }, rr.functions = function (t) {
                return null == t ? [] : Fr(t, Ba(t));
              }, rr.functionsIn = function (t) {
                return null == t ? [] : Fr(t, Va(t));
              }, rr.groupBy = Cu, rr.initial = function (t) {
                return null != t && t.length ? vi(t, 0, -1) : [];
              }, rr.intersection = iu, rr.intersectionBy = ou, rr.intersectionWith = uu, rr.invert = Ua, rr.invertBy = za, rr.invokeMap = Pu, rr.iteratee = dc, rr.keyBy = Tu, rr.keys = Ba, rr.keysIn = Va, rr.map = Mu, rr.mapKeys = function (t, e) {
                var n = {};
                return e = xo(e, 3), Lr(t, function (t, r, i) {
                  xr(n, e(t, r, i), t);
                }), n;
              }, rr.mapValues = function (t, e) {
                var n = {};
                return e = xo(e, 3), Lr(t, function (t, r, i) {
                  xr(n, r, e(t, r, i));
                }), n;
              }, rr.matches = function (t) {
                return ti(kr(t, f));
              }, rr.matchesProperty = function (t, e) {
                return ei(t, kr(e, f));
              }, rr.memoize = Hu, rr.merge = Ga, rr.mergeWith = Ha, rr.method = yc, rr.methodOf = gc, rr.mixin = mc, rr.negate = Wu, rr.nthArg = function (t) {
                return t = Oa(t), fi(function (e) {
                  return ri(e, t);
                });
              }, rr.omit = Wa, rr.omitBy = function (t, e) {
                return Ka(t, Wu(xo(e)));
              }, rr.once = function (t) {
                return Uu(2, t);
              }, rr.orderBy = function (t, e, n, r) {
                return null == t ? [] : (ea(e) || (e = null == e ? [] : [e]), ea(n = r ? o : n) || (n = null == n ? [] : [n]), ii(t, e, n));
              }, rr.over = xc, rr.overArgs = qu, rr.overEvery = wc, rr.overSome = _c, rr.partial = Ku, rr.partialRight = Ju, rr.partition = Lu, rr.pick = qa, rr.pickBy = Ka, rr.property = kc, rr.propertyOf = function (t) {
                return function (e) {
                  return null == t ? o : Dr(t, e);
                };
              }, rr.pull = cu, rr.pullAll = su, rr.pullAllBy = function (t, e, n) {
                return t && t.length && e && e.length ? ui(t, e, xo(n, 2)) : t;
              }, rr.pullAllWith = function (t, e, n) {
                return t && t.length && e && e.length ? ui(t, e, o, n) : t;
              }, rr.pullAt = fu, rr.range = Sc, rr.rangeRight = Oc, rr.rearg = Yu, rr.reject = function (t, e) {
                return (ea(t) ? ze : Cr)(t, Wu(xo(e, 3)));
              }, rr.remove = function (t, e) {
                var n = [];
                if (!t || !t.length) return n;
                var r = -1,
                    i = [],
                    o = t.length;

                for (e = xo(e, 3); ++r < o;) {
                  var u = t[r];
                  e(u, r, t) && (n.push(u), i.push(r));
                }

                return ai(t, i), n;
              }, rr.rest = function (t, e) {
                if ("function" != typeof t) throw new Yt(a);
                return fi(t, e = e === o ? e : Oa(e));
              }, rr.reverse = lu, rr.sampleSize = function (t, e, n) {
                return e = (n ? Co(t, e, n) : e === o) ? 1 : Oa(e), (ea(t) ? function (t, e) {
                  return Wo(zi(t), _r(e, 0, t.length));
                } : function (t, e) {
                  var n = Za(t);
                  return Wo(n, _r(e, 0, n.length));
                })(t, e);
              }, rr.set = function (t, e, n) {
                return null == t ? t : li(t, e, n);
              }, rr.setWith = function (t, e, n, r) {
                return r = "function" == typeof r ? r : o, null == t ? t : li(t, e, n, r);
              }, rr.shuffle = function (t) {
                return (ea(t) ? function (t) {
                  return Wo(zi(t));
                } : function (t) {
                  return Wo(Za(t));
                })(t);
              }, rr.slice = function (t, e, n) {
                var r = null == t ? 0 : t.length;
                return r ? (n && "number" != typeof n && Co(t, e, n) ? (e = 0, n = r) : (e = null == e ? 0 : Oa(e), n = n === o ? r : Oa(n)), vi(t, e, n)) : [];
              }, rr.sortBy = Nu, rr.sortedUniq = function (t) {
                return t && t.length ? mi(t) : [];
              }, rr.sortedUniqBy = function (t, e) {
                return t && t.length ? mi(t, xo(e, 2)) : [];
              }, rr.split = function (t, e, n) {
                return n && "number" != typeof n && Co(t, e, n) && (e = n = o), (n = n === o ? C : n >>> 0) ? (t = Ra(t)) && ("string" == typeof e || null != e && !ya(e)) && !(e = xi(e)) && dn(t) ? Pi(wn(t), 0, n) : t.split(e, n) : [];
              }, rr.spread = function (t, e) {
                if ("function" != typeof t) throw new Yt(a);
                return e = null == e ? 0 : Ln(Oa(e), 0), fi(function (n) {
                  var r = n[e],
                      i = Pi(n, 0, e);
                  return r && Ge(i, r), Ne(t, this, i);
                });
              }, rr.tail = function (t) {
                var e = null == t ? 0 : t.length;
                return e ? vi(t, 1, e) : [];
              }, rr.take = function (t, e, n) {
                return t && t.length ? vi(t, 0, (e = n || e === o ? 1 : Oa(e)) < 0 ? 0 : e) : [];
              }, rr.takeRight = function (t, e, n) {
                var r = null == t ? 0 : t.length;
                return r ? vi(t, (e = r - (e = n || e === o ? 1 : Oa(e))) < 0 ? 0 : e, r) : [];
              }, rr.takeRightWhile = function (t, e) {
                return t && t.length ? Si(t, xo(e, 3), !1, !0) : [];
              }, rr.takeWhile = function (t, e) {
                return t && t.length ? Si(t, xo(e, 3)) : [];
              }, rr.tap = function (t, e) {
                return e(t), t;
              }, rr.throttle = function (t, e, n) {
                var r = !0,
                    i = !0;
                if ("function" != typeof t) throw new Yt(a);
                return la(n) && (r = "leading" in n ? !!n.leading : r, i = "trailing" in n ? !!n.trailing : i), Bu(t, e, {
                  leading: r,
                  maxWait: e,
                  trailing: i
                });
              }, rr.thru = Su, rr.toArray = ka, rr.toPairs = Ja, rr.toPairsIn = Ya, rr.toPath = function (t) {
                return ea(t) ? Ve(t, Ko) : ba(t) ? [t] : zi(qo(Ra(t)));
              }, rr.toPlainObject = Aa, rr.transform = function (t, e, n) {
                var r = ea(t),
                    i = r || oa(t) || xa(t);

                if (e = xo(e, 4), null == n) {
                  var o = t && t.constructor;
                  n = i ? r ? new o() : [] : la(t) && ca(o) ? ir(ke(t)) : {};
                }

                return (i ? De : Lr)(t, function (t, r, i) {
                  return e(n, t, r, i);
                }), n;
              }, rr.unary = function (t) {
                return Du(t, 1);
              }, rr.union = hu, rr.unionBy = pu, rr.unionWith = vu, rr.uniq = function (t) {
                return t && t.length ? wi(t) : [];
              }, rr.uniqBy = function (t, e) {
                return t && t.length ? wi(t, xo(e, 2)) : [];
              }, rr.uniqWith = function (t, e) {
                return e = "function" == typeof e ? e : o, t && t.length ? wi(t, o, e) : [];
              }, rr.unset = function (t, e) {
                return null == t || _i(t, e);
              }, rr.unzip = du, rr.unzipWith = yu, rr.update = function (t, e, n) {
                return null == t ? t : ki(t, e, Ri(n));
              }, rr.updateWith = function (t, e, n, r) {
                return r = "function" == typeof r ? r : o, null == t ? t : ki(t, e, Ri(n), r);
              }, rr.values = Za, rr.valuesIn = function (t) {
                return null == t ? [] : cn(t, Va(t));
              }, rr.without = gu, rr.words = cc, rr.wrap = function (t, e) {
                return Ku(Ri(e), t);
              }, rr.xor = mu, rr.xorBy = bu, rr.xorWith = xu, rr.zip = wu, rr.zipObject = function (t, e) {
                return ji(t || [], e || [], yr);
              }, rr.zipObjectDeep = function (t, e) {
                return ji(t || [], e || [], li);
              }, rr.zipWith = _u, rr.entries = Ja, rr.entriesIn = Ya, rr.extend = Ca, rr.extendWith = Pa, mc(rr, rr), rr.add = Ac, rr.attempt = sc, rr.camelCase = Xa, rr.capitalize = Qa, rr.ceil = Rc, rr.clamp = function (t, e, n) {
                return n === o && (n = e, e = o), n !== o && (n = (n = ja(n)) === n ? n : 0), e !== o && (e = (e = ja(e)) === e ? e : 0), _r(ja(t), e, n);
              }, rr.clone = function (t) {
                return kr(t, h);
              }, rr.cloneDeep = function (t) {
                return kr(t, f | h);
              }, rr.cloneDeepWith = function (t, e) {
                return kr(t, f | h, e = "function" == typeof e ? e : o);
              }, rr.cloneWith = function (t, e) {
                return kr(t, h, e = "function" == typeof e ? e : o);
              }, rr.conformsTo = function (t, e) {
                return null == e || Sr(t, e, Ba(e));
              }, rr.deburr = tc, rr.defaultTo = function (t, e) {
                return null == t || t !== t ? e : t;
              }, rr.divide = Ic, rr.endsWith = function (t, e, n) {
                t = Ra(t), e = xi(e);
                var r = t.length,
                    i = n = n === o ? r : _r(Oa(n), 0, r);
                return (n -= e.length) >= 0 && t.slice(n, i) == e;
              }, rr.eq = Zu, rr.escape = function (t) {
                return (t = Ra(t)) && mt.test(t) ? t.replace(yt, pn) : t;
              }, rr.escapeRegExp = function (t) {
                return (t = Ra(t)) && Et.test(t) ? t.replace(Ot, "\\$&") : t;
              }, rr.every = function (t, e, n) {
                var r = ea(t) ? Ue : Rr;
                return n && Co(t, e, n) && (e = o), r(t, xo(e, 3));
              }, rr.find = ju, rr.findIndex = tu, rr.findKey = function (t, e) {
                return Je(t, xo(e, 3), Lr);
              }, rr.findLast = Au, rr.findLastIndex = eu, rr.findLastKey = function (t, e) {
                return Je(t, xo(e, 3), Nr);
              }, rr.floor = Cc, rr.forEach = Ru, rr.forEachRight = Iu, rr.forIn = function (t, e) {
                return null == t ? t : Tr(t, xo(e, 3), Va);
              }, rr.forInRight = function (t, e) {
                return null == t ? t : Mr(t, xo(e, 3), Va);
              }, rr.forOwn = function (t, e) {
                return t && Lr(t, xo(e, 3));
              }, rr.forOwnRight = function (t, e) {
                return t && Nr(t, xo(e, 3));
              }, rr.get = Fa, rr.gt = Xu, rr.gte = Qu, rr.has = function (t, e) {
                return null != t && jo(t, e, Br);
              }, rr.hasIn = Da, rr.head = ru, rr.identity = vc, rr.includes = function (t, e, n, r) {
                t = ra(t) ? t : Za(t), n = n && !r ? Oa(n) : 0;
                var i = t.length;
                return n < 0 && (n = Ln(i + n, 0)), ma(t) ? n <= i && t.indexOf(e, n) > -1 : !!i && Ze(t, e, n) > -1;
              }, rr.indexOf = function (t, e, n) {
                var r = null == t ? 0 : t.length;
                if (!r) return -1;
                var i = null == n ? 0 : Oa(n);
                return i < 0 && (i = Ln(r + i, 0)), Ze(t, e, i);
              }, rr.inRange = function (t, e, n) {
                return e = Sa(e), n === o ? (n = e, e = 0) : n = Sa(n), function (t, e, n) {
                  return t >= Nn(e, n) && t < Ln(e, n);
                }(t = ja(t), e, n);
              }, rr.invoke = $a, rr.isArguments = ta, rr.isArray = ea, rr.isArrayBuffer = na, rr.isArrayLike = ra, rr.isArrayLikeObject = ia, rr.isBoolean = function (t) {
                return !0 === t || !1 === t || ha(t) && zr(t) == D;
              }, rr.isBuffer = oa, rr.isDate = ua, rr.isElement = function (t) {
                return ha(t) && 1 === t.nodeType && !da(t);
              }, rr.isEmpty = function (t) {
                if (null == t) return !0;
                if (ra(t) && (ea(t) || "string" == typeof t || "function" == typeof t.splice || oa(t) || xa(t) || ta(t))) return !t.length;
                var e = Eo(t);
                if (e == G || e == Y) return !t.size;
                if (Lo(t)) return !Zr(t).length;

                for (var n in t) {
                  if (ne.call(t, n)) return !1;
                }

                return !0;
              }, rr.isEqual = function (t, e) {
                return qr(t, e);
              }, rr.isEqualWith = function (t, e, n) {
                var r = (n = "function" == typeof n ? n : o) ? n(t, e) : o;
                return r === o ? qr(t, e, o, n) : !!r;
              }, rr.isError = aa, rr.isFinite = function (t) {
                return "number" == typeof t && Pn(t);
              }, rr.isFunction = ca, rr.isInteger = sa, rr.isLength = fa, rr.isMap = pa, rr.isMatch = function (t, e) {
                return t === e || Kr(t, e, _o(e));
              }, rr.isMatchWith = function (t, e, n) {
                return n = "function" == typeof n ? n : o, Kr(t, e, _o(e), n);
              }, rr.isNaN = function (t) {
                return va(t) && t != +t;
              }, rr.isNative = function (t) {
                if (Mo(t)) throw new i("Unsupported core-js use. Try https://npms.io/search?q=ponyfill.");
                return Jr(t);
              }, rr.isNil = function (t) {
                return null == t;
              }, rr.isNull = function (t) {
                return null === t;
              }, rr.isNumber = va, rr.isObject = la, rr.isObjectLike = ha, rr.isPlainObject = da, rr.isRegExp = ya, rr.isSafeInteger = function (t) {
                return sa(t) && t >= -A && t <= A;
              }, rr.isSet = ga, rr.isString = ma, rr.isSymbol = ba, rr.isTypedArray = xa, rr.isUndefined = function (t) {
                return t === o;
              }, rr.isWeakMap = function (t) {
                return ha(t) && Eo(t) == tt;
              }, rr.isWeakSet = function (t) {
                return ha(t) && "[object WeakSet]" == zr(t);
              }, rr.join = function (t, e) {
                return null == t ? "" : Tn.call(t, e);
              }, rr.kebabCase = ec, rr.last = au, rr.lastIndexOf = function (t, e, n) {
                var r = null == t ? 0 : t.length;
                if (!r) return -1;
                var i = r;
                return n !== o && (i = (i = Oa(n)) < 0 ? Ln(r + i, 0) : Nn(i, r - 1)), e === e ? function (t, e, n) {
                  for (var r = i + 1; r--;) {
                    if (t[r] === e) return r;
                  }

                  return r;
                }(t, e) : Ye(t, Qe, i, !0);
              }, rr.lowerCase = nc, rr.lowerFirst = rc, rr.lt = wa, rr.lte = _a, rr.max = function (t) {
                return t && t.length ? Ir(t, vc, $r) : o;
              }, rr.maxBy = function (t, e) {
                return t && t.length ? Ir(t, xo(e, 2), $r) : o;
              }, rr.mean = function (t) {
                return tn(t, vc);
              }, rr.meanBy = function (t, e) {
                return tn(t, xo(e, 2));
              }, rr.min = function (t) {
                return t && t.length ? Ir(t, vc, Xr) : o;
              }, rr.minBy = function (t, e) {
                return t && t.length ? Ir(t, xo(e, 2), Xr) : o;
              }, rr.stubArray = Ec, rr.stubFalse = jc, rr.stubObject = function () {
                return {};
              }, rr.stubString = function () {
                return "";
              }, rr.stubTrue = function () {
                return !0;
              }, rr.multiply = Pc, rr.nth = function (t, e) {
                return t && t.length ? ri(t, Oa(e)) : o;
              }, rr.noConflict = function () {
                return Se._ === this && (Se._ = ae), this;
              }, rr.noop = bc, rr.now = Fu, rr.pad = function (t, e, n) {
                t = Ra(t);
                var r = (e = Oa(e)) ? xn(t) : 0;
                if (!e || r >= e) return t;
                var i = (e - r) / 2;
                return eo(Rn(i), n) + t + eo(An(i), n);
              }, rr.padEnd = function (t, e, n) {
                t = Ra(t);
                var r = (e = Oa(e)) ? xn(t) : 0;
                return e && r < e ? t + eo(e - r, n) : t;
              }, rr.padStart = function (t, e, n) {
                t = Ra(t);
                var r = (e = Oa(e)) ? xn(t) : 0;
                return e && r < e ? eo(e - r, n) + t : t;
              }, rr.parseInt = function (t, e, n) {
                return n || null == e ? e = 0 : e && (e = +e), Dn(Ra(t).replace(At, ""), e || 0);
              }, rr.random = function (t, e, n) {
                if (n && "boolean" != typeof n && Co(t, e, n) && (e = n = o), n === o && ("boolean" == typeof e ? (n = e, e = o) : "boolean" == typeof t && (n = t, t = o)), t === o && e === o ? (t = 0, e = 1) : (t = Sa(t), e === o ? (e = t, t = 0) : e = Sa(e)), t > e) {
                  var r = t;
                  t = e, e = r;
                }

                if (n || t % 1 || e % 1) {
                  var i = Un();
                  return Nn(t + i * (e - t + xe("1e-" + ((i + "").length - 1))), e);
                }

                return ci(t, e);
              }, rr.reduce = function (t, e, n) {
                var r = ea(t) ? He : rn,
                    i = arguments.length < 3;
                return r(t, xo(e, 4), n, i, jr);
              }, rr.reduceRight = function (t, e, n) {
                var r = ea(t) ? We : rn,
                    i = arguments.length < 3;
                return r(t, xo(e, 4), n, i, Ar);
              }, rr.repeat = function (t, e, n) {
                return e = (n ? Co(t, e, n) : e === o) ? 1 : Oa(e), si(Ra(t), e);
              }, rr.replace = function () {
                var t = arguments,
                    e = Ra(t[0]);
                return t.length < 3 ? e : e.replace(t[1], t[2]);
              }, rr.result = function (t, e, n) {
                var r = -1,
                    i = (e = Ii(e, t)).length;

                for (i || (i = 1, t = o); ++r < i;) {
                  var u = null == t ? o : t[Ko(e[r])];
                  u === o && (r = i, u = n), t = ca(u) ? u.call(t) : u;
                }

                return t;
              }, rr.round = Tc, rr.runInContext = t, rr.sample = function (t) {
                return (ea(t) ? vr : function (t) {
                  return vr(Za(t));
                })(t);
              }, rr.size = function (t) {
                if (null == t) return 0;
                if (ra(t)) return ma(t) ? xn(t) : t.length;
                var e = Eo(t);
                return e == G || e == Y ? t.size : Zr(t).length;
              }, rr.snakeCase = ic, rr.some = function (t, e, n) {
                var r = ea(t) ? qe : di;
                return n && Co(t, e, n) && (e = o), r(t, xo(e, 3));
              }, rr.sortedIndex = function (t, e) {
                return yi(t, e);
              }, rr.sortedIndexBy = function (t, e, n) {
                return gi(t, e, xo(n, 2));
              }, rr.sortedIndexOf = function (t, e) {
                var n = null == t ? 0 : t.length;

                if (n) {
                  var r = yi(t, e);
                  if (r < n && Zu(t[r], e)) return r;
                }

                return -1;
              }, rr.sortedLastIndex = function (t, e) {
                return yi(t, e, !0);
              }, rr.sortedLastIndexBy = function (t, e, n) {
                return gi(t, e, xo(n, 2), !0);
              }, rr.sortedLastIndexOf = function (t, e) {
                if (null != t && t.length) {
                  var n = yi(t, e, !0) - 1;
                  if (Zu(t[n], e)) return n;
                }

                return -1;
              }, rr.startCase = oc, rr.startsWith = function (t, e, n) {
                return t = Ra(t), n = null == n ? 0 : _r(Oa(n), 0, t.length), e = xi(e), t.slice(n, n + e.length) == e;
              }, rr.subtract = Mc, rr.sum = function (t) {
                return t && t.length ? on(t, vc) : 0;
              }, rr.sumBy = function (t, e) {
                return t && t.length ? on(t, xo(e, 2)) : 0;
              }, rr.template = function (t, e, n) {
                var r = rr.templateSettings;
                n && Co(t, e, n) && (e = o), t = Ra(t), e = Pa({}, e, r, so);
                var i,
                    u,
                    a = Pa({}, e.imports, r.imports, so),
                    c = Ba(a),
                    s = cn(a, c),
                    f = 0,
                    l = e.interpolate || Vt,
                    h = "__p += '",
                    p = Kt((e.escape || Vt).source + "|" + l.source + "|" + (l === wt ? Lt : Vt).source + "|" + (e.evaluate || Vt).source + "|$", "g"),
                    v = "//# sourceURL=" + ("sourceURL" in e ? e.sourceURL : "lodash.templateSources[" + ++ye + "]") + "\n";
                t.replace(p, function (e, n, r, o, a, c) {
                  return r || (r = o), h += t.slice(f, c).replace(Gt, vn), n && (i = !0, h += "' +\n__e(" + n + ") +\n'"), a && (u = !0, h += "';\n" + a + ";\n__p += '"), r && (h += "' +\n((__t = (" + r + ")) == null ? '' : __t) +\n'"), f = c + e.length, e;
                }), h += "';\n";
                var d = e.variable;
                d || (h = "with (obj) {\n" + h + "\n}\n"), h = (u ? h.replace(ht, "") : h).replace(pt, "$1").replace(vt, "$1;"), h = "function(" + (d || "obj") + ") {\n" + (d ? "" : "obj || (obj = {});\n") + "var __t, __p = ''" + (i ? ", __e = _.escape" : "") + (u ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n" : ";\n") + h + "return __p\n}";
                var y = sc(function () {
                  return Ht(c, v + "return " + h).apply(o, s);
                });
                if (y.source = h, aa(y)) throw y;
                return y;
              }, rr.times = function (t, e) {
                if ((t = Oa(t)) < 1 || t > A) return [];
                var n = C,
                    r = Nn(t, C);
                e = xo(e), t -= C;

                for (var i = un(r, e); ++n < t;) {
                  e(n);
                }

                return i;
              }, rr.toFinite = Sa, rr.toInteger = Oa, rr.toLength = Ea, rr.toLower = function (t) {
                return Ra(t).toLowerCase();
              }, rr.toNumber = ja, rr.toSafeInteger = function (t) {
                return t ? _r(Oa(t), -A, A) : 0 === t ? t : 0;
              }, rr.toString = Ra, rr.toUpper = function (t) {
                return Ra(t).toUpperCase();
              }, rr.trim = function (t, e, n) {
                if ((t = Ra(t)) && (n || e === o)) return t.replace(jt, "");
                if (!t || !(e = xi(e))) return t;
                var r = wn(t),
                    i = wn(e);
                return Pi(r, fn(r, i), ln(r, i) + 1).join("");
              }, rr.trimEnd = function (t, e, n) {
                if ((t = Ra(t)) && (n || e === o)) return t.replace(Rt, "");
                if (!t || !(e = xi(e))) return t;
                var r = wn(t);
                return Pi(r, 0, ln(r, wn(e)) + 1).join("");
              }, rr.trimStart = function (t, e, n) {
                if ((t = Ra(t)) && (n || e === o)) return t.replace(At, "");
                if (!t || !(e = xi(e))) return t;
                var r = wn(t);
                return Pi(r, fn(r, wn(e))).join("");
              }, rr.truncate = function (t, e) {
                var n = 30,
                    r = "...";

                if (la(e)) {
                  var i = "separator" in e ? e.separator : i;
                  n = "length" in e ? Oa(e.length) : n, r = "omission" in e ? xi(e.omission) : r;
                }

                var u = (t = Ra(t)).length;

                if (dn(t)) {
                  var a = wn(t);
                  u = a.length;
                }

                if (n >= u) return t;
                var c = n - xn(r);
                if (c < 1) return r;
                var s = a ? Pi(a, 0, c).join("") : t.slice(0, c);
                if (i === o) return s + r;

                if (a && (c += s.length - c), ya(i)) {
                  if (t.slice(c).search(i)) {
                    var f,
                        l = s;

                    for (i.global || (i = Kt(i.source, Ra(Nt.exec(i)) + "g")), i.lastIndex = 0; f = i.exec(l);) {
                      var h = f.index;
                    }

                    s = s.slice(0, h === o ? c : h);
                  }
                } else if (t.indexOf(xi(i), c) != c) {
                  var p = s.lastIndexOf(i);
                  p > -1 && (s = s.slice(0, p));
                }

                return s + r;
              }, rr.unescape = function (t) {
                return (t = Ra(t)) && gt.test(t) ? t.replace(dt, _n) : t;
              }, rr.uniqueId = function (t) {
                var e = ++re;
                return Ra(t) + e;
              }, rr.upperCase = uc, rr.upperFirst = ac, rr.each = Ru, rr.eachRight = Iu, rr.first = ru, mc(rr, function () {
                var t = {};
                return Lr(rr, function (e, n) {
                  ne.call(rr.prototype, n) || (t[n] = e);
                }), t;
              }(), {
                chain: !1
              }), rr.VERSION = "4.17.11", De(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function (t) {
                rr[t].placeholder = rr;
              }), De(["drop", "take"], function (t, e) {
                ar.prototype[t] = function (n) {
                  n = n === o ? 1 : Ln(Oa(n), 0);
                  var r = this.__filtered__ && !e ? new ar(this) : this.clone();
                  return r.__filtered__ ? r.__takeCount__ = Nn(n, r.__takeCount__) : r.__views__.push({
                    size: Nn(n, C),
                    type: t + (r.__dir__ < 0 ? "Right" : "")
                  }), r;
                }, ar.prototype[t + "Right"] = function (e) {
                  return this.reverse()[t](e).reverse();
                };
              }), De(["filter", "map", "takeWhile"], function (t, e) {
                var n = e + 1,
                    r = 1 == n || 3 == n;

                ar.prototype[t] = function (t) {
                  var e = this.clone();
                  return e.__iteratees__.push({
                    iteratee: xo(t, 3),
                    type: n
                  }), e.__filtered__ = e.__filtered__ || r, e;
                };
              }), De(["head", "last"], function (t, e) {
                var n = "take" + (e ? "Right" : "");

                ar.prototype[t] = function () {
                  return this[n](1).value()[0];
                };
              }), De(["initial", "tail"], function (t, e) {
                var n = "drop" + (e ? "" : "Right");

                ar.prototype[t] = function () {
                  return this.__filtered__ ? new ar(this) : this[n](1);
                };
              }), ar.prototype.compact = function () {
                return this.filter(vc);
              }, ar.prototype.find = function (t) {
                return this.filter(t).head();
              }, ar.prototype.findLast = function (t) {
                return this.reverse().find(t);
              }, ar.prototype.invokeMap = fi(function (t, e) {
                return "function" == typeof t ? new ar(this) : this.map(function (n) {
                  return Hr(n, t, e);
                });
              }), ar.prototype.reject = function (t) {
                return this.filter(Wu(xo(t)));
              }, ar.prototype.slice = function (t, e) {
                t = Oa(t);
                var n = this;
                return n.__filtered__ && (t > 0 || e < 0) ? new ar(n) : (t < 0 ? n = n.takeRight(-t) : t && (n = n.drop(t)), e !== o && (n = (e = Oa(e)) < 0 ? n.dropRight(-e) : n.take(e - t)), n);
              }, ar.prototype.takeRightWhile = function (t) {
                return this.reverse().takeWhile(t).reverse();
              }, ar.prototype.toArray = function () {
                return this.take(C);
              }, Lr(ar.prototype, function (t, e) {
                var n = /^(?:filter|find|map|reject)|While$/.test(e),
                    r = /^(?:head|last)$/.test(e),
                    i = rr[r ? "take" + ("last" == e ? "Right" : "") : e],
                    u = r || /^find/.test(e);
                i && (rr.prototype[e] = function () {
                  var e = this.__wrapped__,
                      a = r ? [1] : arguments,
                      c = e instanceof ar,
                      s = a[0],
                      f = c || ea(e),
                      l = function l(t) {
                    var e = i.apply(rr, Ge([t], a));
                    return r && h ? e[0] : e;
                  };

                  f && n && "function" == typeof s && 1 != s.length && (c = f = !1);
                  var h = this.__chain__,
                      p = !!this.__actions__.length,
                      v = u && !h,
                      d = c && !p;

                  if (!u && f) {
                    e = d ? e : new ar(this);
                    var y = t.apply(e, a);
                    return y.__actions__.push({
                      func: Su,
                      args: [l],
                      thisArg: o
                    }), new ur(y, h);
                  }

                  return v && d ? t.apply(this, a) : (y = this.thru(l), v ? r ? y.value()[0] : y.value() : y);
                });
              }), De(["pop", "push", "shift", "sort", "splice", "unshift"], function (t) {
                var e = Zt[t],
                    n = /^(?:push|sort|unshift)$/.test(t) ? "tap" : "thru",
                    r = /^(?:pop|shift)$/.test(t);

                rr.prototype[t] = function () {
                  var t = arguments;

                  if (r && !this.__chain__) {
                    var i = this.value();
                    return e.apply(ea(i) ? i : [], t);
                  }

                  return this[n](function (n) {
                    return e.apply(ea(n) ? n : [], t);
                  });
                };
              }), Lr(ar.prototype, function (t, e) {
                var n = rr[e];

                if (n) {
                  var r = n.name + "";
                  (Kn[r] || (Kn[r] = [])).push({
                    name: e,
                    func: n
                  });
                }
              }), Kn[Zi(o, y).name] = [{
                name: "wrapper",
                func: o
              }], ar.prototype.clone = function () {
                var t = new ar(this.__wrapped__);
                return t.__actions__ = zi(this.__actions__), t.__dir__ = this.__dir__, t.__filtered__ = this.__filtered__, t.__iteratees__ = zi(this.__iteratees__), t.__takeCount__ = this.__takeCount__, t.__views__ = zi(this.__views__), t;
              }, ar.prototype.reverse = function () {
                if (this.__filtered__) {
                  var t = new ar(this);
                  t.__dir__ = -1, t.__filtered__ = !0;
                } else (t = this.clone()).__dir__ *= -1;

                return t;
              }, ar.prototype.value = function () {
                var t = this.__wrapped__.value(),
                    e = this.__dir__,
                    n = ea(t),
                    r = e < 0,
                    i = n ? t.length : 0,
                    o = function (t, e, n) {
                  for (var r = -1, i = n.length; ++r < i;) {
                    var o = n[r],
                        u = o.size;

                    switch (o.type) {
                      case "drop":
                        t += u;
                        break;

                      case "dropRight":
                        e -= u;
                        break;

                      case "take":
                        e = Nn(e, t + u);
                        break;

                      case "takeRight":
                        t = Ln(t, e - u);
                    }
                  }

                  return {
                    start: t,
                    end: e
                  };
                }(0, i, this.__views__),
                    u = o.start,
                    a = o.end,
                    c = a - u,
                    s = r ? a : u - 1,
                    f = this.__iteratees__,
                    l = f.length,
                    h = 0,
                    p = Nn(c, this.__takeCount__);

                if (!n || !r && i == c && p == c) return Oi(t, this.__actions__);
                var v = [];

                t: for (; c-- && h < p;) {
                  for (var d = -1, y = t[s += e]; ++d < l;) {
                    var g = f[d],
                        m = g.iteratee,
                        b = g.type,
                        x = m(y);
                    if (2 == b) y = x;else if (!x) {
                      if (1 == b) continue t;
                      break t;
                    }
                  }

                  v[h++] = y;
                }

                return v;
              }, rr.prototype.at = Ou, rr.prototype.chain = function () {
                return ku(this);
              }, rr.prototype.commit = function () {
                return new ur(this.value(), this.__chain__);
              }, rr.prototype.next = function () {
                this.__values__ === o && (this.__values__ = ka(this.value()));
                var t = this.__index__ >= this.__values__.length;
                return {
                  done: t,
                  value: t ? o : this.__values__[this.__index__++]
                };
              }, rr.prototype.plant = function (t) {
                for (var e, n = this; n instanceof or;) {
                  var r = Yo(n);
                  r.__index__ = 0, r.__values__ = o, e ? i.__wrapped__ = r : e = r;
                  var i = r;
                  n = n.__wrapped__;
                }

                return i.__wrapped__ = t, e;
              }, rr.prototype.reverse = function () {
                var t = this.__wrapped__;

                if (t instanceof ar) {
                  var e = t;
                  return this.__actions__.length && (e = new ar(this)), (e = e.reverse()).__actions__.push({
                    func: Su,
                    args: [lu],
                    thisArg: o
                  }), new ur(e, this.__chain__);
                }

                return this.thru(lu);
              }, rr.prototype.toJSON = rr.prototype.valueOf = rr.prototype.value = function () {
                return Oi(this.__wrapped__, this.__actions__);
              }, rr.prototype.first = rr.prototype.head, Ke && (rr.prototype[Ke] = function () {
                return this;
              }), rr;
            }();

            Se._ = kn, (i = function () {
              return kn;
            }.call(e, n, e, r)) === o || (r.exports = i);
          }).call(this);
        }).call(this, n(70), n(147)(t));
      }, function (t, e, n) {
        var r = n(5),
            i = n(17),
            o = n(29),
            u = n(26),
            a = n(34),
            c = function t(e, n, c) {
          var s,
              f,
              l,
              h,
              p = e & t.F,
              v = e & t.G,
              d = e & t.P,
              y = e & t.B,
              g = v ? r : e & t.S ? r[n] || (r[n] = {}) : (r[n] || {}).prototype,
              m = v ? i : i[n] || (i[n] = {}),
              b = m.prototype || (m.prototype = {});

          for (s in v && (c = n), c) {
            l = ((f = !p && g && void 0 !== g[s]) ? g : c)[s], h = y && f ? a(l, r) : d && "function" == typeof l ? a(Function.call, l) : l, g && u(g, s, l, e & t.U), m[s] != l && o(m, s, h), d && b[s] != l && (b[s] = l);
          }
        };

        r.core = i, c.F = 1, c.G = 2, c.S = 4, c.P = 8, c.B = 16, c.W = 32, c.U = 64, c.R = 128, t.exports = c;
      }, function (t, e) {
        t.exports = function (t, e, n) {
          return e in t ? Object.defineProperty(t, e, {
            value: n,
            enumerable: !0,
            configurable: !0,
            writable: !0
          }) : t[e] = n, t;
        };
      }, function (t, e, n) {
        var r = n(2);

        t.exports = function (t) {
          for (var e = 1; e < arguments.length; e++) {
            var n = null != arguments[e] ? arguments[e] : {},
                i = Object.keys(n);
            "function" === typeof Object.getOwnPropertySymbols && (i = i.concat(Object.getOwnPropertySymbols(n).filter(function (t) {
              return Object.getOwnPropertyDescriptor(n, t).enumerable;
            }))), i.forEach(function (e) {
              r(t, e, n[e]);
            });
          }

          return t;
        };
      }, function (t, e, n) {
        "use strict";

        n.r(e), function (t) {
          n.d(e, "propertyUtils", function () {
            return l;
          }), n.d(e, "createCollection", function () {
            return h;
          }), n.d(e, "mixinPropertyUtils", function () {
            return p;
          }), n.d(e, "enhanceObject", function () {
            return v;
          }), n.d(e, "transformKey", function () {
            return d;
          }), n.d(e, "createInterface", function () {
            return y;
          }), n.d(e, "applyInterface", function () {
            return g;
          }), n.d(e, "mixinLodashMethods", function () {
            return m;
          }), n.d(e, "hideProperties", function () {
            return b;
          }), n.d(e, "hideGetter", function () {
            return x;
          }), n.d(e, "getter", function () {
            return w;
          }), n.d(e, "hideProperty", function () {
            return _;
          }), n.d(e, "hide", function () {
            return k;
          }), n.d(e, "lazy", function () {
            return S;
          }), n.d(e, "createEntity", function () {
            return O;
          }), n.d(e, "hashObject", function () {
            return E;
          });
          var r = n(18),
              i = n.n(r),
              o = n(3),
              u = n.n(o),
              a = n(15),
              c = n.n(a),
              s = n(0),
              f = Object.defineProperty;

          function l(t) {
            return {
              lazy: Object(s.partial)(S, t),
              hide: Object(s.partial)(_, t),
              hideProperty: Object(s.partial)(_, t),
              hideGetter: Object(s.partial)(x, t),
              hideProperties: Object(s.partial)(b, t),
              getter: Object(s.partial)(w, t),
              applyInterface: Object(s.partial)(g, t)
            };
          }

          function h() {
            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
            return p(t, !0, !1), t.lazy("models", function () {
              return p((Object(s.isFunction)(e) ? e.call(t) : e) || [], !0);
            }), t;
          }

          function p(e) {
            return v(e, {
              includeLodashMethods: !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
              includeChain: arguments.length > 2 && void 0 !== arguments[2] && arguments[2]
            }, t.lodash);
          }

          function v(e) {
            var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : t.lodash;

            if (!1 !== n.propUtils) {
              var i = l(e);
              Object(s.mapValues)(i, function (t, n) {
                _(e, n, t);
              });
            }

            "function" === typeof n && n.VERSION && (r = n, n = {});
            var o = n,
                u = o.includeLodashMethods,
                a = void 0 === u ? Object(s.isFunction)(r) : u,
                c = o.includeChain,
                f = void 0 === c ? Object(s.isFunction)(r) && Object(s.isFunction)(r.chain) : c;

            if (t.DEBUG_LODASH_USAGE && console.log({
              includeLodashMethods: a,
              includeChain: f,
              target: e.constructor && e.constructor.name
            }), a && (Object(s.isObject)(e) && !Object(s.isArray)(e) ? j.filter(function (t) {
              return r[t];
            }).forEach(function (n) {
              var i = Object(s.partial)(r[n], e);

              _(e, n, function () {
                return t.DEBUG_LODASH_USAGE && console.log("LODASH ACCESS: ".concat(n), e.constructor ? e.constructor.name : e.uuid || e), i.apply(void 0, arguments);
              });
            }) : Object(s.isArray)(e) && (R.filter(function (t) {
              return r[t];
            }).forEach(function (n) {
              var i = Object(s.partial)(r[n], e);

              _(e, n, function () {
                return t.DEBUG_LODASH_USAGE && console.log("LODASH ACCESS: ".concat(n), e.constructor ? e.constructor.name : e.uuid || e), i.apply(void 0, arguments);
              });
            }), A.filter(function (t) {
              return r[t];
            }).forEach(function (n) {
              var i = Object(s.partial)(r[n], e);

              _(e, n, function () {
                return t.DEBUG_LODASH_USAGE && console.log("LODASH ACCESS: ".concat(n), e.constructor ? e.constructor.name : e.uuid || e), i.apply(void 0, arguments);
              });
            }))), f && !Object(s.has)(e, "chain") && Object(s.isFunction)(r.chain)) {
              var h = Object(s.partial)(r.chain, e);
              x(e, "chain", function () {
                return t.DEBUG_LODASH_USAGE && console.log("LODASH ACCESS CHAIN", e.constructor ? e.constructor.name : e.uuid || e), h();
              });
            }

            return e;
          }

          t.DEBUG_LODASH_USAGE = t.DEBUG_LODASH_USAGE || Object({
            NODE_ENV: "production",
            PUBLIC_URL: "",
            RELEASE_PACKAGE_NAME: "@skypager/runtime",
            RELEASE_VERSION: "1.1.4",
            GIT_SHA: "8e6f6b383d",
            GIT_BRANCH: "migrate-features-to-packages"
          }).DEBUG_LODASH_USAGE;

          var d = function d(t) {
            return Object(s.lowerFirst)(Object(s.camelCase)(t.replace(new RegExp("^(get|lazy)", ""), "")));
          };

          function y() {
            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                n = e.insertOptions,
                r = void 0 === n || n,
                i = e.partial,
                o = void 0 === i ? [] : i,
                u = e.right,
                a = void 0 === u || u,
                l = e.scope,
                h = e.defaultOptions,
                p = void 0 === h ? {} : h,
                v = Object(s.mapValues)(Object(s.pickBy)(t, s.isFunction), function (t, e) {
              return function () {
                for (var e = arguments.length, n = new Array(e), i = 0; i < e; i++) {
                  n[i] = arguments[i];
                }

                var u;
                return o.length > 0 && !1 === a && (n = [].concat(c()(o), c()(n))), r && 0 === n.length && n.unshift(p), !0 === a && o.length > 0 && (u = n).push.apply(u, c()(o)), t.call.apply(t, [l].concat(c()(n)));
              };
            });
            return f(v, "isInterface", {
              enumerable: !1,
              value: !0,
              configurable: !1
            }), v;
          }

          function g(t) {
            var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
                r = n.scope,
                i = void 0 === r ? t : r,
                o = n.transformKeys,
                a = void 0 === o || o,
                c = n.safe,
                l = void 0 === c || c,
                h = n.hidden,
                p = void 0 !== h && h,
                v = n.configurable,
                g = void 0 === v || v,
                m = e.isInterface ? e : y(e, u()({
              scope: i,
              transformKeys: a,
              safe: l,
              hidden: p
            }, n));
            return Object(s.mapValues)(m, function (e, n) {
              a && 0 === n.indexOf("get") ? (p ? x : w)(t, d(n), e.bind(i)) : a && 0 === n.indexOf("lazy") ? S(t, d(n), e.bind(i)) : "isInterface" === n || f(t, n, {
                configurable: g,
                enumerable: !p,
                value: e.bind(i)
              });
            }), t;
          }

          function m(t) {
            var e = lodashModules().lodashObject;
            return Object.keys(e).forEach(function (n) {
              return _(t, n, Object(s.partial)(e[n], t));
            }), t;
          }

          function b(t) {
            var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            return Object.keys(e).forEach(function (n) {
              x(t, n, function () {
                return e[n];
              });
            }), t;
          }

          function x(t, e, n) {
            var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {};
            return r = "boolean" === typeof r ? {
              configurable: r
            } : "object" === i()(r) ? u()({
              configurable: !0,
              scope: t,
              args: []
            }, r) : {}, "function" === typeof n && (n = s.partial.apply(void 0, [n].concat(c()(r.args || [])))), f(t, e, u()({
              enumerable: !1
            }, r, {
              get: function get() {
                return "function" === typeof n && !1 !== r.call ? n.call(r.scope) : n;
              }
            })), t;
          }

          function w(t, e, n) {
            var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {};
            return x(t, e, n, u()({}, r, {
              enumerable: !0
            }));
          }

          function _(t, e, n) {
            var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {};
            return r = "boolean" === typeof r ? {
              configurable: r
            } : "object" === i()(r) ? u()({
              configurable: !0
            }, r) : {}, f(t, e, u()({}, r, {
              enumerable: !1,
              value: n
            })), t;
          }

          var k = _;

          function S(t, e, n) {
            var r = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
            return f(t, e, {
              configurable: !0,
              enumerable: r,
              get: function get() {
                if (delete t[e], r) {
                  var i = "function" === typeof n ? n.call(t) : n;
                  return f(t, e, {
                    enumerable: !0,
                    configurable: !0,
                    value: i
                  }), i;
                }

                var o = "function" === typeof n ? n.call(t) : n;
                return f(t, e, {
                  enumerable: r,
                  configurable: !0,
                  value: o
                }), o;
              }
            }), t;
          }

          var O = function O() {
            for (var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, e = arguments.length, n = new Array(e > 1 ? e - 1 : 0), r = 1; r < e; r++) {
              n[r - 1] = arguments[r];
            }

            return p.apply(void 0, [Object(s.cloneDeep)(t)].concat(n));
          },
              E = n(346),
              j = ["assign", "assignIn", "assignInWith", "assignWith", "at", "create", "defaults", "defaultsDeep", "entries", "entriesIn", "extend", "extendWith", "findKey", "findLastKey", "forIn", "forInRight", "forOwn", "forOwnRight", "functions", "functionsIn", "get", "has", "hasIn", "invert", "invertBy", "invoke", "keys", "keysIn", "mapKeys", "mapValues", "merge", "mergeWith", "omit", "omitBy", "pick", "pickBy", "result", "set", "setWith", "toPairs", "toPairsIn", "transform", "unset", "update", "updateWith", "values", "valuesIn"],
              A = ["chunk", "compact", "concat", "difference", "differenceBy", "differenceWith", "drop", "dropRight", "dropRightWhile", "dropWhile", "fill", "findIndex", "findLastIndex", "first", "flatten", "flattenDeep", "flattenDepth", "fromPairs", "head", "indexOf", "initial", "intersection", "intersectionBy", "intersectionWith", "join", "last", "lastIndexOf", "nth", "pull", "pullAll", "pullAllBy", "pullAllWith", "pullAt", "remove", "reverse", "slice", "sortedIndex", "sortedIndexBy", "sortedIndexOf", "sortedLastIndex", "sortedLastIndexBy", "sortedLastIndexOf", "sortedUniq", "sortedUniqBy", "tail", "take", "takeRight", "takeRightWhile", "takeWhile", "union", "unionBy", "unionWith", "uniq", "uniqBy", "uniqWith", "unzip", "unzipWith", "without", "xor", "xorBy", "xorWith", "zip", "zipObject", "zipObjectDeep", "zipWith"],
              R = ["countBy", "each", "eachRight", "every", "filter", "find", "findLast", "flatMap", "flatMapDeep", "flatMapDepth", "forEach", "forEachRight", "groupBy", "includes", "invokeMap", "keyBy", "map", "orderBy", "partition", "reduce", "reduceRight", "reject", "sample", "sampleSize", "shuffle", "size", "some", "sortBy"];
        }.call(this, n(70));
      }, function (t, e) {
        var n = t.exports = "undefined" != typeof window && window.Math == Math ? window : "undefined" != typeof self && self.Math == Math ? self : Function("return this")();
        "number" == typeof __g && (__g = n);
      }, function (t, e) {
        t.exports = function (t) {
          try {
            return !!t();
          } catch (e) {
            return !0;
          }
        };
      }, function (t, e, n) {
        var r = n(8);

        t.exports = function (t) {
          if (!r(t)) throw TypeError(t + " is not an object!");
          return t;
        };
      }, function (t, e) {
        t.exports = function (t) {
          return "object" === typeof t ? null !== t : "function" === typeof t;
        };
      }, function (t, e) {
        t.exports = function (t, e) {
          if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
        };
      }, function (t, e, n) {
        t.exports = n(337);
      }, function (t, e, n) {
        "use strict";

        var r = n(57),
            i = n.n(r),
            o = n(3),
            u = n.n(o),
            a = n(15),
            c = n.n(a),
            s = n(18),
            f = n.n(s),
            l = n(10),
            h = n.n(l),
            p = n(25),
            v = n.n(p),
            d = n(151),
            y = n.n(d),
            g = n(14),
            m = n.n(g),
            b = n(2),
            x = n.n(b),
            w = n(9),
            _ = n.n(w),
            k = n(22),
            S = n.n(k),
            O = n(21),
            E = n.n(O),
            j = n(23),
            A = n.n(j),
            R = n(71),
            I = n.n(R),
            C = n(0),
            P = n.n(C),
            T = n(4),
            M = n(59),
            L = n(12),
            N = n(43),
            F = n.n(N),
            D = n(152),
            U = n.n(D),
            z = n(58),
            $ = n.n(z),
            B = C.isRegExp,
            V = C.eq,
            G = {
          lt: C.lt,
          gt: C.gt,
          gte: C.gte,
          lte: C.lte,
          eq: C.eq,
          neq: function neq() {
            return !C.eq.apply(void 0, arguments);
          },
          equals: V,
          not_equals: function not_equals() {
            return !C.eq.apply(void 0, arguments);
          }
        };

        Object.assign, Object.getOwnPropertyDescriptors, Object.keys;

        var H = function t(e, n, r) {
          return Array.isArray(n) || (r = n || r, n = []), r = r || {}, e instanceof RegExp ? function (t, e) {
            var n = t.source.match(/\((?!\?)/g);
            if (n) for (var r = 0; r < n.length; r++) {
              e.push({
                name: r,
                prefix: null,
                delimiter: null,
                optional: !1,
                repeat: !1,
                partial: !1,
                asterisk: !1,
                pattern: null
              });
            }
            return J(t, e);
          }(e, n) : Array.isArray(e) ? function (e, n, r) {
            for (var i = [], o = 0; o < e.length; o++) {
              i.push(t(e[o], n, r).source);
            }

            return J(new RegExp("(?:" + i.join("|") + ")", Y(r)), n);
          }(e, n, r) : function (t, e, n) {
            return function (t, e, n) {
              Array.isArray(e) || (n = e || n, e = []);

              for (var r = (n = n || {}).strict, i = !1 !== n.end, o = "", u = 0; u < t.length; u++) {
                var a = t[u];
                if ("string" === typeof a) o += q(a);else {
                  var c = q(a.prefix),
                      s = "(?:" + a.pattern + ")";
                  e.push(a), a.repeat && (s += "(?:" + c + s + ")*"), s = a.optional ? a.partial ? c + "(" + s + ")?" : "(?:" + c + "(" + s + "))?" : c + "(" + s + ")", o += s;
                }
              }

              var f = q(n.delimiter || "/"),
                  l = o.slice(-f.length) === f;
              return r || (o = (l ? o.slice(0, -f.length) : o) + "(?:" + f + "(?=$))?"), o += i ? "$" : r && l ? "" : "(?=" + f + "|$)", J(new RegExp("^" + o, Y(n)), e);
            }(function (t, e) {
              for (var n, r = [], i = 0, o = 0, u = "", a = e && e.delimiter || "/"; null != (n = W.exec(t));) {
                var c = n[0],
                    s = n[1],
                    f = n.index;
                if (u += t.slice(o, f), o = f + c.length, s) u += s[1];else {
                  var l = t[o],
                      h = n[2],
                      p = n[3],
                      v = n[4],
                      d = n[5],
                      y = n[6],
                      g = n[7];
                  u && (r.push(u), u = "");

                  var m = null != h && null != l && l !== h,
                      b = "+" === y || "*" === y,
                      x = "?" === y || "*" === y,
                      w = n[2] || a,
                      _ = v || d;

                  r.push({
                    name: p || i++,
                    prefix: h || "",
                    delimiter: w,
                    optional: x,
                    repeat: b,
                    partial: m,
                    asterisk: !!g,
                    pattern: _ ? K(_) : g ? ".*" : "[^" + q(w) + "]+?"
                  });
                }
              }

              return o < t.length && (u += t.substr(o)), u && r.push(u), r;
            }(t, n), e, n);
          }(e, n, r);
        },
            W = new RegExp(["(\\\\.)", "([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"), "g");

        function q(t) {
          return t.replace(/([.+*?=^!:${}()[\]|\/\\])/g, "\\$1");
        }

        function K(t) {
          return t.replace(/([=!:$\/()])/g, "\\$1");
        }

        function J(t, e) {
          return t.keys = e, t;
        }

        function Y(t) {
          return t.sensitive ? "" : "i";
        }

        var Z = function Z(t) {
          var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
              n = e = u()({
            pathsGetter: "available",
            pathProperty: "toString",
            routerProperty: "router",
            matcher: {}
          }, e),
              r = n.pathsGetter,
              i = n.pathProperty,
              o = n.routerProperty,
              a = n.matcher;
          return Object.defineProperty(t, o, {
            enumerable: !1,
            configurable: !1,
            get: function get() {
              return {
                filter: Q,
                test: X,
                matcher: tt(a),
                get: function get(e) {
                  var n = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
                  return Q(e, Object(C.result)(t, r, []).map(function (t) {
                    return Object(C.result)(t, i);
                  }), {
                    discard: n
                  });
                }
              };
            }
          }), Object(C.get)(t, e.routerProperty);
        };

        function X(t) {
          return tt(arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {})(t);
        }

        function Q() {
          var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "*",
              e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [],
              n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
          "function" === typeof e && (e = e(n.matcher || {})), "string" === typeof e && (e = [e]);
          var r = X(t),
              i = [],
              o = [];
          return e.forEach(function (e, n) {
            var u = r(e);
            !1 === u ? o.push([e, n]) : i.push({
              result: u,
              index: n,
              path: e,
              pattern: t
            });
          }), n.discard ? i : {
            failures: o,
            matches: i,
            pattern: t,
            pathsToTest: e
          };
        }

        function tt() {
          var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};

          function e(t) {
            try {
              t = decodeURIComponent(t);
            } catch (e) {
              throw new Error("Cannot decodeURIComponent: " + t);
            }

            return t;
          }

          return function (n) {
            var r = [],
                i = H.call(this, [n, r, t]);
            return function (t, n) {
              var o = i.exec(t);
              if (n = n || {}, !o) return !1;

              for (var u = 1, a = o.length; u < a; u++) {
                void 0 !== o[u] && (n[r[u - 1].name] = e(o[u]));
              }

              return n;
            };
          };
        }

        var et = P.a.pickBy,
            nt = P.a.mapValues,
            rt = P.a.isFunction,
            it = P.a.isObject,
            ot = P.a.has,
            ut = P.a.get,
            at = P.a.pick;

        function ct(t, e, n, r) {
          Object.defineProperty(t, e, {
            value: n,
            configurable: r,
            enumerable: !1
          });
        }

        var st = function (t) {
          function e(t) {
            var n,
                r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};

            if (_()(this, e), r.route || (r.route = ":id(.*)"), n = S()(this, E()(e).call(this, t, r)), r.api && Object.keys(r.api).forEach(function (t) {
              n[t] = r.api[t].bind(F()(n));
            }), r.lookupMethod) {
              var i = F()(n);
              Object.assign(F()(n), x()({}, r.lookupMethod, i.lookup.bind(i)));
            }

            return n.attach("metadata", {
              fallback: function fallback(t) {
                return {
                  notFound: !0,
                  id: t
                };
              }
            }), n;
          }

          return A()(e, t), m()(e, [{
            key: "search",
            value: function value() {
              var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                  e = this,
                  n = this.metadata.available.map(function (t) {
                return e.meta(t);
              }).filter(function (t) {
                return !t.notFound;
              });
              return this.query(n, t);
            }
          }, {
            key: "meta",
            value: function value(t) {
              var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                  n = this.metadata[t] || {};
              return this.metadata[t] = u()({}, n, this.testRoute(t) || {}, e);
            }
          }, {
            key: "applyRoute",
            value: function value(t) {
              return arguments.length > 1 && void 0 !== arguments[1] && arguments[1], this.router.get(t || this.options.route);
            }
          }, {
            key: "testRoute",
            value: function value(t, e) {
              return e = e || this.options.route, this.router.test(e)(t);
            }
          }, {
            key: "register",
            value: function value(t, e) {
              var n = this,
                  r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
              return this._register(t, e), this.metadata.register(t, function () {
                return u()({}, r, {
                  registryId: t
                }, n.testRoute(t) || {});
              }), this;
            }
          }]), e;
        }(function () {
          function t(e) {
            var n = this,
                r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
            _()(this, t), this.name = e, Object(T.enhanceObject)(this, P.a), ct(this, "options", u()({
              router: {}
            }, r, {
              name: e
            })), ct(this, "createRouter", function () {
              var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
              return Z(n, t);
            }), ct(this, "internalAliases", {}), ct(this, "internalRegistries", {}), this.createRouter(), this.attach("registry", i), rt(r.init) && r.init.call(this, this, r), rt(r.componentWillRegister) && (this.componentWillRegister = r.componentWillRegister.bind(this)), rt(r.componentWasFound) && (this.componentWasFound = r.componentWasFound.bind(this)), rt(r.fallback) ? this.fallback = r.fallback.bind(this) : it(r.fallback) && rt(r.fallback.lookup) && (this.fallback = function (t) {
              return r.fallback.lookup(t);
            }), rt(r.wrapper) && (this.wrapResult = r.wrapper.bind(this));
          }

          return m()(t, null, [{
            key: "attach",
            value: function value(t) {
              var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                  n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
              return {
                to: function to(r) {
                  return function (t, e) {
                    var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
                        r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {},
                        i = "_".concat(e);
                    t[i] || Object(T.hideProperty)(t, i, new Map());
                    var o = t[i];
                    Object.entries(n).forEach(function (t) {
                      var e = $()(t, 2),
                          n = e[0],
                          r = e[1];
                      o.set(n, r);
                    }), Object.entries(r).forEach(function (t) {
                      var e = $()(t, 2),
                          n = e[0],
                          r = e[1];
                      o.set(n, r);
                    });
                    var u = new Map(),
                        a = {
                      get: function get(t) {
                        return o.get(t);
                      },
                      has: function has(t) {
                        return o.has(t);
                      },
                      remove: function remove(t) {
                        return o.delete(t), o;
                      },

                      get available() {
                        return Array.from(o.keys());
                      },

                      lookup: function lookup(t) {
                        var e = o.get(t);
                        if (u.has(t)) return o.get(t);

                        if ("function" === typeof e && !u.has(t)) {
                          var n = e();
                          u.set(t, !0), o.set(t, n), e = n;
                        }

                        return e;
                      },
                      register: function register(t, e) {
                        return u.delete(t), o.set(t, e), e;
                      }
                    };
                    Object(T.hideGetter)(t, e, function () {
                      return a;
                    });
                  }(r, t, e, n), ut(r, t);
                }
              };
            }
          }, {
            key: "create",
            value: function value(t) {
              var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
              return arguments.length > 2 && void 0 !== arguments[2] && arguments[2], new this(t, e, {});
            }
          }]), m()(t, [{
            key: "query",
            value: function value() {
              return function () {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                    e = arguments.length > 1 ? arguments[1] : void 0,
                    n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                return "function" !== typeof t.filter ? [] : "function" === typeof e ? t.filter(e) : (t || []).filter(function (t) {
                  var r = Object.keys(e).every(function (n) {
                    var r = e[n],
                        i = Object(C.result)(t, n);
                    return !(!B(r) || !r.test(i)) || "string" === typeof r && i === r || "number" === typeof r && i === r || (Object(C.isArray)(r) && (Object(C.isString)(i) || Object(C.isNumber)(i)) ? Object(C.some)(r, function (t) {
                      return t === i;
                    }) : Object(C.isObject)(r) && (r.value || r.val) && (r.op || r.operator) ? function (t, e) {
                      var n = t.operator || t.op,
                          r = t.value || t.val;
                      return (G[n] || C.isEqual)(e, r);
                    }(r, i) : Object(C.isObject)(r) && Object(C.isObject)(i) ? Object(C.isMatch)(i, r) : void 0);
                  });
                  return n ? !r : r;
                });
              }(arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [], arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {});
            }
          }, {
            key: "add",
            value: function value(t) {
              var e = this;
              return ot(t, "available") && ot(t, "lookup") ? t.available.forEach(function (n) {
                return e.register(n, function () {
                  return t.lookup(n);
                });
              }) : Object.keys(t).forEach(function (n) {
                return e.register(n, function () {
                  return t[n];
                });
              }), this;
            }
          }, {
            key: "convertToRequireContext",
            value: function value() {
              var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this,
                  e = this.lookup.bind(this);
              return Object.assign(e, {
                resolve: function resolve(e) {
                  var n = ot(t, "checkKey") ? t.checkKey.call(t, e) : ot(t, e) && t[e];
                  if (!n) throw new Error("could not find ".concat(e, " in context"));
                  return n;
                },
                keys: function keys() {
                  return ut(t, "available", Object.keys(t));
                }
              });
            }
          }, {
            key: "findAliases",
            value: function value(t) {
              return Object.keys(et(this.internalAliases, function (e, n) {
                return n === t || e === t;
              }));
            }
          }, {
            key: "register",
            value: function value() {
              return this._register.apply(this, arguments);
            }
          }, {
            key: "_register",
            value: function value(t, e) {
              var n = this,
                  r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
                  i = r.formatId,
                  o = void 0 === i ? this.options.formatId : i,
                  u = r.registryName,
                  a = void 0 === u ? "registry" : u,
                  c = r.namespace,
                  s = void 0 === c ? ut(this, "options.namespace", "") : c;
              "function" === typeof o && (t = o.call(this, t, e, a) || t), t = t.trim();
              var f = this.componentWillRegister(t, e),
                  l = $()(f, 2),
                  h = l[0],
                  p = l[1];

              if ("string" === typeof r.alias && this.alias(r.alias, h), "function" === typeof this.options.alias) {
                var v = this.options.alias.call(this, h, e, r);
                nt(v, function (t, e) {
                  n.alias(e, t);
                });
              }

              if ("string" !== typeof h && "function" !== typeof p) throw this.componentRegistrationDidFail(t, e, h, p), new Error("Component Registration Failed");
              return this[a].register("".concat(s).concat(h), p);
            }
          }, {
            key: "alias",
            value: function value(t, e) {
              return this.internalAliases[t] = e, this;
            }
          }, {
            key: "checkKey",
            value: function value(t) {
              var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "registry";
              return this[e] && this[e].has(t) ? t : !!ot(this.internalAliases, t) && ut(this, ["internalAliases", t]);
            }
          }, {
            key: "childRegistries",
            value: function value() {
              return at(this, this.childRegistryNames);
            }
          }, {
            key: "lookupAll",
            value: function value(t) {
              return nt(et(this.childRegistries(), function (e, n) {
                return ot(e, t);
              }), function (e) {
                return ut(e, t);
              });
            }
          }, {
            key: "lookup",
            value: function value(t) {
              var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "registry",
                  n = this.willLookupById(t) || "".concat(t),
                  r = this.checkKey(n, e),
                  i = this[e] && this[e].lookup(r);
              return i ? this.componentWasFound(i, n, t) : this.performFallbackLookup(n, t);
            }
          }, {
            key: "findRawMember",
            value: function value(t) {
              var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "registry",
                  n = this.willLookupById(t) || "".concat(t);
              return this[e].get(n);
            }
          }, {
            key: "enhance",
            value: function value(t, e) {
              var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "registry",
                  r = (arguments.length > 3 && void 0 !== arguments[3] && arguments[3], this.findRawMember(t, n));
              return r && this.register(t, "function" === typeof e ? e(r) : Object.assign(r, e)), this;
            }
          }, {
            key: "attach",
            value: function value(t, e) {
              return this.constructor.attach(t, e).to(this), this.internalRegistries[t] = t, ut(this, t);
            }
          }, {
            key: "attachAll",
            value: function value(t) {
              var e = this;
              return nt(t, function (t, n) {
                return e.attach(n, t);
              });
            }
          }, {
            key: "willLookupById",
            value: function value(t) {
              return t;
            }
          }, {
            key: "componentWillRegister",
            value: function value(t, e) {
              return [t, e];
            }
          }, {
            key: "componentWasFound",
            value: function value(t, e, n) {
              return t = t.default && (this.options.useDefaultExport || this.options.useDefaultExports) ? t.default : t, rt(this.wrapResult) ? this.wrapResult(t, e, n) : t;
            }
          }, {
            key: "performFallbackLookup",
            value: function value(t) {
              if (!this.fallback) return this.componentLookupFailed(t);
              var e = this.fallback(t);
              return e ? this.componentWasFound(e, t) : this.componentLookupFailed(t);
            }
          }, {
            key: "componentLookupFailed",
            value: function value(t) {
              if (!this.options.silenceFailures) throw new Error("Component Lookup Failed: ".concat(t, ".\n\nDid you mean one of the following?\n").concat(this.available.join("\n")));
            }
          }, {
            key: "allMembers",
            value: function value() {
              var t = this;
              return this.available.reduce(function (e, n) {
                var r, i;
                return u()({}, e, (r = {}, (i = {})[n] = i[n] || {}, i[n].get = function () {
                  return t.lookup(n);
                }, U()(r, i), r));
              }, {});
            }
          }, {
            key: "asRequireContext",
            get: function get() {
              return this.convertToRequireContext();
            }
          }, {
            key: "available",
            get: function get() {
              return ut(this, "registry.available", []);
            }
          }, {
            key: "childRegistryNames",
            get: function get() {
              return Object.keys(this.internalRegistries);
            }
          }, {
            key: "all",
            get: function get() {
              return Object.values(this.allMembers());
            }
          }]), t;
        }()),
            ft = function ft(t, e, n, r) {
          return Object.defineProperty(t, e, {
            value: n,
            configurable: r,
            enumerable: !1
          });
        },
            lt = function (t) {
          function e(t) {
            var n,
                r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            _()(this, e), "object" === f()(t) && (t = (r = t).name || r.context && r.context.id);
            var i = r.context || r.req;
            return delete r.context, delete r.req, n = S()(this, E()(e).call(this, t, r)), ft(F()(n), "context", n.wrapContext(i, u()({}, r, {
              namespace: n.keyNamespace
            }))), !1 !== r.auto && n.registerContextModules(), n;
          }

          return A()(e, t), m()(e, [{
            key: "isValidContext",
            value: function value(t) {
              return "function" === typeof t && "function" === typeof t.keys && "function" === typeof t.resolve;
            }
          }, {
            key: "add",
            value: function value(t) {
              var e = this,
                  n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
              if (!this.isValidContext(t) && t.convertToRequireContext) t = t.convertToRequireContext();else if ("object" === f()(t) && !t.prototype) return Object.keys(t).map(function (n) {
                return e.register(n, function () {
                  return t[n];
                });
              }), this;
              return this.registerContextModules(this.wrapContext(t, u()({}, this.options, n))), this;
            }
          }, {
            key: "registerContextModules",
            value: function value() {
              var t = this,
                  e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.context;
              e.idsMappedToKeys, e.ids.forEach(function (n) {
                t.register(n, function () {
                  return e.load(n);
                }, u()({
                  id: n
                }, e.metaForKey(n), t.options));
              });
            }
          }, {
            key: "wrapContext",
            value: function value(t) {
              var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
              return new ht(t, u()({}, this.options, e));
            }
          }, {
            key: "keyNamespace",
            get: function get() {
              return this.options.keyNamespace || "";
            }
          }, {
            key: "loaded",
            get: function get() {
              return this.registerContextModules(), this;
            }
          }]), e;
        }(st),
            ht = function () {
          function t(e) {
            var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            if (_()(this, t), e && "function" !== typeof e && e.asRequireContext && (e = e.asRequireContext), "function" !== typeof e) throw "You must pass a the output of webpack's require.context() call.  It should be a function which has a keys method that returns an array of module ids.";
            if ("function" !== typeof e.keys) throw "You must pass a the output of webpack's require.context() call.  It should be a function which has a keys method that returns an array of module ids.";
            ft(this, "options", n), ft(this, "req", e);
          }

          return m()(t, [{
            key: "metaForKey",
            value: function value(t) {
              var e = this.idsMappedToKeys[t];
              return {
                id: t,
                key: e,
                resolved: this.req.resolve(e),
                sourceModule: this.sourceModule
              };
            }
          }, {
            key: "load",
            value: function value(t) {
              var e = this.idsMappedToKeys[t];
              return this.req(e);
            }
          }, {
            key: "sourceModule",
            get: function get() {
              return this.options.sourceModule || {};
            }
          }, {
            key: "namespace",
            get: function get() {
              return this.options.namespace || "";
            }
          }, {
            key: "prefix",
            get: function get() {
              return this.options.prefix ? this.options.prefix : "";
            }
          }, {
            key: "keys",
            get: function get() {
              return this.req.keys();
            }
          }, {
            key: "resolved",
            get: function get() {}
          }, {
            key: "ids",
            get: function get() {
              return Object.keys(this.idsMappedToKeys);
            }
          }, {
            key: "idsMappedToKeys",
            get: function get() {
              var t = this;
              return this.keys.reduce(function (e, n) {
                return u()({}, e, x()({}, "".concat(n.replace(/^\.\//, t.namespace).replace(t.prefix, "").replace(/\.\w+$/, "")), n));
              }, {});
            }
          }]), t;
        }(),
            pt = n(84),
            vt = n.n(pt);

        n.d(e, "a", function () {
          return Mt;
        });
        var dt,
            yt = P.a.flatten,
            gt = P.a.castArray,
            mt = P.a.isUndefined,
            bt = P.a.partialRight,
            xt = P.a.mapValues,
            wt = P.a.pickBy,
            _t = P.a.isFunction,
            kt = P.a.omitBy,
            St = P.a.defaults,
            Ot = P.a.defaultsDeep,
            Et = P.a.omit,
            jt = P.a.result,
            At = P.a.keys,
            Rt = P.a.has,
            It = Lt({});
        dt = dt || new lt("helpers", {
          context: It,
          componentWillRegister: function componentWillRegister() {
            for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++) {
              e[n] = arguments[n];
            }

            return e;
          }
        });

        var Ct = function (t) {
          function e() {
            return _()(this, e), S()(this, E()(e).apply(this, arguments));
          }

          return A()(e, t), e;
        }(I()(Error)),
            Pt = (I()(Error), function (t) {
          function e() {
            return _()(this, e), S()(this, E()(e).apply(this, arguments));
          }

          return A()(e, t), e;
        }(I()(Error))),
            Tt = function (t) {
          function e() {
            return _()(this, e), S()(this, E()(e).apply(this, arguments));
          }

          return A()(e, t), e;
        }(I()(Error)),
            Mt = function () {
          function t() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            _()(this, t), x()(this, "isInitialized", !1), Object(T.enhanceObject)(this, {
              propUtils: !1,
              includeLodashMethods: !1,
              includeChain: !1
            }, P.a), Object(M.a)(this);
            var r = n.runtime || n.host || n.project,
                i = [r.id || this.registryName, this.name, Math.floor(new Date() / 100)].join(":"),
                o = e.provider,
                u = void 0 === o ? {} : o,
                a = y()(e, ["provider"]);
            this.hideProperties({
              _id: i,
              _runtime: r,
              _provider: u,
              _context: n,
              _options: a,
              _name: e.name,
              uuid: vt()()
            });

            try {
              this.hideGetter("is".concat(this.constructor.helperName || this.constructor.name), function () {
                return !0;
              });
            } catch (c) {}

            r.beforeHelperCreate && r.beforeHelperCreate(this, e, n, this.constructor), !1 !== e.initialize && this.doInitialize();
          }

          return m()(t, [{
            key: "lazy",
            value: function value(t, e) {
              var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
              return Object(T.propertyUtils)(this).lazy(t, e, n);
            }
          }, {
            key: "hide",
            value: function value(t, e) {
              var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
              return Object(T.propertyUtils)(this).hide(t, e, n);
            }
          }, {
            key: "hideProperty",
            value: function value(t, e) {
              var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
              return Object(T.propertyUtils)(this).hide(t, e, n);
            }
          }, {
            key: "hideProperties",
            value: function value() {
              var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
              return Object(T.propertyUtils)(this).hideProperties(t);
            }
          }, {
            key: "hideGetter",
            value: function value(t, e) {
              var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
              return Object(T.propertyUtils)(this).hideGetter(t, e, n);
            }
          }, {
            key: "getter",
            value: function value(t, e) {
              var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
              return Object(T.propertyUtils)(this).getter(t, e, n);
            }
          }, {
            key: "applyInterface",
            value: function value() {
              var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                  e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
              return Object(T.propertyUtils)(this).applyInterface(t, e);
            }
          }, {
            key: "at",
            value: function value() {
              for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++) {
                e[n] = arguments[n];
              }

              return P.a.at.apply(P.a, [this].concat(e));
            }
          }, {
            key: "set",
            value: function value(t, e) {
              return P.a.set(this, t, e);
            }
          }, {
            key: "get",
            value: function value(t, e) {
              return P.a.get(this, t, e);
            }
          }, {
            key: "result",
            value: function value(t, e) {
              for (var n = arguments.length, r = new Array(n > 2 ? n - 2 : 0), i = 2; i < n; i++) {
                r[i - 2] = arguments[i];
              }

              return P.a.result.apply(P.a, [this, t, e].concat(r));
            }
          }, {
            key: "has",
            value: function value(t) {
              return P.a.has(this, t);
            }
          }, {
            key: "invoke",
            value: function value() {
              for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++) {
                e[n] = arguments[n];
              }

              return P.a.invoke.apply(P.a, [this].concat(e));
            }
          }, {
            key: "pick",
            value: function value() {
              for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++) {
                e[n] = arguments[n];
              }

              return P.a.pick.apply(P.a, [this].concat(e));
            }
          }, {
            key: "doInitialize",
            value: function () {
              var t = v()(h.a.mark(function t() {
                var e;
                return h.a.wrap(function (t) {
                  for (;;) {
                    switch (t.prev = t.next) {
                      case 0:
                        if (e = this.tryGet("initialize", this.initialize), this.fireHook("beforeInitialize"), !e) {
                          t.next = 6;
                          break;
                        }

                        return t.next = 5, Promise.resolve(e.call(this, this.options, this.context));

                      case 5:
                        this.hide("isInitialized", !0);

                      case 6:
                        return this.fireHook("afterInitialize"), t.abrupt("return", this);

                      case 8:
                      case "end":
                        return t.stop();
                    }
                  }
                }, t, this);
              }));
              return function () {
                return t.apply(this, arguments);
              };
            }()
          }, {
            key: "setInitialState",
            value: function value() {
              var t = this,
                  e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.initialState || {},
                  n = this.lodash.defaultsDeep;
              if (this.state && this.tryGet("initialState")) return Promise.resolve(this.attemptMethodAsync("initialState")).then(function (r) {
                "object" === f()(r) && t.state.merge(n({}, r, e));
              }).catch(function (e) {
                console.error("Error setting initial state", t, e), t.initialStateError = e;
              });
            }
          }, {
            key: "fireHook",
            value: function value(t) {
              for (var e, n = arguments.length, r = new Array(n > 1 ? n - 1 : 0), i = 1; i < n; i++) {
                r[i - 1] = arguments[i];
              }

              (e = this.helperEvents).emit.apply(e, ["".concat(this.registryName, ":").concat(t), this].concat(r)), this.emit.apply(this, [t].concat(r)), this.emit.apply(this, ["firingHook", t].concat(r)), this.attemptMethod(t, {
                args: r
              });
            }
          }, {
            key: "tryGet",
            value: function value(t, e) {
              var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : ["options", "provider", "provider.default.prototype", "provider.default", "provider.prototype"],
                  r = this.at.apply(this, c()(n.map(function (e) {
                return "".concat(e, ".").concat(t);
              }))).filter(function (t) {
                return !mt(t);
              });
              return r.length ? r[0] : e;
            }
          }, {
            key: "tryResult",
            value: function value(t, e) {
              var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
                  r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {},
                  i = this.tryGet(t);
              return i ? "function" === typeof i ? i.call(this, u()({}, this.options, n), u()({}, this.context, r)) : i : "function" === typeof e ? e.call(this, u()({}, this.options, n), u()({}, this.context, r)) : e;
            }
          }, {
            key: "mergeGet",
            value: function value(t) {
              var e = this,
                  n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : ["options", "provider", "runtimeSettings"];
              return t = "string" === typeof t ? t.split(".") : t, t = yt(gt(t)), St.apply(void 0, [{}].concat(c()(n.map(function (n) {
                return e.get([n].concat(c()(t)));
              }))));
            }
          }, {
            key: "mergeResult",
            value: function value(t) {
              var e = this,
                  n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : ["options", "provider", "runtimeSettings"];
              return t = "string" === typeof t ? t.split(".") : t, t = yt(gt(t)), St.apply(void 0, [{}].concat(c()(n.map(function (n) {
                return e.get([n].concat(c()(t)));
              }).map(function (t) {
                return "function" === typeof t ? t.call(e, e.options, e.context) : t;
              }))));
            }
          }, {
            key: "slice",
            value: function value() {
              for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++) {
                e[n] = arguments[n];
              }

              return P.a.zipObjectDeep(e, this.at(e));
            }
          }, {
            key: "createMixin",
            value: function value() {
              var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                  e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.context,
                  n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this;
              console.warn("createMixin is deprecated");
              var r = wt(t, _t),
                  i = xt(r, function (t) {
                return bt(t.bind(n), e);
              });
              return xt(i, function (t) {
                return function () {
                  for (var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, n = arguments.length, r = new Array(n > 1 ? n - 1 : 0), i = 1; i < n; i++) {
                    r[i - 1] = arguments[i];
                  }

                  return t.apply(void 0, [e].concat(r));
                };
              });
            }
          }, {
            key: "applyMixin",
            value: function value() {
              var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.provider,
                  e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.context,
                  n = arguments.length > 2 ? arguments[2] : void 0;
              return console.warn("applyMixin is deprecated"), Object.assign(this, this.createMixin(t, e, n));
            }
          }, {
            key: "mixin",
            value: function value() {
              var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                  e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
              return this.applyInterface(t, u()({
                transformKeys: !0,
                scope: this,
                partial: [this.context],
                right: !0,
                insertOptions: !1,
                hidden: !1
              }, e)), this;
            }
          }, {
            key: "attemptMethod",
            value: function value(t) {
              var e = this.tryGet(t, this[t]);
              if ("undefined" === typeof e) return this.runtime.isDevelopment && this.runtime.get("environment.DEBUG_HELPERS") && this.runtime.debug("attemptMethod called on non-existent method: ".concat(t, " "), {
                name: this.name,
                id: this.id
              }), !1;

              if ("function" === typeof e) {
                for (var n = arguments.length, r = new Array(n > 1 ? n - 1 : 0), i = 1; i < n; i++) {
                  r[i - 1] = arguments[i];
                }

                0 === r.length && r.unshift({}), r.push(this.context);

                try {
                  return e.call.apply(e, [this].concat(r));
                } catch (o) {
                  return !1;
                }
              }

              return e;
            }
          }, {
            key: "attemptMethodAsync",
            value: function value(t) {
              for (var e = arguments.length, n = new Array(e > 1 ? e - 1 : 0), r = 1; r < e; r++) {
                n[r - 1] = arguments[r];
              }

              var i = this.attemptMethod.apply(this, [t].concat(n));
              return Promise.resolve(i || null);
            }
          }, {
            key: "callMethod",
            value: function value(t) {
              var e = this.tryGet(t, this[t]);
              if ("function" !== typeof e) throw new Error("Could not find a property at ".concat(t));

              for (var n = arguments.length, r = new Array(n > 1 ? n - 1 : 0), i = 1; i < n; i++) {
                r[i - 1] = arguments[i];
              }

              return 0 === r.length && r.unshift({}), e.call.apply(e, [this].concat([].concat(r, [this.context])));
            }
          }, {
            key: "providerTypes",
            get: function get() {
              return St({}, this.tryResult("providerTypes", {}), this.constructor.providerTypes, t.providerTypes);
            }
          }, {
            key: "optionTypes",
            get: function get() {
              return St({}, this.tryResult("optionTypes", {}), this.constructor.optionTypes, t.optionTypes);
            }
          }, {
            key: "contextTypes",
            get: function get() {
              return St({}, x()({}, this.registryName, this.constructor.registry), this.tryResult("contextTypes", {}), this.constructor.contextTypes, t.contextTypes);
            }
          }, {
            key: "name",
            get: function get() {
              return this._name;
            }
          }, {
            key: "id",
            get: function get() {
              return this._id;
            }
          }, {
            key: "runtime",
            get: function get() {
              return this._runtime;
            }
          }, {
            key: "host",
            get: function get() {
              return this.runtime;
            }
          }, {
            key: "project",
            get: function get() {
              return this.runtime;
            }
          }, {
            key: "options",
            get: function get() {
              return this._options;
            }
          }, {
            key: "context",
            get: function get() {
              return this._context;
            }
          }, {
            key: "provider",
            get: function get() {
              return this._provider;
            }
          }, {
            key: "registryName",
            get: function get() {
              return this.constructor.registryName || t.propNames(this.constructor.helperName || this.constructor.name).registryProp;
            }
          }, {
            key: "chain",
            get: function get() {
              return P.a.chain(this);
            }
          }, {
            key: "lodash",
            get: function get() {
              return P.a;
            }
          }, {
            key: "helperEvents",
            get: function get() {
              return t.events;
            }
          }, {
            key: "isCached",
            get: function get() {
              return !!this.get("options.cacheable") && this.cacheKey && this.cacheKey.length > 0;
            }
          }, {
            key: "cacheKey",
            get: function get() {
              return this.get("options.cacheKey");
            }
          }, {
            key: "invalidOptionKeys",
            get: function get() {
              return this.chain.get("options").omit(Object.keys(this.optionTypes)).keys().value();
            }
          }, {
            key: "invalidContextKeys",
            get: function get() {
              return this.chain.get("context").omit(Object.keys(this.contextTypes)).keys().value();
            }
          }, {
            key: "argv",
            get: function get() {
              return Et(this.get("runtime.argv", this.get("host.argv", {})), "_", "");
            }
          }, {
            key: "defaultOptions",
            get: function get() {
              return Ot({}, this.argv, this.runtimeSettings);
            }
          }, {
            key: "runtimeSettings",
            get: function get() {
              var t = this.name || this.id,
                  e = Object(L.camelCase)(Object(L.snakeCase)(t)),
                  n = this.lodash.omit,
                  r = this.projectSettingsPaths,
                  i = void 0 === r ? [] : r;
              return n(Ot.apply(void 0, [{}].concat(c()(this.at(i)))), t, e);
            }
          }, {
            key: "projectSettingsPaths",
            get: function get() {
              var t = this.constructor.registryName(),
                  e = this.name || this.id;
              return ["runtime.argv.".concat(t, ".").concat(e), "runtime.options.".concat(t, ".").concat(e), "runtime.settings.".concat(t, ".").concat(e), "runtime.argv.".concat(t, ".").concat(Object(L.camelCase)(Object(L.snakeCase)(e))), "runtime.options.".concat(t, ".").concat(Object(L.camelCase)(Object(L.snakeCase)(e))), "runtime.settings.".concat(t, ".").concat(Object(L.camelCase)(Object(L.snakeCase)(e)))].map(function (t) {
                return t.replace(/(\\|\/)/g, ".");
              });
            }
          }], [{
            key: "registerHelper",
            value: function value(e, n) {
              var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
                  i = n && n.prototype instanceof t ? function () {
                return n;
              } : n;

              try {
                var o = dt.registry.register(e, i),
                    u = r.host || r.runtime || r.project;
                return u && !1 !== r.attach && dt.registry.lookup(e).attach(u, r), t.events.emit("registered", {
                  name: e,
                  options: r
                }), o;
              } catch (a) {
                t.events.emit("register:error", {
                  name: e,
                  error: a,
                  options: r
                });
              }
            }
          }, {
            key: "createInstance",
            value: function value() {
              var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                  e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                  n = arguments.length > 2 ? arguments[2] : void 0,
                  r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : this,
                  i = (r = r || this).shortcut || r.prototype.shortcut;
              return new r(u()({}, t, i ? {
                shortcut: i
              } : {}), u()({}, e, {
                runtime: n
              }));
            }
          }, {
            key: "attach",
            value: function value(e, n, r) {
              (0, P.a.isPlainObject)(n) && (r = n, n = this), t.events.emit("attach", e, n, r);

              var i = function (t, e) {
                var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
                    r = u()({}, Mt.propNames(e.name), n),
                    i = r.registryProp,
                    o = r.lookupProp,
                    a = r.configKey,
                    c = void 0 === a ? "options" : a,
                    s = e;
                return t[i] ? t : (t.fireHook && t.fireHook("willAttachHelpers", i, e, n), Object(T.lazy)(t, i, function () {
                  return n.registry || e.createRegistry();
                }), Object(T.hideProperty)(t[i], "createHelperByName", function (r) {
                  var a = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                      f = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                  "string" !== typeof r && (r = "".concat(o).concat(P.a.uniqueId()));
                  var l = t[i],
                      h = a.cacheHelper,
                      p = void 0 === h ? !(!e.isCacheable && !a.cacheHelper) : h;
                  a = St({}, a, {
                    name: r,
                    id: r,
                    cacheHelper: !!e.isCacheable
                  }, Et(t.argv, "", "_"), t.get("".concat(c, ".").concat(i, ".").concat(r)), t.get("".concat(c, ".").concat(i, ".").concat(Object(L.camelCase)(Object(L.snakeCase)(r)))));
                  var v,
                      d = u()({}, t.createSandbox(f), x()({
                    host: t,
                    reg: l
                  }, i, l));

                  try {
                    v = l.lookup(r);
                  } catch (b) {
                    if (!e.allowAnonymousProviders && !n.allowAnonymousProviders) throw b;
                    v = a.provider || Object.assign({}, {
                      name: r
                    }, a);
                  }

                  v && v.default && "function" === typeof v.default && v.default.isSkypagerHelper ? (e = v.default, a.shortcut = Ft(a, e)) : v && "function" === typeof v && v.isSkypagerHelper ? (e = v, a.shortcut = Ft(a, e)) : e = s;
                  var y = !(!1 === p || !1 === v.isCacheable || !1 === v.cacheable || "undefined" === typeof t.cache),
                      g = [i, Object(T.hashObject)(kt(a, Nt)), r].join(":");
                  if (a.cacheKey = g, a.cacheable = y, a.provider = v, a.shortcut = a.shortcut || v.shortcut || e.prototype && e.prototype.shortcut || e.shortcut, a.createGetter = a.createGetter || v.createGetter || a.createGetter || a.shortcut, At(a).forEach(function (t) {
                    "string" === typeof a[t] && a[t].match(/true|false/i) && (a[t] = "true" === a[t].toLowerCase());
                  }), t.willCreateHelper && !1 === t.willCreateHelper(a, e)) return !1;
                  if (!1 === e.willCreateHelper(t, a)) return !1;
                  var m = y ? t.cache.fetch(g, function () {
                    return e.createInstance(a, d, t, e);
                  }) : e.createInstance(a, d, t, e);
                  return (a.createGetter || a.shortcut) && t.lazy(a.createGetter || a.shortcut, function () {
                    return m;
                  }, !0), m.hide("destroyHelper", function () {
                    try {
                      m.removeAllListeners(), t.cache.delete(g);
                    } catch (e) {}

                    return m.fireHook("willBeDestroyed", m, t, a), !0;
                  }), t.didCreateHelper && t.didCreateHelper(m, a), e.didCreateHelper(t, m, a), (e.isObservable || v.isObservable || v.observables || a.observables || e.observables || e.prototype && e.prototype.observables) && t.fireHook("didCreateObservableHelper", m, e), m;
                }), Object(T.hideProperty)(t[i], "allInstances", function () {
                  var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                  return Object.keys(t[i].allMembers()).map(function (n) {
                    return t[o](n, e);
                  });
                }), Object(T.hideProperty)(t[i], "createLookup", function () {
                  var n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                      r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : e.isCacheable;
                  return function (e) {
                    for (var o, a = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, c = arguments.length, s = new Array(c > 2 ? c - 2 : 0), f = 2; f < c; f++) {
                      s[f - 2] = arguments[f];
                    }

                    return (o = t[i]).createHelperByName.apply(o, [e, u()({}, n, {
                      cacheHelper: r
                    }, a)].concat(s));
                  };
                }), t.hideGetter(o, function () {
                  var e = function e() {
                    var e;
                    return (e = t[i]).createHelperByName.apply(e, arguments);
                  },
                      n = P.a.camelCase,
                      r = P.a.lowerFirst,
                      o = P.a.kebabCase;

                  return t.get([i, "available"]).forEach(function (t) {
                    var i = t.split("/").map(function (t) {
                      return r(n(o(t)));
                    });
                    P.a.set(e, i, function () {
                      for (var n = arguments.length, r = new Array(n), i = 0; i < n; i++) {
                        r[i] = arguments[i];
                      }

                      return e.apply(void 0, [t].concat(r));
                    });
                  }), e;
                }), t.didAttachHelpers && t.didAttachHelpers.call(t, e, n), t);
              }(e, n, r);

              return t.events.emit("attached", e, n, r), i;
            }
          }, {
            key: "attachAll",
            value: function value(e) {
              var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
              if (t.events.emit("attachAll", e, n), !this.isHostValid(e)) throw new Error("Invalid host for the helper registry. pass a project or a portfolio");
              return t.allHelperTypes.forEach(function (t) {
                t.isHostSupported && t.isHostSupported(e) && t.attach(e, n);
              }), e;
            }
          }, {
            key: "isHostSupported",
            value: function value(t) {
              return this.isHostValid(t);
            }
          }, {
            key: "isHostValid",
            value: function value(t) {
              return "function" === typeof t.hide && "function" === typeof t.lazy;
            }
          }, {
            key: "cacheable",
            value: function value() {
              var t = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];
              return this.isCacheable = !!t;
            }
          }, {
            key: "createContextRegistry",
            value: function value() {
              for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++) {
                e[n] = arguments[n];
              }

              return i()(lt, e);
            }
          }, {
            key: "createRegistry",
            value: function value() {
              for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++) {
                e[n] = arguments[n];
              }

              return i()(lt, e);
            }
          }, {
            key: "willCreateHelper",
            value: function value(t, e) {}
          }, {
            key: "didCreateHelper",
            value: function value(t, e, n) {}
          }, {
            key: "registryName",
            value: function value() {
              return t.propNames(this.name).registryProp;
            }
          }, {
            key: "createMixin",
            value: function value() {
              for (var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, e = arguments.length > 1 ? arguments[1] : void 0, n = arguments.length, r = new Array(n > 2 ? n - 2 : 0), i = 2; i < n; i++) {
                r[i - 2] = arguments[i];
              }

              var o = wt(t, _t),
                  u = xt(o, function (t) {
                return bt.apply(void 0, [t.bind(e)].concat(r));
              });
              return xt(u, function (t) {
                return function () {
                  for (var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, n = arguments.length, r = new Array(n > 1 ? n - 1 : 0), i = 1; i < n; i++) {
                    r[i - 1] = arguments[i];
                  }

                  return t.apply(void 0, [e].concat(r));
                };
              });
            }
          }, {
            key: "propNames",
            value: function value() {
              var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
              return {
                registryProp: Object(L.camelCase)(Object(L.pluralize)(Object(L.snakeCase)(t))),
                lookupProp: Object(L.singularize)(Object(L.camelCase)(Object(L.snakeCase)(t)))
              };
            }
          }, {
            key: "isSkypagerHelper",
            get: function get() {
              return !0;
            }
          }, {
            key: "features",
            get: function get() {
              return t.registry.lookup("feature").Feature.registry;
            }
          }, {
            key: "allHelpers",
            get: function get() {
              return t.allHelperTypes;
            }
          }, {
            key: "allHelperTypes",
            get: function get() {
              return t.registry.available.map(function (e) {
                return t.registry.lookup(e);
              }).map(function (t) {
                return t.default ? t.default : t;
              });
            }
          }, {
            key: "modules",
            get: function get() {
              return t;
            }
          }]), t;
        }();

        function Lt() {
          var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          return Object.assign(function (e) {
            return jt(t, e, function () {
              throw new Error("Module ".concat(e, " not found in mock context"));
            });
          }, {
            keys: function keys() {
              return At(t);
            },
            resolve: function resolve(e) {
              var n = Rt(t, e) && e;
              if (n) return n;
              throw new Error("Module ".concat(e, " not found in mock context"));
            }
          });
        }

        x()(Mt, "helperName", "Helper"), x()(Mt, "registry", dt), x()(Mt, "ContextRegistry", lt), x()(Mt, "ContextError", Ct), x()(Mt, "OptionsError", Pt), x()(Mt, "ProviderError", Tt), x()(Mt, "events", Object(M.a)({})), x()(Mt, "providerTypes", {}), x()(Mt, "optionTypes", {
          id: "string",
          provider: "object"
        }), x()(Mt, "contextTypes", {
          project: "object",
          reg: "object",
          host: "object",
          runtime: "object"
        }), x()(Mt, "createMockContext", Lt), e.b = Mt, Mt.registry, Mt.registerHelper, Mt.attach;

        var Nt = function Nt() {
          var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
              e = arguments.length > 1 ? arguments[1] : void 0;
          return _t(t) || t && t.then && _t(t.then) || "provider" == e || "compiler" === e;
        },
            Ft = function Ft() {
          var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
              e = arguments.length > 1 ? arguments[1] : void 0,
              n = P.a.result(t, "shortcut", function () {
            return P.a.result(t, "createGetter");
          }) || P.a.result(e, "shortcut", function () {
            return P.a.result(e, "createGetter");
          }) || P.a.result(e.prototype, "shortcut", function () {
            return P.a.result(e.prototype, "createGetter");
          });
          if (n) return n;
          var r = Object.getOwnPropertyDescriptor(e, "shortcut") || {};
          return P.a.result(r, "value");
        };
      }, function (t, e, n) {
        "use strict";

        n.r(e);
        var r = n(0),
            i = ["equipment", "information", "rice", "money", "species", "series", "fish", "sheep", "moose", "deer", "news"],
            o = [[new RegExp("(m)an$", "gi"), "$1en"], [new RegExp("(pe)rson$", "gi"), "$1ople"], [new RegExp("(child)$", "gi"), "$1ren"], [new RegExp("^(ox)$", "gi"), "$1en"], [new RegExp("(ax|test)is$", "gi"), "$1es"], [new RegExp("(octop|vir)us$", "gi"), "$1i"], [new RegExp("(alias|status)$", "gi"), "$1es"], [new RegExp("(bu)s$", "gi"), "$1ses"], [new RegExp("(buffal|tomat|potat)o$", "gi"), "$1oes"], [new RegExp("([ti])um$", "gi"), "$1a"], [new RegExp("sis$", "gi"), "ses"], [new RegExp("(?:([^f])fe|([lr])f)$", "gi"), "$1$2ves"], [new RegExp("(hive)$", "gi"), "$1s"], [new RegExp("([^aeiouy]|qu)y$", "gi"), "$1ies"], [new RegExp("(x|ch|ss|sh)$", "gi"), "$1es"], [new RegExp("(matr|vert|ind)ix|ex$", "gi"), "$1ices"], [new RegExp("([m|l])ouse$", "gi"), "$1ice"], [new RegExp("(quiz)$", "gi"), "$1zes"], [new RegExp("s$", "gi"), "s"], [new RegExp("$", "gi"), "s"]],
            u = [[new RegExp("(m)en$", "gi"), "$1an"], [new RegExp("(pe)ople$", "gi"), "$1rson"], [new RegExp("(child)ren$", "gi"), "$1"], [new RegExp("([ti])a$", "gi"), "$1um"], [new RegExp("((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$", "gi"), "$1$2sis"], [new RegExp("(hive)s$", "gi"), "$1"], [new RegExp("(tive)s$", "gi"), "$1"], [new RegExp("(curve)s$", "gi"), "$1"], [new RegExp("([lr])ves$", "gi"), "$1f"], [new RegExp("([^fo])ves$", "gi"), "$1fe"], [new RegExp("([^aeiouy]|qu)ies$", "gi"), "$1y"], [new RegExp("(s)eries$", "gi"), "$1eries"], [new RegExp("(m)ovies$", "gi"), "$1ovie"], [new RegExp("(x|ch|ss|sh)es$", "gi"), "$1"], [new RegExp("([m|l])ice$", "gi"), "$1ouse"], [new RegExp("(bus)es$", "gi"), "$1"], [new RegExp("(o)es$", "gi"), "$1"], [new RegExp("(shoe)s$", "gi"), "$1"], [new RegExp("(cris|ax|test)es$", "gi"), "$1is"], [new RegExp("(octop|vir)i$", "gi"), "$1us"], [new RegExp("(alias|status)es$", "gi"), "$1"], [new RegExp("^(ox)en", "gi"), "$1"], [new RegExp("(vert|ind)ices$", "gi"), "$1ex"], [new RegExp("(matr)ices$", "gi"), "$1ix"], [new RegExp("(quiz)zes$", "gi"), "$1"], [new RegExp("s$", "gi"), ""]],
            a = ["and", "or", "nor", "a", "an", "the", "so", "but", "to", "of", "at", "by", "from", "into", "on", "onto", "off", "out", "in", "over", "with", "for"],
            c = new RegExp("(_ids|_id)$", "g"),
            s = new RegExp("_", "g"),
            f = new RegExp("[ _]", "g"),
            l = new RegExp("([A-Z])", "g"),
            h = new RegExp("^_");

        function p(t, e, n, r) {
          if (r) t = r;else if (!(n.indexOf(t.toLowerCase()) > -1)) for (var i = 0; i < e.length; i++) {
            if (t.match(e[i][0])) {
              t = t.replace(e[i][0], e[i][1]);
              break;
            }
          }
          return t;
        }

        function v(t, e) {
          return p(t, o, i);
        }

        function d(t, e) {
          return p(t, u, i, e);
        }

        function y(t, e) {
          var n = t.toLowerCase();
          return n = (n = n.replace(c, "")).replace(s, " "), e || (n = Object(r.capitalize)(n)), n;
        }

        function g(t, e) {
          for (var n = t.toLowerCase(), r = n.split("/"), i = 0; i < r.length; i++) {
            for (var o = r[i].split("_"), u = e && i + 1 === r.length ? 1 : 0; u < o.length; u++) {
              o[u] = o[u].charAt(0).toUpperCase() + o[u].substring(1);
            }

            r[i] = o.join("");
          }

          return r.join("");
        }

        function m(t) {
          for (var e = t.split("::"), n = 0; n < e.length; n++) {
            e[n] = e[n].replace(l, "_$1"), e[n] = e[n].replace(h, "");
          }

          return e.join("/").toLowerCase();
        }

        function b(t) {
          return t.replace(f, "-");
        }

        function x(t) {
          for (var e = t.toLowerCase(), n = (e = e.replace(s, " ")).split(" "), i = 0; i < n.length; i++) {
            for (var o = n[i].split("-"), u = 0; u < o.length; u++) {
              a.indexOf(o[u].toLowerCase()) < 0 && (o[u] = Object(r.capitalize)(o[u]));
            }

            n[i] = o.join("-");
          }

          return (e = n.join(" ")).substring(0, 1).toUpperCase() + e.substring(1);
        }

        function w(t) {
          var e = t.split("::");
          return e[e.length - 1];
        }

        function _(t) {
          return this.pluralize(this.underscore(t));
        }

        function k(t) {
          return this.singularize(this.camelize(t));
        }

        function S(t, e) {
          return this.underscore(this.demodulize(t)) + (e ? "" : "_") + "id";
        }

        function O(t) {
          for (var e = t.split(" "), n = 0; n < e.length; n++) {
            if (NaN !== parseInt(e[n])) {
              var r = e[n].substring(e[n].length - 2),
                  i = e[n].substring(e[n].length - 1),
                  o = "th";
              "11" != r && "12" != r && "13" != r && ("1" === i ? o = "st" : "2" === i ? o = "nd" : "3" === i && (o = "rd")), e[n] += o;
            }
          }

          return e.join(" ");
        }

        n.d(e, "pluralize", function () {
          return v;
        }), n.d(e, "singularize", function () {
          return d;
        }), n.d(e, "humanize", function () {
          return y;
        }), n.d(e, "camelize", function () {
          return g;
        }), n.d(e, "underscore", function () {
          return m;
        }), n.d(e, "dasherize", function () {
          return b;
        }), n.d(e, "titleize", function () {
          return x;
        }), n.d(e, "demodulize", function () {
          return w;
        }), n.d(e, "tableize", function () {
          return _;
        }), n.d(e, "classify", function () {
          return k;
        }), n.d(e, "foreign_key", function () {
          return S;
        }), n.d(e, "ordinalize", function () {
          return O;
        }), n.d(e, "camelCase", function () {
          return r.camelCase;
        }), n.d(e, "capitalize", function () {
          return r.capitalize;
        }), n.d(e, "kebabCase", function () {
          return r.kebabCase;
        }), n.d(e, "lowerCase", function () {
          return r.lowerCase;
        }), n.d(e, "lowerFirst", function () {
          return r.lowerFirst;
        }), n.d(e, "snakeCase", function () {
          return r.snakeCase;
        }), n.d(e, "startCase", function () {
          return r.startCase;
        }), n.d(e, "template", function () {
          return r.template;
        }), n.d(e, "toLower", function () {
          return r.toLower;
        }), n.d(e, "toUpper", function () {
          return r.toUpper;
        }), n.d(e, "trimStart", function () {
          return r.trimStart;
        }), n.d(e, "upperFirst", function () {
          return r.upperFirst;
        });
      }, function (t, e, n) {
        var r = n(72)("wks"),
            i = n(48),
            o = n(5).Symbol,
            u = "function" == typeof o;
        (t.exports = function (t) {
          return r[t] || (r[t] = u && o[t] || (u ? o : i)("Symbol." + t));
        }).store = r;
      }, function (t, e) {
        function n(t, e) {
          for (var n = 0; n < e.length; n++) {
            var r = e[n];
            r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r);
          }
        }

        t.exports = function (t, e, r) {
          return e && n(t.prototype, e), r && n(t, r), t;
        };
      }, function (t, e, n) {
        var r = n(331),
            i = n(332),
            o = n(333);

        t.exports = function (t) {
          return r(t) || i(t) || o();
        };
      }, function (t, e, n) {
        var r = n(36),
            i = Math.min;

        t.exports = function (t) {
          return t > 0 ? i(r(t), 9007199254740991) : 0;
        };
      }, function (t, e) {
        var n = t.exports = {
          version: "2.6.5"
        };
        "number" == typeof __e && (__e = n);
      }, function (t, e) {
        function n(t) {
          return (n = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function (t) {
            return typeof t;
          } : function (t) {
            return t && "function" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
          })(t);
        }

        function r(e) {
          return "function" === typeof Symbol && "symbol" === n(Symbol.iterator) ? t.exports = r = function r(t) {
            return n(t);
          } : t.exports = r = function r(t) {
            return t && "function" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : n(t);
          }, r(e);
        }

        t.exports = r;
      }, function (t, e, n) {
        var r = n(7),
            i = n(116),
            o = n(44),
            u = Object.defineProperty;
        e.f = n(20) ? Object.defineProperty : function (t, e, n) {
          if (r(t), e = o(e, !0), r(n), i) try {
            return u(t, e, n);
          } catch (a) {}
          if ("get" in n || "set" in n) throw TypeError("Accessors not supported!");
          return "value" in n && (t[e] = n.value), t;
        };
      }, function (t, e, n) {
        t.exports = !n(6)(function () {
          return 7 != Object.defineProperty({}, "a", {
            get: function get() {
              return 7;
            }
          }).a;
        });
      }, function (t, e) {
        function n(e) {
          return t.exports = n = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {
            return t.__proto__ || Object.getPrototypeOf(t);
          }, n(e);
        }

        t.exports = n;
      }, function (t, e, n) {
        var r = n(18),
            i = n(43);

        t.exports = function (t, e) {
          return !e || "object" !== r(e) && "function" !== typeof e ? i(t) : e;
        };
      }, function (t, e, n) {
        var r = n(112);

        t.exports = function (t, e) {
          if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
          t.prototype = Object.create(e && e.prototype, {
            constructor: {
              value: t,
              writable: !0,
              configurable: !0
            }
          }), e && r(t, e);
        };
      }, function (t, e, n) {
        var r = n(41);

        t.exports = function (t) {
          return Object(r(t));
        };
      }, function (t, e) {
        function n(t, e, n, r, i, o, u) {
          try {
            var a = t[o](u),
                c = a.value;
          } catch (s) {
            return void n(s);
          }

          a.done ? e(c) : Promise.resolve(c).then(r, i);
        }

        t.exports = function (t) {
          return function () {
            var e = this,
                r = arguments;
            return new Promise(function (i, o) {
              var u = t.apply(e, r);

              function a(t) {
                n(u, i, o, a, c, "next", t);
              }

              function c(t) {
                n(u, i, o, a, c, "throw", t);
              }

              a(void 0);
            });
          };
        };
      }, function (t, e, n) {
        var r = n(5),
            i = n(29),
            o = n(28),
            u = n(48)("src"),
            a = n(160),
            c = ("" + a).split("toString");
        n(17).inspectSource = function (t) {
          return a.call(t);
        }, (t.exports = function (t, e, n, a) {
          var s = "function" == typeof n;
          s && (o(n, "name") || i(n, "name", e)), t[e] !== n && (s && (o(n, u) || i(n, u, t[e] ? "" + t[e] : c.join(String(e)))), t === r ? t[e] = n : a ? t[e] ? t[e] = n : i(t, e, n) : (delete t[e], i(t, e, n)));
        })(Function.prototype, "toString", function () {
          return "function" == typeof this && this[u] || a.call(this);
        });
      }, function (t, e, n) {
        var r = n(1),
            i = n(6),
            o = n(41),
            u = /"/g,
            a = function a(t, e, n, r) {
          var i = String(o(t)),
              a = "<" + e;
          return "" !== n && (a += " " + n + '="' + String(r).replace(u, "&quot;") + '"'), a + ">" + i + "</" + e + ">";
        };

        t.exports = function (t, e) {
          var n = {};
          n[t] = e(a), r(r.P + r.F * i(function () {
            var e = ""[t]('"');
            return e !== e.toLowerCase() || e.split('"').length > 3;
          }), "String", n);
        };
      }, function (t, e) {
        var n = {}.hasOwnProperty;

        t.exports = function (t, e) {
          return n.call(t, e);
        };
      }, function (t, e, n) {
        var r = n(19),
            i = n(47);
        t.exports = n(20) ? function (t, e, n) {
          return r.f(t, e, i(1, n));
        } : function (t, e, n) {
          return t[e] = n, t;
        };
      }, function (t, e, n) {
        var r = n(66),
            i = n(41);

        t.exports = function (t) {
          return r(i(t));
        };
      }, function (t, e, n) {
        "use strict";

        n.d(e, "a", function () {
          return w;
        });

        var r = n(3),
            i = n.n(r),
            o = n(15),
            u = n.n(o),
            a = n(9),
            c = n.n(a),
            s = n(14),
            f = n.n(s),
            l = n(22),
            h = n.n(l),
            p = n(21),
            v = n.n(p),
            d = n(23),
            y = n.n(d),
            g = n(2),
            m = n.n(g),
            b = n(11),
            x = function x(t) {
          return "function" === typeof t;
        },
            w = function (t) {
          function e() {
            return c()(this, e), h()(this, v()(e).apply(this, arguments));
          }

          return y()(e, t), f()(e, [{
            key: "afterInitialize",
            value: function value() {
              this.applyInterface(this.featureMixin, this.featureMixinOptions);
            }
          }, {
            key: "enable",
            value: function value() {
              var t = this,
                  e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                  n = arguments.length > 1 ? arguments[1] : void 0,
                  r = this.runtime,
                  i = this.lodash,
                  o = i.identity,
                  u = i.isFunction,
                  a = i.defaultsDeep;
              if (u(e) && (n = e, e = {}), u(n) || (n = o), r.isFeatureEnabled(this.name) && r.get("enabledFeatures.".concat(this.name, ".cacheKey")) === this.cacheKey) return n(null, this), this;

              try {
                this.hide("featureSettings", a({}, e, this.options), {
                  configurable: !0
                });
              } catch (c) {}

              try {
                this.host.applyInterface(this.hostMixin, this.hostMixinOptions);
              } catch (c) {
                console.error("error applying host mixin", c), this.hostMixinError = c;
              }

              return (t.featureWasEnabled ? Promise.resolve(t.featureWasEnabled(e)) : t.attemptMethodAsync("featureWasEnabled", e)).then(function () {
                return t.runtime.featureStatus.set(t.name, {
                  cacheKey: t.cacheKey,
                  status: "enabled",
                  cfg: e,
                  options: t.options
                }), n(null, t), t;
              }).catch(function (r) {
                throw t.runtime.featureStatus.set(t.name, {
                  status: "failed",
                  error: r,
                  cacheKey: t.cacheKey,
                  cfg: e,
                  options: t.options
                }), t.runtime.error("Error while enabling feature", t, r.message), n(r), r;
              });
            }
          }, {
            key: "runMethod",
            value: function value(t) {
              for (var e = this.tryGet(t, this.get(t)), n = arguments.length, r = new Array(n > 1 ? n - 1 : 0), i = 1; i < n; i++) {
                r[i - 1] = arguments[i];
              }

              return x(e) && e.call.apply(e, [this].concat(u()(r.push(this.context))));
            }
          }, {
            key: "featureMixinOptions",
            get: function get() {
              return (0, this.lodash.defaults)({}, this.tryResult("featureMixinOptions") || this.tryResult("mixinOptions") || {}, this.defaultMixinOptions);
            }
          }, {
            key: "hostMixinOptions",
            get: function get() {
              var t = this.lodash.defaults,
                  e = this.tryResult("hostMixinOptions") || this.tryResult("mixinOptions") || {};
              return t({}, {
                scope: this.host
              }, e, this.defaultMixinOptions);
            }
          }, {
            key: "defaultMixinOptions",
            get: function get() {
              return {
                transformKeys: !0,
                scope: this,
                partial: [this.context],
                insertOptions: !0,
                right: !0,
                hidden: !1,
                configurable: !0
              };
            }
          }, {
            key: "hostMixin",
            get: function get() {
              return this.projectMixin;
            }
          }, {
            key: "projectMixin",
            get: function get() {
              var t = this;
              return this.chain.get("hostMethods").filter(function (e) {
                return x(t.tryGet(e));
              }).keyBy(function (t) {
                return t;
              }).mapValues(function (e) {
                return t.tryGet(e);
              }).pickBy(function (t) {
                return x(t);
              }).value();
            }
          }, {
            key: "featureMixin",
            get: function get() {
              var t = this,
                  e = this.hostMethods;
              return this.chain.get("featureMethods").filter(function (n) {
                return -1 === e.indexOf(n) && x(t.tryGet(n));
              }).keyBy(function (t) {
                return t;
              }).mapValues(function (e) {
                return t.tryGet(e);
              }).pickBy(function (t) {
                return x(t);
              }).value();
            }
          }, {
            key: "featureMethods",
            get: function get() {
              return this.tryResult("featureMethods", []);
            }
          }, {
            key: "runtimeMethods",
            get: function get() {
              var t = this.lodash;
              return (0, t.uniq)((0, t.flatten)(this.tryGet("hostMethods", []), this.tryGet("runtimeMethods", []), this.tryGet("projectMethods", [])));
            }
          }, {
            key: "hostMethods",
            get: function get() {
              return this.runtimeMethods;
            }
          }, {
            key: "projectMethods",
            get: function get() {
              return this.runtimeMethods;
            }
          }, {
            key: "dependencies",
            get: function get() {
              return this.tryGet("dependencies", {});
            }
          }, {
            key: "isSupported",
            get: function get() {
              return this.tryResult("isSupported", !0);
            }
          }, {
            key: "projectConfigKeys",
            get: function get() {
              var t = this.lodash.uniq,
                  e = this.runtime.stringUtils,
                  n = (0, e.camelCase)((0, e.snakeCase)(this.name));
              return t(["runtime.argv.features.".concat(this.name), "runtime.options.features.".concat(this.name), "runtime.config.features.".concat(this.name), "runtime.argv.features.".concat(n), "runtime.options.features.".concat(n), "runtime.argv.".concat(this.name), "runtime.projectConfig.".concat(this.name), "runtime.options.".concat(this.name), "runtime.argv.".concat(n), "runtime.projectConfig.".concat(n), "runtime.options.".concat(n)]);
            }
          }], [{
            key: "createRegistry",
            value: function value() {
              var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                  e = b.b.createContextRegistry(t.name || "features", i()({
                context: b.b.createMockContext(t.features || {})
              }, t));
              return e.enabled = {}, e;
            }
          }, {
            key: "attach",
            value: function value(t) {
              var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
              return b.b.attach(t, e, i()({
                registryProp: "_features",
                lookupProp: "_feature",
                cacheHelper: !0,
                isCacheable: !0,
                registry: e.registry
              }, n));
            }
          }]), e;
        }(b.b);

        m()(w, "allowAnonymousProviders", !1), m()(w, "isCacheable", !0), w.attach, w.registry = w.createRegistry(), w.isSkypagerFeature = !0;
      }, function (t, e, n) {
        "use strict";

        var r = n(6);

        t.exports = function (t, e) {
          return !!t && r(function () {
            e ? t.call(null, function () {}, 1) : t.call(null);
          });
        };
      }, function (t, e, n) {
        "use strict";

        n.r(e), function (t) {
          n.d(e, "extras", function () {
            return kn;
          }), n.d(e, "Reaction", function () {
            return Ke;
          }), n.d(e, "untracked", function () {
            return Ge;
          }), n.d(e, "IDerivationState", function () {
            return _e;
          }), n.d(e, "Atom", function () {
            return u;
          }), n.d(e, "BaseAtom", function () {
            return o;
          }), n.d(e, "useStrict", function () {
            return V;
          }), n.d(e, "isStrictModeEnabled", function () {
            return G;
          }), n.d(e, "spy", function () {
            return b;
          }), n.d(e, "comparer", function () {
            return ot;
          }), n.d(e, "asReference", function () {
            return en;
          }), n.d(e, "asFlat", function () {
            return rn;
          }), n.d(e, "asStructure", function () {
            return nn;
          }), n.d(e, "asMap", function () {
            return on;
          }), n.d(e, "isModifierDescriptor", function () {
            return Nt;
          }), n.d(e, "isObservableObject", function () {
            return _t;
          }), n.d(e, "isBoxedObservable", function () {
            return D;
          }), n.d(e, "isObservableArray", function () {
            return L;
          }), n.d(e, "ObservableMap", function () {
            return Ht;
          }), n.d(e, "isObservableMap", function () {
            return qt;
          }), n.d(e, "map", function () {
            return Wt;
          }), n.d(e, "transaction", function () {
            return Vt;
          }), n.d(e, "observable", function () {
            return Mt;
          }), n.d(e, "IObservableFactories", function () {
            return Tt;
          }), n.d(e, "computed", function () {
            return sn;
          }), n.d(e, "isObservable", function () {
            return kt;
          }), n.d(e, "isComputed", function () {
            return pn;
          }), n.d(e, "extendObservable", function () {
            return Ot;
          }), n.d(e, "extendShallowObservable", function () {
            return Et;
          }), n.d(e, "observe", function () {
            return vn;
          }), n.d(e, "intercept", function () {
            return dn;
          }), n.d(e, "autorun", function () {
            return ut;
          }), n.d(e, "autorunAsync", function () {
            return ct;
          }), n.d(e, "when", function () {
            return at;
          }), n.d(e, "reaction", function () {
            return st;
          }), n.d(e, "action", function () {
            return Q;
          }), n.d(e, "isAction", function () {
            return nt;
          }), n.d(e, "runInAction", function () {
            return et;
          }), n.d(e, "expr", function () {
            return yn;
          }), n.d(e, "toJS", function () {
            return gn;
          }), n.d(e, "createTransformer", function () {
            return mn;
          }), n.d(e, "whyRun", function () {
            return xn;
          }), n.d(e, "isArrayLike", function () {
            return ge;
          });

          var r = Object.setPrototypeOf || {
            __proto__: []
          } instanceof Array && function (t, e) {
            t.__proto__ = e;
          } || function (t, e) {
            for (var n in e) {
              e.hasOwnProperty(n) && (t[n] = e[n]);
            }
          };

          function i(t, e) {
            function n() {
              this.constructor = t;
            }

            r(t, e), t.prototype = null === e ? Object.create(e) : (n.prototype = e.prototype, new n());
          }

          var o = function () {
            function t(t) {
              void 0 === t && (t = "Atom@" + Yt()), this.name = t, this.isPendingUnobservation = !0, this.observers = [], this.observersIndexes = {}, this.diffValue = 0, this.lastAccessedBy = 0, this.lowestObserverState = _e.NOT_TRACKING;
            }

            return t.prototype.onBecomeUnobserved = function () {}, t.prototype.reportObserved = function () {
              Ne(this);
            }, t.prototype.reportChanged = function () {
              Me(), function (t) {
                if (t.lowestObserverState !== _e.STALE) {
                  t.lowestObserverState = _e.STALE;

                  for (var e = t.observers, n = e.length; n--;) {
                    var r = e[n];
                    r.dependenciesState === _e.UP_TO_DATE && r.onBecomeStale(), r.dependenciesState = _e.STALE;
                  }
                }
              }(this), Le();
            }, t.prototype.toString = function () {
              return this.name;
            }, t;
          }(),
              u = function (t) {
            function e(e, n, r) {
              void 0 === e && (e = "Atom@" + Yt()), void 0 === n && (n = ne), void 0 === r && (r = ne);
              var i = t.call(this, e) || this;
              return i.name = e, i.onBecomeObservedHandler = n, i.onBecomeUnobservedHandler = r, i.isPendingUnobservation = !1, i.isBeingTracked = !1, i;
            }

            return i(e, t), e.prototype.reportObserved = function () {
              return Me(), t.prototype.reportObserved.call(this), this.isBeingTracked || (this.isBeingTracked = !0, this.onBecomeObservedHandler()), Le(), !!Oe.trackingDerivation;
            }, e.prototype.onBecomeUnobserved = function () {
              this.isBeingTracked = !1, this.onBecomeUnobservedHandler();
            }, e;
          }(o),
              a = ye("Atom", o);

          function c(t) {
            return t.interceptors && t.interceptors.length > 0;
          }

          function s(t, e) {
            var n = t.interceptors || (t.interceptors = []);
            return n.push(e), ee(function () {
              var t = n.indexOf(e);
              -1 !== t && n.splice(t, 1);
            });
          }

          function f(t, e) {
            var n = He();

            try {
              var r = t.interceptors;
              if (r) for (var i = 0, o = r.length; i < o && (Xt(!(e = r[i](e)) || e.type, "Intercept handlers should return nothing or a change object"), e); i++) {
                ;
              }
              return e;
            } finally {
              We(n);
            }
          }

          function l(t) {
            return t.changeListeners && t.changeListeners.length > 0;
          }

          function h(t, e) {
            var n = t.changeListeners || (t.changeListeners = []);
            return n.push(e), ee(function () {
              var t = n.indexOf(e);
              -1 !== t && n.splice(t, 1);
            });
          }

          function p(t, e) {
            var n = He(),
                r = t.changeListeners;

            if (r) {
              for (var i = 0, o = (r = r.slice()).length; i < o; i++) {
                r[i](e);
              }

              We(n);
            }
          }

          function v() {
            return !!Oe.spyListeners.length;
          }

          function d(t) {
            if (Oe.spyListeners.length) for (var e = Oe.spyListeners, n = 0, r = e.length; n < r; n++) {
              e[n](t);
            }
          }

          function y(t) {
            d(ae({}, t, {
              spyReportStart: !0
            }));
          }

          var g = {
            spyReportEnd: !0
          };

          function m(t) {
            d(t ? ae({}, t, g) : g);
          }

          function b(t) {
            return Oe.spyListeners.push(t), ee(function () {
              var e = Oe.spyListeners.indexOf(t);
              -1 !== e && Oe.spyListeners.splice(e, 1);
            });
          }

          var x = "__$$iterating";

          function w(t) {
            Xt(!0 !== t[x], "Illegal state: cannot recycle array as iterator"), le(t, x, !0);
            var e = -1;
            return le(t, "next", function () {
              return {
                done: ++e >= this.length,
                value: e < this.length ? this[e] : void 0
              };
            }), t;
          }

          function _(t, e) {
            le(t, "function" === typeof Symbol && Symbol.iterator || "@@iterator", e);
          }

          var k,
              S,
              O = function () {
            var t = !1,
                e = {};
            return Object.defineProperty(e, "0", {
              set: function set() {
                t = !0;
              }
            }), Object.create(e)[0] = 1, !1 === t;
          }(),
              E = 0,
              j = function j() {};

          k = j, S = Array.prototype, "undefined" !== typeof Object.setPrototypeOf ? Object.setPrototypeOf(k.prototype, S) : "undefined" !== typeof k.prototype.__proto__ ? k.prototype.__proto__ = S : k.prototype = S, Object.isFrozen(Array) && ["constructor", "push", "shift", "concat", "pop", "unshift", "replace", "find", "findIndex", "splice", "reverse", "sort"].forEach(function (t) {
            Object.defineProperty(j.prototype, t, {
              configurable: !0,
              writable: !0,
              value: Array.prototype[t]
            });
          });

          var A = function () {
            function t(t, e, n, r) {
              this.array = n, this.owned = r, this.values = [], this.lastKnownLength = 0, this.interceptors = null, this.changeListeners = null, this.atom = new o(t || "ObservableArray@" + Yt()), this.enhancer = function (n, r) {
                return e(n, r, t + "[..]");
              };
            }

            return t.prototype.dehanceValue = function (t) {
              return void 0 !== this.dehancer ? this.dehancer(t) : t;
            }, t.prototype.dehanceValues = function (t) {
              return void 0 !== this.dehancer ? t.map(this.dehancer) : t;
            }, t.prototype.intercept = function (t) {
              return s(this, t);
            }, t.prototype.observe = function (t, e) {
              return void 0 === e && (e = !1), e && t({
                object: this.array,
                type: "splice",
                index: 0,
                added: this.values.slice(),
                addedCount: this.values.length,
                removed: [],
                removedCount: 0
              }), h(this, t);
            }, t.prototype.getArrayLength = function () {
              return this.atom.reportObserved(), this.values.length;
            }, t.prototype.setArrayLength = function (t) {
              if ("number" !== typeof t || t < 0) throw new Error("[mobx.array] Out of range: " + t);
              var e = this.values.length;
              if (t !== e) if (t > e) {
                for (var n = new Array(t - e), r = 0; r < t - e; r++) {
                  n[r] = void 0;
                }

                this.spliceWithArray(e, 0, n);
              } else this.spliceWithArray(t, e - t);
            }, t.prototype.updateArrayLength = function (t, e) {
              if (t !== this.lastKnownLength) throw new Error("[mobx] Modification exception: the internal structure of an observable array was changed. Did you use peek() to change it?");
              this.lastKnownLength += e, e > 0 && t + e + 1 > E && T(t + e + 1);
            }, t.prototype.spliceWithArray = function (t, e, n) {
              var r = this;
              $e(this.atom);
              var i = this.values.length;

              if (void 0 === t ? t = 0 : t > i ? t = i : t < 0 && (t = Math.max(0, i + t)), e = 1 === arguments.length ? i - t : void 0 === e || null === e ? 0 : Math.max(0, Math.min(e, i - t)), void 0 === n && (n = []), c(this)) {
                var o = f(this, {
                  object: this.array,
                  type: "splice",
                  index: t,
                  removedCount: e,
                  added: n
                });
                if (!o) return Kt;
                e = o.removedCount, n = o.added;
              }

              var u = (n = n.map(function (t) {
                return r.enhancer(t, void 0);
              })).length - e;
              this.updateArrayLength(i, u);
              var a = this.spliceItemsIntoValues(t, e, n);
              return 0 === e && 0 === n.length || this.notifyArraySplice(t, n, a), this.dehanceValues(a);
            }, t.prototype.spliceItemsIntoValues = function (t, e, n) {
              if (n.length < 1e4) return (r = this.values).splice.apply(r, [t, e].concat(n));
              var r,
                  i = this.values.slice(t, t + e);
              return this.values = this.values.slice(0, t).concat(n, this.values.slice(t + e)), i;
            }, t.prototype.notifyArrayChildUpdate = function (t, e, n) {
              var r = !this.owned && v(),
                  i = l(this),
                  o = i || r ? {
                object: this.array,
                type: "update",
                index: t,
                newValue: e,
                oldValue: n
              } : null;
              r && y(o), this.atom.reportChanged(), i && p(this, o), r && m();
            }, t.prototype.notifyArraySplice = function (t, e, n) {
              var r = !this.owned && v(),
                  i = l(this),
                  o = i || r ? {
                object: this.array,
                type: "splice",
                index: t,
                removed: n,
                added: e,
                removedCount: n.length,
                addedCount: e.length
              } : null;
              r && y(o), this.atom.reportChanged(), i && p(this, o), r && m();
            }, t;
          }(),
              R = function (t) {
            function e(e, n, r, i) {
              void 0 === r && (r = "ObservableArray@" + Yt()), void 0 === i && (i = !1);
              var o = t.call(this) || this,
                  u = new A(r, n, o, i);
              return le(o, "$mobx", u), e && e.length && o.spliceWithArray(0, 0, e), O && Object.defineProperty(u.array, "0", I), o;
            }

            return i(e, t), e.prototype.intercept = function (t) {
              return this.$mobx.intercept(t);
            }, e.prototype.observe = function (t, e) {
              return void 0 === e && (e = !1), this.$mobx.observe(t, e);
            }, e.prototype.clear = function () {
              return this.splice(0);
            }, e.prototype.concat = function () {
              for (var t = [], e = 0; e < arguments.length; e++) {
                t[e] = arguments[e];
              }

              return this.$mobx.atom.reportObserved(), Array.prototype.concat.apply(this.peek(), t.map(function (t) {
                return L(t) ? t.peek() : t;
              }));
            }, e.prototype.replace = function (t) {
              return this.$mobx.spliceWithArray(0, this.$mobx.values.length, t);
            }, e.prototype.toJS = function () {
              return this.slice();
            }, e.prototype.toJSON = function () {
              return this.toJS();
            }, e.prototype.peek = function () {
              return this.$mobx.atom.reportObserved(), this.$mobx.dehanceValues(this.$mobx.values);
            }, e.prototype.find = function (t, e, n) {
              void 0 === n && (n = 0);
              var r = this.findIndex.apply(this, arguments);
              return -1 === r ? void 0 : this.get(r);
            }, e.prototype.findIndex = function (t, e, n) {
              void 0 === n && (n = 0);

              for (var r = this.peek(), i = r.length, o = n; o < i; o++) {
                if (t.call(e, r[o], o, this)) return o;
              }

              return -1;
            }, e.prototype.splice = function (t, e) {
              for (var n = [], r = 2; r < arguments.length; r++) {
                n[r - 2] = arguments[r];
              }

              switch (arguments.length) {
                case 0:
                  return [];

                case 1:
                  return this.$mobx.spliceWithArray(t);

                case 2:
                  return this.$mobx.spliceWithArray(t, e);
              }

              return this.$mobx.spliceWithArray(t, e, n);
            }, e.prototype.spliceWithArray = function (t, e, n) {
              return this.$mobx.spliceWithArray(t, e, n);
            }, e.prototype.push = function () {
              for (var t = [], e = 0; e < arguments.length; e++) {
                t[e] = arguments[e];
              }

              var n = this.$mobx;
              return n.spliceWithArray(n.values.length, 0, t), n.values.length;
            }, e.prototype.pop = function () {
              return this.splice(Math.max(this.$mobx.values.length - 1, 0), 1)[0];
            }, e.prototype.shift = function () {
              return this.splice(0, 1)[0];
            }, e.prototype.unshift = function () {
              for (var t = [], e = 0; e < arguments.length; e++) {
                t[e] = arguments[e];
              }

              var n = this.$mobx;
              return n.spliceWithArray(0, 0, t), n.values.length;
            }, e.prototype.reverse = function () {
              var t = this.slice();
              return t.reverse.apply(t, arguments);
            }, e.prototype.sort = function (t) {
              var e = this.slice();
              return e.sort.apply(e, arguments);
            }, e.prototype.remove = function (t) {
              var e = this.$mobx.dehanceValues(this.$mobx.values).indexOf(t);
              return e > -1 && (this.splice(e, 1), !0);
            }, e.prototype.move = function (t, e) {
              function n(t) {
                if (t < 0) throw new Error("[mobx.array] Index out of bounds: " + t + " is negative");
                var e = this.$mobx.values.length;
                if (t >= e) throw new Error("[mobx.array] Index out of bounds: " + t + " is not smaller than " + e);
              }

              if (n.call(this, t), n.call(this, e), t !== e) {
                var r,
                    i = this.$mobx.values;
                r = t < e ? i.slice(0, t).concat(i.slice(t + 1, e + 1), [i[t]], i.slice(e + 1)) : i.slice(0, e).concat([i[t]], i.slice(e, t), i.slice(t + 1)), this.replace(r);
              }
            }, e.prototype.get = function (t) {
              var e = this.$mobx;

              if (e) {
                if (t < e.values.length) return e.atom.reportObserved(), e.dehanceValue(e.values[t]);
                console.warn("[mobx.array] Attempt to read an array index (" + t + ") that is out of bounds (" + e.values.length + "). Please check length first. Out of bound indices will not be tracked by MobX");
              }
            }, e.prototype.set = function (t, e) {
              var n = this.$mobx,
                  r = n.values;

              if (t < r.length) {
                $e(n.atom);
                var i = r[t];

                if (c(n)) {
                  var o = f(n, {
                    type: "update",
                    object: this,
                    index: t,
                    newValue: e
                  });
                  if (!o) return;
                  e = o.newValue;
                }

                (e = n.enhancer(e, i)) !== i && (r[t] = e, n.notifyArrayChildUpdate(t, e, i));
              } else {
                if (t !== r.length) throw new Error("[mobx.array] Index out of bounds, " + t + " is larger than " + r.length);
                n.spliceWithArray(t, 0, [e]);
              }
            }, e;
          }(j);

          _(R.prototype, function () {
            return w(this.slice());
          }), Object.defineProperty(R.prototype, "length", {
            enumerable: !1,
            configurable: !0,
            get: function get() {
              return this.$mobx.getArrayLength();
            },
            set: function set(t) {
              this.$mobx.setArrayLength(t);
            }
          }), ["every", "filter", "forEach", "indexOf", "join", "lastIndexOf", "map", "reduce", "reduceRight", "slice", "some", "toString", "toLocaleString"].forEach(function (t) {
            var e = Array.prototype[t];
            Xt("function" === typeof e, "Base function not defined on Array prototype: '" + t + "'"), fe(R.prototype, t, function () {
              return e.apply(this.peek(), arguments);
            });
          }), function (t, e) {
            for (var n = 0; n < e.length; n++) {
              fe(t, e[n], t[e[n]]);
            }
          }(R.prototype, ["constructor", "intercept", "observe", "clear", "concat", "get", "replace", "toJS", "toJSON", "peek", "find", "findIndex", "splice", "spliceWithArray", "push", "pop", "set", "shift", "unshift", "reverse", "sort", "remove", "move", "toString", "toLocaleString"]);
          var I = C(0);

          function C(t) {
            return {
              enumerable: !1,
              configurable: !1,
              get: function get() {
                return this.get(t);
              },
              set: function set(e) {
                this.set(t, e);
              }
            };
          }

          function P(t) {
            Object.defineProperty(R.prototype, "" + t, C(t));
          }

          function T(t) {
            for (var e = E; e < t; e++) {
              P(e);
            }

            E = t;
          }

          T(1e3);
          var M = ye("ObservableArrayAdministration", A);

          function L(t) {
            return oe(t) && M(t.$mobx);
          }

          var N = {},
              F = function (t) {
            function e(e, n, r, i) {
              void 0 === r && (r = "ObservableValue@" + Yt()), void 0 === i && (i = !0);
              var o = t.call(this, r) || this;
              return o.enhancer = n, o.hasUnreportedChange = !1, o.dehancer = void 0, o.value = n(e, void 0, r), i && v() && d({
                type: "create",
                object: o,
                newValue: o.value
              }), o;
            }

            return i(e, t), e.prototype.dehanceValue = function (t) {
              return void 0 !== this.dehancer ? this.dehancer(t) : t;
            }, e.prototype.set = function (t) {
              var e = this.value;

              if ((t = this.prepareNewValue(t)) !== N) {
                var n = v();
                n && y({
                  type: "update",
                  object: this,
                  newValue: t,
                  oldValue: e
                }), this.setNewValue(t), n && m();
              }
            }, e.prototype.prepareNewValue = function (t) {
              if ($e(this), c(this)) {
                var e = f(this, {
                  object: this,
                  type: "update",
                  newValue: t
                });
                if (!e) return N;
                t = e.newValue;
              }

              return t = this.enhancer(t, this.value, this.name), this.value !== t ? t : N;
            }, e.prototype.setNewValue = function (t) {
              var e = this.value;
              this.value = t, this.reportChanged(), l(this) && p(this, {
                type: "update",
                object: this,
                newValue: t,
                oldValue: e
              });
            }, e.prototype.get = function () {
              return this.reportObserved(), this.dehanceValue(this.value);
            }, e.prototype.intercept = function (t) {
              return s(this, t);
            }, e.prototype.observe = function (t, e) {
              return e && t({
                object: this,
                type: "update",
                newValue: this.value,
                oldValue: void 0
              }), h(this, t);
            }, e.prototype.toJSON = function () {
              return this.get();
            }, e.prototype.toString = function () {
              return this.name + "[" + this.value + "]";
            }, e.prototype.valueOf = function () {
              return we(this.get());
            }, e;
          }(o);

          F.prototype[xe()] = F.prototype.valueOf;
          var D = ye("ObservableValue", F),
              U = {
            m001: "It is not allowed to assign new values to @action fields",
            m002: "`runInAction` expects a function",
            m003: "`runInAction` expects a function without arguments",
            m004: "autorun expects a function",
            m005: "Warning: attempted to pass an action to autorun. Actions are untracked and will not trigger on state changes. Use `reaction` or wrap only your state modification code in an action.",
            m006: "Warning: attempted to pass an action to autorunAsync. Actions are untracked and will not trigger on state changes. Use `reaction` or wrap only your state modification code in an action.",
            m007: "reaction only accepts 2 or 3 arguments. If migrating from MobX 2, please provide an options object",
            m008: "wrapping reaction expression in `asReference` is no longer supported, use options object instead",
            m009: "@computed can only be used on getter functions, like: '@computed get myProps() { return ...; }'. It looks like it was used on a property.",
            m010: "@computed can only be used on getter functions, like: '@computed get myProps() { return ...; }'",
            m011: "First argument to `computed` should be an expression. If using computed as decorator, don't pass it arguments",
            m012: "computed takes one or two arguments if used as function",
            m013: "[mobx.expr] 'expr' should only be used inside other reactive functions.",
            m014: "extendObservable expected 2 or more arguments",
            m015: "extendObservable expects an object as first argument",
            m016: "extendObservable should not be used on maps, use map.merge instead",
            m017: "all arguments of extendObservable should be objects",
            m018: "extending an object with another observable (object) is not supported. Please construct an explicit propertymap, using `toJS` if need. See issue #540",
            m019: "[mobx.isObservable] isObservable(object, propertyName) is not supported for arrays and maps. Use map.has or array.length instead.",
            m020: "modifiers can only be used for individual object properties",
            m021: "observable expects zero or one arguments",
            m022: "@observable can not be used on getters, use @computed instead",
            m024: "whyRun() can only be used if a derivation is active, or by passing an computed value / reaction explicitly. If you invoked whyRun from inside a computation; the computation is currently suspended but re-evaluating because somebody requested its value.",
            m025: "whyRun can only be used on reactions and computed values",
            m026: "`action` can only be invoked on functions",
            m028: "It is not allowed to set `useStrict` when a derivation is running",
            m029: "INTERNAL ERROR only onBecomeUnobserved shouldn't be called twice in a row",
            m030a: "Since strict-mode is enabled, changing observed observable values outside actions is not allowed. Please wrap the code in an `action` if this change is intended. Tried to modify: ",
            m030b: "Side effects like changing state are not allowed at this point. Are you trying to modify state from, for example, the render function of a React component? Tried to modify: ",
            m031: "Computed values are not allowed to cause side effects by changing observables that are already being observed. Tried to modify: ",
            m032: "* This computation is suspended (not in use by any reaction) and won't run automatically.\n\tDidn't expect this computation to be suspended at this point?\n\t  1. Make sure this computation is used by a reaction (reaction, autorun, observer).\n\t  2. Check whether you are using this computation synchronously (in the same stack as they reaction that needs it).",
            m033: "`observe` doesn't support the fire immediately property for observable maps.",
            m034: "`mobx.map` is deprecated, use `new ObservableMap` or `mobx.observable.map` instead",
            m035: "Cannot make the designated object observable; it is not extensible",
            m036: "It is not possible to get index atoms from arrays",
            m037: 'Hi there! I\'m sorry you have just run into an exception.\nIf your debugger ends up here, know that some reaction (like the render() of an observer component, autorun or reaction)\nthrew an exception and that mobx caught it, to avoid that it brings the rest of your application down.\nThe original cause of the exception (the code that caused this reaction to run (again)), is still in the stack.\n\nHowever, more interesting is the actual stack trace of the error itself.\nHopefully the error is an instanceof Error, because in that case you can inspect the original stack of the error from where it was thrown.\nSee `error.stack` property, or press the very subtle "(...)" link you see near the console.error message that probably brought you here.\nThat stack is more interesting than the stack of this console.error itself.\n\nIf the exception you see is an exception you created yourself, make sure to use `throw new Error("Oops")` instead of `throw "Oops"`,\nbecause the javascript environment will only preserve the original stack trace in the first form.\n\nYou can also make sure the debugger pauses the next time this very same exception is thrown by enabling "Pause on caught exception".\n(Note that it might pause on many other, unrelated exception as well).\n\nIf that all doesn\'t help you out, feel free to open an issue https://github.com/mobxjs/mobx/issues!\n',
            m038: "Missing items in this list?\n    1. Check whether all used values are properly marked as observable (use isObservable to verify)\n    2. Make sure you didn't dereference values too early. MobX observes props, not primitives. E.g: use 'person.name' instead of 'name' in your computation.\n"
          };

          function z(t) {
            return U[t];
          }

          function $(t, e) {
            Xt("function" === typeof e, z("m026")), Xt("string" === typeof t && t.length > 0, "actions should have valid names, got: '" + t + "'");

            var n = function n() {
              return B(t, e, this, arguments);
            };

            return n.originalFn = e, n.isMobxAction = !0, n;
          }

          function B(t, e, n, r) {
            var i = function (t, e, n, r) {
              var i = v() && !!t,
                  o = 0;

              if (i) {
                o = Date.now();
                var u = r && r.length || 0,
                    a = new Array(u);
                if (u > 0) for (var c = 0; c < u; c++) {
                  a[c] = r[c];
                }
                y({
                  type: "action",
                  name: t,
                  fn: e,
                  object: n,
                  arguments: a
                });
              }

              var s = He();
              return Me(), {
                prevDerivation: s,
                prevAllowStateChanges: H(!0),
                notifySpy: i,
                startTime: o
              };
            }(t, e, n, r);

            try {
              return e.apply(n, r);
            } finally {
              !function (t) {
                W(t.prevAllowStateChanges), Le(), We(t.prevDerivation), t.notifySpy && m({
                  time: Date.now() - t.startTime
                });
              }(i);
            }
          }

          function V(t) {
            Xt(null === Oe.trackingDerivation, z("m028")), Oe.strictMode = t, Oe.allowStateChanges = !t;
          }

          function G() {
            return Oe.strictMode;
          }

          function H(t) {
            var e = Oe.allowStateChanges;
            return Oe.allowStateChanges = t, e;
          }

          function W(t) {
            Oe.allowStateChanges = t;
          }

          function q(t, e, n, r, i) {
            function o(o, u, a, c, s) {
              if (void 0 === s && (s = 0), Xt(i || Y(arguments), "This function is a decorator, but it wasn't invoked like a decorator"), a) {
                se(o, "__mobxLazyInitializers") || fe(o, "__mobxLazyInitializers", o.__mobxLazyInitializers && o.__mobxLazyInitializers.slice() || []);
                var f = a.value,
                    l = a.initializer;
                return o.__mobxLazyInitializers.push(function (e) {
                  t(e, u, l ? l.call(e) : f, c, a);
                }), {
                  enumerable: r,
                  configurable: !0,
                  get: function get() {
                    return !0 !== this.__mobxDidRunLazyInitializers && J(this), e.call(this, u);
                  },
                  set: function set(t) {
                    !0 !== this.__mobxDidRunLazyInitializers && J(this), n.call(this, u, t);
                  }
                };
              }

              var h = {
                enumerable: r,
                configurable: !0,
                get: function get() {
                  return this.__mobxInitializedProps && !0 === this.__mobxInitializedProps[u] || K(this, u, void 0, t, c, a), e.call(this, u);
                },
                set: function set(e) {
                  this.__mobxInitializedProps && !0 === this.__mobxInitializedProps[u] ? n.call(this, u, e) : K(this, u, e, t, c, a);
                }
              };
              return (arguments.length < 3 || 5 === arguments.length && s < 3) && Object.defineProperty(o, u, h), h;
            }

            return i ? function () {
              if (Y(arguments)) return o.apply(null, arguments);
              var t = arguments,
                  e = arguments.length;
              return function (n, r, i) {
                return o(n, r, i, t, e);
              };
            } : o;
          }

          function K(t, e, n, r, i, o) {
            se(t, "__mobxInitializedProps") || fe(t, "__mobxInitializedProps", {}), t.__mobxInitializedProps[e] = !0, r(t, e, n, i, o);
          }

          function J(t) {
            !0 !== t.__mobxDidRunLazyInitializers && t.__mobxLazyInitializers && (fe(t, "__mobxDidRunLazyInitializers", !0), t.__mobxDidRunLazyInitializers && t.__mobxLazyInitializers.forEach(function (e) {
              return e(t);
            }));
          }

          function Y(t) {
            return (2 === t.length || 3 === t.length) && "string" === typeof t[1];
          }

          var Z = q(function (t, e, n, r, i) {
            var o = r && 1 === r.length ? r[0] : n.name || e || "<unnamed action>";
            fe(t, e, Q(o, n));
          }, function (t) {
            return this[t];
          }, function () {
            Xt(!1, z("m001"));
          }, !1, !0),
              X = q(function (t, e, n) {
            rt(t, e, n);
          }, function (t) {
            return this[t];
          }, function () {
            Xt(!1, z("m001"));
          }, !1, !1),
              Q = function Q(t, e, n, r) {
            return 1 === arguments.length && "function" === typeof t ? $(t.name || "<unnamed action>", t) : 2 === arguments.length && "function" === typeof e ? $(t, e) : 1 === arguments.length && "string" === typeof t ? tt(t) : tt(e).apply(null, arguments);
          };

          function tt(t) {
            return function (e, n, r) {
              if (r && "function" === typeof r.value) return r.value = $(t, r.value), r.enumerable = !1, r.configurable = !0, r;
              if (void 0 !== r && void 0 !== r.get) throw new Error("[mobx] action is not expected to be used with getters");
              return Z(t).apply(this, arguments);
            };
          }

          function et(t, e, n) {
            var r = "string" === typeof t ? t : t.name || "<unnamed action>",
                i = "function" === typeof t ? t : e,
                o = "function" === typeof t ? e : n;
            return Xt("function" === typeof i, z("m002")), Xt(0 === i.length, z("m003")), Xt("string" === typeof r && r.length > 0, "actions should have valid names, got: '" + r + "'"), B(r, i, o, void 0);
          }

          function nt(t) {
            return "function" === typeof t && !0 === t.isMobxAction;
          }

          function rt(t, e, n) {
            var r = function r() {
              return B(e, n, t, arguments);
            };

            r.isMobxAction = !0, fe(t, e, r);
          }

          function it(t, e) {
            return t === e;
          }

          Q.bound = function (t, e, n) {
            if ("function" === typeof t) {
              var r = $("<not yet bound action>", t);
              return r.autoBind = !0, r;
            }

            return X.apply(null, arguments);
          };

          var ot = {
            identity: it,
            structural: function structural(t, e) {
              return !("number" !== typeof t || "number" !== typeof e || !isNaN(t) || !isNaN(e)) || de(t, e);
            },
            default: function _default(t, e) {
              return !("number" !== typeof t || "number" !== typeof e || !isNaN(t) || !isNaN(e)) || it(t, e);
            }
          };

          function ut(t, e, n) {
            var r, i, o;
            "string" === typeof t ? (r = t, i = e, o = n) : (r = t.name || "Autorun@" + Yt(), i = t, o = e), Xt("function" === typeof i, z("m004")), Xt(!1 === nt(i), z("m005")), o && (i = i.bind(o));
            var u = new Ke(r, function () {
              this.track(a);
            });

            function a() {
              i(u);
            }

            return u.schedule(), u.getDisposer();
          }

          function at(t, e, n, r) {
            var i, o, u, a;
            return "string" === typeof t ? (i = t, o = e, u = n, a = r) : (i = "When@" + Yt(), o = t, u = e, a = n), ut(i, function (t) {
              if (o.call(a)) {
                t.dispose();
                var e = He();
                u.call(a), We(e);
              }
            });
          }

          function ct(t, e, n, r) {
            var i, o, u, a;
            "string" === typeof t ? (i = t, o = e, u = n, a = r) : (i = t.name || "AutorunAsync@" + Yt(), o = t, u = e, a = n), Xt(!1 === nt(o), z("m006")), void 0 === u && (u = 1), a && (o = o.bind(a));
            var c = !1,
                s = new Ke(i, function () {
              c || (c = !0, setTimeout(function () {
                c = !1, s.isDisposed || s.track(f);
              }, u));
            });

            function f() {
              o(s);
            }

            return s.schedule(), s.getDisposer();
          }

          function st(t, e, n) {
            var r;
            arguments.length > 3 && Zt(z("m007")), Nt(t) && Zt(z("m008")), (r = "object" === typeof n ? n : {}).name = r.name || t.name || e.name || "Reaction@" + Yt(), r.fireImmediately = !0 === n || !0 === r.fireImmediately, r.delay = r.delay || 0, r.compareStructural = r.compareStructural || r.struct || !1, e = Q(r.name, r.context ? e.bind(r.context) : e), r.context && (t = t.bind(r.context));
            var i,
                o = !0,
                u = !1,
                a = r.equals ? r.equals : r.compareStructural || r.struct ? ot.structural : ot.default,
                c = new Ke(r.name, function () {
              o || r.delay < 1 ? s() : u || (u = !0, setTimeout(function () {
                u = !1, s();
              }, r.delay));
            });

            function s() {
              if (!c.isDisposed) {
                var n = !1;
                c.track(function () {
                  var e = t(c);
                  n = o || !a(i, e), i = e;
                }), o && r.fireImmediately && e(i, c), o || !0 !== n || e(i, c), o && (o = !1);
              }
            }

            return c.schedule(), c.getDisposer();
          }

          var ft = function () {
            function t(t, e, n, r, i) {
              this.derivation = t, this.scope = e, this.equals = n, this.dependenciesState = _e.NOT_TRACKING, this.observing = [], this.newObserving = null, this.isPendingUnobservation = !1, this.observers = [], this.observersIndexes = {}, this.diffValue = 0, this.runId = 0, this.lastAccessedBy = 0, this.lowestObserverState = _e.UP_TO_DATE, this.unboundDepsCount = 0, this.__mapid = "#" + Yt(), this.value = new Fe(null), this.isComputing = !1, this.isRunningSetter = !1, this.name = r || "ComputedValue@" + Yt(), i && (this.setter = $(r + "-setter", i));
            }

            return t.prototype.onBecomeStale = function () {
              !function (t) {
                if (t.lowestObserverState === _e.UP_TO_DATE) {
                  t.lowestObserverState = _e.POSSIBLY_STALE;

                  for (var e = t.observers, n = e.length; n--;) {
                    var r = e[n];
                    r.dependenciesState === _e.UP_TO_DATE && (r.dependenciesState = _e.POSSIBLY_STALE, r.onBecomeStale());
                  }
                }
              }(this);
            }, t.prototype.onBecomeUnobserved = function () {
              Ve(this), this.value = void 0;
            }, t.prototype.get = function () {
              Xt(!this.isComputing, "Cycle detected in computation " + this.name, this.derivation), 0 === Oe.inBatch ? (Me(), Ue(this) && (this.value = this.computeValue(!1)), Le()) : (Ne(this), Ue(this) && this.trackAndCompute() && function (t) {
                if (t.lowestObserverState !== _e.STALE) {
                  t.lowestObserverState = _e.STALE;

                  for (var e = t.observers, n = e.length; n--;) {
                    var r = e[n];
                    r.dependenciesState === _e.POSSIBLY_STALE ? r.dependenciesState = _e.STALE : r.dependenciesState === _e.UP_TO_DATE && (t.lowestObserverState = _e.UP_TO_DATE);
                  }
                }
              }(this));
              var t = this.value;
              if (De(t)) throw t.cause;
              return t;
            }, t.prototype.peek = function () {
              var t = this.computeValue(!1);
              if (De(t)) throw t.cause;
              return t;
            }, t.prototype.set = function (t) {
              if (this.setter) {
                Xt(!this.isRunningSetter, "The setter of computed value '" + this.name + "' is trying to update itself. Did you intend to update an _observable_ value, instead of the computed property?"), this.isRunningSetter = !0;

                try {
                  this.setter.call(this.scope, t);
                } finally {
                  this.isRunningSetter = !1;
                }
              } else Xt(!1, "[ComputedValue '" + this.name + "'] It is not possible to assign a new value to a computed value.");
            }, t.prototype.trackAndCompute = function () {
              v() && d({
                object: this.scope,
                type: "compute",
                fn: this.derivation
              });
              var t = this.value,
                  e = this.value = this.computeValue(!0);
              return De(t) || De(e) || !this.equals(t, e);
            }, t.prototype.computeValue = function (t) {
              var e;
              if (this.isComputing = !0, Oe.computationDepth++, t) e = Be(this, this.derivation, this.scope);else try {
                e = this.derivation.call(this.scope);
              } catch (n) {
                e = new Fe(n);
              }
              return Oe.computationDepth--, this.isComputing = !1, e;
            }, t.prototype.observe = function (t, e) {
              var n = this,
                  r = !0,
                  i = void 0;
              return ut(function () {
                var o = n.get();

                if (!r || e) {
                  var u = He();
                  t({
                    type: "update",
                    object: n,
                    newValue: o,
                    oldValue: i
                  }), We(u);
                }

                r = !1, i = o;
              });
            }, t.prototype.toJSON = function () {
              return this.get();
            }, t.prototype.toString = function () {
              return this.name + "[" + this.derivation.toString() + "]";
            }, t.prototype.valueOf = function () {
              return we(this.get());
            }, t.prototype.whyRun = function () {
              var t = Boolean(Oe.trackingDerivation),
                  e = re(this.isComputing ? this.newObserving : this.observing).map(function (t) {
                return t.name;
              }),
                  n = re(Ie(this).map(function (t) {
                return t.name;
              }));
              return "\nWhyRun? computation '" + this.name + "':\n * Running because: " + (t ? "[active] the value of this computation is needed by a reaction" : this.isComputing ? "[get] The value of this computed was requested outside a reaction" : "[idle] not running at the moment") + "\n" + (this.dependenciesState === _e.NOT_TRACKING ? z("m032") : " * This computation will re-run if any of the following observables changes:\n    " + ie(e) + "\n    " + (this.isComputing && t ? " (... or any observable accessed during the remainder of the current run)" : "") + "\n\t" + z("m038") + "\n\n  * If the outcome of this computation changes, the following observers will be re-run:\n    " + ie(n) + "\n");
            }, t;
          }();

          ft.prototype[xe()] = ft.prototype.valueOf;

          var lt = ye("ComputedValue", ft),
              ht = function () {
            function t(t, e) {
              this.target = t, this.name = e, this.values = {}, this.changeListeners = null, this.interceptors = null;
            }

            return t.prototype.observe = function (t, e) {
              return Xt(!0 !== e, "`observe` doesn't support the fire immediately property for observable objects."), h(this, t);
            }, t.prototype.intercept = function (t) {
              return s(this, t);
            }, t;
          }();

          function pt(t, e) {
            if (_t(t) && t.hasOwnProperty("$mobx")) return t.$mobx;
            Xt(Object.isExtensible(t), z("m035")), ue(t) || (e = (t.constructor.name || "ObservableObject") + "@" + Yt()), e || (e = "ObservableObject@" + Yt());
            var n = new ht(t, e);
            return le(t, "$mobx", n), n;
          }

          function vt(t, e, n, r) {
            if (t.values[e] && !lt(t.values[e])) return Xt("value" in n, "The property " + e + " in " + t.name + " is already observable, cannot redefine it as computed property"), void (t.target[e] = n.value);
            if ("value" in n) {
              if (Nt(n.value)) {
                var i = n.value;
                dt(t, e, i.initialValue, i.enhancer);
              } else nt(n.value) && !0 === n.value.autoBind ? rt(t.target, e, n.value.originalFn) : lt(n.value) ? function (t, e, n) {
                var r = t.name + "." + e;
                n.name = r, n.scope || (n.scope = t.target), t.values[e] = n, Object.defineProperty(t.target, e, bt(e));
              }(t, e, n.value) : dt(t, e, n.value, r);
            } else yt(t, e, n.get, n.set, ot.default, !0);
          }

          function dt(t, e, n, r) {
            if (pe(t.target, e), c(t)) {
              var i = f(t, {
                object: t.target,
                name: e,
                type: "add",
                newValue: n
              });
              if (!i) return;
              n = i.newValue;
            }

            n = (t.values[e] = new F(n, r, t.name + "." + e, !1)).value, Object.defineProperty(t.target, e, function (t) {
              return gt[t] || (gt[t] = {
                configurable: !0,
                enumerable: !0,
                get: function get() {
                  return this.$mobx.values[t].get();
                },
                set: function set(e) {
                  xt(this, t, e);
                }
              });
            }(e)), function (t, e, n, r) {
              var i = l(t),
                  o = v(),
                  u = i || o ? {
                type: "add",
                object: e,
                name: n,
                newValue: r
              } : null;
              o && y(u), i && p(t, u), o && m();
            }(t, t.target, e, n);
          }

          function yt(t, e, n, r, i, o) {
            o && pe(t.target, e), t.values[e] = new ft(n, t.target, i, t.name + "." + e, r), o && Object.defineProperty(t.target, e, bt(e));
          }

          var gt = {},
              mt = {};

          function bt(t) {
            return mt[t] || (mt[t] = {
              configurable: !0,
              enumerable: !1,
              get: function get() {
                return this.$mobx.values[t].get();
              },
              set: function set(e) {
                return this.$mobx.values[t].set(e);
              }
            });
          }

          function xt(t, e, n) {
            var r = t.$mobx,
                i = r.values[e];

            if (c(r)) {
              if (!(a = f(r, {
                type: "update",
                object: t,
                name: e,
                newValue: n
              }))) return;
              n = a.newValue;
            }

            if ((n = i.prepareNewValue(n)) !== N) {
              var o = l(r),
                  u = v(),
                  a = o || u ? {
                type: "update",
                object: t,
                oldValue: i.value,
                name: e,
                newValue: n
              } : null;
              u && y(a), i.setNewValue(n), o && p(r, a), u && m();
            }
          }

          var wt = ye("ObservableObjectAdministration", ht);

          function _t(t) {
            return !!oe(t) && (J(t), wt(t.$mobx));
          }

          function kt(t, e) {
            if (null === t || void 0 === t) return !1;

            if (void 0 !== e) {
              if (L(t) || qt(t)) throw new Error(z("m019"));

              if (_t(t)) {
                var n = t.$mobx;
                return n.values && !!n.values[e];
              }

              return !1;
            }

            return _t(t) || !!t.$mobx || a(t) || tn(t) || lt(t);
          }

          function St(t) {
            return Xt(!!t, ":("), q(function (e, n, r, i, o) {
              pe(e, n), Xt(!o || !o.get, z("m022")), dt(pt(e, void 0), n, r, t);
            }, function (t) {
              var e = this.$mobx.values[t];
              if (void 0 !== e) return e.get();
            }, function (t, e) {
              xt(this, t, e);
            }, !0, !1);
          }

          function Ot(t) {
            for (var e = [], n = 1; n < arguments.length; n++) {
              e[n - 1] = arguments[n];
            }

            return jt(t, Dt, e);
          }

          function Et(t) {
            for (var e = [], n = 1; n < arguments.length; n++) {
              e[n - 1] = arguments[n];
            }

            return jt(t, zt, e);
          }

          function jt(t, e, n) {
            Xt(arguments.length >= 2, z("m014")), Xt("object" === typeof t, z("m015")), Xt(!qt(t), z("m016")), n.forEach(function (t) {
              Xt("object" === typeof t, z("m017")), Xt(!kt(t), z("m018"));
            });

            for (var r = pt(t), i = {}, o = n.length - 1; o >= 0; o--) {
              var u = n[o];

              for (var a in u) {
                if (!0 !== i[a] && se(u, a)) {
                  if (i[a] = !0, t === u && !he(t, a)) continue;
                  vt(r, a, Object.getOwnPropertyDescriptor(u, a), e);
                }
              }
            }

            return t;
          }

          var At = St(Dt),
              Rt = St(Ut),
              It = St(zt),
              Ct = St($t),
              Pt = St(Bt),
              Tt = function () {
            function t() {}

            return t.prototype.box = function (t, e) {
              return arguments.length > 2 && Lt("box"), new F(t, Dt, e);
            }, t.prototype.shallowBox = function (t, e) {
              return arguments.length > 2 && Lt("shallowBox"), new F(t, zt, e);
            }, t.prototype.array = function (t, e) {
              return arguments.length > 2 && Lt("array"), new R(t, Dt, e);
            }, t.prototype.shallowArray = function (t, e) {
              return arguments.length > 2 && Lt("shallowArray"), new R(t, zt, e);
            }, t.prototype.map = function (t, e) {
              return arguments.length > 2 && Lt("map"), new Ht(t, Dt, e);
            }, t.prototype.shallowMap = function (t, e) {
              return arguments.length > 2 && Lt("shallowMap"), new Ht(t, zt, e);
            }, t.prototype.object = function (t, e) {
              arguments.length > 2 && Lt("object");
              var n = {};
              return pt(n, e), Ot(n, t), n;
            }, t.prototype.shallowObject = function (t, e) {
              arguments.length > 2 && Lt("shallowObject");
              var n = {};
              return pt(n, e), Et(n, t), n;
            }, t.prototype.ref = function () {
              return arguments.length < 2 ? Ft(zt, arguments[0]) : It.apply(null, arguments);
            }, t.prototype.shallow = function () {
              return arguments.length < 2 ? Ft(Ut, arguments[0]) : Rt.apply(null, arguments);
            }, t.prototype.deep = function () {
              return arguments.length < 2 ? Ft(Dt, arguments[0]) : At.apply(null, arguments);
            }, t.prototype.struct = function () {
              return arguments.length < 2 ? Ft($t, arguments[0]) : Ct.apply(null, arguments);
            }, t;
          }(),
              Mt = function t(e) {
            if (void 0 === e && (e = void 0), "string" === typeof arguments[1]) return At.apply(null, arguments);
            if (Xt(arguments.length <= 1, z("m021")), Xt(!Nt(e), z("m020")), kt(e)) return e;
            var n = Dt(e, void 0, void 0);
            return n !== e ? n : t.box(e);
          };

          function Lt(t) {
            Zt("Expected one or two arguments to observable." + t + ". Did you accidentally try to use observable." + t + " as decorator?");
          }

          function Nt(t) {
            return "object" === typeof t && null !== t && !0 === t.isMobxModifierDescriptor;
          }

          function Ft(t, e) {
            return Xt(!Nt(e), "Modifiers cannot be nested"), {
              isMobxModifierDescriptor: !0,
              initialValue: e,
              enhancer: t
            };
          }

          function Dt(t, e, n) {
            return Nt(t) && Zt("You tried to assign a modifier wrapped value to a collection, please define modifiers when creating the collection, not when modifying it"), kt(t) ? t : Array.isArray(t) ? Mt.array(t, n) : ue(t) ? Mt.object(t, n) : be(t) ? Mt.map(t, n) : t;
          }

          function Ut(t, e, n) {
            return Nt(t) && Zt("You tried to assign a modifier wrapped value to a collection, please define modifiers when creating the collection, not when modifying it"), void 0 === t || null === t ? t : _t(t) || L(t) || qt(t) ? t : Array.isArray(t) ? Mt.shallowArray(t, n) : ue(t) ? Mt.shallowObject(t, n) : be(t) ? Mt.shallowMap(t, n) : Zt("The shallow modifier / decorator can only used in combination with arrays, objects and maps");
          }

          function zt(t) {
            return t;
          }

          function $t(t, e, n) {
            if (de(t, e)) return e;
            if (kt(t)) return t;
            if (Array.isArray(t)) return new R(t, $t, n);
            if (be(t)) return new Ht(t, $t, n);

            if (ue(t)) {
              var r = {};
              return pt(r, n), jt(r, $t, [t]), r;
            }

            return t;
          }

          function Bt(t, e, n) {
            return de(t, e) ? e : t;
          }

          function Vt(t, e) {
            void 0 === e && (e = void 0), Me();

            try {
              return t.apply(e);
            } finally {
              Le();
            }
          }

          Object.getOwnPropertyNames(Tt.prototype).filter(function (t) {
            return "constructor" !== t;
          }).forEach(function (t) {
            return Mt[t] = Tt.prototype[t];
          }), Mt.deep.struct = Mt.struct, Mt.ref.struct = function () {
            return arguments.length < 2 ? Ft(Bt, arguments[0]) : Pt.apply(null, arguments);
          };

          var Gt = {},
              Ht = function () {
            function t(t, e, n) {
              void 0 === e && (e = Dt), void 0 === n && (n = "ObservableMap@" + Yt()), this.enhancer = e, this.name = n, this.$mobx = Gt, this._data = Object.create(null), this._hasMap = Object.create(null), this._keys = new R(void 0, zt, this.name + ".keys()", !0), this.interceptors = null, this.changeListeners = null, this.dehancer = void 0, this.merge(t);
            }

            return t.prototype._has = function (t) {
              return "undefined" !== typeof this._data[t];
            }, t.prototype.has = function (t) {
              return !!this.isValidKey(t) && (t = "" + t, this._hasMap[t] ? this._hasMap[t].get() : this._updateHasMapEntry(t, !1).get());
            }, t.prototype.set = function (t, e) {
              this.assertValidKey(t), t = "" + t;

              var n = this._has(t);

              if (c(this)) {
                var r = f(this, {
                  type: n ? "update" : "add",
                  object: this,
                  newValue: e,
                  name: t
                });
                if (!r) return this;
                e = r.newValue;
              }

              return n ? this._updateValue(t, e) : this._addValue(t, e), this;
            }, t.prototype.delete = function (t) {
              var e = this;
              if (this.assertValidKey(t), t = "" + t, c(this) && !(i = f(this, {
                type: "delete",
                object: this,
                name: t
              }))) return !1;

              if (this._has(t)) {
                var n = v(),
                    r = l(this),
                    i = r || n ? {
                  type: "delete",
                  object: this,
                  oldValue: this._data[t].value,
                  name: t
                } : null;
                return n && y(i), Vt(function () {
                  e._keys.remove(t), e._updateHasMapEntry(t, !1), e._data[t].setNewValue(void 0), e._data[t] = void 0;
                }), r && p(this, i), n && m(), !0;
              }

              return !1;
            }, t.prototype._updateHasMapEntry = function (t, e) {
              var n = this._hasMap[t];
              return n ? n.setNewValue(e) : n = this._hasMap[t] = new F(e, zt, this.name + "." + t + "?", !1), n;
            }, t.prototype._updateValue = function (t, e) {
              var n = this._data[t];

              if ((e = n.prepareNewValue(e)) !== N) {
                var r = v(),
                    i = l(this),
                    o = i || r ? {
                  type: "update",
                  object: this,
                  oldValue: n.value,
                  name: t,
                  newValue: e
                } : null;
                r && y(o), n.setNewValue(e), i && p(this, o), r && m();
              }
            }, t.prototype._addValue = function (t, e) {
              var n = this;
              Vt(function () {
                var r = n._data[t] = new F(e, n.enhancer, n.name + "." + t, !1);
                e = r.value, n._updateHasMapEntry(t, !0), n._keys.push(t);
              });
              var r = v(),
                  i = l(this),
                  o = i || r ? {
                type: "add",
                object: this,
                name: t,
                newValue: e
              } : null;
              r && y(o), i && p(this, o), r && m();
            }, t.prototype.get = function (t) {
              return t = "" + t, this.has(t) ? this.dehanceValue(this._data[t].get()) : this.dehanceValue(void 0);
            }, t.prototype.dehanceValue = function (t) {
              return void 0 !== this.dehancer ? this.dehancer(t) : t;
            }, t.prototype.keys = function () {
              return w(this._keys.slice());
            }, t.prototype.values = function () {
              return w(this._keys.map(this.get, this));
            }, t.prototype.entries = function () {
              var t = this;
              return w(this._keys.map(function (e) {
                return [e, t.get(e)];
              }));
            }, t.prototype.forEach = function (t, e) {
              var n = this;
              this.keys().forEach(function (r) {
                return t.call(e, n.get(r), r, n);
              });
            }, t.prototype.merge = function (t) {
              var e = this;
              return qt(t) && (t = t.toJS()), Vt(function () {
                ue(t) ? Object.keys(t).forEach(function (n) {
                  return e.set(n, t[n]);
                }) : Array.isArray(t) ? t.forEach(function (t) {
                  var n = t[0],
                      r = t[1];
                  return e.set(n, r);
                }) : be(t) ? t.forEach(function (t, n) {
                  return e.set(n, t);
                }) : null !== t && void 0 !== t && Zt("Cannot initialize map from " + t);
              }), this;
            }, t.prototype.clear = function () {
              var t = this;
              Vt(function () {
                Ge(function () {
                  t.keys().forEach(t.delete, t);
                });
              });
            }, t.prototype.replace = function (t) {
              var e = this;
              return Vt(function () {
                e.clear(), e.merge(t);
              }), this;
            }, Object.defineProperty(t.prototype, "size", {
              get: function get() {
                return this._keys.length;
              },
              enumerable: !0,
              configurable: !0
            }), t.prototype.toJS = function () {
              var t = this,
                  e = {};
              return this.keys().forEach(function (n) {
                return e[n] = t.get(n);
              }), e;
            }, t.prototype.toJSON = function () {
              return this.toJS();
            }, t.prototype.isValidKey = function (t) {
              return null !== t && void 0 !== t && ("string" === typeof t || "number" === typeof t || "boolean" === typeof t);
            }, t.prototype.assertValidKey = function (t) {
              if (!this.isValidKey(t)) throw new Error("[mobx.map] Invalid key: '" + t + "', only strings, numbers and booleans are accepted as key in observable maps.");
            }, t.prototype.toString = function () {
              var t = this;
              return this.name + "[{ " + this.keys().map(function (e) {
                return e + ": " + t.get(e);
              }).join(", ") + " }]";
            }, t.prototype.observe = function (t, e) {
              return Xt(!0 !== e, z("m033")), h(this, t);
            }, t.prototype.intercept = function (t) {
              return s(this, t);
            }, t;
          }();

          function Wt(t) {
            return te("`mobx.map` is deprecated, use `new ObservableMap` or `mobx.observable.map` instead"), Mt.map(t);
          }

          _(Ht.prototype, function () {
            return this.entries();
          });

          var qt = ye("ObservableMap", Ht),
              Kt = [];

          function Jt() {
            return "undefined" !== typeof window ? window : t;
          }

          function Yt() {
            return ++Oe.mobxGuid;
          }

          function Zt(t, e) {
            throw Xt(!1, t, e), "X";
          }

          function Xt(t, e, n) {
            if (!t) throw new Error("[mobx] Invariant failed: " + e + (n ? " in '" + n + "'" : ""));
          }

          Object.freeze(Kt);
          var Qt = [];

          function te(t) {
            return -1 === Qt.indexOf(t) && (Qt.push(t), console.error("[mobx] Deprecated: " + t), !0);
          }

          function ee(t) {
            var e = !1;
            return function () {
              if (!e) return e = !0, t.apply(this, arguments);
            };
          }

          var ne = function ne() {};

          function re(t) {
            var e = [];
            return t.forEach(function (t) {
              -1 === e.indexOf(t) && e.push(t);
            }), e;
          }

          function ie(t, e, n) {
            return void 0 === e && (e = 100), void 0 === n && (n = " - "), t ? t.slice(0, e).join(n) + (t.length > e ? " (... and " + (t.length - e) + "more)" : "") : "";
          }

          function oe(t) {
            return null !== t && "object" === typeof t;
          }

          function ue(t) {
            if (null === t || "object" !== typeof t) return !1;
            var e = Object.getPrototypeOf(t);
            return e === Object.prototype || null === e;
          }

          function ae() {
            for (var t = arguments[0], e = 1, n = arguments.length; e < n; e++) {
              var r = arguments[e];

              for (var i in r) {
                se(r, i) && (t[i] = r[i]);
              }
            }

            return t;
          }

          var ce = Object.prototype.hasOwnProperty;

          function se(t, e) {
            return ce.call(t, e);
          }

          function fe(t, e, n) {
            Object.defineProperty(t, e, {
              enumerable: !1,
              writable: !0,
              configurable: !0,
              value: n
            });
          }

          function le(t, e, n) {
            Object.defineProperty(t, e, {
              enumerable: !1,
              writable: !1,
              configurable: !0,
              value: n
            });
          }

          function he(t, e) {
            var n = Object.getOwnPropertyDescriptor(t, e);
            return !n || !1 !== n.configurable && !1 !== n.writable;
          }

          function pe(t, e) {
            Xt(he(t, e), "Cannot make property '" + e + "' observable, it is not configurable and writable in the target object");
          }

          function ve(t) {
            var e = [];

            for (var n in t) {
              e.push(n);
            }

            return e;
          }

          function de(t, e) {
            if (null === t && null === e) return !0;
            if (void 0 === t && void 0 === e) return !0;
            if ("object" !== typeof t) return t === e;
            var n = ge(t),
                r = me(t);
            if (n !== ge(e)) return !1;
            if (r !== me(e)) return !1;

            if (n) {
              if (t.length !== e.length) return !1;

              for (var i = t.length - 1; i >= 0; i--) {
                if (!de(t[i], e[i])) return !1;
              }

              return !0;
            }

            if (r) {
              if (t.size !== e.size) return !1;
              var o = !0;
              return t.forEach(function (t, n) {
                o = o && de(e.get(n), t);
              }), o;
            }

            if ("object" === typeof t && "object" === typeof e) {
              if (null === t || null === e) return !1;
              if (me(t) && me(e)) return t.size === e.size && de(Mt.shallowMap(t).entries(), Mt.shallowMap(e).entries());
              if (ve(t).length !== ve(e).length) return !1;

              for (var u in t) {
                if (!(u in e)) return !1;
                if (!de(t[u], e[u])) return !1;
              }

              return !0;
            }

            return !1;
          }

          function ye(t, e) {
            var n = "isMobX" + t;
            return e.prototype[n] = !0, function (t) {
              return oe(t) && !0 === t[n];
            };
          }

          function ge(t) {
            return Array.isArray(t) || L(t);
          }

          function me(t) {
            return be(t) || qt(t);
          }

          function be(t) {
            return void 0 !== Jt().Map && t instanceof Jt().Map;
          }

          function xe() {
            return "function" === typeof Symbol && Symbol.toPrimitive || "@@toPrimitive";
          }

          function we(t) {
            return null === t ? null : "object" === typeof t ? "" + t : t;
          }

          var _e,
              ke = ["mobxGuid", "resetId", "spyListeners", "strictMode", "runId"],
              Se = function Se() {
            this.version = 5, this.trackingDerivation = null, this.computationDepth = 0, this.runId = 0, this.mobxGuid = 0, this.inBatch = 0, this.pendingUnobservations = [], this.pendingReactions = [], this.isRunningReactions = !1, this.allowStateChanges = !0, this.strictMode = !1, this.resetId = 0, this.spyListeners = [], this.globalReactionErrorHandlers = [];
          },
              Oe = new Se(),
              Ee = !1,
              je = !1,
              Ae = !1,
              Re = Jt();

          function Ie(t) {
            return t.observers;
          }

          function Ce(t, e) {
            var n = t.observers.length;
            n && (t.observersIndexes[e.__mapid] = n), t.observers[n] = e, t.lowestObserverState > e.dependenciesState && (t.lowestObserverState = e.dependenciesState);
          }

          function Pe(t, e) {
            if (1 === t.observers.length) t.observers.length = 0, Te(t);else {
              var n = t.observers,
                  r = t.observersIndexes,
                  i = n.pop();

              if (i !== e) {
                var o = r[e.__mapid] || 0;
                o ? r[i.__mapid] = o : delete r[i.__mapid], n[o] = i;
              }

              delete r[e.__mapid];
            }
          }

          function Te(t) {
            t.isPendingUnobservation || (t.isPendingUnobservation = !0, Oe.pendingUnobservations.push(t));
          }

          function Me() {
            Oe.inBatch++;
          }

          function Le() {
            if (0 === --Oe.inBatch) {
              Xe();

              for (var t = Oe.pendingUnobservations, e = 0; e < t.length; e++) {
                var n = t[e];
                n.isPendingUnobservation = !1, 0 === n.observers.length && n.onBecomeUnobserved();
              }

              Oe.pendingUnobservations = [];
            }
          }

          function Ne(t) {
            var e = Oe.trackingDerivation;
            null !== e ? e.runId !== t.lastAccessedBy && (t.lastAccessedBy = e.runId, e.newObserving[e.unboundDepsCount++] = t) : 0 === t.observers.length && Te(t);
          }

          Re.__mobxInstanceCount ? (Re.__mobxInstanceCount++, setTimeout(function () {
            Ee || je || Ae || (Ae = !0, console.warn("[mobx] Warning: there are multiple mobx instances active. This might lead to unexpected results. See https://github.com/mobxjs/mobx/issues/1082 for details."));
          })) : Re.__mobxInstanceCount = 1, function (t) {
            t[t.NOT_TRACKING = -1] = "NOT_TRACKING", t[t.UP_TO_DATE = 0] = "UP_TO_DATE", t[t.POSSIBLY_STALE = 1] = "POSSIBLY_STALE", t[t.STALE = 2] = "STALE";
          }(_e || (_e = {}));

          var Fe = function Fe(t) {
            this.cause = t;
          };

          function De(t) {
            return t instanceof Fe;
          }

          function Ue(t) {
            switch (t.dependenciesState) {
              case _e.UP_TO_DATE:
                return !1;

              case _e.NOT_TRACKING:
              case _e.STALE:
                return !0;

              case _e.POSSIBLY_STALE:
                for (var e = He(), n = t.observing, r = n.length, i = 0; i < r; i++) {
                  var o = n[i];

                  if (lt(o)) {
                    try {
                      o.get();
                    } catch (u) {
                      return We(e), !0;
                    }

                    if (t.dependenciesState === _e.STALE) return We(e), !0;
                  }
                }

                return qe(t), We(e), !1;
            }
          }

          function ze() {
            return null !== Oe.trackingDerivation;
          }

          function $e(t) {
            var e = t.observers.length > 0;
            Oe.computationDepth > 0 && e && Zt(z("m031") + t.name), !Oe.allowStateChanges && e && Zt(z(Oe.strictMode ? "m030a" : "m030b") + t.name);
          }

          function Be(t, e, n) {
            qe(t), t.newObserving = new Array(t.observing.length + 100), t.unboundDepsCount = 0, t.runId = ++Oe.runId;
            var r,
                i = Oe.trackingDerivation;
            Oe.trackingDerivation = t;

            try {
              r = e.call(n);
            } catch (o) {
              r = new Fe(o);
            }

            return Oe.trackingDerivation = i, function (t) {
              for (var e = t.observing, n = t.observing = t.newObserving, r = _e.UP_TO_DATE, i = 0, o = t.unboundDepsCount, u = 0; u < o; u++) {
                0 === (a = n[u]).diffValue && (a.diffValue = 1, i !== u && (n[i] = a), i++), a.dependenciesState > r && (r = a.dependenciesState);
              }

              for (n.length = i, t.newObserving = null, o = e.length; o--;) {
                0 === (a = e[o]).diffValue && Pe(a, t), a.diffValue = 0;
              }

              for (; i--;) {
                var a;
                1 === (a = n[i]).diffValue && (a.diffValue = 0, Ce(a, t));
              }

              r !== _e.UP_TO_DATE && (t.dependenciesState = r, t.onBecomeStale());
            }(t), r;
          }

          function Ve(t) {
            var e = t.observing;
            t.observing = [];

            for (var n = e.length; n--;) {
              Pe(e[n], t);
            }

            t.dependenciesState = _e.NOT_TRACKING;
          }

          function Ge(t) {
            var e = He(),
                n = t();
            return We(e), n;
          }

          function He() {
            var t = Oe.trackingDerivation;
            return Oe.trackingDerivation = null, t;
          }

          function We(t) {
            Oe.trackingDerivation = t;
          }

          function qe(t) {
            if (t.dependenciesState !== _e.UP_TO_DATE) {
              t.dependenciesState = _e.UP_TO_DATE;

              for (var e = t.observing, n = e.length; n--;) {
                e[n].lowestObserverState = _e.UP_TO_DATE;
              }
            }
          }

          var Ke = function () {
            function t(t, e) {
              void 0 === t && (t = "Reaction@" + Yt()), this.name = t, this.onInvalidate = e, this.observing = [], this.newObserving = [], this.dependenciesState = _e.NOT_TRACKING, this.diffValue = 0, this.runId = 0, this.unboundDepsCount = 0, this.__mapid = "#" + Yt(), this.isDisposed = !1, this._isScheduled = !1, this._isTrackPending = !1, this._isRunning = !1;
            }

            return t.prototype.onBecomeStale = function () {
              this.schedule();
            }, t.prototype.schedule = function () {
              this._isScheduled || (this._isScheduled = !0, Oe.pendingReactions.push(this), Xe());
            }, t.prototype.isScheduled = function () {
              return this._isScheduled;
            }, t.prototype.runReaction = function () {
              this.isDisposed || (Me(), this._isScheduled = !1, Ue(this) && (this._isTrackPending = !0, this.onInvalidate(), this._isTrackPending && v() && d({
                object: this,
                type: "scheduled-reaction"
              })), Le());
            }, t.prototype.track = function (t) {
              Me();
              var e,
                  n = v();
              n && (e = Date.now(), y({
                object: this,
                type: "reaction",
                fn: t
              })), this._isRunning = !0;
              var r = Be(this, t, void 0);
              this._isRunning = !1, this._isTrackPending = !1, this.isDisposed && Ve(this), De(r) && this.reportExceptionInDerivation(r.cause), n && m({
                time: Date.now() - e
              }), Le();
            }, t.prototype.reportExceptionInDerivation = function (t) {
              var e = this;
              if (this.errorHandler) this.errorHandler(t, this);else {
                var n = "[mobx] Encountered an uncaught exception that was thrown by a reaction or observer component, in: '" + this,
                    r = z("m037");
                console.error(n || r, t), v() && d({
                  type: "error",
                  message: n,
                  error: t,
                  object: this
                }), Oe.globalReactionErrorHandlers.forEach(function (n) {
                  return n(t, e);
                });
              }
            }, t.prototype.dispose = function () {
              this.isDisposed || (this.isDisposed = !0, this._isRunning || (Me(), Ve(this), Le()));
            }, t.prototype.getDisposer = function () {
              var t = this.dispose.bind(this);
              return t.$mobx = this, t.onError = Je, t;
            }, t.prototype.toString = function () {
              return "Reaction[" + this.name + "]";
            }, t.prototype.whyRun = function () {
              var t = re(this._isRunning ? this.newObserving : this.observing).map(function (t) {
                return t.name;
              });
              return "\nWhyRun? reaction '" + this.name + "':\n * Status: [" + (this.isDisposed ? "stopped" : this._isRunning ? "running" : this.isScheduled() ? "scheduled" : "idle") + "]\n * This reaction will re-run if any of the following observables changes:\n    " + ie(t) + "\n    " + (this._isRunning ? " (... or any observable accessed during the remainder of the current run)" : "") + "\n\t" + z("m038") + "\n";
            }, t;
          }();

          function Je(t) {
            Xt(this && this.$mobx && tn(this.$mobx), "Invalid `this`"), Xt(!this.$mobx.errorHandler, "Only one onErrorHandler can be registered"), this.$mobx.errorHandler = t;
          }

          var Ye = 100,
              Ze = function Ze(t) {
            return t();
          };

          function Xe() {
            Oe.inBatch > 0 || Oe.isRunningReactions || Ze(Qe);
          }

          function Qe() {
            Oe.isRunningReactions = !0;

            for (var t = Oe.pendingReactions, e = 0; t.length > 0;) {
              ++e === Ye && (console.error("Reaction doesn't converge to a stable state after " + Ye + " iterations. Probably there is a cycle in the reactive function: " + t[0]), t.splice(0));

              for (var n = t.splice(0), r = 0, i = n.length; r < i; r++) {
                n[r].runReaction();
              }
            }

            Oe.isRunningReactions = !1;
          }

          var tn = ye("Reaction", Ke);

          function en(t) {
            return te("asReference is deprecated, use observable.ref instead"), Mt.ref(t);
          }

          function nn(t) {
            return te("asStructure is deprecated. Use observable.struct, computed.struct or reaction options instead."), Mt.struct(t);
          }

          function rn(t) {
            return te("asFlat is deprecated, use observable.shallow instead"), Mt.shallow(t);
          }

          function on(t) {
            return te("asMap is deprecated, use observable.map or observable.shallowMap instead"), Mt.map(t || {});
          }

          function un(t) {
            return q(function (e, n, r, i, o) {
              Xt("undefined" !== typeof o, z("m009")), Xt("function" === typeof o.get, z("m010")), yt(pt(e, ""), n, o.get, o.set, t, !1);
            }, function (t) {
              var e = this.$mobx.values[t];
              if (void 0 !== e) return e.get();
            }, function (t, e) {
              this.$mobx.values[t].set(e);
            }, !1, !1);
          }

          var an = un(ot.default),
              cn = un(ot.structural),
              sn = function sn(t, e, n) {
            if ("string" === typeof e) return an.apply(null, arguments);
            Xt("function" === typeof t, z("m011")), Xt(arguments.length < 3, z("m012"));
            var r = "object" === typeof e ? e : {};
            r.setter = "function" === typeof e ? e : r.setter;
            var i = r.equals ? r.equals : r.compareStructural || r.struct ? ot.structural : ot.default;
            return new ft(t, r.context, i, r.name || t.name || "", r.setter);
          };

          function fn(t, e) {
            if ("object" === typeof t && null !== t) {
              if (L(t)) return Xt(void 0 === e, z("m036")), t.$mobx.atom;

              if (qt(t)) {
                var n = t;
                return void 0 === e ? fn(n._keys) : (Xt(!!(r = n._data[e] || n._hasMap[e]), "the entry '" + e + "' does not exist in the observable map '" + hn(t) + "'"), r);
              }

              var r;
              if (J(t), e && !t.$mobx && t[e], _t(t)) return e ? (Xt(!!(r = t.$mobx.values[e]), "no observable property '" + e + "' found on the observable object '" + hn(t) + "'"), r) : Zt("please specify a property");
              if (a(t) || lt(t) || tn(t)) return t;
            } else if ("function" === typeof t && tn(t.$mobx)) return t.$mobx;

            return Zt("Cannot obtain atom from " + t);
          }

          function ln(t, e) {
            return Xt(t, "Expecting some object"), void 0 !== e ? ln(fn(t, e)) : a(t) || lt(t) || tn(t) ? t : qt(t) ? t : (J(t), t.$mobx ? t.$mobx : void Xt(!1, "Cannot obtain administration from " + t));
          }

          function hn(t, e) {
            return (void 0 !== e ? fn(t, e) : _t(t) || qt(t) ? ln(t) : fn(t)).name;
          }

          function pn(t, e) {
            if (null === t || void 0 === t) return !1;

            if (void 0 !== e) {
              if (!1 === _t(t)) return !1;
              if (!t.$mobx.values[e]) return !1;
              var n = fn(t, e);
              return lt(n);
            }

            return lt(t);
          }

          function vn(t, e, n, r) {
            return "function" === typeof n ? function (t, e, n, r) {
              return ln(t, e).observe(n, r);
            }(t, e, n, r) : function (t, e, n) {
              return ln(t).observe(e, n);
            }(t, e, n);
          }

          function dn(t, e, n) {
            return "function" === typeof n ? function (t, e, n) {
              return ln(t, e).intercept(n);
            }(t, e, n) : function (t, e) {
              return ln(t).intercept(e);
            }(t, e);
          }

          function yn(t, e) {
            return ze() || console.warn(z("m013")), sn(t, {
              context: e
            }).get();
          }

          function gn(t, e, n) {
            function r(r) {
              return e && n.push([t, r]), r;
            }

            if (void 0 === e && (e = !0), void 0 === n && (n = []), kt(t)) {
              if (e && null === n && (n = []), e && null !== t && "object" === typeof t) for (var i = 0, o = n.length; i < o; i++) {
                if (n[i][0] === t) return n[i][1];
              }

              if (L(t)) {
                var u = r([]),
                    a = t.map(function (t) {
                  return gn(t, e, n);
                });

                for (u.length = a.length, i = 0, o = a.length; i < o; i++) {
                  u[i] = a[i];
                }

                return u;
              }

              if (_t(t)) {
                for (var c in u = r({}), t) {
                  u[c] = gn(t[c], e, n);
                }

                return u;
              }

              if (qt(t)) {
                var s = r({});
                return t.forEach(function (t, r) {
                  return s[r] = gn(t, e, n);
                }), s;
              }

              if (D(t)) return gn(t.get(), e, n);
            }

            return t;
          }

          function mn(t, e) {
            Xt("function" === typeof t && t.length < 2, "createTransformer expects a function that accepts one argument");

            var n = {},
                r = Oe.resetId,
                o = function (r) {
              function o(e, n) {
                var i = r.call(this, function () {
                  return t(n);
                }, void 0, ot.default, "Transformer-" + t.name + "-" + e, void 0) || this;
                return i.sourceIdentifier = e, i.sourceObject = n, i;
              }

              return i(o, r), o.prototype.onBecomeUnobserved = function () {
                var t = this.value;
                r.prototype.onBecomeUnobserved.call(this), delete n[this.sourceIdentifier], e && e(t, this.sourceObject);
              }, o;
            }(ft);

            return function (t) {
              r !== Oe.resetId && (n = {}, r = Oe.resetId);

              var e = function (t) {
                if ("string" === typeof t || "number" === typeof t) return t;
                if (null === t || "object" !== typeof t) throw new Error("[mobx] transform expected some kind of object or primitive value, got: " + t);
                var e = t.$transformId;
                return void 0 === e && fe(t, "$transformId", e = Yt()), e;
              }(t),
                  i = n[e];

              return i ? i.get() : (i = n[e] = new o(e, t)).get();
            };
          }

          function bn(t) {
            return console.log(t), t;
          }

          function xn(t, e) {
            switch (arguments.length) {
              case 0:
                if (!(t = Oe.trackingDerivation)) return bn(z("m024"));
                break;

              case 2:
                t = fn(t, e);
            }

            return t = fn(t), lt(t) ? bn(t.whyRun()) : tn(t) ? bn(t.whyRun()) : Zt(z("m025"));
          }

          function wn(t) {
            var e = {
              name: t.name
            };
            return t.observing && t.observing.length > 0 && (e.dependencies = re(t.observing).map(wn)), e;
          }

          function _n(t) {
            var e,
                n = {
              name: t.name
            };
            return (e = t).observers && e.observers.length > 0 && (n.observers = Ie(t).map(_n)), n;
          }

          sn.struct = cn, sn.equals = un;

          var kn = {
            allowStateChanges: function allowStateChanges(t, e) {
              var n,
                  r = H(t);

              try {
                n = e();
              } finally {
                W(r);
              }

              return n;
            },
            deepEqual: de,
            getAtom: fn,
            getDebugName: hn,
            getDependencyTree: function getDependencyTree(t, e) {
              return wn(fn(t, e));
            },
            getAdministration: ln,
            getGlobalState: function getGlobalState() {
              return Oe;
            },
            getObserverTree: function getObserverTree(t, e) {
              return _n(fn(t, e));
            },
            interceptReads: function interceptReads(t, e, n) {
              var r;
              if (qt(t) || L(t) || D(t)) r = ln(t);else {
                if (!_t(t)) return Zt("Expected observable map, object or array as first array");
                if ("string" !== typeof e) return Zt("InterceptReads can only be used with a specific property, not with an object in general");
                r = ln(t, e);
              }
              return void 0 !== r.dehancer ? Zt("An intercept reader was already established") : (r.dehancer = "function" === typeof e ? e : n, function () {
                r.dehancer = void 0;
              });
            },
            isComputingDerivation: ze,
            isSpyEnabled: v,
            onReactionError: function onReactionError(t) {
              return Oe.globalReactionErrorHandlers.push(t), function () {
                var e = Oe.globalReactionErrorHandlers.indexOf(t);
                e >= 0 && Oe.globalReactionErrorHandlers.splice(e, 1);
              };
            },
            reserveArrayBuffer: T,
            resetGlobalState: function resetGlobalState() {
              Oe.resetId++;
              var t = new Se();

              for (var e in t) {
                -1 === ke.indexOf(e) && (Oe[e] = t[e]);
              }

              Oe.allowStateChanges = !Oe.strictMode;
            },
            isolateGlobalState: function isolateGlobalState() {
              je = !0, Jt().__mobxInstanceCount--;
            },
            shareGlobalState: function shareGlobalState() {
              te("Using `shareGlobalState` is not recommended, use peer dependencies instead. See https://github.com/mobxjs/mobx/issues/1082 for details."), Ee = !0;
              var t = Jt(),
                  e = Oe;
              if (t.__mobservableTrackingStack || t.__mobservableViewStack) throw new Error("[mobx] An incompatible version of mobservable is already loaded.");
              if (t.__mobxGlobal && t.__mobxGlobal.version !== e.version) throw new Error("[mobx] An incompatible version of mobx is already loaded.");
              t.__mobxGlobal ? Oe = t.__mobxGlobal : t.__mobxGlobal = e;
            },
            spyReport: d,
            spyReportEnd: m,
            spyReportStart: y,
            setReactionScheduler: function setReactionScheduler(t) {
              var e = Ze;

              Ze = function Ze(n) {
                return t(function () {
                  return e(n);
                });
              };
            }
          },
              Sn = {
            Reaction: Ke,
            untracked: Ge,
            Atom: u,
            BaseAtom: o,
            useStrict: V,
            isStrictModeEnabled: G,
            spy: b,
            comparer: ot,
            asReference: en,
            asFlat: rn,
            asStructure: nn,
            asMap: on,
            isModifierDescriptor: Nt,
            isObservableObject: _t,
            isBoxedObservable: D,
            isObservableArray: L,
            ObservableMap: Ht,
            isObservableMap: qt,
            map: Wt,
            transaction: Vt,
            observable: Mt,
            computed: sn,
            isObservable: kt,
            isComputed: pn,
            extendObservable: Ot,
            extendShallowObservable: Et,
            observe: vn,
            intercept: dn,
            autorun: ut,
            autorunAsync: ct,
            when: at,
            reaction: st,
            action: Q,
            isAction: nt,
            runInAction: et,
            expr: yn,
            toJS: gn,
            createTransformer: mn,
            whyRun: xn,
            isArrayLike: ge,
            extras: kn
          },
              On = !1,
              En = function En(t) {
            var e = Sn[t];
            Object.defineProperty(Sn, t, {
              get: function get() {
                return On || (On = !0, console.warn("Using default export (`import mobx from 'mobx'`) is deprecated and won\u2019t work in mobx@4.0.0\nUse `import * as mobx from 'mobx'` instead")), e;
              }
            });
          };

          for (var jn in Sn) {
            En(jn);
          }

          "object" === typeof __MOBX_DEVTOOLS_GLOBAL_HOOK__ && __MOBX_DEVTOOLS_GLOBAL_HOOK__.injectMobx({
            spy: b,
            extras: kn
          }), e.default = Sn;
        }.call(this, n(70));
      }, function (t, e, n) {
        var r = n(35);

        t.exports = function (t, e, n) {
          if (r(t), void 0 === e) return t;

          switch (n) {
            case 1:
              return function (n) {
                return t.call(e, n);
              };

            case 2:
              return function (n, r) {
                return t.call(e, n, r);
              };

            case 3:
              return function (n, r, i) {
                return t.call(e, n, r, i);
              };
          }

          return function () {
            return t.apply(e, arguments);
          };
        };
      }, function (t, e) {
        t.exports = function (t) {
          if ("function" != typeof t) throw TypeError(t + " is not a function!");
          return t;
        };
      }, function (t, e) {
        var n = Math.ceil,
            r = Math.floor;

        t.exports = function (t) {
          return isNaN(t = +t) ? 0 : (t > 0 ? r : n)(t);
        };
      }, function (t, e, n) {
        var r = n(67),
            i = n(47),
            o = n(30),
            u = n(44),
            a = n(28),
            c = n(116),
            s = Object.getOwnPropertyDescriptor;
        e.f = n(20) ? s : function (t, e) {
          if (t = o(t), e = u(e, !0), c) try {
            return s(t, e);
          } catch (n) {}
          if (a(t, e)) return i(!r.f.call(t, e), t[e]);
        };
      }, function (t, e, n) {
        var r = n(1),
            i = n(17),
            o = n(6);

        t.exports = function (t, e) {
          var n = (i.Object || {})[t] || Object[t],
              u = {};
          u[t] = e(n), r(r.S + r.F * o(function () {
            n(1);
          }), "Object", u);
        };
      }, function (t, e, n) {
        var r = n(34),
            i = n(66),
            o = n(24),
            u = n(16),
            a = n(132);

        t.exports = function (t, e) {
          var n = 1 == t,
              c = 2 == t,
              s = 3 == t,
              f = 4 == t,
              l = 6 == t,
              h = 5 == t || l,
              p = e || a;
          return function (e, a, v) {
            for (var d, y, g = o(e), m = i(g), b = r(a, v, 3), x = u(m.length), w = 0, _ = n ? p(e, x) : c ? p(e, 0) : void 0; x > w; w++) {
              if ((h || w in m) && (y = b(d = m[w], w, g), t)) if (n) _[w] = y;else if (y) switch (t) {
                case 3:
                  return !0;

                case 5:
                  return d;

                case 6:
                  return w;

                case 2:
                  _.push(d);

              } else if (f) return !1;
            }

            return l ? -1 : s || f ? f : _;
          };
        };
      }, function (t, e) {
        var n = {}.toString;

        t.exports = function (t) {
          return n.call(t).slice(8, -1);
        };
      }, function (t, e) {
        t.exports = function (t) {
          if (void 0 == t) throw TypeError("Can't call method on  " + t);
          return t;
        };
      }, function (t, e, n) {
        "use strict";

        if (n(20)) {
          var r = n(49),
              i = n(5),
              o = n(6),
              u = n(1),
              a = n(83),
              c = n(110),
              s = n(34),
              f = n(64),
              l = n(47),
              h = n(29),
              p = n(65),
              v = n(36),
              d = n(16),
              y = n(143),
              g = n(51),
              m = n(44),
              b = n(28),
              x = n(68),
              w = n(8),
              _ = n(24),
              k = n(102),
              S = n(52),
              O = n(54),
              E = n(53).f,
              j = n(104),
              A = n(48),
              R = n(13),
              I = n(39),
              C = n(73),
              P = n(69),
              T = n(106),
              M = n(62),
              L = n(76),
              N = n(63),
              F = n(105),
              D = n(134),
              U = n(19),
              z = n(37),
              $ = U.f,
              B = z.f,
              V = i.RangeError,
              G = i.TypeError,
              H = i.Uint8Array,
              W = Array.prototype,
              q = c.ArrayBuffer,
              K = c.DataView,
              J = I(0),
              Y = I(2),
              Z = I(3),
              X = I(4),
              Q = I(5),
              tt = I(6),
              et = C(!0),
              nt = C(!1),
              rt = T.values,
              it = T.keys,
              ot = T.entries,
              ut = W.lastIndexOf,
              at = W.reduce,
              ct = W.reduceRight,
              st = W.join,
              ft = W.sort,
              lt = W.slice,
              ht = W.toString,
              pt = W.toLocaleString,
              vt = R("iterator"),
              dt = R("toStringTag"),
              yt = A("typed_constructor"),
              gt = A("def_constructor"),
              mt = a.CONSTR,
              bt = a.TYPED,
              xt = a.VIEW,
              wt = I(1, function (t, e) {
            return Et(P(t, t[gt]), e);
          }),
              _t = o(function () {
            return 1 === new H(new Uint16Array([1]).buffer)[0];
          }),
              kt = !!H && !!H.prototype.set && o(function () {
            new H(1).set({});
          }),
              St = function St(t, e) {
            var n = v(t);
            if (n < 0 || n % e) throw V("Wrong offset!");
            return n;
          },
              Ot = function Ot(t) {
            if (w(t) && bt in t) return t;
            throw G(t + " is not a typed array!");
          },
              Et = function Et(t, e) {
            if (!(w(t) && yt in t)) throw G("It is not a typed array constructor!");
            return new t(e);
          },
              jt = function jt(t, e) {
            return At(P(t, t[gt]), e);
          },
              At = function At(t, e) {
            for (var n = 0, r = e.length, i = Et(t, r); r > n;) {
              i[n] = e[n++];
            }

            return i;
          },
              Rt = function Rt(t, e, n) {
            $(t, e, {
              get: function get() {
                return this._d[n];
              }
            });
          },
              It = function It(t) {
            var e,
                n,
                r,
                i,
                o,
                u,
                a = _(t),
                c = arguments.length,
                f = c > 1 ? arguments[1] : void 0,
                l = void 0 !== f,
                h = j(a);

            if (void 0 != h && !k(h)) {
              for (u = h.call(a), r = [], e = 0; !(o = u.next()).done; e++) {
                r.push(o.value);
              }

              a = r;
            }

            for (l && c > 2 && (f = s(f, arguments[2], 2)), e = 0, n = d(a.length), i = Et(this, n); n > e; e++) {
              i[e] = l ? f(a[e], e) : a[e];
            }

            return i;
          },
              Ct = function Ct() {
            for (var t = 0, e = arguments.length, n = Et(this, e); e > t;) {
              n[t] = arguments[t++];
            }

            return n;
          },
              Pt = !!H && o(function () {
            pt.call(new H(1));
          }),
              Tt = function Tt() {
            return pt.apply(Pt ? lt.call(Ot(this)) : Ot(this), arguments);
          },
              Mt = {
            copyWithin: function copyWithin(t, e) {
              return D.call(Ot(this), t, e, arguments.length > 2 ? arguments[2] : void 0);
            },
            every: function every(t) {
              return X(Ot(this), t, arguments.length > 1 ? arguments[1] : void 0);
            },
            fill: function fill(t) {
              return F.apply(Ot(this), arguments);
            },
            filter: function filter(t) {
              return jt(this, Y(Ot(this), t, arguments.length > 1 ? arguments[1] : void 0));
            },
            find: function find(t) {
              return Q(Ot(this), t, arguments.length > 1 ? arguments[1] : void 0);
            },
            findIndex: function findIndex(t) {
              return tt(Ot(this), t, arguments.length > 1 ? arguments[1] : void 0);
            },
            forEach: function forEach(t) {
              J(Ot(this), t, arguments.length > 1 ? arguments[1] : void 0);
            },
            indexOf: function indexOf(t) {
              return nt(Ot(this), t, arguments.length > 1 ? arguments[1] : void 0);
            },
            includes: function includes(t) {
              return et(Ot(this), t, arguments.length > 1 ? arguments[1] : void 0);
            },
            join: function join(t) {
              return st.apply(Ot(this), arguments);
            },
            lastIndexOf: function lastIndexOf(t) {
              return ut.apply(Ot(this), arguments);
            },
            map: function map(t) {
              return wt(Ot(this), t, arguments.length > 1 ? arguments[1] : void 0);
            },
            reduce: function reduce(t) {
              return at.apply(Ot(this), arguments);
            },
            reduceRight: function reduceRight(t) {
              return ct.apply(Ot(this), arguments);
            },
            reverse: function reverse() {
              for (var t, e = Ot(this).length, n = Math.floor(e / 2), r = 0; r < n;) {
                t = this[r], this[r++] = this[--e], this[e] = t;
              }

              return this;
            },
            some: function some(t) {
              return Z(Ot(this), t, arguments.length > 1 ? arguments[1] : void 0);
            },
            sort: function sort(t) {
              return ft.call(Ot(this), t);
            },
            subarray: function subarray(t, e) {
              var n = Ot(this),
                  r = n.length,
                  i = g(t, r);
              return new (P(n, n[gt]))(n.buffer, n.byteOffset + i * n.BYTES_PER_ELEMENT, d((void 0 === e ? r : g(e, r)) - i));
            }
          },
              Lt = function Lt(t, e) {
            return jt(this, lt.call(Ot(this), t, e));
          },
              Nt = function Nt(t) {
            Ot(this);

            var e = St(arguments[1], 1),
                n = this.length,
                r = _(t),
                i = d(r.length),
                o = 0;

            if (i + e > n) throw V("Wrong length!");

            for (; o < i;) {
              this[e + o] = r[o++];
            }
          },
              Ft = {
            entries: function entries() {
              return ot.call(Ot(this));
            },
            keys: function keys() {
              return it.call(Ot(this));
            },
            values: function values() {
              return rt.call(Ot(this));
            }
          },
              Dt = function Dt(t, e) {
            return w(t) && t[bt] && "symbol" != typeof e && e in t && String(+e) == String(e);
          },
              Ut = function Ut(t, e) {
            return Dt(t, e = m(e, !0)) ? l(2, t[e]) : B(t, e);
          },
              zt = function zt(t, e, n) {
            return !(Dt(t, e = m(e, !0)) && w(n) && b(n, "value")) || b(n, "get") || b(n, "set") || n.configurable || b(n, "writable") && !n.writable || b(n, "enumerable") && !n.enumerable ? $(t, e, n) : (t[e] = n.value, t);
          };

          mt || (z.f = Ut, U.f = zt), u(u.S + u.F * !mt, "Object", {
            getOwnPropertyDescriptor: Ut,
            defineProperty: zt
          }), o(function () {
            ht.call({});
          }) && (ht = pt = function pt() {
            return st.call(this);
          });
          var $t = p({}, Mt);
          p($t, Ft), h($t, vt, Ft.values), p($t, {
            slice: Lt,
            set: Nt,
            constructor: function constructor() {},
            toString: ht,
            toLocaleString: Tt
          }), Rt($t, "buffer", "b"), Rt($t, "byteOffset", "o"), Rt($t, "byteLength", "l"), Rt($t, "length", "e"), $($t, dt, {
            get: function get() {
              return this[bt];
            }
          }), t.exports = function (t, e, n, c) {
            var s = t + ((c = !!c) ? "Clamped" : "") + "Array",
                l = "get" + t,
                p = "set" + t,
                v = i[s],
                g = v || {},
                m = v && O(v),
                b = !v || !a.ABV,
                _ = {},
                k = v && v.prototype,
                j = function j(t, n) {
              $(t, n, {
                get: function get() {
                  return function (t, n) {
                    var r = t._d;
                    return r.v[l](n * e + r.o, _t);
                  }(this, n);
                },
                set: function set(t) {
                  return function (t, n, r) {
                    var i = t._d;
                    c && (r = (r = Math.round(r)) < 0 ? 0 : r > 255 ? 255 : 255 & r), i.v[p](n * e + i.o, r, _t);
                  }(this, n, t);
                },
                enumerable: !0
              });
            };

            b ? (v = n(function (t, n, r, i) {
              f(t, v, s, "_d");
              var o,
                  u,
                  a,
                  c,
                  l = 0,
                  p = 0;

              if (w(n)) {
                if (!(n instanceof q || "ArrayBuffer" == (c = x(n)) || "SharedArrayBuffer" == c)) return bt in n ? At(v, n) : It.call(v, n);
                o = n, p = St(r, e);
                var g = n.byteLength;

                if (void 0 === i) {
                  if (g % e) throw V("Wrong length!");
                  if ((u = g - p) < 0) throw V("Wrong length!");
                } else if ((u = d(i) * e) + p > g) throw V("Wrong length!");

                a = u / e;
              } else a = y(n), o = new q(u = a * e);

              for (h(t, "_d", {
                b: o,
                o: p,
                l: u,
                e: a,
                v: new K(o)
              }); l < a;) {
                j(t, l++);
              }
            }), k = v.prototype = S($t), h(k, "constructor", v)) : o(function () {
              v(1);
            }) && o(function () {
              new v(-1);
            }) && L(function (t) {
              new v(), new v(null), new v(1.5), new v(t);
            }, !0) || (v = n(function (t, n, r, i) {
              var o;
              return f(t, v, s), w(n) ? n instanceof q || "ArrayBuffer" == (o = x(n)) || "SharedArrayBuffer" == o ? void 0 !== i ? new g(n, St(r, e), i) : void 0 !== r ? new g(n, St(r, e)) : new g(n) : bt in n ? At(v, n) : It.call(v, n) : new g(y(n));
            }), J(m !== Function.prototype ? E(g).concat(E(m)) : E(g), function (t) {
              t in v || h(v, t, g[t]);
            }), v.prototype = k, r || (k.constructor = v));
            var A = k[vt],
                R = !!A && ("values" == A.name || void 0 == A.name),
                I = Ft.values;
            h(v, yt, !0), h(k, bt, s), h(k, xt, !0), h(k, gt, v), (c ? new v(1)[dt] == s : dt in k) || $(k, dt, {
              get: function get() {
                return s;
              }
            }), _[s] = v, u(u.G + u.W + u.F * (v != g), _), u(u.S, s, {
              BYTES_PER_ELEMENT: e
            }), u(u.S + u.F * o(function () {
              g.of.call(v, 1);
            }), s, {
              from: It,
              of: Ct
            }), "BYTES_PER_ELEMENT" in k || h(k, "BYTES_PER_ELEMENT", e), u(u.P, s, Mt), N(s), u(u.P + u.F * kt, s, {
              set: Nt
            }), u(u.P + u.F * !R, s, Ft), r || k.toString == ht || (k.toString = ht), u(u.P + u.F * o(function () {
              new v(1).slice();
            }), s, {
              slice: Lt
            }), u(u.P + u.F * (o(function () {
              return [1, 2].toLocaleString() != new v([1, 2]).toLocaleString();
            }) || !o(function () {
              k.toLocaleString.call([1, 2]);
            })), s, {
              toLocaleString: Tt
            }), M[s] = R ? A : I, r || R || h(k, vt, I);
          };
        } else t.exports = function () {};
      }, function (t, e) {
        t.exports = function (t) {
          if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          return t;
        };
      }, function (t, e, n) {
        var r = n(8);

        t.exports = function (t, e) {
          if (!r(t)) return t;
          var n, i;
          if (e && "function" == typeof (n = t.toString) && !r(i = n.call(t))) return i;
          if ("function" == typeof (n = t.valueOf) && !r(i = n.call(t))) return i;
          if (!e && "function" == typeof (n = t.toString) && !r(i = n.call(t))) return i;
          throw TypeError("Can't convert object to primitive value");
        };
      }, function (t, e, n) {
        var r = n(48)("meta"),
            i = n(8),
            o = n(28),
            u = n(19).f,
            a = 0,
            c = Object.isExtensible || function () {
          return !0;
        },
            s = !n(6)(function () {
          return c(Object.preventExtensions({}));
        }),
            f = function f(t) {
          u(t, r, {
            value: {
              i: "O" + ++a,
              w: {}
            }
          });
        },
            l = t.exports = {
          KEY: r,
          NEED: !1,
          fastKey: function fastKey(t, e) {
            if (!i(t)) return "symbol" == typeof t ? t : ("string" == typeof t ? "S" : "P") + t;

            if (!o(t, r)) {
              if (!c(t)) return "F";
              if (!e) return "E";
              f(t);
            }

            return t[r].i;
          },
          getWeak: function getWeak(t, e) {
            if (!o(t, r)) {
              if (!c(t)) return !0;
              if (!e) return !1;
              f(t);
            }

            return t[r].w;
          },
          onFreeze: function onFreeze(t) {
            return s && l.NEED && c(t) && !o(t, r) && f(t), t;
          }
        };
      }, function (t, e, n) {
        (function (t) {
          function n(t, e) {
            for (var n = 0, r = t.length - 1; r >= 0; r--) {
              var i = t[r];
              "." === i ? t.splice(r, 1) : ".." === i ? (t.splice(r, 1), n++) : n && (t.splice(r, 1), n--);
            }

            if (e) for (; n--; n) {
              t.unshift("..");
            }
            return t;
          }

          var r = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/,
              i = function i(t) {
            return r.exec(t).slice(1);
          };

          function o(t, e) {
            if (t.filter) return t.filter(e);

            for (var n = [], r = 0; r < t.length; r++) {
              e(t[r], r, t) && n.push(t[r]);
            }

            return n;
          }

          e.resolve = function () {
            for (var e = "", r = !1, i = arguments.length - 1; i >= -1 && !r; i--) {
              var u = i >= 0 ? arguments[i] : t.cwd();
              if ("string" !== typeof u) throw new TypeError("Arguments to path.resolve must be strings");
              u && (e = u + "/" + e, r = "/" === u.charAt(0));
            }

            return (r ? "/" : "") + (e = n(o(e.split("/"), function (t) {
              return !!t;
            }), !r).join("/")) || ".";
          }, e.normalize = function (t) {
            var r = e.isAbsolute(t),
                i = "/" === u(t, -1);
            return (t = n(o(t.split("/"), function (t) {
              return !!t;
            }), !r).join("/")) || r || (t = "."), t && i && (t += "/"), (r ? "/" : "") + t;
          }, e.isAbsolute = function (t) {
            return "/" === t.charAt(0);
          }, e.join = function () {
            var t = Array.prototype.slice.call(arguments, 0);
            return e.normalize(o(t, function (t, e) {
              if ("string" !== typeof t) throw new TypeError("Arguments to path.join must be strings");
              return t;
            }).join("/"));
          }, e.relative = function (t, n) {
            function r(t) {
              for (var e = 0; e < t.length && "" === t[e]; e++) {
                ;
              }

              for (var n = t.length - 1; n >= 0 && "" === t[n]; n--) {
                ;
              }

              return e > n ? [] : t.slice(e, n - e + 1);
            }

            t = e.resolve(t).substr(1), n = e.resolve(n).substr(1);

            for (var i = r(t.split("/")), o = r(n.split("/")), u = Math.min(i.length, o.length), a = u, c = 0; c < u; c++) {
              if (i[c] !== o[c]) {
                a = c;
                break;
              }
            }

            var s = [];

            for (c = a; c < i.length; c++) {
              s.push("..");
            }

            return (s = s.concat(o.slice(a))).join("/");
          }, e.sep = "/", e.delimiter = ":", e.dirname = function (t) {
            var e = i(t),
                n = e[0],
                r = e[1];
            return n || r ? (r && (r = r.substr(0, r.length - 1)), n + r) : ".";
          }, e.basename = function (t, e) {
            var n = i(t)[2];
            return e && n.substr(-1 * e.length) === e && (n = n.substr(0, n.length - e.length)), n;
          }, e.extname = function (t) {
            return i(t)[3];
          };
          var u = "b" === "ab".substr(-1) ? function (t, e, n) {
            return t.substr(e, n);
          } : function (t, e, n) {
            return e < 0 && (e = t.length + e), t.substr(e, n);
          };
        }).call(this, n(111));
      }, function (t, e) {
        t.exports = function (t, e) {
          return {
            enumerable: !(1 & t),
            configurable: !(2 & t),
            writable: !(4 & t),
            value: e
          };
        };
      }, function (t, e) {
        var n = 0,
            r = Math.random();

        t.exports = function (t) {
          return "Symbol(".concat(void 0 === t ? "" : t, ")_", (++n + r).toString(36));
        };
      }, function (t, e) {
        t.exports = !1;
      }, function (t, e, n) {
        var r = n(118),
            i = n(89);

        t.exports = Object.keys || function (t) {
          return r(t, i);
        };
      }, function (t, e, n) {
        var r = n(36),
            i = Math.max,
            o = Math.min;

        t.exports = function (t, e) {
          return (t = r(t)) < 0 ? i(t + e, 0) : o(t, e);
        };
      }, function (t, e, n) {
        var r = n(7),
            i = n(119),
            o = n(89),
            u = n(88)("IE_PROTO"),
            a = function a() {},
            _c2 = function c() {
          var t,
              e = n(86)("iframe"),
              r = o.length;

          for (e.style.display = "none", n(90).appendChild(e), e.src = "javascript:", (t = e.contentWindow.document).open(), t.write("<script>document.F=Object<\/script>"), t.close(), _c2 = t.F; r--;) {
            delete _c2.prototype[o[r]];
          }

          return _c2();
        };

        t.exports = Object.create || function (t, e) {
          var n;
          return null !== t ? (a.prototype = r(t), n = new a(), a.prototype = null, n[u] = t) : n = _c2(), void 0 === e ? n : i(n, e);
        };
      }, function (t, e, n) {
        var r = n(118),
            i = n(89).concat("length", "prototype");

        e.f = Object.getOwnPropertyNames || function (t) {
          return r(t, i);
        };
      }, function (t, e, n) {
        var r = n(28),
            i = n(24),
            o = n(88)("IE_PROTO"),
            u = Object.prototype;

        t.exports = Object.getPrototypeOf || function (t) {
          return t = i(t), r(t, o) ? t[o] : "function" == typeof t.constructor && t instanceof t.constructor ? t.constructor.prototype : t instanceof Object ? u : null;
        };
      }, function (t, e, n) {
        var r = n(13)("unscopables"),
            i = Array.prototype;
        void 0 == i[r] && n(29)(i, r, {}), t.exports = function (t) {
          i[r][t] = !0;
        };
      }, function (t, e, n) {
        var r = n(8);

        t.exports = function (t, e) {
          if (!r(t) || t._t !== e) throw TypeError("Incompatible receiver, " + e + " required!");
          return t;
        };
      }, function (t, e, n) {
        var r = n(112);

        function i(e, n, o) {
          return function () {
            if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
            if (Reflect.construct.sham) return !1;
            if ("function" === typeof Proxy) return !0;

            try {
              return Date.prototype.toString.call(Reflect.construct(Date, [], function () {})), !0;
            } catch (t) {
              return !1;
            }
          }() ? t.exports = i = Reflect.construct : t.exports = i = function i(t, e, n) {
            var i = [null];
            i.push.apply(i, e);
            var o = new (Function.bind.apply(t, i))();
            return n && r(o, n.prototype), o;
          }, i.apply(null, arguments);
        }

        t.exports = i;
      }, function (t, e, n) {
        var r = n(334),
            i = n(335),
            o = n(336);

        t.exports = function (t, e) {
          return r(t) || i(t, e) || o();
        };
      }, function (t, e, n) {
        "use strict";

        var r = n(9),
            i = n.n(r),
            o = n(14),
            u = n.n(o),
            a = n(18),
            c = n.n(a);

        function s(t) {
          return -1 !== t.indexOf("//") && (t = t.replace(/\/+/g, "/")), "/" === t[0] && (t = t.substr(1)), "/" === t[t.length - 1] && (t = t.substr(0, t.length - 1)), t;
        }

        function f(t, e, n) {
          var r;

          switch (n.length) {
            case 0:
              r = t.call(e);
              break;

            case 1:
              r = t.call(e, n[0]);
              break;

            case 2:
              r = t.call(e, n[0], n[1]);
              break;

            case 3:
              r = t.call(e, n[0], n[1], n[2]);
              break;

            case 4:
              r = t.call(e, n[0], n[1], n[2], n[3]);
              break;

            default:
              r = t.apply(e, n);
          }

          return r;
        }

        function l(t) {
          var e, n, r;

          if (e = this.exec(t)) {
            for (r = new Array(e.length - 1), n = 1; n < e.length; ++n) {
              r[n - 1] = e[n];
            }

            return r;
          }

          return e;
        }

        function h(t) {
          var e, n;

          if ("string" !== typeof t) {
            if (t instanceof RegExp) return (e = new RegExp(t)).query = l, e;
            throw new TypeError("Usage: qbus.parse(<`query` = String|RegExp>)\nGot:   qbus.parse(<`" + c()(t) + "` = " + t + ">)");
          }

          return n = "/" === t[t.length - 1], t = (t = s(t)).replace(/\/?[^\/]+?(?=\/|$)/g, function (e, r) {
            if (-1 === e.indexOf("*") && (e.length <= 2 || !/(^|\/)+\:+?/.test(e))) return e.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&");
            var i = "/" === e[0] ? "/" : "",
                o = !!t[e.length + r] || n,
                u = i ? e.substr(1) : e,
                a = u[0],
                c = u.substr(-1);
            return ":" === a ? "?" === c ? i ? "(?:/([^/]+?))?" : "([^/]+?)?" : i + "([^/]+?)" : o || "*" !== c ? i + u.replace(/\*/g, "([^/]+)?") : i + u.replace(/\*(?!$)/g, "(.*)?").slice(0, -1) + "(.*?(?:(?=/$)|(?=$)))?";
          }), (e = new RegExp("^/?" + t + "/?$", "i")).query = l, e;
        }

        function p(t) {
          var e, n, r;
          return n = t.search(/(^|\/)+?:+?[^\/]+?/), r = t.search(/(^|\/)+?[^\/]*?\*{1}/), -1 === n && -1 === r ? t : ("/" === (e = t.substr(0, Math.min(-1 !== n ? n : t.length, -1 !== r ? r : t.length)))[e.length - 1] && (e = e.substr(0, e.length - 1)), e);
        }

        var v = function () {
          function t(e) {
            i()(this, t), Object.defineProperty(this, "qbus", {
              enumerable: !1,
              value: {
                paths: {},
                parse: h,
                parent: e || null
              }
            });
          }

          return u()(t, [{
            key: "on",
            value: function value(t, e) {
              var n,
                  r,
                  i = this.qbus.paths,
                  o = t instanceof RegExp;
              if (!o && "string" !== typeof t || "function" !== typeof e) throw new TypeError("Usage: qbus.on(<`expr` = String|RegExp>, <`handler` = Function>)\nGot:   qbus.on(<`" + c()(t) + "` = " + t + ">, <`" + c()(e) + "` = " + e + ">)");
              return o ? ((i["/"] || (i["/"] = [])).push({
                input: t.source,
                handler: e,
                expr: h(t)
              }), this) : (i[r = p(n = s(t)) || "/"] || (i[r] = []), i[r].push({
                input: n,
                handler: e,
                expr: n === r ? n : h(t)
              }), this);
            }
          }, {
            key: "once",
            value: function value(t, e) {
              var n = this;
              if ("function" !== typeof e || "string" !== typeof t && !(t instanceof RegExp)) throw new TypeError("Usage: qbus.once(<`expr` = String|RegExp>, <`handler` = Function>)\nGot:   qbus.once(<`" + c()(t) + "` = " + t + ">, <`" + c()(e) + "` = " + e + ">)");
              return this.on(t, function r() {
                for (var i = 0, o = new Array(arguments.length); i < o.length; ++i) {
                  o[i] = arguments[i];
                }

                n.off(t, r), f(e, n, o);
              });
            }
          }, {
            key: "off",
            value: function value(t, e) {
              var n,
                  r,
                  i,
                  o = this.qbus.paths;
              if ("string" !== typeof t && !(n = t instanceof RegExp) || "undefined" !== typeof e && "function" !== typeof e) throw new TypeError("Usage: qbus.off(<`expr` = String|RegExp>[, <`handler` = Function>])\nGot:   qbus.off(<`" + c()(t) + "` = " + t + ">, <`" + c()(e) + "` = " + e + ">)");
              return n ? (t = t.source, r = o["/"], i = function i(t) {
                return o["/"] = t;
              }) : (t = s(t), r = o[p(t) || "/"], i = function i(e) {
                return o[p(t) || "/"] = e;
              }), r && i(r = r.filter(function (n) {
                var r = n.handler;
                return !!(n.input !== t || r && r !== e);
              })), this;
            }
          }, {
            key: "emit",
            value: function value(t) {
              var e,
                  n,
                  r,
                  i,
                  o,
                  u,
                  a,
                  l,
                  h,
                  p = this.qbus.paths,
                  v = [],
                  d = arguments.length;
              if (d > 1) for (e = 1; e < d; ++e) {
                v.push(arguments[e]);
              }
              if ("string" !== typeof t) throw new TypeError("Usage: qbus.emit(<`query` = String>[, <`arg1` = *>], <`arg2` = *>, ...)\nGot:   qbus.emit(<`" + c()(t) + "` = " + t + ">, " + v + ")");

              for (l = "/" == t[t.length - 1] ? "/" : "", u = (u = h = s(t)) || "/"; u;) {
                if (o = p[u]) for (e = 0; e < o.length; ++e) {
                  if ((r = o[e]).expr.query) {
                    if (i = r.expr.query(h + l)) {
                      for (n = 0; n < v.length; ++n) {
                        i.push(v[n]);
                      }

                      a = f(r.handler, this, i);
                    }
                  } else h == r.expr && (a = f(r.handler, this, v));

                  if (!1 === a) return this;
                }
                if (1 === u.length) break;
                u = u.substr(0, u.lastIndexOf("/")) || "/";
              }

              return this.qbus.parent && this.qbus.parent.emit.apply(this.qbus.parent, arguments), this;
            }
          }]), t;
        }();

        function d(t, e, n) {
          var r = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3];
          return Object.defineProperty(t, e, {
            value: n,
            configurable: !!r,
            enumerable: !1
          }), t;
        }

        function y(t) {
          var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
              n = new v(),
              r = e.configurable,
              i = void 0 === r || r;
          return d(t, "emitter", n, i), d(t, "on", n.on.bind(n), i), d(t, "addListener", n.on.bind(n), i), d(t, "once", n.once.bind(n), i), d(t, "off", n.off.bind(n), i), d(t, "removeAllListeners", n.off.bind(n), i), d(t, "emit", n.emit.bind(n), i), d(t, "trigger", n.emit.bind(n), i), n;
        }

        v.parse = h, n.d(e, "b", function () {
          return g;
        }), n.d(e, "a", function () {
          return m;
        });
        var g = y,
            m = y;
      }, function (t, e, n) {
        var r = n(19).f,
            i = n(28),
            o = n(13)("toStringTag");

        t.exports = function (t, e, n) {
          t && !i(t = n ? t : t.prototype, o) && r(t, o, {
            configurable: !0,
            value: e
          });
        };
      }, function (t, e, n) {
        var r = n(1),
            i = n(41),
            o = n(6),
            u = n(92),
            a = "[" + u + "]",
            c = RegExp("^" + a + a + "*"),
            s = RegExp(a + a + "*$"),
            f = function f(t, e, n) {
          var i = {},
              a = o(function () {
            return !!u[t]() || "\u200B\x85" != "\u200B\x85"[t]();
          }),
              c = i[t] = a ? e(l) : u[t];
          n && (i[n] = c), r(r.P + r.F * a, "String", i);
        },
            l = f.trim = function (t, e) {
          return t = String(i(t)), 1 & e && (t = t.replace(c, "")), 2 & e && (t = t.replace(s, "")), t;
        };

        t.exports = f;
      }, function (t, e) {
        t.exports = {};
      }, function (t, e, n) {
        "use strict";

        var r = n(5),
            i = n(19),
            o = n(20),
            u = n(13)("species");

        t.exports = function (t) {
          var e = r[t];
          o && e && !e[u] && i.f(e, u, {
            configurable: !0,
            get: function get() {
              return this;
            }
          });
        };
      }, function (t, e) {
        t.exports = function (t, e, n, r) {
          if (!(t instanceof e) || void 0 !== r && r in t) throw TypeError(n + ": incorrect invocation!");
          return t;
        };
      }, function (t, e, n) {
        var r = n(26);

        t.exports = function (t, e, n) {
          for (var i in e) {
            r(t, i, e[i], n);
          }

          return t;
        };
      }, function (t, e, n) {
        var r = n(40);
        t.exports = Object("z").propertyIsEnumerable(0) ? Object : function (t) {
          return "String" == r(t) ? t.split("") : Object(t);
        };
      }, function (t, e) {
        e.f = {}.propertyIsEnumerable;
      }, function (t, e, n) {
        var r = n(40),
            i = n(13)("toStringTag"),
            o = "Arguments" == r(function () {
          return arguments;
        }());

        t.exports = function (t) {
          var e, n, u;
          return void 0 === t ? "Undefined" : null === t ? "Null" : "string" == typeof (n = function (t, e) {
            try {
              return t[e];
            } catch (n) {}
          }(e = Object(t), i)) ? n : o ? r(e) : "Object" == (u = r(e)) && "function" == typeof e.callee ? "Arguments" : u;
        };
      }, function (t, e, n) {
        var r = n(7),
            i = n(35),
            o = n(13)("species");

        t.exports = function (t, e) {
          var n,
              u = r(t).constructor;
          return void 0 === u || void 0 == (n = r(u)[o]) ? e : i(n);
        };
      }, function (t, e) {
        var n;

        n = function () {
          return this;
        }();

        try {
          n = n || new Function("return this")();
        } catch (r) {
          "object" === typeof window && (n = window);
        }

        t.exports = n;
      }, function (t, e, n) {
        var r = n(21),
            i = n(112),
            o = n(345),
            u = n(57);

        function a(e) {
          var n = "function" === typeof Map ? new Map() : void 0;
          return t.exports = a = function a(t) {
            if (null === t || !o(t)) return t;
            if ("function" !== typeof t) throw new TypeError("Super expression must either be null or a function");

            if ("undefined" !== typeof n) {
              if (n.has(t)) return n.get(t);
              n.set(t, e);
            }

            function e() {
              return u(t, arguments, r(this).constructor);
            }

            return e.prototype = Object.create(t.prototype, {
              constructor: {
                value: e,
                enumerable: !1,
                writable: !0,
                configurable: !0
              }
            }), i(e, t);
          }, a(e);
        }

        t.exports = a;
      }, function (t, e, n) {
        var r = n(17),
            i = n(5),
            o = i["__core-js_shared__"] || (i["__core-js_shared__"] = {});
        (t.exports = function (t, e) {
          return o[t] || (o[t] = void 0 !== e ? e : {});
        })("versions", []).push({
          version: r.version,
          mode: n(49) ? "pure" : "global",
          copyright: "\xa9 2019 Denis Pushkarev (zloirock.ru)"
        });
      }, function (t, e, n) {
        var r = n(30),
            i = n(16),
            o = n(51);

        t.exports = function (t) {
          return function (e, n, u) {
            var a,
                c = r(e),
                s = i(c.length),
                f = o(u, s);

            if (t && n != n) {
              for (; s > f;) {
                if ((a = c[f++]) != a) return !0;
              }
            } else for (; s > f; f++) {
              if ((t || f in c) && c[f] === n) return t || f || 0;
            }

            return !t && -1;
          };
        };
      }, function (t, e) {
        e.f = Object.getOwnPropertySymbols;
      }, function (t, e, n) {
        var r = n(40);

        t.exports = Array.isArray || function (t) {
          return "Array" == r(t);
        };
      }, function (t, e, n) {
        var r = n(13)("iterator"),
            i = !1;

        try {
          var o = [7][r]();
          o.return = function () {
            i = !0;
          }, Array.from(o, function () {
            throw 2;
          });
        } catch (u) {}

        t.exports = function (t, e) {
          if (!e && !i) return !1;
          var n = !1;

          try {
            var o = [7],
                a = o[r]();
            a.next = function () {
              return {
                done: n = !0
              };
            }, o[r] = function () {
              return a;
            }, t(o);
          } catch (u) {}

          return n;
        };
      }, function (t, e, n) {
        "use strict";

        var r = n(7);

        t.exports = function () {
          var t = r(this),
              e = "";
          return t.global && (e += "g"), t.ignoreCase && (e += "i"), t.multiline && (e += "m"), t.unicode && (e += "u"), t.sticky && (e += "y"), e;
        };
      }, function (t, e, n) {
        "use strict";

        var r = n(68),
            i = RegExp.prototype.exec;

        t.exports = function (t, e) {
          var n = t.exec;

          if ("function" === typeof n) {
            var o = n.call(t, e);
            if ("object" !== typeof o) throw new TypeError("RegExp exec method returned something other than an Object or null");
            return o;
          }

          if ("RegExp" !== r(t)) throw new TypeError("RegExp#exec called on incompatible receiver");
          return i.call(t, e);
        };
      }, function (t, e, n) {
        "use strict";

        n(136);

        var r = n(26),
            i = n(29),
            o = n(6),
            u = n(41),
            a = n(13),
            c = n(107),
            s = a("species"),
            f = !o(function () {
          var t = /./;
          return t.exec = function () {
            var t = [];
            return t.groups = {
              a: "7"
            }, t;
          }, "7" !== "".replace(t, "$<a>");
        }),
            l = function () {
          var t = /(?:)/,
              e = t.exec;

          t.exec = function () {
            return e.apply(this, arguments);
          };

          var n = "ab".split(t);
          return 2 === n.length && "a" === n[0] && "b" === n[1];
        }();

        t.exports = function (t, e, n) {
          var h = a(t),
              p = !o(function () {
            var e = {};
            return e[h] = function () {
              return 7;
            }, 7 != ""[t](e);
          }),
              v = p ? !o(function () {
            var e = !1,
                n = /a/;
            return n.exec = function () {
              return e = !0, null;
            }, "split" === t && (n.constructor = {}, n.constructor[s] = function () {
              return n;
            }), n[h](""), !e;
          }) : void 0;

          if (!p || !v || "replace" === t && !f || "split" === t && !l) {
            var d = /./[h],
                y = n(u, h, ""[t], function (t, e, n, r, i) {
              return e.exec === c ? p && !i ? {
                done: !0,
                value: d.call(e, n, r)
              } : {
                done: !0,
                value: t.call(n, e, r)
              } : {
                done: !1
              };
            }),
                g = y[0],
                m = y[1];
            r(String.prototype, t, g), i(RegExp.prototype, h, 2 == e ? function (t, e) {
              return m.call(t, this, e);
            } : function (t) {
              return m.call(t, this);
            });
          }
        };
      }, function (t, e, n) {
        var r = n(34),
            i = n(131),
            o = n(102),
            u = n(7),
            a = n(16),
            c = n(104),
            s = {},
            f = {};
        (e = t.exports = function (t, e, n, l, h) {
          var p,
              v,
              d,
              y,
              g = h ? function () {
            return t;
          } : c(t),
              m = r(n, l, e ? 2 : 1),
              b = 0;
          if ("function" != typeof g) throw TypeError(t + " is not iterable!");

          if (o(g)) {
            for (p = a(t.length); p > b; b++) {
              if ((y = e ? m(u(v = t[b])[0], v[1]) : m(t[b])) === s || y === f) return y;
            }
          } else for (d = g.call(t); !(v = d.next()).done;) {
            if ((y = i(d, m, v.value, e)) === s || y === f) return y;
          }
        }).BREAK = s, e.RETURN = f;
      }, function (t, e, n) {
        var r = n(5).navigator;
        t.exports = r && r.userAgent || "";
      }, function (t, e, n) {
        "use strict";

        var r = n(5),
            i = n(1),
            o = n(26),
            u = n(65),
            a = n(45),
            c = n(80),
            s = n(64),
            f = n(8),
            l = n(6),
            h = n(76),
            p = n(60),
            v = n(93);

        t.exports = function (t, e, n, d, y, g) {
          var m = r[t],
              b = m,
              x = y ? "set" : "add",
              w = b && b.prototype,
              _ = {},
              k = function k(t) {
            var e = w[t];
            o(w, t, "delete" == t ? function (t) {
              return !(g && !f(t)) && e.call(this, 0 === t ? 0 : t);
            } : "has" == t ? function (t) {
              return !(g && !f(t)) && e.call(this, 0 === t ? 0 : t);
            } : "get" == t ? function (t) {
              return g && !f(t) ? void 0 : e.call(this, 0 === t ? 0 : t);
            } : "add" == t ? function (t) {
              return e.call(this, 0 === t ? 0 : t), this;
            } : function (t, n) {
              return e.call(this, 0 === t ? 0 : t, n), this;
            });
          };

          if ("function" == typeof b && (g || w.forEach && !l(function () {
            new b().entries().next();
          }))) {
            var S = new b(),
                O = S[x](g ? {} : -0, 1) != S,
                E = l(function () {
              S.has(1);
            }),
                j = h(function (t) {
              new b(t);
            }),
                A = !g && l(function () {
              for (var t = new b(), e = 5; e--;) {
                t[x](e, e);
              }

              return !t.has(-0);
            });
            j || ((b = e(function (e, n) {
              s(e, b, t);
              var r = v(new m(), e, b);
              return void 0 != n && c(n, y, r[x], r), r;
            })).prototype = w, w.constructor = b), (E || A) && (k("delete"), k("has"), y && k("get")), (A || O) && k(x), g && w.clear && delete w.clear;
          } else b = d.getConstructor(e, t, y, x), u(b.prototype, n), a.NEED = !0;

          return p(b, t), _[t] = b, i(i.G + i.W + i.F * (b != m), _), g || d.setStrong(b, t, y), b;
        };
      }, function (t, e, n) {
        for (var r, i = n(5), o = n(29), u = n(48), a = u("typed_array"), c = u("view"), s = !(!i.ArrayBuffer || !i.DataView), f = s, l = 0, h = "Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array".split(","); l < 9;) {
          (r = i[h[l++]]) ? (o(r.prototype, a, !0), o(r.prototype, c, !0)) : f = !1;
        }

        t.exports = {
          ABV: s,
          CONSTR: f,
          TYPED: a,
          VIEW: c
        };
      }, function (t, e, n) {
        var r = n(342),
            i = n(343),
            o = i;
        o.v1 = r, o.v4 = i, t.exports = o;
      }, function (t, e, n) {
        "use strict";

        var r = n(15),
            i = n.n(r);

        e.a = function (t) {
          var e = [];
          return {
            use: function t() {
              for (var n = arguments.length, r = new Array(n), o = 0; o < n; o++) {
                r[o] = arguments[o];
              }

              for (var u = r.length; u--;) {
                var a = r[u];
                if (Array.isArray(a)) return t.apply(void 0, i()(a));
                "function" === typeof a && e.unshift(a);
              }
            },
            run: function run(n) {
              var r = e.length;
              !function i() {
                var o = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
                    u = arguments.length > 1 ? arguments[1] : void 0;
                if (o || u || !r) "function" === typeof n && n(o);else {
                  var a = e[--r];
                  a && "undefined" !== typeof a.apply && a.call(t, i);
                }
              }();
            },
            getCount: function getCount() {
              return e.length;
            }
          };
        };
      }, function (t, e, n) {
        var r = n(8),
            i = n(5).document,
            o = r(i) && r(i.createElement);

        t.exports = function (t) {
          return o ? i.createElement(t) : {};
        };
      }, function (t, e, n) {
        e.f = n(13);
      }, function (t, e, n) {
        var r = n(72)("keys"),
            i = n(48);

        t.exports = function (t) {
          return r[t] || (r[t] = i(t));
        };
      }, function (t, e) {
        t.exports = "constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",");
      }, function (t, e, n) {
        var r = n(5).document;
        t.exports = r && r.documentElement;
      }, function (t, e, n) {
        var r = n(8),
            i = n(7),
            o = function o(t, e) {
          if (i(t), !r(e) && null !== e) throw TypeError(e + ": can't set as prototype!");
        };

        t.exports = {
          set: Object.setPrototypeOf || ("__proto__" in {} ? function (t, e, r) {
            try {
              (r = n(34)(Function.call, n(37).f(Object.prototype, "__proto__").set, 2))(t, []), e = !(t instanceof Array);
            } catch (i) {
              e = !0;
            }

            return function (t, n) {
              return o(t, n), e ? t.__proto__ = n : r(t, n), t;
            };
          }({}, !1) : void 0),
          check: o
        };
      }, function (t, e) {
        t.exports = "\t\n\x0B\f\r \xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF";
      }, function (t, e, n) {
        var r = n(8),
            i = n(91).set;

        t.exports = function (t, e, n) {
          var o,
              u = e.constructor;
          return u !== n && "function" == typeof u && (o = u.prototype) !== n.prototype && r(o) && i && i(t, o), t;
        };
      }, function (t, e, n) {
        "use strict";

        var r = n(36),
            i = n(41);

        t.exports = function (t) {
          var e = String(i(this)),
              n = "",
              o = r(t);
          if (o < 0 || o == 1 / 0) throw RangeError("Count can't be negative");

          for (; o > 0; (o >>>= 1) && (e += e)) {
            1 & o && (n += e);
          }

          return n;
        };
      }, function (t, e) {
        t.exports = Math.sign || function (t) {
          return 0 == (t = +t) || t != t ? t : t < 0 ? -1 : 1;
        };
      }, function (t, e) {
        var n = Math.expm1;
        t.exports = !n || n(10) > 22025.465794806718 || n(10) < 22025.465794806718 || -2e-17 != n(-2e-17) ? function (t) {
          return 0 == (t = +t) ? t : t > -1e-6 && t < 1e-6 ? t + t * t / 2 : Math.exp(t) - 1;
        } : n;
      }, function (t, e, n) {
        var r = n(36),
            i = n(41);

        t.exports = function (t) {
          return function (e, n) {
            var o,
                u,
                a = String(i(e)),
                c = r(n),
                s = a.length;
            return c < 0 || c >= s ? t ? "" : void 0 : (o = a.charCodeAt(c)) < 55296 || o > 56319 || c + 1 === s || (u = a.charCodeAt(c + 1)) < 56320 || u > 57343 ? t ? a.charAt(c) : o : t ? a.slice(c, c + 2) : u - 56320 + (o - 55296 << 10) + 65536;
          };
        };
      }, function (t, e, n) {
        "use strict";

        var r = n(49),
            i = n(1),
            o = n(26),
            u = n(29),
            a = n(62),
            c = n(130),
            s = n(60),
            f = n(54),
            l = n(13)("iterator"),
            h = !([].keys && "next" in [].keys()),
            p = function p() {
          return this;
        };

        t.exports = function (t, e, n, v, d, y, g) {
          c(n, e, v);

          var m,
              b,
              x,
              w = function w(t) {
            if (!h && t in O) return O[t];

            switch (t) {
              case "keys":
              case "values":
                return function () {
                  return new n(this, t);
                };
            }

            return function () {
              return new n(this, t);
            };
          },
              _ = e + " Iterator",
              k = "values" == d,
              S = !1,
              O = t.prototype,
              E = O[l] || O["@@iterator"] || d && O[d],
              j = E || w(d),
              A = d ? k ? w("entries") : j : void 0,
              R = "Array" == e && O.entries || E;

          if (R && (x = f(R.call(new t()))) !== Object.prototype && x.next && (s(x, _, !0), r || "function" == typeof x[l] || u(x, l, p)), k && E && "values" !== E.name && (S = !0, j = function j() {
            return E.call(this);
          }), r && !g || !h && !S && O[l] || u(O, l, j), a[e] = j, a[_] = p, d) if (m = {
            values: k ? j : w("values"),
            keys: y ? j : w("keys"),
            entries: A
          }, g) for (b in m) {
            b in O || o(O, b, m[b]);
          } else i(i.P + i.F * (h || S), e, m);
          return m;
        };
      }, function (t, e, n) {
        var r = n(100),
            i = n(41);

        t.exports = function (t, e, n) {
          if (r(e)) throw TypeError("String#" + n + " doesn't accept regex!");
          return String(i(t));
        };
      }, function (t, e, n) {
        var r = n(8),
            i = n(40),
            o = n(13)("match");

        t.exports = function (t) {
          var e;
          return r(t) && (void 0 !== (e = t[o]) ? !!e : "RegExp" == i(t));
        };
      }, function (t, e, n) {
        var r = n(13)("match");

        t.exports = function (t) {
          var e = /./;

          try {
            "/./"[t](e);
          } catch (n) {
            try {
              return e[r] = !1, !"/./"[t](e);
            } catch (i) {}
          }

          return !0;
        };
      }, function (t, e, n) {
        var r = n(62),
            i = n(13)("iterator"),
            o = Array.prototype;

        t.exports = function (t) {
          return void 0 !== t && (r.Array === t || o[i] === t);
        };
      }, function (t, e, n) {
        "use strict";

        var r = n(19),
            i = n(47);

        t.exports = function (t, e, n) {
          e in t ? r.f(t, e, i(0, n)) : t[e] = n;
        };
      }, function (t, e, n) {
        var r = n(68),
            i = n(13)("iterator"),
            o = n(62);

        t.exports = n(17).getIteratorMethod = function (t) {
          if (void 0 != t) return t[i] || t["@@iterator"] || o[r(t)];
        };
      }, function (t, e, n) {
        "use strict";

        var r = n(24),
            i = n(51),
            o = n(16);

        t.exports = function (t) {
          for (var e = r(this), n = o(e.length), u = arguments.length, a = i(u > 1 ? arguments[1] : void 0, n), c = u > 2 ? arguments[2] : void 0, s = void 0 === c ? n : i(c, n); s > a;) {
            e[a++] = t;
          }

          return e;
        };
      }, function (t, e, n) {
        "use strict";

        var r = n(55),
            i = n(135),
            o = n(62),
            u = n(30);
        t.exports = n(98)(Array, "Array", function (t, e) {
          this._t = u(t), this._i = 0, this._k = e;
        }, function () {
          var t = this._t,
              e = this._k,
              n = this._i++;
          return !t || n >= t.length ? (this._t = void 0, i(1)) : i(0, "keys" == e ? n : "values" == e ? t[n] : [n, t[n]]);
        }, "values"), o.Arguments = o.Array, r("keys"), r("values"), r("entries");
      }, function (t, e, n) {
        "use strict";

        var r = n(77),
            i = RegExp.prototype.exec,
            o = String.prototype.replace,
            u = i,
            a = function () {
          var t = /a/,
              e = /b*/g;
          return i.call(t, "a"), i.call(e, "a"), 0 !== t.lastIndex || 0 !== e.lastIndex;
        }(),
            c = void 0 !== /()??/.exec("")[1];

        (a || c) && (u = function u(t) {
          var e,
              n,
              u,
              s,
              f = this;
          return c && (n = new RegExp("^" + f.source + "$(?!\\s)", r.call(f))), a && (e = f.lastIndex), u = i.call(f, t), a && u && (f.lastIndex = f.global ? u.index + u[0].length : e), c && u && u.length > 1 && o.call(u[0], n, function () {
            for (s = 1; s < arguments.length - 2; s++) {
              void 0 === arguments[s] && (u[s] = void 0);
            }
          }), u;
        }), t.exports = u;
      }, function (t, e, n) {
        "use strict";

        var r = n(97)(!0);

        t.exports = function (t, e, n) {
          return e + (n ? r(t, e).length : 1);
        };
      }, function (t, e, n) {
        var r,
            i,
            o,
            u = n(34),
            a = n(124),
            c = n(90),
            s = n(86),
            f = n(5),
            l = f.process,
            h = f.setImmediate,
            p = f.clearImmediate,
            v = f.MessageChannel,
            d = f.Dispatch,
            y = 0,
            g = {},
            m = function m() {
          var t = +this;

          if (g.hasOwnProperty(t)) {
            var e = g[t];
            delete g[t], e();
          }
        },
            b = function b(t) {
          m.call(t.data);
        };

        h && p || (h = function h(t) {
          for (var e = [], n = 1; arguments.length > n;) {
            e.push(arguments[n++]);
          }

          return g[++y] = function () {
            a("function" == typeof t ? t : Function(t), e);
          }, r(y), y;
        }, p = function p(t) {
          delete g[t];
        }, "process" == n(40)(l) ? r = function r(t) {
          l.nextTick(u(m, t, 1));
        } : d && d.now ? r = function r(t) {
          d.now(u(m, t, 1));
        } : v ? (o = (i = new v()).port2, i.port1.onmessage = b, r = u(o.postMessage, o, 1)) : f.addEventListener && "function" == typeof postMessage && !f.importScripts ? (r = function r(t) {
          f.postMessage(t + "", "*");
        }, f.addEventListener("message", b, !1)) : r = "onreadystatechange" in s("script") ? function (t) {
          c.appendChild(s("script")).onreadystatechange = function () {
            c.removeChild(this), m.call(t);
          };
        } : function (t) {
          setTimeout(u(m, t, 1), 0);
        }), t.exports = {
          set: h,
          clear: p
        };
      }, function (t, e, n) {
        "use strict";

        var r = n(5),
            i = n(20),
            o = n(49),
            u = n(83),
            a = n(29),
            c = n(65),
            s = n(6),
            f = n(64),
            l = n(36),
            h = n(16),
            p = n(143),
            v = n(53).f,
            d = n(19).f,
            y = n(105),
            g = n(60),
            m = "prototype",
            b = "Wrong index!",
            _x2 = r.ArrayBuffer,
            _w = r.DataView,
            _ = r.Math,
            k = r.RangeError,
            S = r.Infinity,
            O = _x2,
            E = _.abs,
            j = _.pow,
            A = _.floor,
            R = _.log,
            I = _.LN2,
            C = i ? "_b" : "buffer",
            P = i ? "_l" : "byteLength",
            T = i ? "_o" : "byteOffset";

        function M(t, e, n) {
          var r,
              i,
              o,
              u = new Array(n),
              a = 8 * n - e - 1,
              c = (1 << a) - 1,
              s = c >> 1,
              f = 23 === e ? j(2, -24) - j(2, -77) : 0,
              l = 0,
              h = t < 0 || 0 === t && 1 / t < 0 ? 1 : 0;

          for ((t = E(t)) != t || t === S ? (i = t != t ? 1 : 0, r = c) : (r = A(R(t) / I), t * (o = j(2, -r)) < 1 && (r--, o *= 2), (t += r + s >= 1 ? f / o : f * j(2, 1 - s)) * o >= 2 && (r++, o /= 2), r + s >= c ? (i = 0, r = c) : r + s >= 1 ? (i = (t * o - 1) * j(2, e), r += s) : (i = t * j(2, s - 1) * j(2, e), r = 0)); e >= 8; u[l++] = 255 & i, i /= 256, e -= 8) {
            ;
          }

          for (r = r << e | i, a += e; a > 0; u[l++] = 255 & r, r /= 256, a -= 8) {
            ;
          }

          return u[--l] |= 128 * h, u;
        }

        function L(t, e, n) {
          var r,
              i = 8 * n - e - 1,
              o = (1 << i) - 1,
              u = o >> 1,
              a = i - 7,
              c = n - 1,
              s = t[c--],
              f = 127 & s;

          for (s >>= 7; a > 0; f = 256 * f + t[c], c--, a -= 8) {
            ;
          }

          for (r = f & (1 << -a) - 1, f >>= -a, a += e; a > 0; r = 256 * r + t[c], c--, a -= 8) {
            ;
          }

          if (0 === f) f = 1 - u;else {
            if (f === o) return r ? NaN : s ? -S : S;
            r += j(2, e), f -= u;
          }
          return (s ? -1 : 1) * r * j(2, f - e);
        }

        function N(t) {
          return t[3] << 24 | t[2] << 16 | t[1] << 8 | t[0];
        }

        function F(t) {
          return [255 & t];
        }

        function D(t) {
          return [255 & t, t >> 8 & 255];
        }

        function U(t) {
          return [255 & t, t >> 8 & 255, t >> 16 & 255, t >> 24 & 255];
        }

        function z(t) {
          return M(t, 52, 8);
        }

        function $(t) {
          return M(t, 23, 4);
        }

        function B(t, e, n) {
          d(t[m], e, {
            get: function get() {
              return this[n];
            }
          });
        }

        function V(t, e, n, r) {
          var i = p(+n);
          if (i + e > t[P]) throw k(b);
          var o = t[C]._b,
              u = i + t[T],
              a = o.slice(u, u + e);
          return r ? a : a.reverse();
        }

        function G(t, e, n, r, i, o) {
          var u = p(+n);
          if (u + e > t[P]) throw k(b);

          for (var a = t[C]._b, c = u + t[T], s = r(+i), f = 0; f < e; f++) {
            a[c + f] = s[o ? f : e - f - 1];
          }
        }

        if (u.ABV) {
          if (!s(function () {
            _x2(1);
          }) || !s(function () {
            new _x2(-1);
          }) || s(function () {
            return new _x2(), new _x2(1.5), new _x2(NaN), "ArrayBuffer" != _x2.name;
          })) {
            for (var H, W = (_x2 = function x(t) {
              return f(this, _x2), new O(p(t));
            })[m] = O[m], q = v(O), K = 0; q.length > K;) {
              (H = q[K++]) in _x2 || a(_x2, H, O[H]);
            }

            o || (W.constructor = _x2);
          }

          var J = new _w(new _x2(2)),
              Y = _w[m].setInt8;
          J.setInt8(0, 2147483648), J.setInt8(1, 2147483649), !J.getInt8(0) && J.getInt8(1) || c(_w[m], {
            setInt8: function setInt8(t, e) {
              Y.call(this, t, e << 24 >> 24);
            },
            setUint8: function setUint8(t, e) {
              Y.call(this, t, e << 24 >> 24);
            }
          }, !0);
        } else _x2 = function _x(t) {
          f(this, _x2, "ArrayBuffer");
          var e = p(t);
          this._b = y.call(new Array(e), 0), this[P] = e;
        }, _w = function w(t, e, n) {
          f(this, _w, "DataView"), f(t, _x2, "DataView");
          var r = t[P],
              i = l(e);
          if (i < 0 || i > r) throw k("Wrong offset!");
          if (i + (n = void 0 === n ? r - i : h(n)) > r) throw k("Wrong length!");
          this[C] = t, this[T] = i, this[P] = n;
        }, i && (B(_x2, "byteLength", "_l"), B(_w, "buffer", "_b"), B(_w, "byteLength", "_l"), B(_w, "byteOffset", "_o")), c(_w[m], {
          getInt8: function getInt8(t) {
            return V(this, 1, t)[0] << 24 >> 24;
          },
          getUint8: function getUint8(t) {
            return V(this, 1, t)[0];
          },
          getInt16: function getInt16(t) {
            var e = V(this, 2, t, arguments[1]);
            return (e[1] << 8 | e[0]) << 16 >> 16;
          },
          getUint16: function getUint16(t) {
            var e = V(this, 2, t, arguments[1]);
            return e[1] << 8 | e[0];
          },
          getInt32: function getInt32(t) {
            return N(V(this, 4, t, arguments[1]));
          },
          getUint32: function getUint32(t) {
            return N(V(this, 4, t, arguments[1])) >>> 0;
          },
          getFloat32: function getFloat32(t) {
            return L(V(this, 4, t, arguments[1]), 23, 4);
          },
          getFloat64: function getFloat64(t) {
            return L(V(this, 8, t, arguments[1]), 52, 8);
          },
          setInt8: function setInt8(t, e) {
            G(this, 1, t, F, e);
          },
          setUint8: function setUint8(t, e) {
            G(this, 1, t, F, e);
          },
          setInt16: function setInt16(t, e) {
            G(this, 2, t, D, e, arguments[2]);
          },
          setUint16: function setUint16(t, e) {
            G(this, 2, t, D, e, arguments[2]);
          },
          setInt32: function setInt32(t, e) {
            G(this, 4, t, U, e, arguments[2]);
          },
          setUint32: function setUint32(t, e) {
            G(this, 4, t, U, e, arguments[2]);
          },
          setFloat32: function setFloat32(t, e) {
            G(this, 4, t, $, e, arguments[2]);
          },
          setFloat64: function setFloat64(t, e) {
            G(this, 8, t, z, e, arguments[2]);
          }
        });

        g(_x2, "ArrayBuffer"), g(_w, "DataView"), a(_w[m], u.VIEW, !0), e.ArrayBuffer = _x2, e.DataView = _w;
      }, function (t, e) {
        var n,
            r,
            i = t.exports = {};

        function o() {
          throw new Error("setTimeout has not been defined");
        }

        function u() {
          throw new Error("clearTimeout has not been defined");
        }

        function a(t) {
          if (n === setTimeout) return setTimeout(t, 0);
          if ((n === o || !n) && setTimeout) return n = setTimeout, setTimeout(t, 0);

          try {
            return n(t, 0);
          } catch (e) {
            try {
              return n.call(null, t, 0);
            } catch (e) {
              return n.call(this, t, 0);
            }
          }
        }

        !function () {
          try {
            n = "function" === typeof setTimeout ? setTimeout : o;
          } catch (t) {
            n = o;
          }

          try {
            r = "function" === typeof clearTimeout ? clearTimeout : u;
          } catch (t) {
            r = u;
          }
        }();
        var c,
            s = [],
            f = !1,
            l = -1;

        function h() {
          f && c && (f = !1, c.length ? s = c.concat(s) : l = -1, s.length && p());
        }

        function p() {
          if (!f) {
            var t = a(h);
            f = !0;

            for (var e = s.length; e;) {
              for (c = s, s = []; ++l < e;) {
                c && c[l].run();
              }

              l = -1, e = s.length;
            }

            c = null, f = !1, function (t) {
              if (r === clearTimeout) return clearTimeout(t);
              if ((r === u || !r) && clearTimeout) return r = clearTimeout, clearTimeout(t);

              try {
                r(t);
              } catch (e) {
                try {
                  return r.call(null, t);
                } catch (e) {
                  return r.call(this, t);
                }
              }
            }(t);
          }
        }

        function v(t, e) {
          this.fun = t, this.array = e;
        }

        function d() {}

        i.nextTick = function (t) {
          var e = new Array(arguments.length - 1);
          if (arguments.length > 1) for (var n = 1; n < arguments.length; n++) {
            e[n - 1] = arguments[n];
          }
          s.push(new v(t, e)), 1 !== s.length || f || a(p);
        }, v.prototype.run = function () {
          this.fun.apply(null, this.array);
        }, i.title = "browser", i.browser = !0, i.env = {}, i.argv = [], i.version = "", i.versions = {}, i.on = d, i.addListener = d, i.once = d, i.off = d, i.removeListener = d, i.removeAllListeners = d, i.emit = d, i.prependListener = d, i.prependOnceListener = d, i.listeners = function (t) {
          return [];
        }, i.binding = function (t) {
          throw new Error("process.binding is not supported");
        }, i.cwd = function () {
          return "/";
        }, i.chdir = function (t) {
          throw new Error("process.chdir is not supported");
        }, i.umask = function () {
          return 0;
        };
      }, function (t, e) {
        function n(e, r) {
          return t.exports = n = Object.setPrototypeOf || function (t, e) {
            return t.__proto__ = e, t;
          }, n(e, r);
        }

        t.exports = n;
      }, function (t, e, n) {
        "use strict";

        e.decode = e.parse = n(338), e.encode = e.stringify = n(339);
      }, function (t, e, n) {
        "use strict";

        var r = n(340),
            i = n(341);

        function o() {
          this.protocol = null, this.slashes = null, this.auth = null, this.host = null, this.port = null, this.hostname = null, this.hash = null, this.search = null, this.query = null, this.pathname = null, this.path = null, this.href = null;
        }

        e.parse = b, e.resolve = function (t, e) {
          return b(t, !1, !0).resolve(e);
        }, e.resolveObject = function (t, e) {
          return t ? b(t, !1, !0).resolveObject(e) : e;
        }, e.format = function (t) {
          return i.isString(t) && (t = b(t)), t instanceof o ? t.format() : o.prototype.format.call(t);
        }, e.Url = o;
        var u = /^([a-z0-9.+-]+:)/i,
            a = /:[0-9]*$/,
            c = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,
            s = ["{", "}", "|", "\\", "^", "`"].concat(["<", ">", '"', "`", " ", "\r", "\n", "\t"]),
            f = ["'"].concat(s),
            l = ["%", "/", "?", ";", "#"].concat(f),
            h = ["/", "?", "#"],
            p = /^[+a-z0-9A-Z_-]{0,63}$/,
            v = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,
            d = {
          javascript: !0,
          "javascript:": !0
        },
            y = {
          javascript: !0,
          "javascript:": !0
        },
            g = {
          http: !0,
          https: !0,
          ftp: !0,
          gopher: !0,
          file: !0,
          "http:": !0,
          "https:": !0,
          "ftp:": !0,
          "gopher:": !0,
          "file:": !0
        },
            m = n(113);

        function b(t, e, n) {
          if (t && i.isObject(t) && t instanceof o) return t;
          var r = new o();
          return r.parse(t, e, n), r;
        }

        o.prototype.parse = function (t, e, n) {
          if (!i.isString(t)) throw new TypeError("Parameter 'url' must be a string, not " + typeof t);
          var o = t.indexOf("?"),
              a = -1 !== o && o < t.indexOf("#") ? "?" : "#",
              s = t.split(a);
          s[0] = s[0].replace(/\\/g, "/");
          var b = t = s.join(a);

          if (b = b.trim(), !n && 1 === t.split("#").length) {
            var x = c.exec(b);
            if (x) return this.path = b, this.href = b, this.pathname = x[1], x[2] ? (this.search = x[2], this.query = e ? m.parse(this.search.substr(1)) : this.search.substr(1)) : e && (this.search = "", this.query = {}), this;
          }

          var w = u.exec(b);

          if (w) {
            var _ = (w = w[0]).toLowerCase();

            this.protocol = _, b = b.substr(w.length);
          }

          if (n || w || b.match(/^\/\/[^@\/]+@[^@\/]+/)) {
            var k = "//" === b.substr(0, 2);
            !k || w && y[w] || (b = b.substr(2), this.slashes = !0);
          }

          if (!y[w] && (k || w && !g[w])) {
            for (var S, O, E = -1, j = 0; j < h.length; j++) {
              -1 !== (A = b.indexOf(h[j])) && (-1 === E || A < E) && (E = A);
            }

            for (-1 !== (O = -1 === E ? b.lastIndexOf("@") : b.lastIndexOf("@", E)) && (S = b.slice(0, O), b = b.slice(O + 1), this.auth = decodeURIComponent(S)), E = -1, j = 0; j < l.length; j++) {
              var A;
              -1 !== (A = b.indexOf(l[j])) && (-1 === E || A < E) && (E = A);
            }

            -1 === E && (E = b.length), this.host = b.slice(0, E), b = b.slice(E), this.parseHost(), this.hostname = this.hostname || "";
            var R = "[" === this.hostname[0] && "]" === this.hostname[this.hostname.length - 1];
            if (!R) for (var I = this.hostname.split(/\./), C = (j = 0, I.length); j < C; j++) {
              var P = I[j];

              if (P && !P.match(p)) {
                for (var T = "", M = 0, L = P.length; M < L; M++) {
                  P.charCodeAt(M) > 127 ? T += "x" : T += P[M];
                }

                if (!T.match(p)) {
                  var N = I.slice(0, j),
                      F = I.slice(j + 1),
                      D = P.match(v);
                  D && (N.push(D[1]), F.unshift(D[2])), F.length && (b = "/" + F.join(".") + b), this.hostname = N.join(".");
                  break;
                }
              }
            }
            this.hostname.length > 255 ? this.hostname = "" : this.hostname = this.hostname.toLowerCase(), R || (this.hostname = r.toASCII(this.hostname));
            var U = this.port ? ":" + this.port : "",
                z = this.hostname || "";
            this.host = z + U, this.href += this.host, R && (this.hostname = this.hostname.substr(1, this.hostname.length - 2), "/" !== b[0] && (b = "/" + b));
          }

          if (!d[_]) for (j = 0, C = f.length; j < C; j++) {
            var $ = f[j];

            if (-1 !== b.indexOf($)) {
              var B = encodeURIComponent($);
              B === $ && (B = escape($)), b = b.split($).join(B);
            }
          }
          var V = b.indexOf("#");
          -1 !== V && (this.hash = b.substr(V), b = b.slice(0, V));
          var G = b.indexOf("?");

          if (-1 !== G ? (this.search = b.substr(G), this.query = b.substr(G + 1), e && (this.query = m.parse(this.query)), b = b.slice(0, G)) : e && (this.search = "", this.query = {}), b && (this.pathname = b), g[_] && this.hostname && !this.pathname && (this.pathname = "/"), this.pathname || this.search) {
            U = this.pathname || "";
            var H = this.search || "";
            this.path = U + H;
          }

          return this.href = this.format(), this;
        }, o.prototype.format = function () {
          var t = this.auth || "";
          t && (t = (t = encodeURIComponent(t)).replace(/%3A/i, ":"), t += "@");
          var e = this.protocol || "",
              n = this.pathname || "",
              r = this.hash || "",
              o = !1,
              u = "";
          this.host ? o = t + this.host : this.hostname && (o = t + (-1 === this.hostname.indexOf(":") ? this.hostname : "[" + this.hostname + "]"), this.port && (o += ":" + this.port)), this.query && i.isObject(this.query) && Object.keys(this.query).length && (u = m.stringify(this.query));
          var a = this.search || u && "?" + u || "";
          return e && ":" !== e.substr(-1) && (e += ":"), this.slashes || (!e || g[e]) && !1 !== o ? (o = "//" + (o || ""), n && "/" !== n.charAt(0) && (n = "/" + n)) : o || (o = ""), r && "#" !== r.charAt(0) && (r = "#" + r), a && "?" !== a.charAt(0) && (a = "?" + a), e + o + (n = n.replace(/[?#]/g, function (t) {
            return encodeURIComponent(t);
          })) + (a = a.replace("#", "%23")) + r;
        }, o.prototype.resolve = function (t) {
          return this.resolveObject(b(t, !1, !0)).format();
        }, o.prototype.resolveObject = function (t) {
          if (i.isString(t)) {
            var e = new o();
            e.parse(t, !1, !0), t = e;
          }

          for (var n = new o(), r = Object.keys(this), u = 0; u < r.length; u++) {
            var a = r[u];
            n[a] = this[a];
          }

          if (n.hash = t.hash, "" === t.href) return n.href = n.format(), n;

          if (t.slashes && !t.protocol) {
            for (var c = Object.keys(t), s = 0; s < c.length; s++) {
              var f = c[s];
              "protocol" !== f && (n[f] = t[f]);
            }

            return g[n.protocol] && n.hostname && !n.pathname && (n.path = n.pathname = "/"), n.href = n.format(), n;
          }

          if (t.protocol && t.protocol !== n.protocol) {
            if (!g[t.protocol]) {
              for (var l = Object.keys(t), h = 0; h < l.length; h++) {
                var p = l[h];
                n[p] = t[p];
              }

              return n.href = n.format(), n;
            }

            if (n.protocol = t.protocol, t.host || y[t.protocol]) n.pathname = t.pathname;else {
              for (var v = (t.pathname || "").split("/"); v.length && !(t.host = v.shift());) {
                ;
              }

              t.host || (t.host = ""), t.hostname || (t.hostname = ""), "" !== v[0] && v.unshift(""), v.length < 2 && v.unshift(""), n.pathname = v.join("/");
            }

            if (n.search = t.search, n.query = t.query, n.host = t.host || "", n.auth = t.auth, n.hostname = t.hostname || t.host, n.port = t.port, n.pathname || n.search) {
              var d = n.pathname || "",
                  m = n.search || "";
              n.path = d + m;
            }

            return n.slashes = n.slashes || t.slashes, n.href = n.format(), n;
          }

          var b = n.pathname && "/" === n.pathname.charAt(0),
              x = t.host || t.pathname && "/" === t.pathname.charAt(0),
              w = x || b || n.host && t.pathname,
              _ = w,
              k = n.pathname && n.pathname.split("/") || [],
              S = (v = t.pathname && t.pathname.split("/") || [], n.protocol && !g[n.protocol]);
          if (S && (n.hostname = "", n.port = null, n.host && ("" === k[0] ? k[0] = n.host : k.unshift(n.host)), n.host = "", t.protocol && (t.hostname = null, t.port = null, t.host && ("" === v[0] ? v[0] = t.host : v.unshift(t.host)), t.host = null), w = w && ("" === v[0] || "" === k[0])), x) n.host = t.host || "" === t.host ? t.host : n.host, n.hostname = t.hostname || "" === t.hostname ? t.hostname : n.hostname, n.search = t.search, n.query = t.query, k = v;else if (v.length) k || (k = []), k.pop(), k = k.concat(v), n.search = t.search, n.query = t.query;else if (!i.isNullOrUndefined(t.search)) return S && (n.hostname = n.host = k.shift(), (R = !!(n.host && n.host.indexOf("@") > 0) && n.host.split("@")) && (n.auth = R.shift(), n.host = n.hostname = R.shift())), n.search = t.search, n.query = t.query, i.isNull(n.pathname) && i.isNull(n.search) || (n.path = (n.pathname ? n.pathname : "") + (n.search ? n.search : "")), n.href = n.format(), n;
          if (!k.length) return n.pathname = null, n.search ? n.path = "/" + n.search : n.path = null, n.href = n.format(), n;

          for (var O = k.slice(-1)[0], E = (n.host || t.host || k.length > 1) && ("." === O || ".." === O) || "" === O, j = 0, A = k.length; A >= 0; A--) {
            "." === (O = k[A]) ? k.splice(A, 1) : ".." === O ? (k.splice(A, 1), j++) : j && (k.splice(A, 1), j--);
          }

          if (!w && !_) for (; j--; j) {
            k.unshift("..");
          }
          !w || "" === k[0] || k[0] && "/" === k[0].charAt(0) || k.unshift(""), E && "/" !== k.join("/").substr(-1) && k.push("");
          var R,
              I = "" === k[0] || k[0] && "/" === k[0].charAt(0);
          return S && (n.hostname = n.host = I ? "" : k.length ? k.shift() : "", (R = !!(n.host && n.host.indexOf("@") > 0) && n.host.split("@")) && (n.auth = R.shift(), n.host = n.hostname = R.shift())), (w = w || n.host && k.length) && !I && k.unshift(""), k.length ? n.pathname = k.join("/") : (n.pathname = null, n.path = null), i.isNull(n.pathname) && i.isNull(n.search) || (n.path = (n.pathname ? n.pathname : "") + (n.search ? n.search : "")), n.auth = t.auth || n.auth, n.slashes = n.slashes || t.slashes, n.href = n.format(), n;
        }, o.prototype.parseHost = function () {
          var t = this.host,
              e = a.exec(t);
          e && (":" !== (e = e[0]) && (this.port = e.substr(1)), t = t.substr(0, t.length - e.length)), t && (this.hostname = t);
        };
      }, function (t, e, n) {
        n(157);
      }, function (t, e, n) {
        t.exports = !n(20) && !n(6)(function () {
          return 7 != Object.defineProperty(n(86)("div"), "a", {
            get: function get() {
              return 7;
            }
          }).a;
        });
      }, function (t, e, n) {
        var r = n(5),
            i = n(17),
            o = n(49),
            u = n(87),
            a = n(19).f;

        t.exports = function (t) {
          var e = i.Symbol || (i.Symbol = o ? {} : r.Symbol || {});
          "_" == t.charAt(0) || t in e || a(e, t, {
            value: u.f(t)
          });
        };
      }, function (t, e, n) {
        var r = n(28),
            i = n(30),
            o = n(73)(!1),
            u = n(88)("IE_PROTO");

        t.exports = function (t, e) {
          var n,
              a = i(t),
              c = 0,
              s = [];

          for (n in a) {
            n != u && r(a, n) && s.push(n);
          }

          for (; e.length > c;) {
            r(a, n = e[c++]) && (~o(s, n) || s.push(n));
          }

          return s;
        };
      }, function (t, e, n) {
        var r = n(19),
            i = n(7),
            o = n(50);
        t.exports = n(20) ? Object.defineProperties : function (t, e) {
          i(t);

          for (var n, u = o(e), a = u.length, c = 0; a > c;) {
            r.f(t, n = u[c++], e[n]);
          }

          return t;
        };
      }, function (t, e, n) {
        var r = n(30),
            i = n(53).f,
            o = {}.toString,
            u = "object" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];

        t.exports.f = function (t) {
          return u && "[object Window]" == o.call(t) ? function (t) {
            try {
              return i(t);
            } catch (e) {
              return u.slice();
            }
          }(t) : i(r(t));
        };
      }, function (t, e, n) {
        "use strict";

        var r = n(50),
            i = n(74),
            o = n(67),
            u = n(24),
            a = n(66),
            c = Object.assign;
        t.exports = !c || n(6)(function () {
          var t = {},
              e = {},
              n = Symbol(),
              r = "abcdefghijklmnopqrst";
          return t[n] = 7, r.split("").forEach(function (t) {
            e[t] = t;
          }), 7 != c({}, t)[n] || Object.keys(c({}, e)).join("") != r;
        }) ? function (t, e) {
          for (var n = u(t), c = arguments.length, s = 1, f = i.f, l = o.f; c > s;) {
            for (var h, p = a(arguments[s++]), v = f ? r(p).concat(f(p)) : r(p), d = v.length, y = 0; d > y;) {
              l.call(p, h = v[y++]) && (n[h] = p[h]);
            }
          }

          return n;
        } : c;
      }, function (t, e) {
        t.exports = Object.is || function (t, e) {
          return t === e ? 0 !== t || 1 / t === 1 / e : t != t && e != e;
        };
      }, function (t, e, n) {
        "use strict";

        var r = n(35),
            i = n(8),
            o = n(124),
            u = [].slice,
            a = {};

        t.exports = Function.bind || function (t) {
          var e = r(this),
              n = u.call(arguments, 1),
              c = function r() {
            var i = n.concat(u.call(arguments));
            return this instanceof r ? function (t, e, n) {
              if (!(e in a)) {
                for (var r = [], i = 0; i < e; i++) {
                  r[i] = "a[" + i + "]";
                }

                a[e] = Function("F,a", "return new F(" + r.join(",") + ")");
              }

              return a[e](t, n);
            }(e, i.length, i) : o(e, i, t);
          };

          return i(e.prototype) && (c.prototype = e.prototype), c;
        };
      }, function (t, e) {
        t.exports = function (t, e, n) {
          var r = void 0 === n;

          switch (e.length) {
            case 0:
              return r ? t() : t.call(n);

            case 1:
              return r ? t(e[0]) : t.call(n, e[0]);

            case 2:
              return r ? t(e[0], e[1]) : t.call(n, e[0], e[1]);

            case 3:
              return r ? t(e[0], e[1], e[2]) : t.call(n, e[0], e[1], e[2]);

            case 4:
              return r ? t(e[0], e[1], e[2], e[3]) : t.call(n, e[0], e[1], e[2], e[3]);
          }

          return t.apply(n, e);
        };
      }, function (t, e, n) {
        var r = n(5).parseInt,
            i = n(61).trim,
            o = n(92),
            u = /^[-+]?0[xX]/;
        t.exports = 8 !== r(o + "08") || 22 !== r(o + "0x16") ? function (t, e) {
          var n = i(String(t), 3);
          return r(n, e >>> 0 || (u.test(n) ? 16 : 10));
        } : r;
      }, function (t, e, n) {
        var r = n(5).parseFloat,
            i = n(61).trim;
        t.exports = 1 / r(n(92) + "-0") !== -1 / 0 ? function (t) {
          var e = i(String(t), 3),
              n = r(e);
          return 0 === n && "-" == e.charAt(0) ? -0 : n;
        } : r;
      }, function (t, e, n) {
        var r = n(40);

        t.exports = function (t, e) {
          if ("number" != typeof t && "Number" != r(t)) throw TypeError(e);
          return +t;
        };
      }, function (t, e, n) {
        var r = n(8),
            i = Math.floor;

        t.exports = function (t) {
          return !r(t) && isFinite(t) && i(t) === t;
        };
      }, function (t, e) {
        t.exports = Math.log1p || function (t) {
          return (t = +t) > -1e-8 && t < 1e-8 ? t - t * t / 2 : Math.log(1 + t);
        };
      }, function (t, e, n) {
        "use strict";

        var r = n(52),
            i = n(47),
            o = n(60),
            u = {};
        n(29)(u, n(13)("iterator"), function () {
          return this;
        }), t.exports = function (t, e, n) {
          t.prototype = r(u, {
            next: i(1, n)
          }), o(t, e + " Iterator");
        };
      }, function (t, e, n) {
        var r = n(7);

        t.exports = function (t, e, n, i) {
          try {
            return i ? e(r(n)[0], n[1]) : e(n);
          } catch (u) {
            var o = t.return;
            throw void 0 !== o && r(o.call(t)), u;
          }
        };
      }, function (t, e, n) {
        var r = n(250);

        t.exports = function (t, e) {
          return new (r(t))(e);
        };
      }, function (t, e, n) {
        var r = n(35),
            i = n(24),
            o = n(66),
            u = n(16);

        t.exports = function (t, e, n, a, c) {
          r(e);
          var s = i(t),
              f = o(s),
              l = u(s.length),
              h = c ? l - 1 : 0,
              p = c ? -1 : 1;
          if (n < 2) for (;;) {
            if (h in f) {
              a = f[h], h += p;
              break;
            }

            if (h += p, c ? h < 0 : l <= h) throw TypeError("Reduce of empty array with no initial value");
          }

          for (; c ? h >= 0 : l > h; h += p) {
            h in f && (a = e(a, f[h], h, s));
          }

          return a;
        };
      }, function (t, e, n) {
        "use strict";

        var r = n(24),
            i = n(51),
            o = n(16);

        t.exports = [].copyWithin || function (t, e) {
          var n = r(this),
              u = o(n.length),
              a = i(t, u),
              c = i(e, u),
              s = arguments.length > 2 ? arguments[2] : void 0,
              f = Math.min((void 0 === s ? u : i(s, u)) - c, u - a),
              l = 1;

          for (c < a && a < c + f && (l = -1, c += f - 1, a += f - 1); f-- > 0;) {
            c in n ? n[a] = n[c] : delete n[a], a += l, c += l;
          }

          return n;
        };
      }, function (t, e) {
        t.exports = function (t, e) {
          return {
            value: e,
            done: !!t
          };
        };
      }, function (t, e, n) {
        "use strict";

        var r = n(107);
        n(1)({
          target: "RegExp",
          proto: !0,
          forced: r !== /./.exec
        }, {
          exec: r
        });
      }, function (t, e, n) {
        n(20) && "g" != /./g.flags && n(19).f(RegExp.prototype, "flags", {
          configurable: !0,
          get: n(77)
        });
      }, function (t, e, n) {
        "use strict";

        var r,
            i,
            o,
            u,
            a = n(49),
            c = n(5),
            s = n(34),
            f = n(68),
            l = n(1),
            h = n(8),
            p = n(35),
            v = n(64),
            d = n(80),
            y = n(69),
            g = n(109).set,
            m = n(270)(),
            b = n(139),
            x = n(271),
            w = n(81),
            _ = n(140),
            k = c.TypeError,
            S = c.process,
            O = S && S.versions,
            E = O && O.v8 || "",
            _j = c.Promise,
            A = "process" == f(S),
            R = function R() {},
            I = i = b.f,
            C = !!function () {
          try {
            var t = _j.resolve(1),
                e = (t.constructor = {})[n(13)("species")] = function (t) {
              t(R, R);
            };

            return (A || "function" == typeof PromiseRejectionEvent) && t.then(R) instanceof e && 0 !== E.indexOf("6.6") && -1 === w.indexOf("Chrome/66");
          } catch (r) {}
        }(),
            P = function P(t) {
          var e;
          return !(!h(t) || "function" != typeof (e = t.then)) && e;
        },
            T = function T(t, e) {
          if (!t._n) {
            t._n = !0;
            var n = t._c;
            m(function () {
              for (var r = t._v, i = 1 == t._s, o = 0, u = function u(e) {
                var n,
                    o,
                    u,
                    a = i ? e.ok : e.fail,
                    c = e.resolve,
                    s = e.reject,
                    f = e.domain;

                try {
                  a ? (i || (2 == t._h && N(t), t._h = 1), !0 === a ? n = r : (f && f.enter(), n = a(r), f && (f.exit(), u = !0)), n === e.promise ? s(k("Promise-chain cycle")) : (o = P(n)) ? o.call(n, c, s) : c(n)) : s(r);
                } catch (l) {
                  f && !u && f.exit(), s(l);
                }
              }; n.length > o;) {
                u(n[o++]);
              }

              t._c = [], t._n = !1, e && !t._h && M(t);
            });
          }
        },
            M = function M(t) {
          g.call(c, function () {
            var e,
                n,
                r,
                i = t._v,
                o = L(t);
            if (o && (e = x(function () {
              A ? S.emit("unhandledRejection", i, t) : (n = c.onunhandledrejection) ? n({
                promise: t,
                reason: i
              }) : (r = c.console) && r.error && r.error("Unhandled promise rejection", i);
            }), t._h = A || L(t) ? 2 : 1), t._a = void 0, o && e.e) throw e.v;
          });
        },
            L = function L(t) {
          return 1 !== t._h && 0 === (t._a || t._c).length;
        },
            N = function N(t) {
          g.call(c, function () {
            var e;
            A ? S.emit("rejectionHandled", t) : (e = c.onrejectionhandled) && e({
              promise: t,
              reason: t._v
            });
          });
        },
            F = function F(t) {
          var e = this;
          e._d || (e._d = !0, (e = e._w || e)._v = t, e._s = 2, e._a || (e._a = e._c.slice()), T(e, !0));
        },
            D = function t(e) {
          var n,
              r = this;

          if (!r._d) {
            r._d = !0, r = r._w || r;

            try {
              if (r === e) throw k("Promise can't be resolved itself");
              (n = P(e)) ? m(function () {
                var i = {
                  _w: r,
                  _d: !1
                };

                try {
                  n.call(e, s(t, i, 1), s(F, i, 1));
                } catch (o) {
                  F.call(i, o);
                }
              }) : (r._v = e, r._s = 1, T(r, !1));
            } catch (i) {
              F.call({
                _w: r,
                _d: !1
              }, i);
            }
          }
        };

        C || (_j = function j(t) {
          v(this, _j, "Promise", "_h"), p(t), r.call(this);

          try {
            t(s(D, this, 1), s(F, this, 1));
          } catch (e) {
            F.call(this, e);
          }
        }, (r = function r(t) {
          this._c = [], this._a = void 0, this._s = 0, this._d = !1, this._v = void 0, this._h = 0, this._n = !1;
        }).prototype = n(65)(_j.prototype, {
          then: function then(t, e) {
            var n = I(y(this, _j));
            return n.ok = "function" != typeof t || t, n.fail = "function" == typeof e && e, n.domain = A ? S.domain : void 0, this._c.push(n), this._a && this._a.push(n), this._s && T(this, !1), n.promise;
          },
          catch: function _catch(t) {
            return this.then(void 0, t);
          }
        }), o = function o() {
          var t = new r();
          this.promise = t, this.resolve = s(D, t, 1), this.reject = s(F, t, 1);
        }, b.f = I = function I(t) {
          return t === _j || t === u ? new o(t) : i(t);
        }), l(l.G + l.W + l.F * !C, {
          Promise: _j
        }), n(60)(_j, "Promise"), n(63)("Promise"), u = n(17).Promise, l(l.S + l.F * !C, "Promise", {
          reject: function reject(t) {
            var e = I(this);
            return (0, e.reject)(t), e.promise;
          }
        }), l(l.S + l.F * (a || !C), "Promise", {
          resolve: function resolve(t) {
            return _(a && this === u ? _j : this, t);
          }
        }), l(l.S + l.F * !(C && n(76)(function (t) {
          _j.all(t).catch(R);
        })), "Promise", {
          all: function all(t) {
            var e = this,
                n = I(e),
                r = n.resolve,
                i = n.reject,
                o = x(function () {
              var n = [],
                  o = 0,
                  u = 1;
              d(t, !1, function (t) {
                var a = o++,
                    c = !1;
                n.push(void 0), u++, e.resolve(t).then(function (t) {
                  c || (c = !0, n[a] = t, --u || r(n));
                }, i);
              }), --u || r(n);
            });
            return o.e && i(o.v), n.promise;
          },
          race: function race(t) {
            var e = this,
                n = I(e),
                r = n.reject,
                i = x(function () {
              d(t, !1, function (t) {
                e.resolve(t).then(n.resolve, r);
              });
            });
            return i.e && r(i.v), n.promise;
          }
        });
      }, function (t, e, n) {
        "use strict";

        var r = n(35);

        function i(t) {
          var e, n;
          this.promise = new t(function (t, r) {
            if (void 0 !== e || void 0 !== n) throw TypeError("Bad Promise constructor");
            e = t, n = r;
          }), this.resolve = r(e), this.reject = r(n);
        }

        t.exports.f = function (t) {
          return new i(t);
        };
      }, function (t, e, n) {
        var r = n(7),
            i = n(8),
            o = n(139);

        t.exports = function (t, e) {
          if (r(t), i(e) && e.constructor === t) return e;
          var n = o.f(t);
          return (0, n.resolve)(e), n.promise;
        };
      }, function (t, e, n) {
        "use strict";

        var r = n(19).f,
            i = n(52),
            o = n(65),
            u = n(34),
            a = n(64),
            c = n(80),
            s = n(98),
            f = n(135),
            l = n(63),
            h = n(20),
            p = n(45).fastKey,
            v = n(56),
            d = h ? "_s" : "size",
            y = function y(t, e) {
          var n,
              r = p(e);
          if ("F" !== r) return t._i[r];

          for (n = t._f; n; n = n.n) {
            if (n.k == e) return n;
          }
        };

        t.exports = {
          getConstructor: function getConstructor(t, e, n, s) {
            var f = t(function (t, r) {
              a(t, f, e, "_i"), t._t = e, t._i = i(null), t._f = void 0, t._l = void 0, t[d] = 0, void 0 != r && c(r, n, t[s], t);
            });
            return o(f.prototype, {
              clear: function clear() {
                for (var t = v(this, e), n = t._i, r = t._f; r; r = r.n) {
                  r.r = !0, r.p && (r.p = r.p.n = void 0), delete n[r.i];
                }

                t._f = t._l = void 0, t[d] = 0;
              },
              delete: function _delete(t) {
                var n = v(this, e),
                    r = y(n, t);

                if (r) {
                  var i = r.n,
                      o = r.p;
                  delete n._i[r.i], r.r = !0, o && (o.n = i), i && (i.p = o), n._f == r && (n._f = i), n._l == r && (n._l = o), n[d]--;
                }

                return !!r;
              },
              forEach: function forEach(t) {
                v(this, e);

                for (var n, r = u(t, arguments.length > 1 ? arguments[1] : void 0, 3); n = n ? n.n : this._f;) {
                  for (r(n.v, n.k, this); n && n.r;) {
                    n = n.p;
                  }
                }
              },
              has: function has(t) {
                return !!y(v(this, e), t);
              }
            }), h && r(f.prototype, "size", {
              get: function get() {
                return v(this, e)[d];
              }
            }), f;
          },
          def: function def(t, e, n) {
            var r,
                i,
                o = y(t, e);
            return o ? o.v = n : (t._l = o = {
              i: i = p(e, !0),
              k: e,
              v: n,
              p: r = t._l,
              n: void 0,
              r: !1
            }, t._f || (t._f = o), r && (r.n = o), t[d]++, "F" !== i && (t._i[i] = o)), t;
          },
          getEntry: y,
          setStrong: function setStrong(t, e, n) {
            s(t, e, function (t, n) {
              this._t = v(t, e), this._k = n, this._l = void 0;
            }, function () {
              for (var t = this._k, e = this._l; e && e.r;) {
                e = e.p;
              }

              return this._t && (this._l = e = e ? e.n : this._t._f) ? f(0, "keys" == t ? e.k : "values" == t ? e.v : [e.k, e.v]) : (this._t = void 0, f(1));
            }, n ? "entries" : "values", !n, !0), l(e);
          }
        };
      }, function (t, e, n) {
        "use strict";

        var r = n(65),
            i = n(45).getWeak,
            o = n(7),
            u = n(8),
            a = n(64),
            c = n(80),
            s = n(39),
            f = n(28),
            l = n(56),
            h = s(5),
            p = s(6),
            v = 0,
            d = function d(t) {
          return t._l || (t._l = new y());
        },
            y = function y() {
          this.a = [];
        },
            g = function g(t, e) {
          return h(t.a, function (t) {
            return t[0] === e;
          });
        };

        y.prototype = {
          get: function get(t) {
            var e = g(this, t);
            if (e) return e[1];
          },
          has: function has(t) {
            return !!g(this, t);
          },
          set: function set(t, e) {
            var n = g(this, t);
            n ? n[1] = e : this.a.push([t, e]);
          },
          delete: function _delete(t) {
            var e = p(this.a, function (e) {
              return e[0] === t;
            });
            return ~e && this.a.splice(e, 1), !!~e;
          }
        }, t.exports = {
          getConstructor: function getConstructor(t, e, n, o) {
            var s = t(function (t, r) {
              a(t, s, e, "_i"), t._t = e, t._i = v++, t._l = void 0, void 0 != r && c(r, n, t[o], t);
            });
            return r(s.prototype, {
              delete: function _delete(t) {
                if (!u(t)) return !1;
                var n = i(t);
                return !0 === n ? d(l(this, e)).delete(t) : n && f(n, this._i) && delete n[this._i];
              },
              has: function has(t) {
                if (!u(t)) return !1;
                var n = i(t);
                return !0 === n ? d(l(this, e)).has(t) : n && f(n, this._i);
              }
            }), s;
          },
          def: function def(t, e, n) {
            var r = i(o(e), !0);
            return !0 === r ? d(t).set(e, n) : r[t._i] = n, t;
          },
          ufstore: d
        };
      }, function (t, e, n) {
        var r = n(36),
            i = n(16);

        t.exports = function (t) {
          if (void 0 === t) return 0;
          var e = r(t),
              n = i(e);
          if (e !== n) throw RangeError("Wrong length!");
          return n;
        };
      }, function (t, e, n) {
        var r = n(53),
            i = n(74),
            o = n(7),
            u = n(5).Reflect;

        t.exports = u && u.ownKeys || function (t) {
          var e = r.f(o(t)),
              n = i.f;
          return n ? e.concat(n(t)) : e;
        };
      }, function (t, e, n) {
        var r = n(16),
            i = n(94),
            o = n(41);

        t.exports = function (t, e, n, u) {
          var a = String(o(t)),
              c = a.length,
              s = void 0 === n ? " " : String(n),
              f = r(e);
          if (f <= c || "" == s) return a;
          var l = f - c,
              h = i.call(s, Math.ceil(l / s.length));
          return h.length > l && (h = h.slice(0, l)), u ? h + a : a + h;
        };
      }, function (t, e, n) {
        var r = n(50),
            i = n(30),
            o = n(67).f;

        t.exports = function (t) {
          return function (e) {
            for (var n, u = i(e), a = r(u), c = a.length, s = 0, f = []; c > s;) {
              o.call(u, n = a[s++]) && f.push(t ? [n, u[n]] : u[n]);
            }

            return f;
          };
        };
      }, function (t, e) {
        t.exports = function (t) {
          return t.webpackPolyfill || (t.deprecate = function () {}, t.paths = [], t.children || (t.children = []), Object.defineProperty(t, "loaded", {
            enumerable: !0,
            get: function get() {
              return t.l;
            }
          }), Object.defineProperty(t, "id", {
            enumerable: !0,
            get: function get() {
              return t.i;
            }
          }), t.webpackPolyfill = 1), t;
        };
      }, function (t, e) {
        var n = "undefined" != typeof crypto && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || "undefined" != typeof msCrypto && "function" == typeof window.msCrypto.getRandomValues && msCrypto.getRandomValues.bind(msCrypto);

        if (n) {
          var r = new Uint8Array(16);

          t.exports = function () {
            return n(r), r;
          };
        } else {
          var i = new Array(16);

          t.exports = function () {
            for (var t, e = 0; e < 16; e++) {
              0 === (3 & e) && (t = 4294967296 * Math.random()), i[e] = t >>> ((3 & e) << 3) & 255;
            }

            return i;
          };
        }
      }, function (t, e) {
        for (var n = [], r = 0; r < 256; ++r) {
          n[r] = (r + 256).toString(16).substr(1);
        }

        t.exports = function (t, e) {
          var r = e || 0,
              i = n;
          return [i[t[r++]], i[t[r++]], i[t[r++]], i[t[r++]], "-", i[t[r++]], i[t[r++]], "-", i[t[r++]], i[t[r++]], "-", i[t[r++]], i[t[r++]], "-", i[t[r++]], i[t[r++]], i[t[r++]], i[t[r++]], i[t[r++]], i[t[r++]]].join("");
        };
      }, function (t, e, n) {
        "use strict";

        var r = n(9),
            i = n.n(r),
            o = n(14),
            u = n.n(o),
            a = function () {
          function t(e) {
            var n = this;
            i()(this, t), c(this, "hide", function () {
              for (var t = arguments.length, e = new Array(t), r = 0; r < t; r++) {
                e[r] = arguments[r];
              }

              return c.apply(void 0, [n].concat(e));
            }), this.clear(e), this.write = function (t, e) {
              return n.set(t, e).get(t);
            };
          }

          return u()(t, [{
            key: "fetch",
            value: function value(t, e) {
              return this.has(t) ? this.get(t) : (this.set(t, "function" === typeof e ? e(t) : e), this.get(t));
            }
          }, {
            key: "clear",
            value: function value(t) {
              delete this._wm, this._wm = new Map(t);
            }
          }, {
            key: "delete",
            value: function value(t) {
              return this._wm.delete(t);
            }
          }, {
            key: "get",
            value: function value(t) {
              return this._wm.get(t);
            }
          }, {
            key: "has",
            value: function value(t) {
              return this._wm.has(t);
            }
          }, {
            key: "set",
            value: function value(t, e) {
              return this._wm.set(t, e), this;
            }
          }]), t;
        }();

        function c(t, e, n) {
          var r = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
          return Object.defineProperty(t, e, {
            enumerable: !1,
            configurable: r,
            value: n
          }), t;
        }

        e.a = a;
      }, function (t, e, n) {
        var r = n(344);

        t.exports = function (t, e) {
          if (null == t) return {};
          var n,
              i,
              o = r(t, e);

          if (Object.getOwnPropertySymbols) {
            var u = Object.getOwnPropertySymbols(t);

            for (i = 0; i < u.length; i++) {
              n = u[i], e.indexOf(n) >= 0 || Object.prototype.propertyIsEnumerable.call(t, n) && (o[n] = t[n]);
            }
          }

          return o;
        };
      }, function (t, e) {
        t.exports = function (t, e) {
          for (var n in e) {
            (o = e[n]).configurable = o.enumerable = !0, "value" in o && (o.writable = !0), Object.defineProperty(t, n, o);
          }

          if (Object.getOwnPropertySymbols) for (var r = Object.getOwnPropertySymbols(e), i = 0; i < r.length; i++) {
            var o,
                u = r[i];
            (o = e[u]).configurable = o.enumerable = !0, "value" in o && (o.writable = !0), Object.defineProperty(t, u, o);
          }
          return t;
        };
      }, function (t, e, n) {
        "use strict";

        n.d(e, "a", function () {
          return b;
        });

        var r = n(3),
            i = n.n(r),
            o = n(9),
            u = n.n(o),
            a = n(14),
            c = n.n(a),
            s = n(22),
            f = n.n(s),
            l = n(21),
            h = n.n(l),
            p = n(43),
            v = n.n(p),
            d = n(23),
            y = n.n(d),
            g = n(2),
            m = n.n(g),
            b = function (t) {
          function e() {
            var t, n;
            u()(this, e);

            for (var r = arguments.length, i = new Array(r), o = 0; o < r; o++) {
              i[o] = arguments[o];
            }

            return n = f()(this, (t = h()(e)).call.apply(t, [this].concat(i))), m()(v()(n), "shortcut", "profiler"), n;
          }

          return y()(e, t), c()(e, [{
            key: "observables",
            value: function value() {
              return {
                timings: ["shallowMap", []]
              };
            }
          }, {
            key: "end",
            value: function value(t) {
              return this.profileEnd(t);
            }
          }, {
            key: "profileEnd",
            value: function value(t) {
              try {
                var e = +new Date();
                this.timings.set(t, i()({}, this.timings.get(t) || {}, {
                  end: e
                }));
              } catch (n) {}
            }
          }, {
            key: "start",
            value: function value(t) {
              this.profileStart(t);
            }
          }, {
            key: "profileStart",
            value: function value(t) {
              var e = +new Date();

              try {
                this.timings.set(t, {
                  start: e
                });
              } catch (n) {}

              return e;
            }
          }, {
            key: "report",
            get: function get() {
              var t = this.runtime.convertToJS(this.timings.toJSON());
              return this.chain.plant(t).pickBy(function (t) {
                return t.start && t.end;
              }).mapValues(function (t) {
                var e = t.start,
                    n = t.end;
                return {
                  start: e,
                  end: n,
                  duration: n - e
                };
              }).value();
            }
          }]), e;
        }(n(31).a);

        m()(b, "shortcut", "profiler");
      }, function (t, e, n) {
        "use strict";

        n.d(e, "a", function () {
          return w;
        });

        var r = n(10),
            i = n.n(r),
            o = n(3),
            u = n.n(o),
            a = n(25),
            c = n.n(a),
            s = n(9),
            f = n.n(s),
            l = n(14),
            h = n.n(l),
            p = n(22),
            v = n.n(p),
            d = n(21),
            y = n.n(d),
            g = n(23),
            m = n.n(g),
            b = n(2),
            x = n.n(b),
            w = function (t) {
          function e() {
            return f()(this, e), v()(this, y()(e).apply(this, arguments));
          }

          return m()(e, t), h()(e, [{
            key: "featureWasEnabled",
            value: function value() {
              if (this.runtime.isNode) this.runtime.hide("vm", n(347));else {
                var t = n(349);
                this.runtime.hide("vm", t.createContext ? t : t.default || t);
              }
            }
          }], [{
            key: "createCodeRunner",
            value: function value(t) {
              var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                  n = arguments.length > 2 ? arguments[2] : void 0,
                  r = this.vm,
                  o = e.thisContext,
                  a = void 0 !== o && o,
                  s = this.propUtils.hashObject;
              n = n || this.sandbox;
              var f = r.isContext && r.isContext(n) ? n : !a && r.createContext(n);
              return c()(i.a.mark(function o() {
                var c,
                    l,
                    h,
                    p,
                    v = arguments;
                return i.a.wrap(function (i) {
                  for (;;) {
                    switch (i.prev = i.next) {
                      case 0:
                        return c = v.length > 0 && void 0 !== v[0] ? v[0] : {}, l = e.throwErrors || c.throwErrors, h = "function" === typeof t ? r.createScript(t.call(this, u()({
                          displayErrors: !0
                        }, e, c), n), e) : r.createScript(t, u()({
                          displayErrors: !0
                        }, e, c)), i.prev = 3, p = f ? h.runInContext(f) : a ? h.runInThisContext() : h.runInNewContext(n), i.abrupt("return", {
                          result: p,
                          code: t,
                          usedContext: f ? "vmContext" : a ? "thisContext" : "sandboxedContext",
                          hash: s({
                            code: t
                          })
                        });

                      case 8:
                        if (i.prev = 8, i.t0 = i.catch(3), !l) {
                          i.next = 12;
                          break;
                        }

                        throw i.t0;

                      case 12:
                        return i.abrupt("return", {
                          error: {
                            message: i.t0.message,
                            stack: i.t0.stack
                          },
                          code: t
                        });

                      case 13:
                      case "end":
                        return i.stop();
                    }
                  }
                }, o, this, [[3, 8]]);
              }));
            }
          }]), e;
        }(n(31).a);

        x()(w, "shortcut", "vm"), x()(w, "hostMethods", ["createCodeRunner", "createModule", "createScript", "createContext"]), x()(w, "createModule", function (t) {
          var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
              n = arguments.length > 2 ? arguments[2] : void 0;
          n = n || this.sandbox;
          var r = "(function (exports, require, module, __filename, __dirname) {\n\n".concat(t, "\n\n});"),
              i = this.createScript(r),
              o = this.vm.isContext(n) ? n : this.createContext(n),
              u = this.hashObject({
            code: t
          }),
              a = e.filename || (this.resolve ? this.resolve("".concat(u, ".js")) : "".concat(u, ".js")),
              c = e.id || a,
              s = e.dirname || this.cwd || "/",
              f = e.require || this.get("currentModule.require"),
              l = e.parent || this.get("currentModule"),
              h = {
            id: c,
            children: [],
            parent: l,
            require: f,
            exports: {},
            loaded: !1
          };
          h.require = f;

          var p = function p() {
            return i.runInContext(o)(h.exports, h.require, h, a, s);
          };

          return e.lazy ? function () {
            var t = p();
            return t.loaded = !0, t.parent = l, t;
          } : (p(), h.loaded = !0, h.parent = l, h);
        }), x()(w, "createScript", function () {
          var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "",
              e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          return new this.vm.Script(t.toString(), e);
        }), x()(w, "createContext", function () {
          var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          return this.vm.createContext(u()({}, this.sandbox, t));
        });
      }, function (t, e, n) {
        "use strict";

        var r = n(9),
            i = n.n(r),
            o = n(14),
            u = n.n(o),
            a = n(0),
            c = n(4),
            s = new WeakMap(),
            f = function f() {
          var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          return Object(a.isObject)(t) && (t = Object(a.toPairs)(t)), new Map(t);
        },
            l = function () {
          function t() {
            var e = this,
                n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
            i()(this, t), this.hide = function () {
              for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++) {
                n[r] = arguments[r];
              }

              return c.hide.apply(void 0, [e].concat(n));
            }, this.hideGetter = function () {
              for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++) {
                n[r] = arguments[r];
              }

              return c.hideGetter.apply(void 0, [e].concat(n));
            };
            var r = this;
            this.clear = function (t) {
              return s.delete(r), s.set(r, f(t)), e;
            }, this.hideGetter("_wm", function () {
              return s.has(r) ? s.get(r) : s.set(r, f(n)).get(r);
            }), this.clear(n), this.write = function (t, n) {
              return e.set(t, n).get(t);
            };
          }

          return u()(t, [{
            key: "fetch",
            value: function value(t, e) {
              return this.has(t) ? this.get(t) : (this.set(t, "function" === typeof e ? e(t) : e), this.get(t));
            }
          }, {
            key: "delete",
            value: function value(t) {
              return this._wm.delete(t);
            }
          }, {
            key: "get",
            value: function value(t) {
              return this._wm.get(t);
            }
          }, {
            key: "has",
            value: function value(t) {
              return this._wm.has(t);
            }
          }, {
            key: "set",
            value: function value(t, e) {
              return this._wm.set(t, e), this;
            }
          }]), t;
        }();

        e.a = l;
      }, function (t, e, n) {
        n(115), t.exports = n(329);
      }, function (t, e, n) {
        "use strict";

        n(158), n(301), n(303), n(306), n(308), n(310), n(312), n(314), n(316), n(318), n(320), n(322), n(324), n(328);
      }, function (t, e, n) {
        n(159), n(162), n(163), n(164), n(165), n(166), n(167), n(168), n(169), n(170), n(171), n(172), n(173), n(174), n(175), n(176), n(177), n(178), n(179), n(180), n(181), n(182), n(183), n(184), n(185), n(186), n(187), n(188), n(189), n(190), n(191), n(192), n(193), n(194), n(195), n(196), n(197), n(198), n(199), n(200), n(201), n(202), n(203), n(205), n(206), n(207), n(208), n(209), n(210), n(211), n(212), n(213), n(214), n(215), n(216), n(217), n(218), n(219), n(220), n(221), n(222), n(223), n(224), n(225), n(226), n(227), n(228), n(229), n(230), n(231), n(232), n(233), n(234), n(235), n(236), n(237), n(238), n(240), n(241), n(243), n(244), n(245), n(246), n(247), n(248), n(249), n(251), n(252), n(253), n(254), n(255), n(256), n(257), n(258), n(259), n(260), n(261), n(262), n(263), n(106), n(264), n(136), n(265), n(137), n(266), n(267), n(268), n(269), n(138), n(272), n(273), n(274), n(275), n(276), n(277), n(278), n(279), n(280), n(281), n(282), n(283), n(284), n(285), n(286), n(287), n(288), n(289), n(290), n(291), n(292), n(293), n(294), n(295), n(296), n(297), n(298), n(299), n(300), t.exports = n(17);
      }, function (t, e, n) {
        "use strict";

        var r = n(5),
            i = n(28),
            o = n(20),
            u = n(1),
            a = n(26),
            c = n(45).KEY,
            s = n(6),
            f = n(72),
            l = n(60),
            h = n(48),
            p = n(13),
            v = n(87),
            d = n(117),
            y = n(161),
            g = n(75),
            m = n(7),
            b = n(8),
            x = n(30),
            w = n(44),
            _ = n(47),
            k = n(52),
            S = n(120),
            O = n(37),
            E = n(19),
            j = n(50),
            A = O.f,
            R = E.f,
            I = S.f,
            _C = r.Symbol,
            P = r.JSON,
            T = P && P.stringify,
            M = p("_hidden"),
            L = p("toPrimitive"),
            N = {}.propertyIsEnumerable,
            F = f("symbol-registry"),
            D = f("symbols"),
            U = f("op-symbols"),
            z = Object.prototype,
            $ = "function" == typeof _C,
            B = r.QObject,
            V = !B || !B.prototype || !B.prototype.findChild,
            G = o && s(function () {
          return 7 != k(R({}, "a", {
            get: function get() {
              return R(this, "a", {
                value: 7
              }).a;
            }
          })).a;
        }) ? function (t, e, n) {
          var r = A(z, e);
          r && delete z[e], R(t, e, n), r && t !== z && R(z, e, r);
        } : R,
            H = function H(t) {
          var e = D[t] = k(_C.prototype);
          return e._k = t, e;
        },
            W = $ && "symbol" == typeof _C.iterator ? function (t) {
          return "symbol" == typeof t;
        } : function (t) {
          return t instanceof _C;
        },
            q = function t(e, n, r) {
          return e === z && t(U, n, r), m(e), n = w(n, !0), m(r), i(D, n) ? (r.enumerable ? (i(e, M) && e[M][n] && (e[M][n] = !1), r = k(r, {
            enumerable: _(0, !1)
          })) : (i(e, M) || R(e, M, _(1, {})), e[M][n] = !0), G(e, n, r)) : R(e, n, r);
        },
            K = function K(t, e) {
          m(t);

          for (var n, r = y(e = x(e)), i = 0, o = r.length; o > i;) {
            q(t, n = r[i++], e[n]);
          }

          return t;
        },
            J = function J(t) {
          var e = N.call(this, t = w(t, !0));
          return !(this === z && i(D, t) && !i(U, t)) && (!(e || !i(this, t) || !i(D, t) || i(this, M) && this[M][t]) || e);
        },
            Y = function Y(t, e) {
          if (t = x(t), e = w(e, !0), t !== z || !i(D, e) || i(U, e)) {
            var n = A(t, e);
            return !n || !i(D, e) || i(t, M) && t[M][e] || (n.enumerable = !0), n;
          }
        },
            Z = function Z(t) {
          for (var e, n = I(x(t)), r = [], o = 0; n.length > o;) {
            i(D, e = n[o++]) || e == M || e == c || r.push(e);
          }

          return r;
        },
            X = function X(t) {
          for (var e, n = t === z, r = I(n ? U : x(t)), o = [], u = 0; r.length > u;) {
            !i(D, e = r[u++]) || n && !i(z, e) || o.push(D[e]);
          }

          return o;
        };

        $ || (a((_C = function C() {
          if (this instanceof _C) throw TypeError("Symbol is not a constructor!");
          var t = h(arguments.length > 0 ? arguments[0] : void 0);
          return o && V && G(z, t, {
            configurable: !0,
            set: function e(n) {
              this === z && e.call(U, n), i(this, M) && i(this[M], t) && (this[M][t] = !1), G(this, t, _(1, n));
            }
          }), H(t);
        }).prototype, "toString", function () {
          return this._k;
        }), O.f = Y, E.f = q, n(53).f = S.f = Z, n(67).f = J, n(74).f = X, o && !n(49) && a(z, "propertyIsEnumerable", J, !0), v.f = function (t) {
          return H(p(t));
        }), u(u.G + u.W + u.F * !$, {
          Symbol: _C
        });

        for (var Q = "hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","), tt = 0; Q.length > tt;) {
          p(Q[tt++]);
        }

        for (var et = j(p.store), nt = 0; et.length > nt;) {
          d(et[nt++]);
        }

        u(u.S + u.F * !$, "Symbol", {
          for: function _for(t) {
            return i(F, t += "") ? F[t] : F[t] = _C(t);
          },
          keyFor: function keyFor(t) {
            if (!W(t)) throw TypeError(t + " is not a symbol!");

            for (var e in F) {
              if (F[e] === t) return e;
            }
          },
          useSetter: function useSetter() {
            V = !0;
          },
          useSimple: function useSimple() {
            V = !1;
          }
        }), u(u.S + u.F * !$, "Object", {
          create: function create(t, e) {
            return void 0 === e ? k(t) : K(k(t), e);
          },
          defineProperty: q,
          defineProperties: K,
          getOwnPropertyDescriptor: Y,
          getOwnPropertyNames: Z,
          getOwnPropertySymbols: X
        }), P && u(u.S + u.F * (!$ || s(function () {
          var t = _C();

          return "[null]" != T([t]) || "{}" != T({
            a: t
          }) || "{}" != T(Object(t));
        })), "JSON", {
          stringify: function stringify(t) {
            for (var e, n, r = [t], i = 1; arguments.length > i;) {
              r.push(arguments[i++]);
            }

            if (n = e = r[1], (b(e) || void 0 !== t) && !W(t)) return g(e) || (e = function e(t, _e2) {
              if ("function" == typeof n && (_e2 = n.call(this, t, _e2)), !W(_e2)) return _e2;
            }), r[1] = e, T.apply(P, r);
          }
        }), _C.prototype[L] || n(29)(_C.prototype, L, _C.prototype.valueOf), l(_C, "Symbol"), l(Math, "Math", !0), l(r.JSON, "JSON", !0);
      }, function (t, e, n) {
        t.exports = n(72)("native-function-to-string", Function.toString);
      }, function (t, e, n) {
        var r = n(50),
            i = n(74),
            o = n(67);

        t.exports = function (t) {
          var e = r(t),
              n = i.f;
          if (n) for (var u, a = n(t), c = o.f, s = 0; a.length > s;) {
            c.call(t, u = a[s++]) && e.push(u);
          }
          return e;
        };
      }, function (t, e, n) {
        var r = n(1);
        r(r.S, "Object", {
          create: n(52)
        });
      }, function (t, e, n) {
        var r = n(1);
        r(r.S + r.F * !n(20), "Object", {
          defineProperty: n(19).f
        });
      }, function (t, e, n) {
        var r = n(1);
        r(r.S + r.F * !n(20), "Object", {
          defineProperties: n(119)
        });
      }, function (t, e, n) {
        var r = n(30),
            i = n(37).f;
        n(38)("getOwnPropertyDescriptor", function () {
          return function (t, e) {
            return i(r(t), e);
          };
        });
      }, function (t, e, n) {
        var r = n(24),
            i = n(54);
        n(38)("getPrototypeOf", function () {
          return function (t) {
            return i(r(t));
          };
        });
      }, function (t, e, n) {
        var r = n(24),
            i = n(50);
        n(38)("keys", function () {
          return function (t) {
            return i(r(t));
          };
        });
      }, function (t, e, n) {
        n(38)("getOwnPropertyNames", function () {
          return n(120).f;
        });
      }, function (t, e, n) {
        var r = n(8),
            i = n(45).onFreeze;
        n(38)("freeze", function (t) {
          return function (e) {
            return t && r(e) ? t(i(e)) : e;
          };
        });
      }, function (t, e, n) {
        var r = n(8),
            i = n(45).onFreeze;
        n(38)("seal", function (t) {
          return function (e) {
            return t && r(e) ? t(i(e)) : e;
          };
        });
      }, function (t, e, n) {
        var r = n(8),
            i = n(45).onFreeze;
        n(38)("preventExtensions", function (t) {
          return function (e) {
            return t && r(e) ? t(i(e)) : e;
          };
        });
      }, function (t, e, n) {
        var r = n(8);
        n(38)("isFrozen", function (t) {
          return function (e) {
            return !r(e) || !!t && t(e);
          };
        });
      }, function (t, e, n) {
        var r = n(8);
        n(38)("isSealed", function (t) {
          return function (e) {
            return !r(e) || !!t && t(e);
          };
        });
      }, function (t, e, n) {
        var r = n(8);
        n(38)("isExtensible", function (t) {
          return function (e) {
            return !!r(e) && (!t || t(e));
          };
        });
      }, function (t, e, n) {
        var r = n(1);
        r(r.S + r.F, "Object", {
          assign: n(121)
        });
      }, function (t, e, n) {
        var r = n(1);
        r(r.S, "Object", {
          is: n(122)
        });
      }, function (t, e, n) {
        var r = n(1);
        r(r.S, "Object", {
          setPrototypeOf: n(91).set
        });
      }, function (t, e, n) {
        "use strict";

        var r = n(68),
            i = {};
        i[n(13)("toStringTag")] = "z", i + "" != "[object z]" && n(26)(Object.prototype, "toString", function () {
          return "[object " + r(this) + "]";
        }, !0);
      }, function (t, e, n) {
        var r = n(1);
        r(r.P, "Function", {
          bind: n(123)
        });
      }, function (t, e, n) {
        var r = n(19).f,
            i = Function.prototype,
            o = /^\s*function ([^ (]*)/;
        "name" in i || n(20) && r(i, "name", {
          configurable: !0,
          get: function get() {
            try {
              return ("" + this).match(o)[1];
            } catch (t) {
              return "";
            }
          }
        });
      }, function (t, e, n) {
        "use strict";

        var r = n(8),
            i = n(54),
            o = n(13)("hasInstance"),
            u = Function.prototype;
        o in u || n(19).f(u, o, {
          value: function value(t) {
            if ("function" != typeof this || !r(t)) return !1;
            if (!r(this.prototype)) return t instanceof this;

            for (; t = i(t);) {
              if (this.prototype === t) return !0;
            }

            return !1;
          }
        });
      }, function (t, e, n) {
        var r = n(1),
            i = n(125);
        r(r.G + r.F * (parseInt != i), {
          parseInt: i
        });
      }, function (t, e, n) {
        var r = n(1),
            i = n(126);
        r(r.G + r.F * (parseFloat != i), {
          parseFloat: i
        });
      }, function (t, e, n) {
        "use strict";

        var r = n(5),
            i = n(28),
            o = n(40),
            u = n(93),
            a = n(44),
            c = n(6),
            s = n(53).f,
            f = n(37).f,
            l = n(19).f,
            h = n(61).trim,
            _p = r.Number,
            v = _p,
            d = _p.prototype,
            y = "Number" == o(n(52)(d)),
            g = "trim" in String.prototype,
            m = function m(t) {
          var e = a(t, !1);

          if ("string" == typeof e && e.length > 2) {
            var n,
                r,
                i,
                o = (e = g ? e.trim() : h(e, 3)).charCodeAt(0);

            if (43 === o || 45 === o) {
              if (88 === (n = e.charCodeAt(2)) || 120 === n) return NaN;
            } else if (48 === o) {
              switch (e.charCodeAt(1)) {
                case 66:
                case 98:
                  r = 2, i = 49;
                  break;

                case 79:
                case 111:
                  r = 8, i = 55;
                  break;

                default:
                  return +e;
              }

              for (var u, c = e.slice(2), s = 0, f = c.length; s < f; s++) {
                if ((u = c.charCodeAt(s)) < 48 || u > i) return NaN;
              }

              return parseInt(c, r);
            }
          }

          return +e;
        };

        if (!_p(" 0o1") || !_p("0b1") || _p("+0x1")) {
          _p = function p(t) {
            var e = arguments.length < 1 ? 0 : t,
                n = this;
            return n instanceof _p && (y ? c(function () {
              d.valueOf.call(n);
            }) : "Number" != o(n)) ? u(new v(m(e)), n, _p) : m(e);
          };

          for (var b, x = n(20) ? s(v) : "MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","), w = 0; x.length > w; w++) {
            i(v, b = x[w]) && !i(_p, b) && l(_p, b, f(v, b));
          }

          _p.prototype = d, d.constructor = _p, n(26)(r, "Number", _p);
        }
      }, function (t, e, n) {
        "use strict";

        var r = n(1),
            i = n(36),
            o = n(127),
            u = n(94),
            a = 1..toFixed,
            c = Math.floor,
            s = [0, 0, 0, 0, 0, 0],
            f = "Number.toFixed: incorrect invocation!",
            l = function l(t, e) {
          for (var n = -1, r = e; ++n < 6;) {
            r += t * s[n], s[n] = r % 1e7, r = c(r / 1e7);
          }
        },
            h = function h(t) {
          for (var e = 6, n = 0; --e >= 0;) {
            n += s[e], s[e] = c(n / t), n = n % t * 1e7;
          }
        },
            p = function p() {
          for (var t = 6, e = ""; --t >= 0;) {
            if ("" !== e || 0 === t || 0 !== s[t]) {
              var n = String(s[t]);
              e = "" === e ? n : e + u.call("0", 7 - n.length) + n;
            }
          }

          return e;
        },
            v = function t(e, n, r) {
          return 0 === n ? r : n % 2 === 1 ? t(e, n - 1, r * e) : t(e * e, n / 2, r);
        };

        r(r.P + r.F * (!!a && ("0.000" !== 8e-5.toFixed(3) || "1" !== .9.toFixed(0) || "1.25" !== 1.255.toFixed(2) || "1000000000000000128" !== 0xde0b6b3a7640080.toFixed(0)) || !n(6)(function () {
          a.call({});
        })), "Number", {
          toFixed: function toFixed(t) {
            var e,
                n,
                r,
                a,
                c = o(this, f),
                s = i(t),
                d = "",
                y = "0";
            if (s < 0 || s > 20) throw RangeError(f);
            if (c != c) return "NaN";
            if (c <= -1e21 || c >= 1e21) return String(c);
            if (c < 0 && (d = "-", c = -c), c > 1e-21) if (n = (e = function (t) {
              for (var e = 0, n = c * v(2, 69, 1); n >= 4096;) {
                e += 12, n /= 4096;
              }

              for (; n >= 2;) {
                e += 1, n /= 2;
              }

              return e;
            }() - 69) < 0 ? c * v(2, -e, 1) : c / v(2, e, 1), n *= 4503599627370496, (e = 52 - e) > 0) {
              for (l(0, n), r = s; r >= 7;) {
                l(1e7, 0), r -= 7;
              }

              for (l(v(10, r, 1), 0), r = e - 1; r >= 23;) {
                h(1 << 23), r -= 23;
              }

              h(1 << r), l(1, 1), h(2), y = p();
            } else l(0, n), l(1 << -e, 0), y = p() + u.call("0", s);
            return s > 0 ? d + ((a = y.length) <= s ? "0." + u.call("0", s - a) + y : y.slice(0, a - s) + "." + y.slice(a - s)) : d + y;
          }
        });
      }, function (t, e, n) {
        "use strict";

        var r = n(1),
            i = n(6),
            o = n(127),
            u = 1..toPrecision;
        r(r.P + r.F * (i(function () {
          return "1" !== u.call(1, void 0);
        }) || !i(function () {
          u.call({});
        })), "Number", {
          toPrecision: function toPrecision(t) {
            var e = o(this, "Number#toPrecision: incorrect invocation!");
            return void 0 === t ? u.call(e) : u.call(e, t);
          }
        });
      }, function (t, e, n) {
        var r = n(1);
        r(r.S, "Number", {
          EPSILON: Math.pow(2, -52)
        });
      }, function (t, e, n) {
        var r = n(1),
            i = n(5).isFinite;
        r(r.S, "Number", {
          isFinite: function isFinite(t) {
            return "number" == typeof t && i(t);
          }
        });
      }, function (t, e, n) {
        var r = n(1);
        r(r.S, "Number", {
          isInteger: n(128)
        });
      }, function (t, e, n) {
        var r = n(1);
        r(r.S, "Number", {
          isNaN: function isNaN(t) {
            return t != t;
          }
        });
      }, function (t, e, n) {
        var r = n(1),
            i = n(128),
            o = Math.abs;
        r(r.S, "Number", {
          isSafeInteger: function isSafeInteger(t) {
            return i(t) && o(t) <= 9007199254740991;
          }
        });
      }, function (t, e, n) {
        var r = n(1);
        r(r.S, "Number", {
          MAX_SAFE_INTEGER: 9007199254740991
        });
      }, function (t, e, n) {
        var r = n(1);
        r(r.S, "Number", {
          MIN_SAFE_INTEGER: -9007199254740991
        });
      }, function (t, e, n) {
        var r = n(1),
            i = n(126);
        r(r.S + r.F * (Number.parseFloat != i), "Number", {
          parseFloat: i
        });
      }, function (t, e, n) {
        var r = n(1),
            i = n(125);
        r(r.S + r.F * (Number.parseInt != i), "Number", {
          parseInt: i
        });
      }, function (t, e, n) {
        var r = n(1),
            i = n(129),
            o = Math.sqrt,
            u = Math.acosh;
        r(r.S + r.F * !(u && 710 == Math.floor(u(Number.MAX_VALUE)) && u(1 / 0) == 1 / 0), "Math", {
          acosh: function acosh(t) {
            return (t = +t) < 1 ? NaN : t > 94906265.62425156 ? Math.log(t) + Math.LN2 : i(t - 1 + o(t - 1) * o(t + 1));
          }
        });
      }, function (t, e, n) {
        var r = n(1),
            i = Math.asinh;
        r(r.S + r.F * !(i && 1 / i(0) > 0), "Math", {
          asinh: function t(e) {
            return isFinite(e = +e) && 0 != e ? e < 0 ? -t(-e) : Math.log(e + Math.sqrt(e * e + 1)) : e;
          }
        });
      }, function (t, e, n) {
        var r = n(1),
            i = Math.atanh;
        r(r.S + r.F * !(i && 1 / i(-0) < 0), "Math", {
          atanh: function atanh(t) {
            return 0 == (t = +t) ? t : Math.log((1 + t) / (1 - t)) / 2;
          }
        });
      }, function (t, e, n) {
        var r = n(1),
            i = n(95);
        r(r.S, "Math", {
          cbrt: function cbrt(t) {
            return i(t = +t) * Math.pow(Math.abs(t), 1 / 3);
          }
        });
      }, function (t, e, n) {
        var r = n(1);
        r(r.S, "Math", {
          clz32: function clz32(t) {
            return (t >>>= 0) ? 31 - Math.floor(Math.log(t + .5) * Math.LOG2E) : 32;
          }
        });
      }, function (t, e, n) {
        var r = n(1),
            i = Math.exp;
        r(r.S, "Math", {
          cosh: function cosh(t) {
            return (i(t = +t) + i(-t)) / 2;
          }
        });
      }, function (t, e, n) {
        var r = n(1),
            i = n(96);
        r(r.S + r.F * (i != Math.expm1), "Math", {
          expm1: i
        });
      }, function (t, e, n) {
        var r = n(1);
        r(r.S, "Math", {
          fround: n(204)
        });
      }, function (t, e, n) {
        var r = n(95),
            i = Math.pow,
            o = i(2, -52),
            u = i(2, -23),
            a = i(2, 127) * (2 - u),
            c = i(2, -126);

        t.exports = Math.fround || function (t) {
          var e,
              n,
              i = Math.abs(t),
              s = r(t);
          return i < c ? s * (i / c / u + 1 / o - 1 / o) * c * u : (n = (e = (1 + u / o) * i) - (e - i)) > a || n != n ? s * (1 / 0) : s * n;
        };
      }, function (t, e, n) {
        var r = n(1),
            i = Math.abs;
        r(r.S, "Math", {
          hypot: function hypot(t, e) {
            for (var n, r, o = 0, u = 0, a = arguments.length, c = 0; u < a;) {
              c < (n = i(arguments[u++])) ? (o = o * (r = c / n) * r + 1, c = n) : o += n > 0 ? (r = n / c) * r : n;
            }

            return c === 1 / 0 ? 1 / 0 : c * Math.sqrt(o);
          }
        });
      }, function (t, e, n) {
        var r = n(1),
            i = Math.imul;
        r(r.S + r.F * n(6)(function () {
          return -5 != i(4294967295, 5) || 2 != i.length;
        }), "Math", {
          imul: function imul(t, e) {
            var n = +t,
                r = +e,
                i = 65535 & n,
                o = 65535 & r;
            return 0 | i * o + ((65535 & n >>> 16) * o + i * (65535 & r >>> 16) << 16 >>> 0);
          }
        });
      }, function (t, e, n) {
        var r = n(1);
        r(r.S, "Math", {
          log10: function log10(t) {
            return Math.log(t) * Math.LOG10E;
          }
        });
      }, function (t, e, n) {
        var r = n(1);
        r(r.S, "Math", {
          log1p: n(129)
        });
      }, function (t, e, n) {
        var r = n(1);
        r(r.S, "Math", {
          log2: function log2(t) {
            return Math.log(t) / Math.LN2;
          }
        });
      }, function (t, e, n) {
        var r = n(1);
        r(r.S, "Math", {
          sign: n(95)
        });
      }, function (t, e, n) {
        var r = n(1),
            i = n(96),
            o = Math.exp;
        r(r.S + r.F * n(6)(function () {
          return -2e-17 != !Math.sinh(-2e-17);
        }), "Math", {
          sinh: function sinh(t) {
            return Math.abs(t = +t) < 1 ? (i(t) - i(-t)) / 2 : (o(t - 1) - o(-t - 1)) * (Math.E / 2);
          }
        });
      }, function (t, e, n) {
        var r = n(1),
            i = n(96),
            o = Math.exp;
        r(r.S, "Math", {
          tanh: function tanh(t) {
            var e = i(t = +t),
                n = i(-t);
            return e == 1 / 0 ? 1 : n == 1 / 0 ? -1 : (e - n) / (o(t) + o(-t));
          }
        });
      }, function (t, e, n) {
        var r = n(1);
        r(r.S, "Math", {
          trunc: function trunc(t) {
            return (t > 0 ? Math.floor : Math.ceil)(t);
          }
        });
      }, function (t, e, n) {
        var r = n(1),
            i = n(51),
            o = String.fromCharCode,
            u = String.fromCodePoint;
        r(r.S + r.F * (!!u && 1 != u.length), "String", {
          fromCodePoint: function fromCodePoint(t) {
            for (var e, n = [], r = arguments.length, u = 0; r > u;) {
              if (e = +arguments[u++], i(e, 1114111) !== e) throw RangeError(e + " is not a valid code point");
              n.push(e < 65536 ? o(e) : o(55296 + ((e -= 65536) >> 10), e % 1024 + 56320));
            }

            return n.join("");
          }
        });
      }, function (t, e, n) {
        var r = n(1),
            i = n(30),
            o = n(16);
        r(r.S, "String", {
          raw: function raw(t) {
            for (var e = i(t.raw), n = o(e.length), r = arguments.length, u = [], a = 0; n > a;) {
              u.push(String(e[a++])), a < r && u.push(String(arguments[a]));
            }

            return u.join("");
          }
        });
      }, function (t, e, n) {
        "use strict";

        n(61)("trim", function (t) {
          return function () {
            return t(this, 3);
          };
        });
      }, function (t, e, n) {
        "use strict";

        var r = n(97)(!0);
        n(98)(String, "String", function (t) {
          this._t = String(t), this._i = 0;
        }, function () {
          var t,
              e = this._t,
              n = this._i;
          return n >= e.length ? {
            value: void 0,
            done: !0
          } : (t = r(e, n), this._i += t.length, {
            value: t,
            done: !1
          });
        });
      }, function (t, e, n) {
        "use strict";

        var r = n(1),
            i = n(97)(!1);
        r(r.P, "String", {
          codePointAt: function codePointAt(t) {
            return i(this, t);
          }
        });
      }, function (t, e, n) {
        "use strict";

        var r = n(1),
            i = n(16),
            o = n(99),
            u = "".endsWith;
        r(r.P + r.F * n(101)("endsWith"), "String", {
          endsWith: function endsWith(t) {
            var e = o(this, t, "endsWith"),
                n = arguments.length > 1 ? arguments[1] : void 0,
                r = i(e.length),
                a = void 0 === n ? r : Math.min(i(n), r),
                c = String(t);
            return u ? u.call(e, c, a) : e.slice(a - c.length, a) === c;
          }
        });
      }, function (t, e, n) {
        "use strict";

        var r = n(1),
            i = n(99);
        r(r.P + r.F * n(101)("includes"), "String", {
          includes: function includes(t) {
            return !!~i(this, t, "includes").indexOf(t, arguments.length > 1 ? arguments[1] : void 0);
          }
        });
      }, function (t, e, n) {
        var r = n(1);
        r(r.P, "String", {
          repeat: n(94)
        });
      }, function (t, e, n) {
        "use strict";

        var r = n(1),
            i = n(16),
            o = n(99),
            u = "".startsWith;
        r(r.P + r.F * n(101)("startsWith"), "String", {
          startsWith: function startsWith(t) {
            var e = o(this, t, "startsWith"),
                n = i(Math.min(arguments.length > 1 ? arguments[1] : void 0, e.length)),
                r = String(t);
            return u ? u.call(e, r, n) : e.slice(n, n + r.length) === r;
          }
        });
      }, function (t, e, n) {
        "use strict";

        n(27)("anchor", function (t) {
          return function (e) {
            return t(this, "a", "name", e);
          };
        });
      }, function (t, e, n) {
        "use strict";

        n(27)("big", function (t) {
          return function () {
            return t(this, "big", "", "");
          };
        });
      }, function (t, e, n) {
        "use strict";

        n(27)("blink", function (t) {
          return function () {
            return t(this, "blink", "", "");
          };
        });
      }, function (t, e, n) {
        "use strict";

        n(27)("bold", function (t) {
          return function () {
            return t(this, "b", "", "");
          };
        });
      }, function (t, e, n) {
        "use strict";

        n(27)("fixed", function (t) {
          return function () {
            return t(this, "tt", "", "");
          };
        });
      }, function (t, e, n) {
        "use strict";

        n(27)("fontcolor", function (t) {
          return function (e) {
            return t(this, "font", "color", e);
          };
        });
      }, function (t, e, n) {
        "use strict";

        n(27)("fontsize", function (t) {
          return function (e) {
            return t(this, "font", "size", e);
          };
        });
      }, function (t, e, n) {
        "use strict";

        n(27)("italics", function (t) {
          return function () {
            return t(this, "i", "", "");
          };
        });
      }, function (t, e, n) {
        "use strict";

        n(27)("link", function (t) {
          return function (e) {
            return t(this, "a", "href", e);
          };
        });
      }, function (t, e, n) {
        "use strict";

        n(27)("small", function (t) {
          return function () {
            return t(this, "small", "", "");
          };
        });
      }, function (t, e, n) {
        "use strict";

        n(27)("strike", function (t) {
          return function () {
            return t(this, "strike", "", "");
          };
        });
      }, function (t, e, n) {
        "use strict";

        n(27)("sub", function (t) {
          return function () {
            return t(this, "sub", "", "");
          };
        });
      }, function (t, e, n) {
        "use strict";

        n(27)("sup", function (t) {
          return function () {
            return t(this, "sup", "", "");
          };
        });
      }, function (t, e, n) {
        var r = n(1);
        r(r.S, "Date", {
          now: function now() {
            return new Date().getTime();
          }
        });
      }, function (t, e, n) {
        "use strict";

        var r = n(1),
            i = n(24),
            o = n(44);
        r(r.P + r.F * n(6)(function () {
          return null !== new Date(NaN).toJSON() || 1 !== Date.prototype.toJSON.call({
            toISOString: function toISOString() {
              return 1;
            }
          });
        }), "Date", {
          toJSON: function toJSON(t) {
            var e = i(this),
                n = o(e);
            return "number" != typeof n || isFinite(n) ? e.toISOString() : null;
          }
        });
      }, function (t, e, n) {
        var r = n(1),
            i = n(239);
        r(r.P + r.F * (Date.prototype.toISOString !== i), "Date", {
          toISOString: i
        });
      }, function (t, e, n) {
        "use strict";

        var r = n(6),
            i = Date.prototype.getTime,
            o = Date.prototype.toISOString,
            u = function u(t) {
          return t > 9 ? t : "0" + t;
        };

        t.exports = r(function () {
          return "0385-07-25T07:06:39.999Z" != o.call(new Date(-5e13 - 1));
        }) || !r(function () {
          o.call(new Date(NaN));
        }) ? function () {
          if (!isFinite(i.call(this))) throw RangeError("Invalid time value");
          var t = this,
              e = t.getUTCFullYear(),
              n = t.getUTCMilliseconds(),
              r = e < 0 ? "-" : e > 9999 ? "+" : "";
          return r + ("00000" + Math.abs(e)).slice(r ? -6 : -4) + "-" + u(t.getUTCMonth() + 1) + "-" + u(t.getUTCDate()) + "T" + u(t.getUTCHours()) + ":" + u(t.getUTCMinutes()) + ":" + u(t.getUTCSeconds()) + "." + (n > 99 ? n : "0" + u(n)) + "Z";
        } : o;
      }, function (t, e, n) {
        var r = Date.prototype,
            i = r.toString,
            o = r.getTime;
        new Date(NaN) + "" != "Invalid Date" && n(26)(r, "toString", function () {
          var t = o.call(this);
          return t === t ? i.call(this) : "Invalid Date";
        });
      }, function (t, e, n) {
        var r = n(13)("toPrimitive"),
            i = Date.prototype;
        r in i || n(29)(i, r, n(242));
      }, function (t, e, n) {
        "use strict";

        var r = n(7),
            i = n(44);

        t.exports = function (t) {
          if ("string" !== t && "number" !== t && "default" !== t) throw TypeError("Incorrect hint");
          return i(r(this), "number" != t);
        };
      }, function (t, e, n) {
        var r = n(1);
        r(r.S, "Array", {
          isArray: n(75)
        });
      }, function (t, e, n) {
        "use strict";

        var r = n(34),
            i = n(1),
            o = n(24),
            u = n(131),
            a = n(102),
            c = n(16),
            s = n(103),
            f = n(104);
        i(i.S + i.F * !n(76)(function (t) {
          Array.from(t);
        }), "Array", {
          from: function from(t) {
            var e,
                n,
                i,
                l,
                h = o(t),
                p = "function" == typeof this ? this : Array,
                v = arguments.length,
                d = v > 1 ? arguments[1] : void 0,
                y = void 0 !== d,
                g = 0,
                m = f(h);
            if (y && (d = r(d, v > 2 ? arguments[2] : void 0, 2)), void 0 == m || p == Array && a(m)) for (n = new p(e = c(h.length)); e > g; g++) {
              s(n, g, y ? d(h[g], g) : h[g]);
            } else for (l = m.call(h), n = new p(); !(i = l.next()).done; g++) {
              s(n, g, y ? u(l, d, [i.value, g], !0) : i.value);
            }
            return n.length = g, n;
          }
        });
      }, function (t, e, n) {
        "use strict";

        var r = n(1),
            i = n(103);
        r(r.S + r.F * n(6)(function () {
          function t() {}

          return !(Array.of.call(t) instanceof t);
        }), "Array", {
          of: function of() {
            for (var t = 0, e = arguments.length, n = new ("function" == typeof this ? this : Array)(e); e > t;) {
              i(n, t, arguments[t++]);
            }

            return n.length = e, n;
          }
        });
      }, function (t, e, n) {
        "use strict";

        var r = n(1),
            i = n(30),
            o = [].join;
        r(r.P + r.F * (n(66) != Object || !n(32)(o)), "Array", {
          join: function join(t) {
            return o.call(i(this), void 0 === t ? "," : t);
          }
        });
      }, function (t, e, n) {
        "use strict";

        var r = n(1),
            i = n(90),
            o = n(40),
            u = n(51),
            a = n(16),
            c = [].slice;
        r(r.P + r.F * n(6)(function () {
          i && c.call(i);
        }), "Array", {
          slice: function slice(t, e) {
            var n = a(this.length),
                r = o(this);
            if (e = void 0 === e ? n : e, "Array" == r) return c.call(this, t, e);

            for (var i = u(t, n), s = u(e, n), f = a(s - i), l = new Array(f), h = 0; h < f; h++) {
              l[h] = "String" == r ? this.charAt(i + h) : this[i + h];
            }

            return l;
          }
        });
      }, function (t, e, n) {
        "use strict";

        var r = n(1),
            i = n(35),
            o = n(24),
            u = n(6),
            a = [].sort,
            c = [1, 2, 3];
        r(r.P + r.F * (u(function () {
          c.sort(void 0);
        }) || !u(function () {
          c.sort(null);
        }) || !n(32)(a)), "Array", {
          sort: function sort(t) {
            return void 0 === t ? a.call(o(this)) : a.call(o(this), i(t));
          }
        });
      }, function (t, e, n) {
        "use strict";

        var r = n(1),
            i = n(39)(0),
            o = n(32)([].forEach, !0);
        r(r.P + r.F * !o, "Array", {
          forEach: function forEach(t) {
            return i(this, t, arguments[1]);
          }
        });
      }, function (t, e, n) {
        var r = n(8),
            i = n(75),
            o = n(13)("species");

        t.exports = function (t) {
          var e;
          return i(t) && ("function" != typeof (e = t.constructor) || e !== Array && !i(e.prototype) || (e = void 0), r(e) && null === (e = e[o]) && (e = void 0)), void 0 === e ? Array : e;
        };
      }, function (t, e, n) {
        "use strict";

        var r = n(1),
            i = n(39)(1);
        r(r.P + r.F * !n(32)([].map, !0), "Array", {
          map: function map(t) {
            return i(this, t, arguments[1]);
          }
        });
      }, function (t, e, n) {
        "use strict";

        var r = n(1),
            i = n(39)(2);
        r(r.P + r.F * !n(32)([].filter, !0), "Array", {
          filter: function filter(t) {
            return i(this, t, arguments[1]);
          }
        });
      }, function (t, e, n) {
        "use strict";

        var r = n(1),
            i = n(39)(3);
        r(r.P + r.F * !n(32)([].some, !0), "Array", {
          some: function some(t) {
            return i(this, t, arguments[1]);
          }
        });
      }, function (t, e, n) {
        "use strict";

        var r = n(1),
            i = n(39)(4);
        r(r.P + r.F * !n(32)([].every, !0), "Array", {
          every: function every(t) {
            return i(this, t, arguments[1]);
          }
        });
      }, function (t, e, n) {
        "use strict";

        var r = n(1),
            i = n(133);
        r(r.P + r.F * !n(32)([].reduce, !0), "Array", {
          reduce: function reduce(t) {
            return i(this, t, arguments.length, arguments[1], !1);
          }
        });
      }, function (t, e, n) {
        "use strict";

        var r = n(1),
            i = n(133);
        r(r.P + r.F * !n(32)([].reduceRight, !0), "Array", {
          reduceRight: function reduceRight(t) {
            return i(this, t, arguments.length, arguments[1], !0);
          }
        });
      }, function (t, e, n) {
        "use strict";

        var r = n(1),
            i = n(73)(!1),
            o = [].indexOf,
            u = !!o && 1 / [1].indexOf(1, -0) < 0;
        r(r.P + r.F * (u || !n(32)(o)), "Array", {
          indexOf: function indexOf(t) {
            return u ? o.apply(this, arguments) || 0 : i(this, t, arguments[1]);
          }
        });
      }, function (t, e, n) {
        "use strict";

        var r = n(1),
            i = n(30),
            o = n(36),
            u = n(16),
            a = [].lastIndexOf,
            c = !!a && 1 / [1].lastIndexOf(1, -0) < 0;
        r(r.P + r.F * (c || !n(32)(a)), "Array", {
          lastIndexOf: function lastIndexOf(t) {
            if (c) return a.apply(this, arguments) || 0;
            var e = i(this),
                n = u(e.length),
                r = n - 1;

            for (arguments.length > 1 && (r = Math.min(r, o(arguments[1]))), r < 0 && (r = n + r); r >= 0; r--) {
              if (r in e && e[r] === t) return r || 0;
            }

            return -1;
          }
        });
      }, function (t, e, n) {
        var r = n(1);
        r(r.P, "Array", {
          copyWithin: n(134)
        }), n(55)("copyWithin");
      }, function (t, e, n) {
        var r = n(1);
        r(r.P, "Array", {
          fill: n(105)
        }), n(55)("fill");
      }, function (t, e, n) {
        "use strict";

        var r = n(1),
            i = n(39)(5),
            o = !0;
        "find" in [] && Array(1).find(function () {
          o = !1;
        }), r(r.P + r.F * o, "Array", {
          find: function find(t) {
            return i(this, t, arguments.length > 1 ? arguments[1] : void 0);
          }
        }), n(55)("find");
      }, function (t, e, n) {
        "use strict";

        var r = n(1),
            i = n(39)(6),
            o = "findIndex",
            u = !0;
        o in [] && Array(1)[o](function () {
          u = !1;
        }), r(r.P + r.F * u, "Array", {
          findIndex: function findIndex(t) {
            return i(this, t, arguments.length > 1 ? arguments[1] : void 0);
          }
        }), n(55)(o);
      }, function (t, e, n) {
        n(63)("Array");
      }, function (t, e, n) {
        var r = n(5),
            i = n(93),
            o = n(19).f,
            u = n(53).f,
            a = n(100),
            c = n(77),
            _s = r.RegExp,
            f = _s,
            l = _s.prototype,
            h = /a/g,
            p = /a/g,
            v = new _s(h) !== h;

        if (n(20) && (!v || n(6)(function () {
          return p[n(13)("match")] = !1, _s(h) != h || _s(p) == p || "/a/i" != _s(h, "i");
        }))) {
          _s = function s(t, e) {
            var n = this instanceof _s,
                r = a(t),
                o = void 0 === e;
            return !n && r && t.constructor === _s && o ? t : i(v ? new f(r && !o ? t.source : t, e) : f((r = t instanceof _s) ? t.source : t, r && o ? c.call(t) : e), n ? this : l, _s);
          };

          for (var d = function d(t) {
            (t in _s) || o(_s, t, {
              configurable: !0,
              get: function get() {
                return f[t];
              },
              set: function set(e) {
                f[t] = e;
              }
            });
          }, y = u(f), g = 0; y.length > g;) {
            d(y[g++]);
          }

          l.constructor = _s, _s.prototype = l, n(26)(r, "RegExp", _s);
        }

        n(63)("RegExp");
      }, function (t, e, n) {
        "use strict";

        n(137);

        var r = n(7),
            i = n(77),
            o = n(20),
            u = /./.toString,
            a = function a(t) {
          n(26)(RegExp.prototype, "toString", t, !0);
        };

        n(6)(function () {
          return "/a/b" != u.call({
            source: "a",
            flags: "b"
          });
        }) ? a(function () {
          var t = r(this);
          return "/".concat(t.source, "/", "flags" in t ? t.flags : !o && t instanceof RegExp ? i.call(t) : void 0);
        }) : "toString" != u.name && a(function () {
          return u.call(this);
        });
      }, function (t, e, n) {
        "use strict";

        var r = n(7),
            i = n(16),
            o = n(108),
            u = n(78);
        n(79)("match", 1, function (t, e, n, a) {
          return [function (n) {
            var r = t(this),
                i = void 0 == n ? void 0 : n[e];
            return void 0 !== i ? i.call(n, r) : new RegExp(n)[e](String(r));
          }, function (t) {
            var e = a(n, t, this);
            if (e.done) return e.value;
            var c = r(t),
                s = String(this);
            if (!c.global) return u(c, s);
            var f = c.unicode;
            c.lastIndex = 0;

            for (var l, h = [], p = 0; null !== (l = u(c, s));) {
              var v = String(l[0]);
              h[p] = v, "" === v && (c.lastIndex = o(s, i(c.lastIndex), f)), p++;
            }

            return 0 === p ? null : h;
          }];
        });
      }, function (t, e, n) {
        "use strict";

        var r = n(7),
            i = n(24),
            o = n(16),
            u = n(36),
            a = n(108),
            c = n(78),
            s = Math.max,
            f = Math.min,
            l = Math.floor,
            h = /\$([$&`']|\d\d?|<[^>]*>)/g,
            p = /\$([$&`']|\d\d?)/g;
        n(79)("replace", 2, function (t, e, n, v) {
          return [function (r, i) {
            var o = t(this),
                u = void 0 == r ? void 0 : r[e];
            return void 0 !== u ? u.call(r, o, i) : n.call(String(o), r, i);
          }, function (t, e) {
            var i = v(n, t, this, e);
            if (i.done) return i.value;
            var l = r(t),
                h = String(this),
                p = "function" === typeof e;
            p || (e = String(e));
            var y = l.global;

            if (y) {
              var g = l.unicode;
              l.lastIndex = 0;
            }

            for (var m = [];;) {
              var b = c(l, h);
              if (null === b) break;
              if (m.push(b), !y) break;
              "" === String(b[0]) && (l.lastIndex = a(h, o(l.lastIndex), g));
            }

            for (var x, w = "", _ = 0, k = 0; k < m.length; k++) {
              b = m[k];

              for (var S = String(b[0]), O = s(f(u(b.index), h.length), 0), E = [], j = 1; j < b.length; j++) {
                E.push(void 0 === (x = b[j]) ? x : String(x));
              }

              var A = b.groups;

              if (p) {
                var R = [S].concat(E, O, h);
                void 0 !== A && R.push(A);
                var I = String(e.apply(void 0, R));
              } else I = d(S, h, O, E, A, e);

              O >= _ && (w += h.slice(_, O) + I, _ = O + S.length);
            }

            return w + h.slice(_);
          }];

          function d(t, e, r, o, u, a) {
            var c = r + t.length,
                s = o.length,
                f = p;
            return void 0 !== u && (u = i(u), f = h), n.call(a, f, function (n, i) {
              var a;

              switch (i.charAt(0)) {
                case "$":
                  return "$";

                case "&":
                  return t;

                case "`":
                  return e.slice(0, r);

                case "'":
                  return e.slice(c);

                case "<":
                  a = u[i.slice(1, -1)];
                  break;

                default:
                  var f = +i;
                  if (0 === f) return n;

                  if (f > s) {
                    var h = l(f / 10);
                    return 0 === h ? n : h <= s ? void 0 === o[h - 1] ? i.charAt(1) : o[h - 1] + i.charAt(1) : n;
                  }

                  a = o[f - 1];
              }

              return void 0 === a ? "" : a;
            });
          }
        });
      }, function (t, e, n) {
        "use strict";

        var r = n(7),
            i = n(122),
            o = n(78);
        n(79)("search", 1, function (t, e, n, u) {
          return [function (n) {
            var r = t(this),
                i = void 0 == n ? void 0 : n[e];
            return void 0 !== i ? i.call(n, r) : new RegExp(n)[e](String(r));
          }, function (t) {
            var e = u(n, t, this);
            if (e.done) return e.value;
            var a = r(t),
                c = String(this),
                s = a.lastIndex;
            i(s, 0) || (a.lastIndex = 0);
            var f = o(a, c);
            return i(a.lastIndex, s) || (a.lastIndex = s), null === f ? -1 : f.index;
          }];
        });
      }, function (t, e, n) {
        "use strict";

        var r = n(100),
            i = n(7),
            o = n(69),
            u = n(108),
            a = n(16),
            c = n(78),
            s = n(107),
            f = n(6),
            l = Math.min,
            h = [].push,
            p = !f(function () {
          RegExp(4294967295, "y");
        });
        n(79)("split", 2, function (t, e, n, f) {
          var v;
          return v = "c" == "abbc".split(/(b)*/)[1] || 4 != "test".split(/(?:)/, -1).length || 2 != "ab".split(/(?:ab)*/).length || 4 != ".".split(/(.?)(.?)/).length || ".".split(/()()/).length > 1 || "".split(/.?/).length ? function (t, e) {
            var i = String(this);
            if (void 0 === t && 0 === e) return [];
            if (!r(t)) return n.call(i, t, e);

            for (var o, u, a, c = [], f = (t.ignoreCase ? "i" : "") + (t.multiline ? "m" : "") + (t.unicode ? "u" : "") + (t.sticky ? "y" : ""), l = 0, p = void 0 === e ? 4294967295 : e >>> 0, v = new RegExp(t.source, f + "g"); (o = s.call(v, i)) && !((u = v.lastIndex) > l && (c.push(i.slice(l, o.index)), o.length > 1 && o.index < i.length && h.apply(c, o.slice(1)), a = o[0].length, l = u, c.length >= p));) {
              v.lastIndex === o.index && v.lastIndex++;
            }

            return l === i.length ? !a && v.test("") || c.push("") : c.push(i.slice(l)), c.length > p ? c.slice(0, p) : c;
          } : "0".split(void 0, 0).length ? function (t, e) {
            return void 0 === t && 0 === e ? [] : n.call(this, t, e);
          } : n, [function (n, r) {
            var i = t(this),
                o = void 0 == n ? void 0 : n[e];
            return void 0 !== o ? o.call(n, i, r) : v.call(String(i), n, r);
          }, function (t, e) {
            var r = f(v, t, this, e, v !== n);
            if (r.done) return r.value;
            var s = i(t),
                h = String(this),
                d = o(s, RegExp),
                y = s.unicode,
                g = (s.ignoreCase ? "i" : "") + (s.multiline ? "m" : "") + (s.unicode ? "u" : "") + (p ? "y" : "g"),
                m = new d(p ? s : "^(?:" + s.source + ")", g),
                b = void 0 === e ? 4294967295 : e >>> 0;
            if (0 === b) return [];
            if (0 === h.length) return null === c(m, h) ? [h] : [];

            for (var x = 0, w = 0, _ = []; w < h.length;) {
              m.lastIndex = p ? w : 0;
              var k,
                  S = c(m, p ? h : h.slice(w));
              if (null === S || (k = l(a(m.lastIndex + (p ? 0 : w)), h.length)) === x) w = u(h, w, y);else {
                if (_.push(h.slice(x, w)), _.length === b) return _;

                for (var O = 1; O <= S.length - 1; O++) {
                  if (_.push(S[O]), _.length === b) return _;
                }

                w = x = k;
              }
            }

            return _.push(h.slice(x)), _;
          }];
        });
      }, function (t, e, n) {
        var r = n(5),
            i = n(109).set,
            o = r.MutationObserver || r.WebKitMutationObserver,
            u = r.process,
            a = r.Promise,
            c = "process" == n(40)(u);

        t.exports = function () {
          var t,
              e,
              n,
              s = function s() {
            var r, i;

            for (c && (r = u.domain) && r.exit(); t;) {
              i = t.fn, t = t.next;

              try {
                i();
              } catch (o) {
                throw t ? n() : e = void 0, o;
              }
            }

            e = void 0, r && r.enter();
          };

          if (c) n = function n() {
            u.nextTick(s);
          };else if (!o || r.navigator && r.navigator.standalone) {
            if (a && a.resolve) {
              var f = a.resolve(void 0);

              n = function n() {
                f.then(s);
              };
            } else n = function n() {
              i.call(r, s);
            };
          } else {
            var l = !0,
                h = document.createTextNode("");
            new o(s).observe(h, {
              characterData: !0
            }), n = function n() {
              h.data = l = !l;
            };
          }
          return function (r) {
            var i = {
              fn: r,
              next: void 0
            };
            e && (e.next = i), t || (t = i, n()), e = i;
          };
        };
      }, function (t, e) {
        t.exports = function (t) {
          try {
            return {
              e: !1,
              v: t()
            };
          } catch (e) {
            return {
              e: !0,
              v: e
            };
          }
        };
      }, function (t, e, n) {
        "use strict";

        var r = n(141),
            i = n(56);
        t.exports = n(82)("Map", function (t) {
          return function () {
            return t(this, arguments.length > 0 ? arguments[0] : void 0);
          };
        }, {
          get: function get(t) {
            var e = r.getEntry(i(this, "Map"), t);
            return e && e.v;
          },
          set: function set(t, e) {
            return r.def(i(this, "Map"), 0 === t ? 0 : t, e);
          }
        }, r, !0);
      }, function (t, e, n) {
        "use strict";

        var r = n(141),
            i = n(56);
        t.exports = n(82)("Set", function (t) {
          return function () {
            return t(this, arguments.length > 0 ? arguments[0] : void 0);
          };
        }, {
          add: function add(t) {
            return r.def(i(this, "Set"), t = 0 === t ? 0 : t, t);
          }
        }, r);
      }, function (t, e, n) {
        "use strict";

        var r,
            i = n(5),
            o = n(39)(0),
            u = n(26),
            a = n(45),
            c = n(121),
            s = n(142),
            f = n(8),
            l = n(56),
            h = n(56),
            p = !i.ActiveXObject && "ActiveXObject" in i,
            v = a.getWeak,
            d = Object.isExtensible,
            y = s.ufstore,
            g = function g(t) {
          return function () {
            return t(this, arguments.length > 0 ? arguments[0] : void 0);
          };
        },
            m = {
          get: function get(t) {
            if (f(t)) {
              var e = v(t);
              return !0 === e ? y(l(this, "WeakMap")).get(t) : e ? e[this._i] : void 0;
            }
          },
          set: function set(t, e) {
            return s.def(l(this, "WeakMap"), t, e);
          }
        },
            b = t.exports = n(82)("WeakMap", g, m, s, !0, !0);

        h && p && (c((r = s.getConstructor(g, "WeakMap")).prototype, m), a.NEED = !0, o(["delete", "has", "get", "set"], function (t) {
          var e = b.prototype,
              n = e[t];
          u(e, t, function (e, i) {
            if (f(e) && !d(e)) {
              this._f || (this._f = new r());

              var o = this._f[t](e, i);

              return "set" == t ? this : o;
            }

            return n.call(this, e, i);
          });
        }));
      }, function (t, e, n) {
        "use strict";

        var r = n(142),
            i = n(56);
        n(82)("WeakSet", function (t) {
          return function () {
            return t(this, arguments.length > 0 ? arguments[0] : void 0);
          };
        }, {
          add: function add(t) {
            return r.def(i(this, "WeakSet"), t, !0);
          }
        }, r, !1, !0);
      }, function (t, e, n) {
        "use strict";

        var r = n(1),
            i = n(83),
            o = n(110),
            u = n(7),
            a = n(51),
            c = n(16),
            s = n(8),
            f = n(5).ArrayBuffer,
            l = n(69),
            h = o.ArrayBuffer,
            p = o.DataView,
            v = i.ABV && f.isView,
            d = h.prototype.slice,
            y = i.VIEW;
        r(r.G + r.W + r.F * (f !== h), {
          ArrayBuffer: h
        }), r(r.S + r.F * !i.CONSTR, "ArrayBuffer", {
          isView: function isView(t) {
            return v && v(t) || s(t) && y in t;
          }
        }), r(r.P + r.U + r.F * n(6)(function () {
          return !new h(2).slice(1, void 0).byteLength;
        }), "ArrayBuffer", {
          slice: function slice(t, e) {
            if (void 0 !== d && void 0 === e) return d.call(u(this), t);

            for (var n = u(this).byteLength, r = a(t, n), i = a(void 0 === e ? n : e, n), o = new (l(this, h))(c(i - r)), s = new p(this), f = new p(o), v = 0; r < i;) {
              f.setUint8(v++, s.getUint8(r++));
            }

            return o;
          }
        }), n(63)("ArrayBuffer");
      }, function (t, e, n) {
        var r = n(1);
        r(r.G + r.W + r.F * !n(83).ABV, {
          DataView: n(110).DataView
        });
      }, function (t, e, n) {
        n(42)("Int8", 1, function (t) {
          return function (e, n, r) {
            return t(this, e, n, r);
          };
        });
      }, function (t, e, n) {
        n(42)("Uint8", 1, function (t) {
          return function (e, n, r) {
            return t(this, e, n, r);
          };
        });
      }, function (t, e, n) {
        n(42)("Uint8", 1, function (t) {
          return function (e, n, r) {
            return t(this, e, n, r);
          };
        }, !0);
      }, function (t, e, n) {
        n(42)("Int16", 2, function (t) {
          return function (e, n, r) {
            return t(this, e, n, r);
          };
        });
      }, function (t, e, n) {
        n(42)("Uint16", 2, function (t) {
          return function (e, n, r) {
            return t(this, e, n, r);
          };
        });
      }, function (t, e, n) {
        n(42)("Int32", 4, function (t) {
          return function (e, n, r) {
            return t(this, e, n, r);
          };
        });
      }, function (t, e, n) {
        n(42)("Uint32", 4, function (t) {
          return function (e, n, r) {
            return t(this, e, n, r);
          };
        });
      }, function (t, e, n) {
        n(42)("Float32", 4, function (t) {
          return function (e, n, r) {
            return t(this, e, n, r);
          };
        });
      }, function (t, e, n) {
        n(42)("Float64", 8, function (t) {
          return function (e, n, r) {
            return t(this, e, n, r);
          };
        });
      }, function (t, e, n) {
        var r = n(1),
            i = n(35),
            o = n(7),
            u = (n(5).Reflect || {}).apply,
            a = Function.apply;
        r(r.S + r.F * !n(6)(function () {
          u(function () {});
        }), "Reflect", {
          apply: function apply(t, e, n) {
            var r = i(t),
                c = o(n);
            return u ? u(r, e, c) : a.call(r, e, c);
          }
        });
      }, function (t, e, n) {
        var r = n(1),
            i = n(52),
            o = n(35),
            u = n(7),
            a = n(8),
            c = n(6),
            s = n(123),
            f = (n(5).Reflect || {}).construct,
            l = c(function () {
          function t() {}

          return !(f(function () {}, [], t) instanceof t);
        }),
            h = !c(function () {
          f(function () {});
        });
        r(r.S + r.F * (l || h), "Reflect", {
          construct: function construct(t, e) {
            o(t), u(e);
            var n = arguments.length < 3 ? t : o(arguments[2]);
            if (h && !l) return f(t, e, n);

            if (t == n) {
              switch (e.length) {
                case 0:
                  return new t();

                case 1:
                  return new t(e[0]);

                case 2:
                  return new t(e[0], e[1]);

                case 3:
                  return new t(e[0], e[1], e[2]);

                case 4:
                  return new t(e[0], e[1], e[2], e[3]);
              }

              var r = [null];
              return r.push.apply(r, e), new (s.apply(t, r))();
            }

            var c = n.prototype,
                p = i(a(c) ? c : Object.prototype),
                v = Function.apply.call(t, p, e);
            return a(v) ? v : p;
          }
        });
      }, function (t, e, n) {
        var r = n(19),
            i = n(1),
            o = n(7),
            u = n(44);
        i(i.S + i.F * n(6)(function () {
          Reflect.defineProperty(r.f({}, 1, {
            value: 1
          }), 1, {
            value: 2
          });
        }), "Reflect", {
          defineProperty: function defineProperty(t, e, n) {
            o(t), e = u(e, !0), o(n);

            try {
              return r.f(t, e, n), !0;
            } catch (i) {
              return !1;
            }
          }
        });
      }, function (t, e, n) {
        var r = n(1),
            i = n(37).f,
            o = n(7);
        r(r.S, "Reflect", {
          deleteProperty: function deleteProperty(t, e) {
            var n = i(o(t), e);
            return !(n && !n.configurable) && delete t[e];
          }
        });
      }, function (t, e, n) {
        "use strict";

        var r = n(1),
            i = n(7),
            o = function o(t) {
          this._t = i(t), this._i = 0;
          var e,
              n = this._k = [];

          for (e in t) {
            n.push(e);
          }
        };

        n(130)(o, "Object", function () {
          var t,
              e = this._k;

          do {
            if (this._i >= e.length) return {
              value: void 0,
              done: !0
            };
          } while (!((t = e[this._i++]) in this._t));

          return {
            value: t,
            done: !1
          };
        }), r(r.S, "Reflect", {
          enumerate: function enumerate(t) {
            return new o(t);
          }
        });
      }, function (t, e, n) {
        var r = n(37),
            i = n(54),
            o = n(28),
            u = n(1),
            a = n(8),
            c = n(7);
        u(u.S, "Reflect", {
          get: function t(e, n) {
            var u,
                s,
                f = arguments.length < 3 ? e : arguments[2];
            return c(e) === f ? e[n] : (u = r.f(e, n)) ? o(u, "value") ? u.value : void 0 !== u.get ? u.get.call(f) : void 0 : a(s = i(e)) ? t(s, n, f) : void 0;
          }
        });
      }, function (t, e, n) {
        var r = n(37),
            i = n(1),
            o = n(7);
        i(i.S, "Reflect", {
          getOwnPropertyDescriptor: function getOwnPropertyDescriptor(t, e) {
            return r.f(o(t), e);
          }
        });
      }, function (t, e, n) {
        var r = n(1),
            i = n(54),
            o = n(7);
        r(r.S, "Reflect", {
          getPrototypeOf: function getPrototypeOf(t) {
            return i(o(t));
          }
        });
      }, function (t, e, n) {
        var r = n(1);
        r(r.S, "Reflect", {
          has: function has(t, e) {
            return e in t;
          }
        });
      }, function (t, e, n) {
        var r = n(1),
            i = n(7),
            o = Object.isExtensible;
        r(r.S, "Reflect", {
          isExtensible: function isExtensible(t) {
            return i(t), !o || o(t);
          }
        });
      }, function (t, e, n) {
        var r = n(1);
        r(r.S, "Reflect", {
          ownKeys: n(144)
        });
      }, function (t, e, n) {
        var r = n(1),
            i = n(7),
            o = Object.preventExtensions;
        r(r.S, "Reflect", {
          preventExtensions: function preventExtensions(t) {
            i(t);

            try {
              return o && o(t), !0;
            } catch (e) {
              return !1;
            }
          }
        });
      }, function (t, e, n) {
        var r = n(19),
            i = n(37),
            o = n(54),
            u = n(28),
            a = n(1),
            c = n(47),
            s = n(7),
            f = n(8);
        a(a.S, "Reflect", {
          set: function t(e, n, a) {
            var l,
                h,
                p = arguments.length < 4 ? e : arguments[3],
                v = i.f(s(e), n);

            if (!v) {
              if (f(h = o(e))) return t(h, n, a, p);
              v = c(0);
            }

            if (u(v, "value")) {
              if (!1 === v.writable || !f(p)) return !1;

              if (l = i.f(p, n)) {
                if (l.get || l.set || !1 === l.writable) return !1;
                l.value = a, r.f(p, n, l);
              } else r.f(p, n, c(0, a));

              return !0;
            }

            return void 0 !== v.set && (v.set.call(p, a), !0);
          }
        });
      }, function (t, e, n) {
        var r = n(1),
            i = n(91);
        i && r(r.S, "Reflect", {
          setPrototypeOf: function setPrototypeOf(t, e) {
            i.check(t, e);

            try {
              return i.set(t, e), !0;
            } catch (n) {
              return !1;
            }
          }
        });
      }, function (t, e, n) {
        n(302), t.exports = n(17).Array.includes;
      }, function (t, e, n) {
        "use strict";

        var r = n(1),
            i = n(73)(!0);
        r(r.P, "Array", {
          includes: function includes(t) {
            return i(this, t, arguments.length > 1 ? arguments[1] : void 0);
          }
        }), n(55)("includes");
      }, function (t, e, n) {
        n(304), t.exports = n(17).Array.flatMap;
      }, function (t, e, n) {
        "use strict";

        var r = n(1),
            i = n(305),
            o = n(24),
            u = n(16),
            a = n(35),
            c = n(132);
        r(r.P, "Array", {
          flatMap: function flatMap(t) {
            var e,
                n,
                r = o(this);
            return a(t), e = u(r.length), n = c(r, 0), i(n, r, r, e, 0, 1, t, arguments[1]), n;
          }
        }), n(55)("flatMap");
      }, function (t, e, n) {
        "use strict";

        var r = n(75),
            i = n(8),
            o = n(16),
            u = n(34),
            a = n(13)("isConcatSpreadable");

        t.exports = function t(e, n, c, s, f, l, h, p) {
          for (var v, d, y = f, g = 0, m = !!h && u(h, p, 3); g < s;) {
            if (g in c) {
              if (v = m ? m(c[g], g, n) : c[g], d = !1, i(v) && (d = void 0 !== (d = v[a]) ? !!d : r(v)), d && l > 0) y = t(e, n, v, o(v.length), y, l - 1) - 1;else {
                if (y >= 9007199254740991) throw TypeError();
                e[y] = v;
              }
              y++;
            }

            g++;
          }

          return y;
        };
      }, function (t, e, n) {
        n(307), t.exports = n(17).String.padStart;
      }, function (t, e, n) {
        "use strict";

        var r = n(1),
            i = n(145),
            o = n(81),
            u = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(o);
        r(r.P + r.F * u, "String", {
          padStart: function padStart(t) {
            return i(this, t, arguments.length > 1 ? arguments[1] : void 0, !0);
          }
        });
      }, function (t, e, n) {
        n(309), t.exports = n(17).String.padEnd;
      }, function (t, e, n) {
        "use strict";

        var r = n(1),
            i = n(145),
            o = n(81),
            u = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(o);
        r(r.P + r.F * u, "String", {
          padEnd: function padEnd(t) {
            return i(this, t, arguments.length > 1 ? arguments[1] : void 0, !1);
          }
        });
      }, function (t, e, n) {
        n(311), t.exports = n(17).String.trimLeft;
      }, function (t, e, n) {
        "use strict";

        n(61)("trimLeft", function (t) {
          return function () {
            return t(this, 1);
          };
        }, "trimStart");
      }, function (t, e, n) {
        n(313), t.exports = n(17).String.trimRight;
      }, function (t, e, n) {
        "use strict";

        n(61)("trimRight", function (t) {
          return function () {
            return t(this, 2);
          };
        }, "trimEnd");
      }, function (t, e, n) {
        n(315), t.exports = n(87).f("asyncIterator");
      }, function (t, e, n) {
        n(117)("asyncIterator");
      }, function (t, e, n) {
        n(317), t.exports = n(17).Object.getOwnPropertyDescriptors;
      }, function (t, e, n) {
        var r = n(1),
            i = n(144),
            o = n(30),
            u = n(37),
            a = n(103);
        r(r.S, "Object", {
          getOwnPropertyDescriptors: function getOwnPropertyDescriptors(t) {
            for (var e, n, r = o(t), c = u.f, s = i(r), f = {}, l = 0; s.length > l;) {
              void 0 !== (n = c(r, e = s[l++])) && a(f, e, n);
            }

            return f;
          }
        });
      }, function (t, e, n) {
        n(319), t.exports = n(17).Object.values;
      }, function (t, e, n) {
        var r = n(1),
            i = n(146)(!1);
        r(r.S, "Object", {
          values: function values(t) {
            return i(t);
          }
        });
      }, function (t, e, n) {
        n(321), t.exports = n(17).Object.entries;
      }, function (t, e, n) {
        var r = n(1),
            i = n(146)(!0);
        r(r.S, "Object", {
          entries: function entries(t) {
            return i(t);
          }
        });
      }, function (t, e, n) {
        "use strict";

        n(138), n(323), t.exports = n(17).Promise.finally;
      }, function (t, e, n) {
        "use strict";

        var r = n(1),
            i = n(17),
            o = n(5),
            u = n(69),
            a = n(140);
        r(r.P + r.R, "Promise", {
          finally: function _finally(t) {
            var e = u(this, i.Promise || o.Promise),
                n = "function" == typeof t;
            return this.then(n ? function (n) {
              return a(e, t()).then(function () {
                return n;
              });
            } : t, n ? function (n) {
              return a(e, t()).then(function () {
                throw n;
              });
            } : t);
          }
        });
      }, function (t, e, n) {
        n(325), n(326), n(327), t.exports = n(17);
      }, function (t, e, n) {
        var r = n(5),
            i = n(1),
            o = n(81),
            u = [].slice,
            a = /MSIE .\./.test(o),
            c = function c(t) {
          return function (e, n) {
            var r = arguments.length > 2,
                i = !!r && u.call(arguments, 2);
            return t(r ? function () {
              ("function" == typeof e ? e : Function(e)).apply(this, i);
            } : e, n);
          };
        };

        i(i.G + i.B + i.F * a, {
          setTimeout: c(r.setTimeout),
          setInterval: c(r.setInterval)
        });
      }, function (t, e, n) {
        var r = n(1),
            i = n(109);
        r(r.G + r.B, {
          setImmediate: i.set,
          clearImmediate: i.clear
        });
      }, function (t, e, n) {
        for (var r = n(106), i = n(50), o = n(26), u = n(5), a = n(29), c = n(62), s = n(13), f = s("iterator"), l = s("toStringTag"), h = c.Array, p = {
          CSSRuleList: !0,
          CSSStyleDeclaration: !1,
          CSSValueList: !1,
          ClientRectList: !1,
          DOMRectList: !1,
          DOMStringList: !1,
          DOMTokenList: !0,
          DataTransferItemList: !1,
          FileList: !1,
          HTMLAllCollection: !1,
          HTMLCollection: !1,
          HTMLFormElement: !1,
          HTMLSelectElement: !1,
          MediaList: !0,
          MimeTypeArray: !1,
          NamedNodeMap: !1,
          NodeList: !0,
          PaintRequestList: !1,
          Plugin: !1,
          PluginArray: !1,
          SVGLengthList: !1,
          SVGNumberList: !1,
          SVGPathSegList: !1,
          SVGPointList: !1,
          SVGStringList: !1,
          SVGTransformList: !1,
          SourceBufferList: !1,
          StyleSheetList: !0,
          TextTrackCueList: !1,
          TextTrackList: !1,
          TouchList: !1
        }, v = i(p), d = 0; d < v.length; d++) {
          var y,
              g = v[d],
              m = p[g],
              b = u[g],
              x = b && b.prototype;
          if (x && (x[f] || a(x, f, h), x[l] || a(x, l, g), c[g] = h, m)) for (y in r) {
            x[y] || o(x, y, r[y], !0);
          }
        }
      }, function (t, e, n) {
        var r = function (t) {
          "use strict";

          var e,
              n = Object.prototype,
              r = n.hasOwnProperty,
              i = "function" === typeof Symbol ? Symbol : {},
              o = i.iterator || "@@iterator",
              u = i.asyncIterator || "@@asyncIterator",
              a = i.toStringTag || "@@toStringTag";

          function c(t, e, n, r) {
            var i = e && e.prototype instanceof d ? e : d,
                o = Object.create(i.prototype),
                u = new j(r || []);
            return o._invoke = function (t, e, n) {
              var r = f;
              return function (i, o) {
                if (r === h) throw new Error("Generator is already running");

                if (r === p) {
                  if ("throw" === i) throw o;
                  return R();
                }

                for (n.method = i, n.arg = o;;) {
                  var u = n.delegate;

                  if (u) {
                    var a = S(u, n);

                    if (a) {
                      if (a === v) continue;
                      return a;
                    }
                  }

                  if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) {
                    if (r === f) throw r = p, n.arg;
                    n.dispatchException(n.arg);
                  } else "return" === n.method && n.abrupt("return", n.arg);
                  r = h;
                  var c = s(t, e, n);

                  if ("normal" === c.type) {
                    if (r = n.done ? p : l, c.arg === v) continue;
                    return {
                      value: c.arg,
                      done: n.done
                    };
                  }

                  "throw" === c.type && (r = p, n.method = "throw", n.arg = c.arg);
                }
              };
            }(t, n, u), o;
          }

          function s(t, e, n) {
            try {
              return {
                type: "normal",
                arg: t.call(e, n)
              };
            } catch (r) {
              return {
                type: "throw",
                arg: r
              };
            }
          }

          t.wrap = c;
          var f = "suspendedStart",
              l = "suspendedYield",
              h = "executing",
              p = "completed",
              v = {};

          function d() {}

          function y() {}

          function g() {}

          var m = {};

          m[o] = function () {
            return this;
          };

          var b = Object.getPrototypeOf,
              x = b && b(b(A([])));
          x && x !== n && r.call(x, o) && (m = x);
          var w = g.prototype = d.prototype = Object.create(m);

          function _(t) {
            ["next", "throw", "return"].forEach(function (e) {
              t[e] = function (t) {
                return this._invoke(e, t);
              };
            });
          }

          function k(t) {
            var e;

            this._invoke = function (n, i) {
              function o() {
                return new Promise(function (e, o) {
                  !function e(n, i, o, u) {
                    var a = s(t[n], t, i);

                    if ("throw" !== a.type) {
                      var c = a.arg,
                          f = c.value;
                      return f && "object" === typeof f && r.call(f, "__await") ? Promise.resolve(f.__await).then(function (t) {
                        e("next", t, o, u);
                      }, function (t) {
                        e("throw", t, o, u);
                      }) : Promise.resolve(f).then(function (t) {
                        c.value = t, o(c);
                      }, function (t) {
                        return e("throw", t, o, u);
                      });
                    }

                    u(a.arg);
                  }(n, i, e, o);
                });
              }

              return e = e ? e.then(o, o) : o();
            };
          }

          function S(t, n) {
            var r = t.iterator[n.method];

            if (r === e) {
              if (n.delegate = null, "throw" === n.method) {
                if (t.iterator.return && (n.method = "return", n.arg = e, S(t, n), "throw" === n.method)) return v;
                n.method = "throw", n.arg = new TypeError("The iterator does not provide a 'throw' method");
              }

              return v;
            }

            var i = s(r, t.iterator, n.arg);
            if ("throw" === i.type) return n.method = "throw", n.arg = i.arg, n.delegate = null, v;
            var o = i.arg;
            return o ? o.done ? (n[t.resultName] = o.value, n.next = t.nextLoc, "return" !== n.method && (n.method = "next", n.arg = e), n.delegate = null, v) : o : (n.method = "throw", n.arg = new TypeError("iterator result is not an object"), n.delegate = null, v);
          }

          function O(t) {
            var e = {
              tryLoc: t[0]
            };
            1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);
          }

          function E(t) {
            var e = t.completion || {};
            e.type = "normal", delete e.arg, t.completion = e;
          }

          function j(t) {
            this.tryEntries = [{
              tryLoc: "root"
            }], t.forEach(O, this), this.reset(!0);
          }

          function A(t) {
            if (t) {
              var n = t[o];
              if (n) return n.call(t);
              if ("function" === typeof t.next) return t;

              if (!isNaN(t.length)) {
                var i = -1,
                    u = function n() {
                  for (; ++i < t.length;) {
                    if (r.call(t, i)) return n.value = t[i], n.done = !1, n;
                  }

                  return n.value = e, n.done = !0, n;
                };

                return u.next = u;
              }
            }

            return {
              next: R
            };
          }

          function R() {
            return {
              value: e,
              done: !0
            };
          }

          return y.prototype = w.constructor = g, g.constructor = y, g[a] = y.displayName = "GeneratorFunction", t.isGeneratorFunction = function (t) {
            var e = "function" === typeof t && t.constructor;
            return !!e && (e === y || "GeneratorFunction" === (e.displayName || e.name));
          }, t.mark = function (t) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(t, g) : (t.__proto__ = g, a in t || (t[a] = "GeneratorFunction")), t.prototype = Object.create(w), t;
          }, t.awrap = function (t) {
            return {
              __await: t
            };
          }, _(k.prototype), k.prototype[u] = function () {
            return this;
          }, t.AsyncIterator = k, t.async = function (e, n, r, i) {
            var o = new k(c(e, n, r, i));
            return t.isGeneratorFunction(n) ? o : o.next().then(function (t) {
              return t.done ? t.value : o.next();
            });
          }, _(w), w[a] = "Generator", w[o] = function () {
            return this;
          }, w.toString = function () {
            return "[object Generator]";
          }, t.keys = function (t) {
            var e = [];

            for (var n in t) {
              e.push(n);
            }

            return e.reverse(), function n() {
              for (; e.length;) {
                var r = e.pop();
                if (r in t) return n.value = r, n.done = !1, n;
              }

              return n.done = !0, n;
            };
          }, t.values = A, j.prototype = {
            constructor: j,
            reset: function reset(t) {
              if (this.prev = 0, this.next = 0, this.sent = this._sent = e, this.done = !1, this.delegate = null, this.method = "next", this.arg = e, this.tryEntries.forEach(E), !t) for (var n in this) {
                "t" === n.charAt(0) && r.call(this, n) && !isNaN(+n.slice(1)) && (this[n] = e);
              }
            },
            stop: function stop() {
              this.done = !0;
              var t = this.tryEntries[0].completion;
              if ("throw" === t.type) throw t.arg;
              return this.rval;
            },
            dispatchException: function dispatchException(t) {
              if (this.done) throw t;
              var n = this;

              function i(r, i) {
                return a.type = "throw", a.arg = t, n.next = r, i && (n.method = "next", n.arg = e), !!i;
              }

              for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                var u = this.tryEntries[o],
                    a = u.completion;
                if ("root" === u.tryLoc) return i("end");

                if (u.tryLoc <= this.prev) {
                  var c = r.call(u, "catchLoc"),
                      s = r.call(u, "finallyLoc");

                  if (c && s) {
                    if (this.prev < u.catchLoc) return i(u.catchLoc, !0);
                    if (this.prev < u.finallyLoc) return i(u.finallyLoc);
                  } else if (c) {
                    if (this.prev < u.catchLoc) return i(u.catchLoc, !0);
                  } else {
                    if (!s) throw new Error("try statement without catch or finally");
                    if (this.prev < u.finallyLoc) return i(u.finallyLoc);
                  }
                }
              }
            },
            abrupt: function abrupt(t, e) {
              for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                var i = this.tryEntries[n];

                if (i.tryLoc <= this.prev && r.call(i, "finallyLoc") && this.prev < i.finallyLoc) {
                  var o = i;
                  break;
                }
              }

              o && ("break" === t || "continue" === t) && o.tryLoc <= e && e <= o.finallyLoc && (o = null);
              var u = o ? o.completion : {};
              return u.type = t, u.arg = e, o ? (this.method = "next", this.next = o.finallyLoc, v) : this.complete(u);
            },
            complete: function complete(t, e) {
              if ("throw" === t.type) throw t.arg;
              return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), v;
            },
            finish: function finish(t) {
              for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                var n = this.tryEntries[e];
                if (n.finallyLoc === t) return this.complete(n.completion, n.afterLoc), E(n), v;
              }
            },
            catch: function _catch(t) {
              for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                var n = this.tryEntries[e];

                if (n.tryLoc === t) {
                  var r = n.completion;

                  if ("throw" === r.type) {
                    var i = r.arg;
                    E(n);
                  }

                  return i;
                }
              }

              throw new Error("illegal catch attempt");
            },
            delegateYield: function delegateYield(t, n, r) {
              return this.delegate = {
                iterator: A(t),
                resultName: n,
                nextLoc: r
              }, "next" === this.method && (this.arg = e), v;
            }
          }, t;
        }(t.exports);

        try {
          regeneratorRuntime = r;
        } catch (i) {
          Function("r", "regeneratorRuntime = r")(r);
        }
      }, function (t, e, n) {
        (function (e) {
          "undefined" !== typeof window && (window.global = window, "undefined" === typeof e && (window.process = {
            env: {}
          }));
          var r = n(330).createSingleton;
          t.exports = r();
        }).call(this, n(111));
      }, function (t, e, n) {
        "use strict";

        n.r(e), function (t, r) {
          n.d(e, "observableMap", function () {
            return G;
          }), n.d(e, "urlUtils", function () {
            return H;
          }), n.d(e, "pathUtils", function () {
            return W;
          }), n.d(e, "ContextRegistry", function () {
            return q;
          }), n.d(e, "registerHelper", function () {
            return K;
          }), n.d(e, "createRegistry", function () {
            return J;
          }), n.d(e, "helpers", function () {
            return Y;
          }), n.d(e, "features", function () {
            return Z;
          }), n.d(e, "events", function () {
            return X;
          }), n.d(e, "Runtime", function () {
            return Ft;
          }), n.d(e, "createSingleton", function () {
            return Dt;
          }), n.d(e, "INITIALIZING", function () {
            return Ut;
          }), n.d(e, "INITIALIZED", function () {
            return zt;
          }), n.d(e, "PREPARING", function () {
            return $t;
          }), n.d(e, "READY", function () {
            return Bt;
          }), n.d(e, "STARTING", function () {
            return Vt;
          }), n.d(e, "RUNNING", function () {
            return Gt;
          }), n.d(e, "START_FAILURE", function () {
            return Ht;
          }), n.d(e, "PREPARE_FAILURE", function () {
            return Wt;
          }), n.d(e, "INITIALIZE_FAILURE", function () {
            return qt;
          }), n.d(e, "stages", function () {
            return Kt;
          }), n.d(e, "initializeSequence", function () {
            return Jt;
          }), n.d(e, "prepareSequence", function () {
            return Yt;
          }), n.d(e, "startSequence", function () {
            return Zt;
          }), n.d(e, "makeStateful", function () {
            return Xt;
          });

          var i = n(57),
              o = n.n(i),
              u = n(15),
              a = n.n(u),
              c = n(58),
              s = n.n(c),
              f = n(10),
              l = n.n(f),
              h = n(25),
              p = n.n(h),
              v = n(3),
              d = n.n(v),
              y = n(9),
              g = n.n(y),
              m = n(14),
              b = n.n(m),
              x = n(2),
              w = n.n(x),
              _ = (n(115), n(0)),
              k = n.n(_),
              S = n(33),
              O = n(46),
              E = n(113),
              j = n(114),
              A = n(84),
              R = n.n(A),
              I = n(150),
              C = n(31);

          n.d(e, "Feature", function () {
            return C.a;
          });
          var P = n(153),
              T = n(154),
              M = n(11);
          n.d(e, "Helper", function () {
            return M.a;
          });
          var L = n(59),
              N = n(85),
              F = n(4);
          n.d(e, "propUtils", function () {
            return F;
          });
          var D = n(12);
          n.d(e, "stringUtils", function () {
            return D;
          });

          var U,
              z,
              $,
              B = n(155),
              V = F.propertyUtils,
              G = S.observable.map,
              H = {
            parseUrl: j.parse,
            formatUrl: j.format,
            parseQueryString: E.parse
          },
              W = {
            join: O.join,
            parse: O.parse,
            resolve: O.resolve,
            sep: O.sep,
            basename: O.basename,
            dirname: O.dirname,
            relative: O.relative
          },
              q = M.a.ContextRegistry,
              K = M.a.registerHelper,
              J = M.a.createRegistry,
              Y = M.a.registry,
              Z = C.a.registry,
              X = Object(L.b)({}),
              Q = D.camelCase,
              tt = D.snakeCase,
              et = F.hashObject,
              nt = F.createEntity,
              rt = F.hide,
              it = F.enhanceObject,
              ot = S.observe,
              ut = S.extendObservable,
              at = S.observable,
              ct = S.toJS,
              st = S.computed,
              ft = S.action,
              lt = S.autorun,
              ht = new WeakMap(),
              pt = k.a.result,
              vt = k.a.keys,
              dt = k.a.pick,
              yt = k.a.get,
              gt = k.a.isFunction,
              mt = k.a.omitBy,
              bt = k.a.mapValues,
              xt = k.a.toPairs,
              wt = k.a.zipObjectDeep,
              _t = k.a.uniq,
              kt = k.a.castArray,
              St = k.a.defaultsDeep,
              Ot = k.a.isArray,
              Et = k.a.isObject,
              jt = k.a.isUndefined,
              At = k.a.flatten,
              Rt = "undefined" !== typeof window,
              It = "undefined" !== typeof document,
              Ct = "undefined" !== typeof t,
              Pt = pt(r, "SkypagerDefaultOptions", {}),
              Tt = pt(r, "SkypagerDefaultContext", {}),
              Mt = pt(r, "SkypagerContextTypes", {}),
              Lt = pt(r, "SkypagerOptionTypes", {}),
              Nt = yt(r, "process.env.SKYPAGER_STRICT_MODE", yt(r, "SkypagerStrictMode", !1)),
              Ft = function () {
            function e() {
              var n,
                  r = this,
                  i = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                  o = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                  u = arguments.length > 2 ? arguments[2] : void 0;
              g()(this, e), w()(this, "displayName", "Skypager"), w()(this, "stateVersion", 0), w()(this, "Helper", M.a), w()(this, "Feature", C.a), gt(i) && (u = i, i = {}, o = o || {}), gt(o) && (u = o, o = {}), it(this, {
                propUtils: !1,
                includeLodashMethods: !1,
                includeChain: !1
              }, k.a), Object(L.b)(this), ut(this, {
                state: at.shallowMap(xt(this.initialState)),
                currentState: st(this.getCurrentState.bind(this)),
                stateHash: st(this.getStateHash.bind(this)),
                cacheKey: st(this.getCacheKey.bind(this)),
                setState: ft(this.setState.bind(this)),
                replaceState: ft(this.replaceState.bind(this)),
                featureStatus: at.shallowMap([])
              });
              var a = pt(i, "cwd", function () {
                return jt(t) ? "/" : pt(t, "cwd", "/");
              });
              this.hideProperties({
                _logger: console,
                _parent: o.parent || $,
                _cwd: a,
                _uuid: R()(),
                _name: i.name || Q(tt(a.split("/").pop())),
                _cache: new I.a(i.cacheData || []),
                _weakCache: new B.a(i.cacheData || []),
                rawOptions: i,
                rawContext: o,
                _enabledFeatures: {},
                middlewares: (n = {}, w()(n, Vt, Object(N.a)(this)), w()(n, $t, Object(N.a)(this)), n),
                _registries: new q("registries", {
                  context: M.a.createMockContext({})
                }),
                _selectors: new q("selectors", {
                  context: M.a.createMockContext({})
                })
              });
              var c = this.start,
                  s = this.initialize,
                  f = this.prepare;
              gt(i.initialize) && (s = k.a.flow(this.initialize, i.initialize)), gt(i.prepare) && (f = k.a.flow(this.prepare, i.prepare)), this.initialize = Jt.bind(this, this, s), this.prepare = Yt.bind(this, this, f), this.start = Zt.bind(this, this, c), this.events.emit("runtimeWasCreated", this, this.constructor), this.applyRuntimeInitializers(), this.constructor.autoAdd.forEach(function (t) {
                var e = t.type,
                    n = t.ctx;
                r.invoke("".concat(e, ".add"), n);
              }), this.attachAllHelpers(), C.a.attach(this), this.features.register("profiler", function () {
                return {
                  default: P.a
                };
              }), this.features.register("vm", function () {
                return T.a;
              }), this.enableFeatures(this.autoEnabledFeatures), "function" === typeof u && this.use(u.bind(this), Ut), this.autoInitialize && this.initialize();
            }

            return b()(e, [{
              key: "use",
              value: function value(t, e) {
                var n = this;
                if (Et(t) && gt(t.initializer)) return this.use(t.initializer.bind(this), Ut);

                if (gt(t) && t.isSkypagerFeature) {
                  var r = t.featureId || t.shortcut || t.prototype.shortcut || t.name;
                  if (!this.features.checkKey(r)) return this.features.register(r, function () {
                    return t;
                  }), this.feature(r, Et(e) ? d()({}, this.options, e) : this.options).enable(d()({}, this.options, Et(e) ? e : {})), this;
                } else if (Et(t) && gt(t.attach)) t.attach.call(this, this, Et(e) ? d()({}, this.options, e) : this.options, this.context);else if (Et(t) && t.default) return this.use(t.default, e);

                var i = t.middleware || t.use;
                if (Et(t) && gt(i) && (t = i), "string" === typeof t) if (n.availableFeatures.indexOf(t) >= 0) {
                  var o = t;
                  t = function t() {
                    return n.feature(o).enable();
                  }, e = e || Ut;
                } else try {
                  console.error("Can not do dynamic requires anymore: You tried: ".concat(t));
                } catch (u) {}
                return gt(t) && e === Ut ? (t.call(n, function (e) {
                  if (e) throw n.error(e.message || "Error while using extension ".concat(t.name), {
                    error: e
                  }), e;
                }), this) : "function" !== typeof t ? this : ("undefined" === typeof e && this.isPrepared && (e = Vt), n.result(["middlewares", e || Vt], function () {
                  var t = Object(N.a)(n);
                  return n.set(["middlewares", e || Vt], t), t;
                }).use(t.bind(n)), this);
              }
            }, {
              key: "lazy",
              value: function value(t, e) {
                var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                return V(this).lazy(t, e, n);
              }
            }, {
              key: "hide",
              value: function value(t, e) {
                var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                return V(this).hide(t, e, n);
              }
            }, {
              key: "hideProperty",
              value: function value(t, e) {
                var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                return V(this).hide(t, e, n);
              }
            }, {
              key: "hideProperties",
              value: function value() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                return V(this).hideProperties(t);
              }
            }, {
              key: "hideGetter",
              value: function value(t, e) {
                var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                return V(this).hideGetter(t, e, n);
              }
            }, {
              key: "getter",
              value: function value(t, e) {
                var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                return V(this).getter(t, e, n);
              }
            }, {
              key: "applyInterface",
              value: function value() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                return V(this).applyInterface(t, e);
              }
            }, {
              key: "at",
              value: function value() {
                for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++) {
                  e[n] = arguments[n];
                }

                return k.a.at.apply(k.a, [this].concat(e));
              }
            }, {
              key: "set",
              value: function value(t, e) {
                return k.a.set(this, t, e);
              }
            }, {
              key: "get",
              value: function value(t, e) {
                return yt(this, t, e);
              }
            }, {
              key: "result",
              value: function value(t, e) {
                for (var n = arguments.length, r = new Array(n > 2 ? n - 2 : 0), i = 2; i < n; i++) {
                  r[i - 2] = arguments[i];
                }

                return pt.apply(void 0, [this, t, e].concat(r));
              }
            }, {
              key: "has",
              value: function value(t) {
                return k.a.has(this, t);
              }
            }, {
              key: "invoke",
              value: function value(t) {
                for (var e = arguments.length, n = new Array(e > 1 ? e - 1 : 0), r = 1; r < e; r++) {
                  n[r - 1] = arguments[r];
                }

                return k.a.invoke.apply(k.a, [this].concat(n));
              }
            }, {
              key: "pick",
              value: function value() {
                for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++) {
                  e[n] = arguments[n];
                }

                return k.a.pick.apply(k.a, [this].concat(e));
              }
            }, {
              key: "spawn",
              value: function value() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                    n = arguments.length > 2 ? arguments[2] : void 0;
                return gt(t) && (n = t, t = {}, e = e || {}), gt(e) && (n = e, e = {}), this.constructor.spawn(t, e, n);
              }
            }, {
              key: "registerRuntime",
              value: function value() {
                var t;
                return (t = this.constructor).registerRuntime.apply(t, arguments);
              }
            }, {
              key: "onRegistration",
              value: function value(t, e) {
                if (t = t.replace(/^_/, ""), "function" !== typeof e) throw new Error("Must pass a callback");

                if (this.has(t)) {
                  var n = this.helpers.checkKey(t) || this.helpers.checkKey(D.singularize(t));
                  n ? e(null, this, this.helpers.lookup(n), {
                    registry: this.get(t)
                  }) : e(new Error("".concat(t, " does not appear to be a valid helper")));
                } else M.a.events.on("attached", function (n, r) {
                  var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
                      o = (i || {}).registry,
                      u = void 0 === o ? {} : o;
                  u && u.name === t && e(null, n, r, i);
                });
              }
            }, {
              key: "registerHelper",
              value: function value() {
                var t;
                return (t = this.constructor).registerHelper.apply(t, arguments);
              }
            }, {
              key: "log",
              value: function value() {
                for (var t, e = arguments.length, n = new Array(e), r = 0; r < e; r++) {
                  n[r] = arguments[r];
                }

                this.emit.apply(this, ["loggingInfo"].concat(n)), (t = console).log.apply(t, n);
              }
            }, {
              key: "warn",
              value: function value() {
                for (var t, e, n = arguments.length, r = new Array(n), i = 0; i < n; i++) {
                  r[i] = arguments[i];
                }

                this.emit.apply(this, ["loggingWarning"].concat(r)), console.warn ? (t = console).warn.apply(t, r) : (e = console).log.apply(e, r);
              }
            }, {
              key: "debug",
              value: function value() {
                for (var t, e, n = arguments.length, r = new Array(n), i = 0; i < n; i++) {
                  r[i] = arguments[i];
                }

                this.emit.apply(this, ["loggingDebug"].concat(r)), console.debug ? (t = console).debug.apply(t, r) : (e = console).log.apply(e, r);
              }
            }, {
              key: "error",
              value: function value() {
                for (var t, e, n = arguments.length, r = new Array(n), i = 0; i < n; i++) {
                  r[i] = arguments[i];
                }

                this.emit.apply(this, ["loggingError"].concat(r)), console.error ? (t = console).error.apply(t, r) : (e = console).log.apply(e, r);
              }
            }, {
              key: "info",
              value: function value() {
                for (var t, e, n = arguments.length, r = new Array(n), i = 0; i < n; i++) {
                  r[i] = arguments[i];
                }

                this.emit.apply(this, ["loggingInfo"].concat(r)), console.info ? (t = console).info.apply(t, r) : (e = console).log.apply(e, r);
              }
            }, {
              key: "applyRuntimeInitializers",
              value: function value() {
                var t = this,
                    e = this.lodash.mapValues,
                    n = this.runtimeInitializers;
                return M.a.attachAll(this, this.helperOptions), e(n, function (e, n) {
                  try {
                    t.use(e.bind(t), Ut);
                  } catch (r) {
                    t.error("Error while applying initializer ".concat(n), {
                      error: r
                    });
                  }
                }), M.a.attachAll(this, this.helperOptions), this;
              }
            }, {
              key: "attachAllHelpers",
              value: function value() {
                return M.a.attachAll(this, this.helperOptions), this;
              }
            }, {
              key: "mixin",
              value: function value() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                return this.applyInterface(t, d()({
                  transformKeys: !0,
                  scope: this,
                  partial: [],
                  right: !0,
                  insertOptions: !1,
                  hidden: !1
                }, e)), this;
              }
            }, {
              key: "initialize",
              value: function value() {
                return this;
              }
            }, {
              key: "prepare",
              value: function () {
                var t = p()(l.a.mark(function t() {
                  return l.a.wrap(function (t) {
                    for (;;) {
                      switch (t.prev = t.next) {
                        case 0:
                          return t.abrupt("return", this);

                        case 1:
                        case "end":
                          return t.stop();
                      }
                    }
                  }, t, this);
                }));
                return function () {
                  return t.apply(this, arguments);
                };
              }()
            }, {
              key: "start",
              value: function () {
                var t = p()(l.a.mark(function t() {
                  return l.a.wrap(function (t) {
                    for (;;) {
                      switch (t.prev = t.next) {
                        case 0:
                          return t.abrupt("return", this);

                        case 1:
                        case "end":
                          return t.stop();
                      }
                    }
                  }, t, this);
                }));
                return function () {
                  return t.apply(this, arguments);
                };
              }()
            }, {
              key: "runMiddleware",
              value: function value(t) {
                t = t || this.stage;
                var e = this.get(["middlewares", t]);
                return e ? (0 === e.getCount() && e.use(function (t) {
                  t();
                }), new Promise(function (t, n) {
                  e.run(function (e) {
                    e ? n(e) : t(e);
                  });
                })) : Promise.resolve(this);
              }
            }, {
              key: "getStateHash",
              value: function value() {
                return this.hashObject(this.currentState);
              }
            }, {
              key: "getCurrentState",
              value: function value() {
                return this.convertToJS, this.lodash.mapValues, this.state.toJSON();
              }
            }, {
              key: "getCacheKey",
              value: function value() {
                return "".concat(this.namespace, ":").concat(this.stateVersion);
              }
            }, {
              key: "whenStarted",
              value: function value(t) {
                var e = this;
                return "function" !== typeof t ? this.whenStartedAsync() : (this.isStarted ? t.call(this, this, this.options, this.context) : this.isFailed ? t.call(this, this.currentStart.error, this.options, this.context) : (this.once("runtimeDidStart", function () {
                  return t.call(e, e.options, e.context);
                }), this.once("runtimeFailedStart", function (n) {
                  return t.call(e, n, e.options, e.context);
                })), this);
              }
            }, {
              key: "whenStartedAsync",
              value: function value() {
                var t = this;
                return new Promise(function (e, n) {
                  t.isStarted ? e(t) : t.sandbox.isFailed ? n(t.currentState.error) : (t.once("runtimeDidStart", function () {
                    return e(t);
                  }), t.once("runtimeFailedToStart", function (t) {
                    return n(t);
                  }));
                });
              }
            }, {
              key: "whenReady",
              value: function value(t, e) {
                return this.whenPrepared(t, e);
              }
            }, {
              key: "whenReadyAsync",
              value: function value() {
                return this.whenPreparedAsync();
              }
            }, {
              key: "whenPrepared",
              value: function value(t, e) {
                var n = this;
                if (!gt(t)) return this.whenPreparedAsync();

                try {
                  this.isPrepared ? t.call(this, this, this.options, this.context) : this.once("runtimeIsPrepared", function () {
                    return t.call(n, n.options, n.context);
                  });
                } catch (r) {
                  e && e(r);
                }

                return this;
              }
            }, {
              key: "whenPreparedAsync",
              value: function value() {
                var t = this;
                return new Promise(function (e, n) {
                  t.isPrepared ? e(t) : t.once("runtimeIsPrepared", function () {
                    return e(t);
                  });
                });
              }
            }, {
              key: "beginTrackingState",
              value: function value() {
                var t = this;
                if (this.mainDisposer) return this;
                var e = lt(function () {
                  var e;
                  t.stateVersion = t.stateVersion + 1;

                  for (var n = t.currentState, r = t.stateVersion, i = arguments.length, o = new Array(i), u = 0; u < i; u++) {
                    o[u] = arguments[u];
                  }

                  t.emit.apply(t, ["change", n, r].concat(o)), t.fireHook.apply(t, ["stateDidChange", n, r].concat(o)), (e = t.events).emit.apply(e, ["runtimeDidChange", t, n, r].concat(o));
                }),
                    n = this.state.observe(function () {
                  var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                      n = t.currentState,
                      r = t.stateVersion;
                  t.fireHook("".concat(e.name, "DidChangeState"), e, n, r), t.emit("stateWasUpdated", e, n, r);
                });
                return this.hide("mainDisposer", function () {
                  return e(), n(), t;
                }), this;
              }
            }, {
              key: "replaceState",
              value: function value() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    e = arguments.length > 1 ? arguments[1] : void 0,
                    n = this.lodash,
                    r = n.isFunction,
                    i = n.toPairs;
                this.emit("stateWillChange", this.currentState, t), this.emit("stateWillReplace", this.currentState, t), r(t) && (t = t(this.currentState, this));
                var o = this.state.replace(i(t));
                return r(e) && e(this.currentState), o;
              }
            }, {
              key: "setState",
              value: function value() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    e = arguments.length > 1 ? arguments[1] : void 0,
                    n = this.lodash,
                    r = n.isFunction,
                    i = n.toPairs;
                r(t) && (t = t(this.currentState, this)), this.emit("stateWillChange", this.currentState, t);
                var o = this.state.merge(i(t));
                return r(e) && e(this.currentState), o;
              }
            }, {
              key: "stateDidChange",
              value: function value() {}
            }, {
              key: "observe",
              value: function value(t) {
                var e = this,
                    n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "state";
                return ot(n ? this.get(n) : this, function (n) {
                  return t.call(e, n);
                });
              }
            }, {
              key: "makeObservable",
              value: function value() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    e = arguments.length > 1 ? arguments[1] : void 0;
                return e = e || this, t = mt(t, function (t, n) {
                  return k.a.has(e, n);
                }), ut(e, bt(t, function (t) {
                  if (!Ot(t)) return t;
                  var n = s()(t, 2),
                      r = n[0],
                      i = n[1],
                      o = at[r];
                  if ("action" !== r && "computed" !== r && !o) throw new Error("Invalid Observable: ".concat(r));
                  return "map" === r && Et(i) ? o(xt(i)) : "shallowMap" === r && Et(i) ? o(xt(i)) : "object" === r ? o(t[1] || {}) : "shallowObject" === r ? o(t[1] || {}) : "shallowArray" === r ? o(t[1] || []) : "array" === r ? o(t[1] || []) : "struct" === r ? o(t[1] || []) : "computed" === r && gt(i) ? st(t[1].bind(e)) : "action" === r && gt(i) ? ft(t[1].bind(e)) : t;
                }));
              }
            }, {
              key: "createObservable",
              value: function value() {
                var t = this,
                    e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    n = arguments.length > 1 ? arguments[1] : void 0,
                    r = arguments.length > 2 ? arguments[2] : void 0,
                    i = at(e);

                if (n) {
                  var o = ot(i, function (e) {
                    return n.call(r || i, e, i, t.context);
                  });
                  rt(i, "cancelObserver", function () {
                    return o(), i;
                  });
                }

                return rt(i, "toJS", function () {
                  return ct(i);
                }), i;
              }
            }, {
              key: "observeState",
              value: function value(t) {
                return this.state.observe(t);
              }
            }, {
              key: "interceptState",
              value: function value(t) {
                return this.state.intercept(t);
              }
            }, {
              key: "convertToJS",
              value: function value() {
                return ct.apply(void 0, arguments);
              }
            }, {
              key: "didCreateObservableHelper",
              value: function value(t, e) {
                if (t.tryGet("observables")) {
                  var n = t.tryResult("observables", {});
                  this.makeObservable(n, t);
                }

                if (t.has("state") || Xt(t), e.observables) {
                  var r = gt(e.observables) ? e.observables.call(t, t.options, t.context, t) : e.observables;
                  this.makeObservable(r, t);
                }

                Promise.resolve(t.setInitialState());
              }
            }, {
              key: "isFeatureEnabled",
              value: function value(t) {
                var e = this.featureStatus.get(t);
                return !!e && !(!e || "enabled" !== e.status);
              }
            }, {
              key: "enableFeatures",
              value: function value() {
                var t = this,
                    e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    n = this.availableFeatures;
                return "string" !== typeof e && "undefined" !== typeof e || (e = [e].filter(function (t) {
                  return t;
                })), Ot(e) && (e = e.reduce(function (t, e) {
                  return "string" === typeof e ? t[e] = {} : Ot(e) && (t[e[0]] = e[1]), t;
                }, {})), bt(dt(e, n), function (e, n) {
                  var r;

                  try {
                    return t.features.checkKey(n) ? r = t.feature(n) : t.constructor.features.available.indexOf(n) >= 0 && (r = t.feature(n, {
                      provider: t.constructor.features.lookup(n)
                    })), r.enable(e), t.fireHook("featureWasEnabled", r, t), M.a.attachAll(t, t.helperOptions), r;
                  } catch (i) {
                    return t.fireHook("featureFailedToEnable", r, i), i;
                  }
                });
              }
            }, {
              key: "fireHook",
              value: function value(t) {
                for (var e, n = arguments.length, r = new Array(n > 1 ? n - 1 : 0), i = 1; i < n; i++) {
                  r[i - 1] = arguments[i];
                }

                this.argv.debugHooks && this.debug("Firing Hook", {
                  hookName: t,
                  argsLength: r.length
                });
                var o = this.get(["options", t], this.get(t));
                if ((e = this.runtimeEvents).emit.apply(e, ["runtime:".concat(t), this].concat(r)), this.emit.apply(this, ["firingHook", t].concat(r)), this.emit.apply(this, [t].concat(r)), o) try {
                  o.call.apply(o, [this].concat(r));
                } catch (u) {
                  this.argv.debugHooks && this.error("Error while firing hook: ".concat(t), {
                    error: u.message
                  }), this.emit("hookError", t, u);
                } else this.argv.debugHooks && this.debug("No hook named ".concat(t, " present"));
                return this;
              }
            }, {
              key: "feature",
              value: function value(t) {
                var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                    n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                return this._feature(t, e, n);
              }
            }, {
              key: "createRegistry",
              value: function value(t) {
                var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                    n = M.a.createRegistry(t, d()({
                  context: M.a.createMockContext({})
                }, e));
                return this.fireHook("registryWasCreated", t, n, e), n;
              }
            }, {
              key: "createSandbox",
              value: function value() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                return d()({
                  project: this,
                  runtime: this,
                  skypager: this,
                  host: this,
                  propUtils: F,
                  stringUtils: D,
                  urlUtils: H,
                  lodash: k.a,
                  currentState: this.currentState
                }, this.featureRefs, t);
              }
            }, {
              key: "hashObject",
              value: function value(t) {
                return et(t);
              }
            }, {
              key: "createEntityFrom",
              value: function value() {
                var t = this.slice.apply(this, arguments);
                return nt(ct(t));
              }
            }, {
              key: "slice",
              value: function value() {
                for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++) {
                  e[n] = arguments[n];
                }

                return ct(wt(e, this.at(e)));
              }
            }, {
              key: "tryGet",
              value: function value(t, e) {
                return this.at("options.".concat(t), "context.".concat(t)).filter(function (t) {
                  return "undefined" !== typeof t;
                })[0] || e;
              }
            }, {
              key: "tryResult",
              value: function value(t, e) {
                var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
                    r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {},
                    i = this.tryGet(t);
                return i ? "function" === typeof i ? i.call(this, d()({}, this.options, n), d()({}, this.context, r)) : i : "function" === typeof e ? e.call(this, d()({}, this.options, n), d()({}, this.context, r)) : e;
              }
            }, {
              key: "mergeGet",
              value: function value(t) {
                var e = this,
                    n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : ["options", "argv", "config"];
                return t = "string" === typeof t ? t.split(".") : t, t = At(kt(t)), St.apply(void 0, [{}].concat(a()(n.map(function (n) {
                  return e.get([n].concat(a()(t)));
                }))));
              }
            }, {
              key: "mergeResult",
              value: function value(t) {
                var e = this,
                    n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : ["options", "argv", "config"];
                return t = "string" === typeof t ? t.split(".") : t, t = At(kt(t)), St.apply(void 0, [{}].concat(a()(n.map(function (n) {
                  return e.get([n].concat(a()(t)));
                }).map(function (t) {
                  return "function" === typeof t ? t.call(e, e.options, e.context) : t;
                }))));
              }
            }, {
              key: "selectCached",
              value: function () {
                var t = p()(l.a.mark(function t(e) {
                  var n,
                      r,
                      i,
                      o = arguments;
                  return l.a.wrap(function (t) {
                    for (;;) {
                      switch (t.prev = t.next) {
                        case 0:
                          if (!this.selectorCache.get(e)) {
                            t.next = 2;
                            break;
                          }

                          return t.abrupt("return", this.selectorCache.get(e));

                        case 2:
                          for (n = o.length, r = new Array(n > 1 ? n - 1 : 0), i = 1; i < n; i++) {
                            r[i - 1] = o[i];
                          }

                          return t.abrupt("return", this.select.apply(this, [e].concat(r)));

                        case 4:
                        case "end":
                          return t.stop();
                      }
                    }
                  }, t, this);
                }));
                return function (e) {
                  return t.apply(this, arguments);
                };
              }()
            }, {
              key: "select",
              value: function () {
                var t = p()(l.a.mark(function t(e) {
                  var n,
                      r,
                      i,
                      o,
                      u,
                      a,
                      c = arguments;
                  return l.a.wrap(function (t) {
                    for (;;) {
                      switch (t.prev = t.next) {
                        case 0:
                          for (r = this.selectors.lookup(e), r = gt(r.default) ? r.default : r, i = c.length, o = new Array(i > 1 ? i - 1 : 0), u = 1; u < i; u++) {
                            o[u - 1] = c[u];
                          }

                          return t.next = 5, (n = r).call.apply(n, [this, this.chain].concat(o));

                        case 5:
                          return a = t.sent, t.abrupt("return", gt(a.value) ? a.value() : a);

                        case 7:
                        case "end":
                          return t.stop();
                      }
                    }
                  }, t, this);
                }));
                return function (e) {
                  return t.apply(this, arguments);
                };
              }()
            }, {
              key: "selectThru",
              value: function () {
                var t = p()(l.a.mark(function t(e) {
                  var n,
                      r,
                      i,
                      o,
                      u,
                      a = arguments;
                  return l.a.wrap(function (t) {
                    for (;;) {
                      switch (t.prev = t.next) {
                        case 0:
                          for (n = a.length, r = new Array(n > 1 ? n - 1 : 0), i = 1; i < n; i++) {
                            r[i - 1] = a[i];
                          }

                          return o = r.length && "function" === typeof r[r.length - 1] ? r[r.length - 1] : this.lodash.identity, t.next = 4, this.selectChain.apply(this, [e].concat(r));

                        case 4:
                          return u = t.sent, t.abrupt("return", u.thru(o).value());

                        case 6:
                        case "end":
                          return t.stop();
                      }
                    }
                  }, t, this);
                }));
                return function (e) {
                  return t.apply(this, arguments);
                };
              }()
            }, {
              key: "selectChainThru",
              value: function () {
                var t = p()(l.a.mark(function t(e) {
                  var n,
                      r,
                      i,
                      o,
                      u,
                      a = arguments;
                  return l.a.wrap(function (t) {
                    for (;;) {
                      switch (t.prev = t.next) {
                        case 0:
                          for (n = a.length, r = new Array(n > 1 ? n - 1 : 0), i = 1; i < n; i++) {
                            r[i - 1] = a[i];
                          }

                          return o = r.length && "function" === typeof r[r.length - 1] ? r[r.length - 1] : this.lodash.identity, t.next = 4, this.selectChain.apply(this, [e].concat(r));

                        case 4:
                          return u = t.sent, t.abrupt("return", u.thru(o));

                        case 6:
                        case "end":
                          return t.stop();
                      }
                    }
                  }, t, this);
                }));
                return function (e) {
                  return t.apply(this, arguments);
                };
              }()
            }, {
              key: "selectChain",
              value: function () {
                var t = p()(l.a.mark(function t(e) {
                  var n,
                      r,
                      i,
                      o,
                      u = arguments;
                  return l.a.wrap(function (t) {
                    for (;;) {
                      switch (t.prev = t.next) {
                        case 0:
                          for (n = u.length, r = new Array(n > 1 ? n - 1 : 0), i = 1; i < n; i++) {
                            r[i - 1] = u[i];
                          }

                          return t.next = 3, this.select.apply(this, [e].concat(r));

                        case 3:
                          return o = t.sent, t.abrupt("return", k.a.chain(o));

                        case 5:
                        case "end":
                          return t.stop();
                      }
                    }
                  }, t, this);
                }));
                return function (e) {
                  return t.apply(this, arguments);
                };
              }()
            }, {
              key: "uuid",
              get: function get() {
                return this._uuid;
              }
            }, {
              key: "cwd",
              get: function get() {
                return this._cwd;
              }
            }, {
              key: "name",
              get: function get() {
                return this._name;
              },
              set: function set(t) {
                this.hide("_name", t, !0);
              }
            }, {
              key: "logger",
              get: function get() {
                return this._logger;
              }
            }, {
              key: "cache",
              get: function get() {
                return this._cache;
              }
            }, {
              key: "selectors",
              get: function get() {
                return this._selectors;
              }
            }, {
              key: "selectorCache",
              get: function get() {
                return ht.get(this);
              }
            }, {
              key: "registries",
              get: function get() {
                return this._registries;
              }
            }, {
              key: "chain",
              get: function get() {
                return k.a.chain(this);
              }
            }, {
              key: "contextTypes",
              get: function get() {
                return St({}, pt("constructor.contextTypes"), {
                  lodash: "func",
                  runtime: "object",
                  skypager: "object",
                  host: "object",
                  project: "object"
                });
              }
            }, {
              key: "optionTypes",
              get: function get() {
                return pt(this.constructor, "optionTypes", {});
              }
            }, {
              key: "defaultContext",
              get: function get() {
                return pt(this.constructor, "defaultContext", {});
              }
            }, {
              key: "defaultOptions",
              get: function get() {
                return St({}, yt(this, "projectConfig"), pt(this.constructor, "defaultOptions"), r.SKYPAGER_ARGV, r.ARGV);
              }
            }, {
              key: "optionsWithDefaults",
              get: function get() {
                return St({}, this.rawOptions, this.defaultOptions);
              }
            }, {
              key: "strictMode",
              get: function get() {
                return !!yt(this, "rawOptions.strictMode", this.constructor.strictMode);
              }
            }, {
              key: "options",
              get: function get() {
                return this.strictMode ? dt(this.optionsWithDefaults, vt(this.optionTypes)) : this.optionsWithDefaults;
              }
            }, {
              key: "context",
              get: function get() {
                return St({}, dt(this.rawContext, vt(this.contextTypes)), this.defaultContext, {
                  runtime: this,
                  lodash: this.lodash
                }, dt(r, vt(this.contextTypes)));
              }
            }, {
              key: "initializers",
              get: function get() {
                return this.constructor.initializers || e.initializers;
              }
            }, {
              key: "runtimes",
              get: function get() {
                return this.constructor.runtimes || e.runtimes;
              }
            }, {
              key: "autoInitialize",
              get: function get() {
                return !1 !== this.at("argv.autoInitialize", "constructor.autoInitialize").find(function (t) {
                  return "undefined" !== typeof t;
                });
              }
            }, {
              key: "autoPrepare",
              get: function get() {
                return !1 !== this.at("argv.autoPrepare", "constructor.autoPrepare").find(function (t) {
                  return "undefined" !== typeof t;
                });
              }
            }, {
              key: "autoEnabledFeatures",
              get: function get() {
                var t = this,
                    e = this.helperTags,
                    n = void 0 === e ? [] : e;
                return this.chain.get("constructor.autoEnable", {}).keys().concat(this.chain.get("config.features", {}).pickBy(function (t) {
                  return t && !0 !== t.disabled && !1 !== t.enabled && !0 !== t.disable && !1 !== t.enable;
                }).keys().value()).concat(this.availableFeatures.filter(function (t) {
                  return n.find(function (e) {
                    return 0 === t.indexOf(e);
                  });
                })).concat(kt(this.get("argv.enable", []))).flatten().uniq().reject(function (e) {
                  return -1 === t.availableFeatures.indexOf(e);
                }).value();
              }
            }, {
              key: "runtimeInitializers",
              get: function get() {
                var t = this.initializers,
                    e = this.helperTags;
                return (0, this.lodash.pickBy)(t.allMembers(), function (t, n) {
                  return !!e.find(function (t) {
                    return 0 === n.indexOf(t);
                  });
                });
              }
            }, {
              key: "url",
              get: function get() {
                return this.isBrowser ? window.location : H.parse("file://".concat(this.cwd));
              }
            }, {
              key: "argv",
              get: function get() {
                return this.get("rawOptions", {});
              },
              set: function set(t) {
                this.set("rawOptions", d()({}, this.rawOptions, t));
              }
            }, {
              key: "env",
              get: function get() {
                return this.isTest ? "test" : this.isDevelopment ? "development" : this.isProduction ? "production" : "development";
              }
            }, {
              key: "target",
              get: function get() {
                var t = this.argv,
                    e = t.universal,
                    n = t.target;
                return e ? "universal" : n || (this.isElectron ? "electron" : this.isNode ? "node" : this.isBrowser ? "web" : this.isReactNative ? "native" : "node");
              }
            }, {
              key: "helperTags",
              get: function get() {
                return this.get("options.helperTags", [this.env, "".concat(this.env, "/").concat(this.target), this.target, "".concat(this.target, "/").concat(this.env), "universal"]);
              }
            }, {
              key: "isBrowser",
              get: function get() {
                return Rt && It;
              }
            }, {
              key: "isNode",
              get: function get() {
                try {
                  return "[object process]" === Object.prototype.toString.call(r.process);
                } catch (e) {
                  return Ct && ("node" === t.title || "".concat(t.title).endsWith(".exe"));
                }
              }
            }, {
              key: "isWindows",
              get: function get() {
                return this.isNode && "".concat(t.title).endsWith(".exe");
              }
            }, {
              key: "isElectron",
              get: function get() {
                return Ct && !jt(t.type) && !jt(t.title) && (t.title.match(/electron/i) || t.versions.electron);
              }
            }, {
              key: "isElectronRenderer",
              get: function get() {
                return !jt(t) && "renderer" === t.type && Rt && It;
              }
            }, {
              key: "isReactNative",
              get: function get() {
                try {
                  return !jt(r) && "undefined" !== typeof navigator && "ReactNative" === navigator.product;
                } catch (t) {
                  return !1;
                }
              }
            }, {
              key: "isDebug",
              get: function get() {
                var t = this.argv,
                    e = void 0 === t ? {} : t;
                return !!e.debug || e.debugBrk || e.inspect || e.inspectBrk;
              }
            }, {
              key: "isCI",
              get: function get() {
                return this.isNode && (Object({
                  NODE_ENV: "production",
                  PUBLIC_URL: "",
                  RELEASE_PACKAGE_NAME: "@skypager/runtime",
                  RELEASE_VERSION: "1.1.4",
                  GIT_SHA: "8e6f6b383d",
                  GIT_BRANCH: "migrate-features-to-packages"
                }).CI || Object({
                  NODE_ENV: "production",
                  PUBLIC_URL: "",
                  RELEASE_PACKAGE_NAME: "@skypager/runtime",
                  RELEASE_VERSION: "1.1.4",
                  GIT_SHA: "8e6f6b383d",
                  GIT_BRANCH: "migrate-features-to-packages"
                }).JOB_NAME && Object({
                  NODE_ENV: "production",
                  PUBLIC_URL: "",
                  RELEASE_PACKAGE_NAME: "@skypager/runtime",
                  RELEASE_VERSION: "1.1.4",
                  GIT_SHA: "8e6f6b383d",
                  GIT_BRANCH: "migrate-features-to-packages"
                }).BRANCH_NAME);
              }
            }, {
              key: "isDevelopment",
              get: function get() {
                var t = this.argv,
                    e = void 0 === t ? {} : t;
                return !this.isProduction && !this.isTest && ("development" === e.env || !1);
              }
            }, {
              key: "isTest",
              get: function get() {
                var t = this.argv;
                return "test" === (void 0 === t ? {} : t).env || !1;
              }
            }, {
              key: "isProduction",
              get: function get() {
                return "production" === this.argv.env || !0;
              }
            }, {
              key: "initialState",
              get: function get() {
                return St({
                  stage: "CREATED"
                }, this.get("argv.initialState"), r.__INITIAL_STATE__, pt(r, "SkypagerInitialState"), this.constructor.initialState);
              }
            }, {
              key: "stage",
              get: function get() {
                return this.get("currentState.stage");
              }
            }, {
              key: "isInitialized",
              get: function get() {
                return this.get("currentState.initialized", !1);
              }
            }, {
              key: "isFailed",
              get: function get() {
                return this.stage === Ht;
              }
            }, {
              key: "isPrepared",
              get: function get() {
                return this.get("currentState.prepared", this.isRunning || this.isStarted);
              }
            }, {
              key: "isRunning",
              get: function get() {
                return this.get("currentState.started", !1);
              }
            }, {
              key: "isStarted",
              get: function get() {
                return this.get("currentState.started", !1);
              }
            }, {
              key: "mobx",
              get: function get() {
                return S;
              }
            }, {
              key: "observableMap",
              get: function get() {
                return at.map;
              }
            }, {
              key: "lodash",
              get: function get() {
                return k.a;
              }
            }, {
              key: "pathUtils",
              get: function get() {
                return W;
              }
            }, {
              key: "stringUtils",
              get: function get() {
                return D;
              }
            }, {
              key: "propUtils",
              get: function get() {
                return F;
              }
            }, {
              key: "urlUtils",
              get: function get() {
                return H;
              }
            }, {
              key: "Runtime",
              get: function get() {
                return e;
              }
            }, {
              key: "BaseRuntime",
              get: function get() {
                return e;
              }
            }, {
              key: "helperEvents",
              get: function get() {
                return M.a.events;
              }
            }, {
              key: "runtimeEvents",
              get: function get() {
                return X;
              }
            }, {
              key: "events",
              get: function get() {
                return X;
              }
            }, {
              key: "sandbox",
              get: function get() {
                return this.createSandbox(this.context);
              }
            }, {
              key: "availableFeatures",
              get: function get() {
                var t = this.get("features.available", []),
                    e = this.get("constructor.features.available", []);
                return _t([].concat(a()(t), a()(e)));
              }
            }, {
              key: "enabledFeatures",
              get: function get() {
                var t = this;
                return this.chain.invoke("featureStatus.toJSON").pickBy(function (t) {
                  return "enabled" === t.status;
                }).mapValues(function (e) {
                  return t.cache.get(e.cacheKey);
                }).omitBy(function (t) {
                  return !t;
                }).value();
              }
            }, {
              key: "enabledFeatureIds",
              get: function get() {
                return (0, this.lodash.keys)(this.enabledFeatures);
              }
            }, {
              key: "featureRefs",
              get: function get() {
                var t = this.lodash,
                    e = t.mapKeys,
                    n = t.omitBy,
                    r = t.isEmpty;
                return n(e(this.enabledFeatures, function (t) {
                  return t.tryGet("shortcut", t.tryGet("createGetter"));
                }), function (t, e) {
                  return r(e);
                });
              }
            }, {
              key: "helpers",
              get: function get() {
                return this.Helper.registry;
              }
            }, {
              key: "allHelpers",
              get: function get() {
                return this.Helper.allHelpers;
              }
            }, {
              key: "helperOptions",
              get: function get() {
                return this.get("options.helperOptions", this.get("context.helperOptions", {}));
              }
            }, {
              key: "features",
              get: function get() {
                return this._features || C.a.registry;
              }
            }, {
              key: "namespace",
              get: function get() {
                return this.get("options.namespace", "runtime");
              }
            }], [{
              key: "spawn",
              value: function value() {
                return new e(arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, arguments.length > 2 ? arguments[2] : void 0);
              }
            }, {
              key: "attachEmitter",
              value: function value() {
                return L.b.apply(void 0, arguments);
              }
            }, {
              key: "registerRuntime",
              value: function value(t, n) {
                return e.runtimes.register(t, function () {
                  return n;
                }), n;
              }
            }, {
              key: "registerHelper",
              value: function value(t, e) {
                return K(t, function () {
                  return e;
                }), e;
              }
            }, {
              key: "createSingleton",
              value: function value(t, e, n) {
                return $ = $ || new this(t, e, n);
              }
            }, {
              key: "runtimes",
              get: function get() {
                var t = this;
                return U || ((U = new q("runtimes", {
                  context: M.a.createMockContext(),
                  wrapper: function wrapper(t) {
                    return function () {
                      for (var e = arguments.length, n = new Array(e), r = 0; r < e; r++) {
                        n[r] = arguments[r];
                      }

                      return o()(t, n);
                    };
                  },
                  fallback: function fallback(n) {
                    return t || e;
                  }
                })).register("universal", function () {
                  return e;
                }), U);
              }
            }, {
              key: "features",
              get: function get() {
                return C.a.registry;
              }
            }, {
              key: "framework",
              get: function get() {
                return z = z || this.createSingleton();
              }
            }]), e;
          }();

          w()(Ft, "contextTypes", Mt), w()(Ft, "optionTypes", Lt), w()(Ft, "defaultContext", Tt), w()(Ft, "defaultOptions", Pt), w()(Ft, "strictMode", "false" !== Nt.toString()), w()(Ft, "initializers", new q("initializers", {
            context: M.a.createMockContext(),
            useDefaultExport: !0
          })), w()(Ft, "events", X), w()(Ft, "autoEnable", {
            vm: {}
          }), w()(Ft, "initialState", {}), w()(Ft, "ContextRegistry", q), w()(Ft, "mobx", S), w()(Ft, "observableMap", at.map), w()(Ft, "lodash", k.a), w()(Ft, "pathUtils", W), w()(Ft, "stringUtils", D), w()(Ft, "propUtils", F), w()(Ft, "urlUtils", H), w()(Ft, "Helper", M.a), w()(Ft, "Feature", C.a), w()(Ft, "autoConfigs", []), w()(Ft, "autoAdd", []);
          var Dt = Ft.createSingleton.bind(Ft),
              Ut = "INITIALIZING",
              zt = "INITIALIZED",
              $t = "PREPARING",
              Bt = "READY",
              Vt = "STARTING",
              Gt = "RUNNING",
              Ht = "START_FAILURE",
              Wt = "PREPARE_FAILURE",
              qt = "INITIALIZE_FAILURE",
              Kt = {
            INITIALIZING: Ut,
            INITIALIZED: zt,
            PREPARING: $t,
            READY: Bt,
            STARTING: Vt,
            RUNNING: Gt,
            START_FAILURE: Ht,
            INITIALIZE_FAILURE: qt,
            PREPARE_FAILURE: Wt
          };

          function Jt(t, e) {
            if (t.isInitialized) return t;
            t.fireHook("beforeInitialize", t), t.beginTrackingState(), t.setState({
              stage: Ut,
              initialized: !0
            });

            try {
              e.call(t);
            } catch (n) {
              throw t.setState({
                stage: qt,
                error: n
              }), n;
            }

            return t.fireHook("afterInitialize", t), t.setState({
              stage: zt
            }), X.emit("runtimeDidInitialize", t, t.constructor), t.attachAllHelpers(), !1 !== t.autoPrepare && Promise.resolve(t.prepare()), t;
          }

          function Yt(t, e) {
            return function () {
              return p()(l.a.mark(function t(e, n) {
                return l.a.wrap(function (t) {
                  for (;;) {
                    switch (t.prev = t.next) {
                      case 0:
                        if (!e.isPrepared) {
                          t.next = 2;
                          break;
                        }

                        return t.abrupt("return", e);

                      case 2:
                        return e.setState({
                          stage: $t
                        }), e.fireHook("preparing"), t.prev = 4, t.next = 7, this.runMiddleware($t);

                      case 7:
                        t.next = 14;
                        break;

                      case 9:
                        throw t.prev = 9, t.t0 = t.catch(4), e.setState({
                          stage: Wt,
                          error: t.t0
                        }), e.fireHook("prepareDidFail", t.t0), t.t0;

                      case 14:
                        if (t.prev = 14, "function" !== typeof e.options.prepare) {
                          t.next = 18;
                          break;
                        }

                        return t.next = 18, Promise.resolve(e.options.prepare.call(e, e.argv, e.sandbox));

                      case 18:
                        return t.next = 20, n.call(e, e.argv, e.sandbox);

                      case 20:
                        e.setState({
                          stage: Bt,
                          prepared: !0
                        }), t.next = 28;
                        break;

                      case 23:
                        throw t.prev = 23, t.t1 = t.catch(14), e.setState({
                          stage: Wt,
                          error: t.t1
                        }), e.fireHook("prepareDidFail", t.t1), t.t1;

                      case 28:
                        return e.fireHook("runtimeIsPrepared"), t.abrupt("return", e);

                      case 30:
                      case "end":
                        return t.stop();
                    }
                  }
                }, t, this, [[4, 9], [14, 23]]);
              })).apply(this, arguments);
            }.apply(this, arguments);
          }

          function Zt(t, e) {
            return function () {
              return p()(l.a.mark(function t(e, n) {
                var r;
                return l.a.wrap(function (t) {
                  for (;;) {
                    switch (t.prev = t.next) {
                      case 0:
                        if (e.stage !== Gt) {
                          t.next = 2;
                          break;
                        }

                        return t.abrupt("return", e);

                      case 2:
                        if (!e.isStarted) {
                          t.next = 4;
                          break;
                        }

                        return t.abrupt("return", e);

                      case 4:
                        if (r = e.at("options.beforeStart", "beforeStart", "options.runtimeWillStart", "runtimeWillStart").filter(function (t) {
                          return "function" === typeof t;
                        }), X.emit("runtimeIsStarting", e, e.constructor), !(r.length > 0)) {
                          t.next = 17;
                          break;
                        }

                        return t.prev = 7, t.next = 10, Promise.all(r.map(function (t) {
                          return t.call(e, e.argv, e.sandbox);
                        }));

                      case 10:
                        t.next = 17;
                        break;

                      case 12:
                        throw t.prev = 12, t.t0 = t.catch(7), X.emit("runtimeStartFailure", t.t0, e, e.constructor), e.setState({
                          stage: Ht,
                          error: t.t0,
                          failureStage: "beforeHooks"
                        }), t.t0;

                      case 17:
                        return t.prev = 17, e.setState({
                          stage: Vt
                        }), t.next = 21, this.runMiddleware(Vt);

                      case 21:
                        t.next = 29;
                        break;

                      case 23:
                        throw t.prev = 23, t.t1 = t.catch(17), X.emit("runtimeFailedStart", t.t1, e, e.constructor), e.fireHook("runtimeFailedStart", t.t1, e, e.constructor), e.setState({
                          stage: Ht,
                          error: t.t1,
                          failureStage: "middlewares"
                        }), t.t1;

                      case 29:
                        return t.prev = 29, t.next = 32, n.call(e, e.options);

                      case 32:
                        t.next = 40;
                        break;

                      case 34:
                        throw t.prev = 34, t.t2 = t.catch(29), X.emit("runtimeFailedStart", t.t2, e, e.constructor), e.setState({
                          stage: Ht,
                          error: t.t2,
                          failureStage: "startMethod"
                        }), e.fireHook("runtimeFailedStart", t.t2, e, e.currentState), t.t2;

                      case 40:
                        return e.setState({
                          stage: Gt,
                          started: !0
                        }), e.fireHook("runtimeDidStart", e, e.currentState), X.emit("runtimeDidStart", e, e.currentState, e.constructor), t.abrupt("return", this);

                      case 44:
                      case "end":
                        return t.stop();
                    }
                  }
                }, t, this, [[7, 12], [17, 23], [29, 34]]);
              })).apply(this, arguments);
            }.apply(this, arguments);
          }

          function Xt() {
            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
            return t.stateVersion = 0, ut(t, {
              state: at.shallowMap(xt(t.initialState || {})),
              currentState: st(function () {
                return t.state.toJSON();
              })
            }), lt(function () {
              var e = t.stateVersion = t.stateVersion + 1,
                  n = t.currentState;
              t.emit && t.emit("change", t, n, e), t.fireHook && t.fireHook("stateDidChange", n, e);
            }), t.state.observe(function () {
              var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
              t.fireHook && t.fireHook("".concat(e.name, "DidChangeState"), e), t.emit && (t.emit("stateDidChange", e), t.emit("".concat(e.name, "DidChangeState"), e));
            }), t;
          }

          e.default = Ft;
        }.call(this, n(111), n(70));
      }, function (t, e) {
        t.exports = function (t) {
          if (Array.isArray(t)) {
            for (var e = 0, n = new Array(t.length); e < t.length; e++) {
              n[e] = t[e];
            }

            return n;
          }
        };
      }, function (t, e) {
        t.exports = function (t) {
          if (Symbol.iterator in Object(t) || "[object Arguments]" === Object.prototype.toString.call(t)) return Array.from(t);
        };
      }, function (t, e) {
        t.exports = function () {
          throw new TypeError("Invalid attempt to spread non-iterable instance");
        };
      }, function (t, e) {
        t.exports = function (t) {
          if (Array.isArray(t)) return t;
        };
      }, function (t, e) {
        t.exports = function (t, e) {
          var n = [],
              r = !0,
              i = !1,
              o = void 0;

          try {
            for (var u, a = t[Symbol.iterator](); !(r = (u = a.next()).done) && (n.push(u.value), !e || n.length !== e); r = !0) {
              ;
            }
          } catch (c) {
            i = !0, o = c;
          } finally {
            try {
              r || null == a.return || a.return();
            } finally {
              if (i) throw o;
            }
          }

          return n;
        };
      }, function (t, e) {
        t.exports = function () {
          throw new TypeError("Invalid attempt to destructure non-iterable instance");
        };
      }, function (t, e, n) {
        var r = function (t) {
          "use strict";

          var e,
              n = Object.prototype,
              r = n.hasOwnProperty,
              i = "function" === typeof Symbol ? Symbol : {},
              o = i.iterator || "@@iterator",
              u = i.asyncIterator || "@@asyncIterator",
              a = i.toStringTag || "@@toStringTag";

          function c(t, e, n, r) {
            var i = e && e.prototype instanceof d ? e : d,
                o = Object.create(i.prototype),
                u = new j(r || []);
            return o._invoke = function (t, e, n) {
              var r = f;
              return function (i, o) {
                if (r === h) throw new Error("Generator is already running");

                if (r === p) {
                  if ("throw" === i) throw o;
                  return R();
                }

                for (n.method = i, n.arg = o;;) {
                  var u = n.delegate;

                  if (u) {
                    var a = S(u, n);

                    if (a) {
                      if (a === v) continue;
                      return a;
                    }
                  }

                  if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) {
                    if (r === f) throw r = p, n.arg;
                    n.dispatchException(n.arg);
                  } else "return" === n.method && n.abrupt("return", n.arg);
                  r = h;
                  var c = s(t, e, n);

                  if ("normal" === c.type) {
                    if (r = n.done ? p : l, c.arg === v) continue;
                    return {
                      value: c.arg,
                      done: n.done
                    };
                  }

                  "throw" === c.type && (r = p, n.method = "throw", n.arg = c.arg);
                }
              };
            }(t, n, u), o;
          }

          function s(t, e, n) {
            try {
              return {
                type: "normal",
                arg: t.call(e, n)
              };
            } catch (r) {
              return {
                type: "throw",
                arg: r
              };
            }
          }

          t.wrap = c;
          var f = "suspendedStart",
              l = "suspendedYield",
              h = "executing",
              p = "completed",
              v = {};

          function d() {}

          function y() {}

          function g() {}

          var m = {};

          m[o] = function () {
            return this;
          };

          var b = Object.getPrototypeOf,
              x = b && b(b(A([])));
          x && x !== n && r.call(x, o) && (m = x);
          var w = g.prototype = d.prototype = Object.create(m);

          function _(t) {
            ["next", "throw", "return"].forEach(function (e) {
              t[e] = function (t) {
                return this._invoke(e, t);
              };
            });
          }

          function k(t) {
            var e;

            this._invoke = function (n, i) {
              function o() {
                return new Promise(function (e, o) {
                  !function e(n, i, o, u) {
                    var a = s(t[n], t, i);

                    if ("throw" !== a.type) {
                      var c = a.arg,
                          f = c.value;
                      return f && "object" === typeof f && r.call(f, "__await") ? Promise.resolve(f.__await).then(function (t) {
                        e("next", t, o, u);
                      }, function (t) {
                        e("throw", t, o, u);
                      }) : Promise.resolve(f).then(function (t) {
                        c.value = t, o(c);
                      }, function (t) {
                        return e("throw", t, o, u);
                      });
                    }

                    u(a.arg);
                  }(n, i, e, o);
                });
              }

              return e = e ? e.then(o, o) : o();
            };
          }

          function S(t, n) {
            var r = t.iterator[n.method];

            if (r === e) {
              if (n.delegate = null, "throw" === n.method) {
                if (t.iterator.return && (n.method = "return", n.arg = e, S(t, n), "throw" === n.method)) return v;
                n.method = "throw", n.arg = new TypeError("The iterator does not provide a 'throw' method");
              }

              return v;
            }

            var i = s(r, t.iterator, n.arg);
            if ("throw" === i.type) return n.method = "throw", n.arg = i.arg, n.delegate = null, v;
            var o = i.arg;
            return o ? o.done ? (n[t.resultName] = o.value, n.next = t.nextLoc, "return" !== n.method && (n.method = "next", n.arg = e), n.delegate = null, v) : o : (n.method = "throw", n.arg = new TypeError("iterator result is not an object"), n.delegate = null, v);
          }

          function O(t) {
            var e = {
              tryLoc: t[0]
            };
            1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);
          }

          function E(t) {
            var e = t.completion || {};
            e.type = "normal", delete e.arg, t.completion = e;
          }

          function j(t) {
            this.tryEntries = [{
              tryLoc: "root"
            }], t.forEach(O, this), this.reset(!0);
          }

          function A(t) {
            if (t) {
              var n = t[o];
              if (n) return n.call(t);
              if ("function" === typeof t.next) return t;

              if (!isNaN(t.length)) {
                var i = -1,
                    u = function n() {
                  for (; ++i < t.length;) {
                    if (r.call(t, i)) return n.value = t[i], n.done = !1, n;
                  }

                  return n.value = e, n.done = !0, n;
                };

                return u.next = u;
              }
            }

            return {
              next: R
            };
          }

          function R() {
            return {
              value: e,
              done: !0
            };
          }

          return y.prototype = w.constructor = g, g.constructor = y, g[a] = y.displayName = "GeneratorFunction", t.isGeneratorFunction = function (t) {
            var e = "function" === typeof t && t.constructor;
            return !!e && (e === y || "GeneratorFunction" === (e.displayName || e.name));
          }, t.mark = function (t) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(t, g) : (t.__proto__ = g, a in t || (t[a] = "GeneratorFunction")), t.prototype = Object.create(w), t;
          }, t.awrap = function (t) {
            return {
              __await: t
            };
          }, _(k.prototype), k.prototype[u] = function () {
            return this;
          }, t.AsyncIterator = k, t.async = function (e, n, r, i) {
            var o = new k(c(e, n, r, i));
            return t.isGeneratorFunction(n) ? o : o.next().then(function (t) {
              return t.done ? t.value : o.next();
            });
          }, _(w), w[a] = "Generator", w[o] = function () {
            return this;
          }, w.toString = function () {
            return "[object Generator]";
          }, t.keys = function (t) {
            var e = [];

            for (var n in t) {
              e.push(n);
            }

            return e.reverse(), function n() {
              for (; e.length;) {
                var r = e.pop();
                if (r in t) return n.value = r, n.done = !1, n;
              }

              return n.done = !0, n;
            };
          }, t.values = A, j.prototype = {
            constructor: j,
            reset: function reset(t) {
              if (this.prev = 0, this.next = 0, this.sent = this._sent = e, this.done = !1, this.delegate = null, this.method = "next", this.arg = e, this.tryEntries.forEach(E), !t) for (var n in this) {
                "t" === n.charAt(0) && r.call(this, n) && !isNaN(+n.slice(1)) && (this[n] = e);
              }
            },
            stop: function stop() {
              this.done = !0;
              var t = this.tryEntries[0].completion;
              if ("throw" === t.type) throw t.arg;
              return this.rval;
            },
            dispatchException: function dispatchException(t) {
              if (this.done) throw t;
              var n = this;

              function i(r, i) {
                return a.type = "throw", a.arg = t, n.next = r, i && (n.method = "next", n.arg = e), !!i;
              }

              for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                var u = this.tryEntries[o],
                    a = u.completion;
                if ("root" === u.tryLoc) return i("end");

                if (u.tryLoc <= this.prev) {
                  var c = r.call(u, "catchLoc"),
                      s = r.call(u, "finallyLoc");

                  if (c && s) {
                    if (this.prev < u.catchLoc) return i(u.catchLoc, !0);
                    if (this.prev < u.finallyLoc) return i(u.finallyLoc);
                  } else if (c) {
                    if (this.prev < u.catchLoc) return i(u.catchLoc, !0);
                  } else {
                    if (!s) throw new Error("try statement without catch or finally");
                    if (this.prev < u.finallyLoc) return i(u.finallyLoc);
                  }
                }
              }
            },
            abrupt: function abrupt(t, e) {
              for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                var i = this.tryEntries[n];

                if (i.tryLoc <= this.prev && r.call(i, "finallyLoc") && this.prev < i.finallyLoc) {
                  var o = i;
                  break;
                }
              }

              o && ("break" === t || "continue" === t) && o.tryLoc <= e && e <= o.finallyLoc && (o = null);
              var u = o ? o.completion : {};
              return u.type = t, u.arg = e, o ? (this.method = "next", this.next = o.finallyLoc, v) : this.complete(u);
            },
            complete: function complete(t, e) {
              if ("throw" === t.type) throw t.arg;
              return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), v;
            },
            finish: function finish(t) {
              for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                var n = this.tryEntries[e];
                if (n.finallyLoc === t) return this.complete(n.completion, n.afterLoc), E(n), v;
              }
            },
            catch: function _catch(t) {
              for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                var n = this.tryEntries[e];

                if (n.tryLoc === t) {
                  var r = n.completion;

                  if ("throw" === r.type) {
                    var i = r.arg;
                    E(n);
                  }

                  return i;
                }
              }

              throw new Error("illegal catch attempt");
            },
            delegateYield: function delegateYield(t, n, r) {
              return this.delegate = {
                iterator: A(t),
                resultName: n,
                nextLoc: r
              }, "next" === this.method && (this.arg = e), v;
            }
          }, t;
        }(t.exports);

        try {
          regeneratorRuntime = r;
        } catch (i) {
          Function("r", "regeneratorRuntime = r")(r);
        }
      }, function (t, e, n) {
        "use strict";

        function r(t, e) {
          return Object.prototype.hasOwnProperty.call(t, e);
        }

        t.exports = function (t, e, n, o) {
          e = e || "&", n = n || "=";
          var u = {};
          if ("string" !== typeof t || 0 === t.length) return u;
          var a = /\+/g;
          t = t.split(e);
          var c = 1e3;
          o && "number" === typeof o.maxKeys && (c = o.maxKeys);
          var s = t.length;
          c > 0 && s > c && (s = c);

          for (var f = 0; f < s; ++f) {
            var l,
                h,
                p,
                v,
                d = t[f].replace(a, "%20"),
                y = d.indexOf(n);
            y >= 0 ? (l = d.substr(0, y), h = d.substr(y + 1)) : (l = d, h = ""), p = decodeURIComponent(l), v = decodeURIComponent(h), r(u, p) ? i(u[p]) ? u[p].push(v) : u[p] = [u[p], v] : u[p] = v;
          }

          return u;
        };

        var i = Array.isArray || function (t) {
          return "[object Array]" === Object.prototype.toString.call(t);
        };
      }, function (t, e, n) {
        "use strict";

        var r = function r(t) {
          switch (typeof t) {
            case "string":
              return t;

            case "boolean":
              return t ? "true" : "false";

            case "number":
              return isFinite(t) ? t : "";

            default:
              return "";
          }
        };

        t.exports = function (t, e, n, a) {
          return e = e || "&", n = n || "=", null === t && (t = void 0), "object" === typeof t ? o(u(t), function (u) {
            var a = encodeURIComponent(r(u)) + n;
            return i(t[u]) ? o(t[u], function (t) {
              return a + encodeURIComponent(r(t));
            }).join(e) : a + encodeURIComponent(r(t[u]));
          }).join(e) : a ? encodeURIComponent(r(a)) + n + encodeURIComponent(r(t)) : "";
        };

        var i = Array.isArray || function (t) {
          return "[object Array]" === Object.prototype.toString.call(t);
        };

        function o(t, e) {
          if (t.map) return t.map(e);

          for (var n = [], r = 0; r < t.length; r++) {
            n.push(e(t[r], r));
          }

          return n;
        }

        var u = Object.keys || function (t) {
          var e = [];

          for (var n in t) {
            Object.prototype.hasOwnProperty.call(t, n) && e.push(n);
          }

          return e;
        };
      }, function (t, e, n) {
        (function (t, r) {
          var i;
          !function (o) {
            e && e.nodeType, t && t.nodeType;
            var u = "object" == typeof r && r;
            u.global !== u && u.window !== u && u.self;
            var a,
                c = 2147483647,
                s = 36,
                f = 1,
                l = 26,
                h = 38,
                p = 700,
                v = 72,
                d = 128,
                y = "-",
                g = /^xn--/,
                m = /[^\x20-\x7E]/,
                b = /[\x2E\u3002\uFF0E\uFF61]/g,
                x = {
              overflow: "Overflow: input needs wider integers to process",
              "not-basic": "Illegal input >= 0x80 (not a basic code point)",
              "invalid-input": "Invalid input"
            },
                w = s - f,
                _ = Math.floor,
                k = String.fromCharCode;

            function S(t) {
              throw new RangeError(x[t]);
            }

            function O(t, e) {
              for (var n = t.length, r = []; n--;) {
                r[n] = e(t[n]);
              }

              return r;
            }

            function E(t, e) {
              var n = t.split("@"),
                  r = "";
              return n.length > 1 && (r = n[0] + "@", t = n[1]), r + O((t = t.replace(b, ".")).split("."), e).join(".");
            }

            function j(t) {
              for (var e, n, r = [], i = 0, o = t.length; i < o;) {
                (e = t.charCodeAt(i++)) >= 55296 && e <= 56319 && i < o ? 56320 == (64512 & (n = t.charCodeAt(i++))) ? r.push(((1023 & e) << 10) + (1023 & n) + 65536) : (r.push(e), i--) : r.push(e);
              }

              return r;
            }

            function A(t) {
              return O(t, function (t) {
                var e = "";
                return t > 65535 && (e += k((t -= 65536) >>> 10 & 1023 | 55296), t = 56320 | 1023 & t), e + k(t);
              }).join("");
            }

            function R(t, e) {
              return t + 22 + 75 * (t < 26) - ((0 != e) << 5);
            }

            function I(t, e, n) {
              var r = 0;

              for (t = n ? _(t / p) : t >> 1, t += _(t / e); t > w * l >> 1; r += s) {
                t = _(t / w);
              }

              return _(r + (w + 1) * t / (t + h));
            }

            function C(t) {
              var e,
                  n,
                  r,
                  i,
                  o,
                  u,
                  a,
                  h,
                  p,
                  g,
                  m,
                  b = [],
                  x = t.length,
                  w = 0,
                  k = d,
                  O = v;

              for ((n = t.lastIndexOf(y)) < 0 && (n = 0), r = 0; r < n; ++r) {
                t.charCodeAt(r) >= 128 && S("not-basic"), b.push(t.charCodeAt(r));
              }

              for (i = n > 0 ? n + 1 : 0; i < x;) {
                for (o = w, u = 1, a = s; i >= x && S("invalid-input"), ((h = (m = t.charCodeAt(i++)) - 48 < 10 ? m - 22 : m - 65 < 26 ? m - 65 : m - 97 < 26 ? m - 97 : s) >= s || h > _((c - w) / u)) && S("overflow"), w += h * u, !(h < (p = a <= O ? f : a >= O + l ? l : a - O)); a += s) {
                  u > _(c / (g = s - p)) && S("overflow"), u *= g;
                }

                O = I(w - o, e = b.length + 1, 0 == o), _(w / e) > c - k && S("overflow"), k += _(w / e), w %= e, b.splice(w++, 0, k);
              }

              return A(b);
            }

            function P(t) {
              var e,
                  n,
                  r,
                  i,
                  o,
                  u,
                  a,
                  h,
                  p,
                  g,
                  m,
                  b,
                  x,
                  w,
                  O,
                  E = [];

              for (b = (t = j(t)).length, e = d, n = 0, o = v, u = 0; u < b; ++u) {
                (m = t[u]) < 128 && E.push(k(m));
              }

              for (r = i = E.length, i && E.push(y); r < b;) {
                for (a = c, u = 0; u < b; ++u) {
                  (m = t[u]) >= e && m < a && (a = m);
                }

                for (a - e > _((c - n) / (x = r + 1)) && S("overflow"), n += (a - e) * x, e = a, u = 0; u < b; ++u) {
                  if ((m = t[u]) < e && ++n > c && S("overflow"), m == e) {
                    for (h = n, p = s; !(h < (g = p <= o ? f : p >= o + l ? l : p - o)); p += s) {
                      O = h - g, w = s - g, E.push(k(R(g + O % w, 0))), h = _(O / w);
                    }

                    E.push(k(R(h, 0))), o = I(n, x, r == i), n = 0, ++r;
                  }
                }

                ++n, ++e;
              }

              return E.join("");
            }

            a = {
              version: "1.4.1",
              ucs2: {
                decode: j,
                encode: A
              },
              decode: C,
              encode: P,
              toASCII: function toASCII(t) {
                return E(t, function (t) {
                  return m.test(t) ? "xn--" + P(t) : t;
                });
              },
              toUnicode: function toUnicode(t) {
                return E(t, function (t) {
                  return g.test(t) ? C(t.slice(4).toLowerCase()) : t;
                });
              }
            }, void 0 === (i = function () {
              return a;
            }.call(e, n, e, t)) || (t.exports = i);
          }();
        }).call(this, n(147)(t), n(70));
      }, function (t, e, n) {
        "use strict";

        t.exports = {
          isString: function isString(t) {
            return "string" === typeof t;
          },
          isObject: function isObject(t) {
            return "object" === typeof t && null !== t;
          },
          isNull: function isNull(t) {
            return null === t;
          },
          isNullOrUndefined: function isNullOrUndefined(t) {
            return null == t;
          }
        };
      }, function (t, e, n) {
        var r,
            i,
            o = n(148),
            u = n(149),
            a = 0,
            c = 0;

        t.exports = function (t, e, n) {
          var s = e && n || 0,
              f = e || [],
              l = (t = t || {}).node || r,
              h = void 0 !== t.clockseq ? t.clockseq : i;

          if (null == l || null == h) {
            var p = o();
            null == l && (l = r = [1 | p[0], p[1], p[2], p[3], p[4], p[5]]), null == h && (h = i = 16383 & (p[6] << 8 | p[7]));
          }

          var v = void 0 !== t.msecs ? t.msecs : new Date().getTime(),
              d = void 0 !== t.nsecs ? t.nsecs : c + 1,
              y = v - a + (d - c) / 1e4;
          if (y < 0 && void 0 === t.clockseq && (h = h + 1 & 16383), (y < 0 || v > a) && void 0 === t.nsecs && (d = 0), d >= 1e4) throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");
          a = v, c = d, i = h;
          var g = (1e4 * (268435455 & (v += 122192928e5)) + d) % 4294967296;
          f[s++] = g >>> 24 & 255, f[s++] = g >>> 16 & 255, f[s++] = g >>> 8 & 255, f[s++] = 255 & g;
          var m = v / 4294967296 * 1e4 & 268435455;
          f[s++] = m >>> 8 & 255, f[s++] = 255 & m, f[s++] = m >>> 24 & 15 | 16, f[s++] = m >>> 16 & 255, f[s++] = h >>> 8 | 128, f[s++] = 255 & h;

          for (var b = 0; b < 6; ++b) {
            f[s + b] = l[b];
          }

          return e || u(f);
        };
      }, function (t, e, n) {
        var r = n(148),
            i = n(149);

        t.exports = function (t, e, n) {
          var o = e && n || 0;
          "string" == typeof t && (e = "binary" === t ? new Array(16) : null, t = null);
          var u = (t = t || {}).random || (t.rng || r)();
          if (u[6] = 15 & u[6] | 64, u[8] = 63 & u[8] | 128, e) for (var a = 0; a < 16; ++a) {
            e[o + a] = u[a];
          }
          return e || i(u);
        };
      }, function (t, e) {
        t.exports = function (t, e) {
          if (null == t) return {};
          var n,
              r,
              i = {},
              o = Object.keys(t);

          for (r = 0; r < o.length; r++) {
            n = o[r], e.indexOf(n) >= 0 || (i[n] = t[n]);
          }

          return i;
        };
      }, function (t, e) {
        t.exports = function (t) {
          return -1 !== Function.toString.call(t).indexOf("[native code]");
        };
      }, function (t, e) {
        t.exports = function () {
          var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          return function (t) {
            function e(t, e, n, r, i, o) {
              return e = h(h(e, t), h(r, o)), h(e << i | e >>> 32 - i, n);
            }

            function n(t, n, r, i, o, u, a) {
              return e(n & r | ~n & i, t, n, o, u, a);
            }

            function r(t, n, r, i, o, u, a) {
              return e(n & i | r & ~i, t, n, o, u, a);
            }

            function i(t, n, r, i, o, u, a) {
              return e(n ^ r ^ i, t, n, o, u, a);
            }

            function o(t, n, r, i, o, u, a) {
              return e(r ^ (n | ~i), t, n, o, u, a);
            }

            function u(t, e) {
              var u = t[0],
                  a = t[1],
                  c = t[2],
                  s = t[3];
              u = n(u, a, c, s, e[0], 7, -680876936), s = n(s, u, a, c, e[1], 12, -389564586), c = n(c, s, u, a, e[2], 17, 606105819), a = n(a, c, s, u, e[3], 22, -1044525330), u = n(u, a, c, s, e[4], 7, -176418897), s = n(s, u, a, c, e[5], 12, 1200080426), c = n(c, s, u, a, e[6], 17, -1473231341), a = n(a, c, s, u, e[7], 22, -45705983), u = n(u, a, c, s, e[8], 7, 1770035416), s = n(s, u, a, c, e[9], 12, -1958414417), c = n(c, s, u, a, e[10], 17, -42063), a = n(a, c, s, u, e[11], 22, -1990404162), u = n(u, a, c, s, e[12], 7, 1804603682), s = n(s, u, a, c, e[13], 12, -40341101), c = n(c, s, u, a, e[14], 17, -1502002290), u = r(u, a = n(a, c, s, u, e[15], 22, 1236535329), c, s, e[1], 5, -165796510), s = r(s, u, a, c, e[6], 9, -1069501632), c = r(c, s, u, a, e[11], 14, 643717713), a = r(a, c, s, u, e[0], 20, -373897302), u = r(u, a, c, s, e[5], 5, -701558691), s = r(s, u, a, c, e[10], 9, 38016083), c = r(c, s, u, a, e[15], 14, -660478335), a = r(a, c, s, u, e[4], 20, -405537848), u = r(u, a, c, s, e[9], 5, 568446438), s = r(s, u, a, c, e[14], 9, -1019803690), c = r(c, s, u, a, e[3], 14, -187363961), a = r(a, c, s, u, e[8], 20, 1163531501), u = r(u, a, c, s, e[13], 5, -1444681467), s = r(s, u, a, c, e[2], 9, -51403784), c = r(c, s, u, a, e[7], 14, 1735328473), u = i(u, a = r(a, c, s, u, e[12], 20, -1926607734), c, s, e[5], 4, -378558), s = i(s, u, a, c, e[8], 11, -2022574463), c = i(c, s, u, a, e[11], 16, 1839030562), a = i(a, c, s, u, e[14], 23, -35309556), u = i(u, a, c, s, e[1], 4, -1530992060), s = i(s, u, a, c, e[4], 11, 1272893353), c = i(c, s, u, a, e[7], 16, -155497632), a = i(a, c, s, u, e[10], 23, -1094730640), u = i(u, a, c, s, e[13], 4, 681279174), s = i(s, u, a, c, e[0], 11, -358537222), c = i(c, s, u, a, e[3], 16, -722521979), a = i(a, c, s, u, e[6], 23, 76029189), u = i(u, a, c, s, e[9], 4, -640364487), s = i(s, u, a, c, e[12], 11, -421815835), c = i(c, s, u, a, e[15], 16, 530742520), u = o(u, a = i(a, c, s, u, e[2], 23, -995338651), c, s, e[0], 6, -198630844), s = o(s, u, a, c, e[7], 10, 1126891415), c = o(c, s, u, a, e[14], 15, -1416354905), a = o(a, c, s, u, e[5], 21, -57434055), u = o(u, a, c, s, e[12], 6, 1700485571), s = o(s, u, a, c, e[3], 10, -1894986606), c = o(c, s, u, a, e[10], 15, -1051523), a = o(a, c, s, u, e[1], 21, -2054922799), u = o(u, a, c, s, e[8], 6, 1873313359), s = o(s, u, a, c, e[15], 10, -30611744), c = o(c, s, u, a, e[6], 15, -1560198380), a = o(a, c, s, u, e[13], 21, 1309151649), u = o(u, a, c, s, e[4], 6, -145523070), s = o(s, u, a, c, e[11], 10, -1120210379), c = o(c, s, u, a, e[2], 15, 718787259), a = o(a, c, s, u, e[9], 21, -343485551), t[0] = h(u, t[0]), t[1] = h(a, t[1]), t[2] = h(c, t[2]), t[3] = h(s, t[3]);
            }

            function a(t) {
              var e,
                  n = t.length,
                  r = [1732584193, -271733879, -1732584194, 271733878];

              for (e = 64; e <= n; e += 64) {
                u(r, c(t.substring(e - 64, e)));
              }

              var i = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                  o = (t = t.substring(e - 64)).length;

              for (e = 0; e < o; e++) {
                i[e >> 2] |= t.charCodeAt(e) << (e % 4 << 3);
              }

              if (i[e >> 2] |= 128 << (e % 4 << 3), e > 55) for (u(r, i), e = 16; e--;) {
                i[e] = 0;
              }
              return i[14] = 8 * n, u(r, i), r;
            }

            function c(t) {
              var e,
                  n = [];

              for (e = 0; e < 64; e += 4) {
                n[e >> 2] = t.charCodeAt(e) + (t.charCodeAt(e + 1) << 8) + (t.charCodeAt(e + 2) << 16) + (t.charCodeAt(e + 3) << 24);
              }

              return n;
            }

            var s = "0123456789abcdef".split("");

            function f(t) {
              for (var e = "", n = 0; n < 4; n++) {
                e += s[t >> 8 * n + 4 & 15] + s[t >> 8 * n & 15];
              }

              return e;
            }

            function l(t) {
              for (var e = t.length, n = 0; n < e; n++) {
                t[n] = f(t[n]);
              }

              return t.join("");
            }

            function h(t, e) {
              return t + e & 4294967295;
            }

            return l(a("hello")), l(a(t));
          }(JSON.stringify(t, null));
        };
      }, function (module, exports, __webpack_require__) {
        var indexOf = __webpack_require__(348),
            Object_keys = function Object_keys(t) {
          if (Object.keys) return Object.keys(t);
          var e = [];

          for (var n in t) {
            e.push(n);
          }

          return e;
        },
            forEach = function forEach(t, e) {
          if (t.forEach) return t.forEach(e);

          for (var n = 0; n < t.length; n++) {
            e(t[n], n, t);
          }
        },
            defineProp = function () {
          try {
            return Object.defineProperty({}, "_", {}), function (t, e, n) {
              Object.defineProperty(t, e, {
                writable: !0,
                enumerable: !1,
                configurable: !0,
                value: n
              });
            };
          } catch (t) {
            return function (t, e, n) {
              t[e] = n;
            };
          }
        }(),
            globals = ["Array", "Boolean", "Date", "Error", "EvalError", "Function", "Infinity", "JSON", "Math", "NaN", "Number", "Object", "RangeError", "ReferenceError", "RegExp", "String", "SyntaxError", "TypeError", "URIError", "decodeURI", "decodeURIComponent", "encodeURI", "encodeURIComponent", "escape", "eval", "isFinite", "isNaN", "parseFloat", "parseInt", "undefined", "unescape"];

        function Context() {}

        Context.prototype = {};

        var Script = exports.Script = function (t) {
          if (!(this instanceof Script)) return new Script(t);
          this.code = t;
        };

        Script.prototype.runInContext = function (t) {
          if (!(t instanceof Context)) throw new TypeError("needs a 'context' argument.");
          var e = document.createElement("iframe");
          e.style || (e.style = {}), e.style.display = "none", document.body.appendChild(e);
          var n = e.contentWindow,
              r = n.eval,
              i = n.execScript;
          !r && i && (i.call(n, "null"), r = n.eval), forEach(Object_keys(t), function (e) {
            n[e] = t[e];
          }), forEach(globals, function (e) {
            t[e] && (n[e] = t[e]);
          });
          var o = Object_keys(n),
              u = r.call(n, this.code);
          return forEach(Object_keys(n), function (e) {
            (e in t || -1 === indexOf(o, e)) && (t[e] = n[e]);
          }), forEach(globals, function (e) {
            e in t || defineProp(t, e, n[e]);
          }), document.body.removeChild(e), u;
        }, Script.prototype.runInThisContext = function () {
          return eval(this.code);
        }, Script.prototype.runInNewContext = function (t) {
          var e = Script.createContext(t),
              n = this.runInContext(e);
          return forEach(Object_keys(e), function (n) {
            t[n] = e[n];
          }), n;
        }, forEach(Object_keys(Script.prototype), function (t) {
          exports[t] = Script[t] = function (e) {
            var n = Script(e);
            return n[t].apply(n, [].slice.call(arguments, 1));
          };
        }), exports.createScript = function (t) {
          return exports.Script(t);
        }, exports.createContext = Script.createContext = function (t) {
          var e = new Context();
          return "object" === typeof t && forEach(Object_keys(t), function (n) {
            e[n] = t[n];
          }), e;
        };
      }, function (t, e) {
        var n = [].indexOf;

        t.exports = function (t, e) {
          if (n) return t.indexOf(e);

          for (var r = 0; r < t.length; ++r) {
            if (t[r] === e) return r;
          }

          return -1;
        };
      }, function (module, exports) {
        var indexOf = function indexOf(t, e) {
          if (t.indexOf) return t.indexOf(e);

          for (var n = 0; n < t.length; n++) {
            if (t[n] === e) return n;
          }

          return -1;
        },
            Object_keys = function Object_keys(t) {
          if (Object.keys) return Object.keys(t);
          var e = [];

          for (var n in t) {
            e.push(n);
          }

          return e;
        },
            forEach = function forEach(t, e) {
          if (t.forEach) return t.forEach(e);

          for (var n = 0; n < t.length; n++) {
            e(t[n], n, t);
          }
        },
            defineProp = function () {
          try {
            return Object.defineProperty({}, "_", {}), function (t, e, n) {
              Object.defineProperty(t, e, {
                writable: !0,
                enumerable: !1,
                configurable: !0,
                value: n
              });
            };
          } catch (t) {
            return function (t, e, n) {
              t[e] = n;
            };
          }
        }(),
            globals = ["Array", "Boolean", "Date", "Error", "EvalError", "Function", "Infinity", "JSON", "Math", "NaN", "Number", "Object", "RangeError", "ReferenceError", "RegExp", "String", "SyntaxError", "TypeError", "URIError", "decodeURI", "decodeURIComponent", "encodeURI", "encodeURIComponent", "escape", "eval", "isFinite", "isNaN", "parseFloat", "parseInt", "undefined", "unescape"];

        function Context() {}

        Context.prototype = {};

        var Script = exports.Script = function (t) {
          if (!(this instanceof Script)) return new Script(t);
          this.code = t;
        };

        Script.prototype.runInContext = function (t) {
          if (!(t instanceof Context)) throw new TypeError("needs a 'context' argument.");
          var e = document.createElement("iframe");
          e.style || (e.style = {}), e.style.display = "none", document.body.appendChild(e);
          var n = e.contentWindow,
              r = n.eval,
              i = n.execScript;
          !r && i && (i.call(n, "null"), r = n.eval), forEach(Object_keys(t), function (e) {
            n[e] = t[e];
          }), forEach(globals, function (e) {
            t[e] && (n[e] = t[e]);
          });
          var o = Object_keys(n),
              u = r.call(n, this.code);
          return forEach(Object_keys(n), function (e) {
            (e in t || -1 === indexOf(o, e)) && (t[e] = n[e]);
          }), forEach(globals, function (e) {
            e in t || defineProp(t, e, n[e]);
          }), document.body.removeChild(e), u;
        }, Script.prototype.runInThisContext = function () {
          return eval(this.code);
        }, Script.prototype.runInNewContext = function (t) {
          var e = Script.createContext(t),
              n = this.runInContext(e);
          return t && forEach(Object_keys(e), function (n) {
            t[n] = e[n];
          }), n;
        }, forEach(Object_keys(Script.prototype), function (t) {
          exports[t] = Script[t] = function (e) {
            var n = Script(e);
            return n[t].apply(n, [].slice.call(arguments, 1));
          };
        }), exports.isContext = function (t) {
          return t instanceof Context;
        }, exports.createScript = function (t) {
          return exports.Script(t);
        }, exports.createContext = Script.createContext = function (t) {
          var e = new Context();
          return "object" === typeof t && forEach(Object_keys(t), function (n) {
            e[n] = t[n];
          }), e;
        };
      }]);
    }, module.exports = e();
  }, function (t, e, n) {
    "use strict";

    t.exports = function (t, e) {
      return function () {
        for (var n = new Array(arguments.length), r = 0; r < n.length; r++) {
          n[r] = arguments[r];
        }

        return t.apply(e, n);
      };
    };
  }, function (t, e, n) {
    "use strict";

    var r = n(0);

    function i(t) {
      return encodeURIComponent(t).replace(/%40/gi, "@").replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
    }

    t.exports = function (t, e, n) {
      if (!e) return t;
      var o;
      if (n) o = n(e);else if (r.isURLSearchParams(e)) o = e.toString();else {
        var u = [];
        r.forEach(e, function (t, e) {
          null !== t && "undefined" !== typeof t && (r.isArray(t) ? e += "[]" : t = [t], r.forEach(t, function (t) {
            r.isDate(t) ? t = t.toISOString() : r.isObject(t) && (t = JSON.stringify(t)), u.push(i(e) + "=" + i(t));
          }));
        }), o = u.join("&");
      }

      if (o) {
        var a = t.indexOf("#");
        -1 !== a && (t = t.slice(0, a)), t += (-1 === t.indexOf("?") ? "?" : "&") + o;
      }

      return t;
    };
  }, function (t, e, n) {
    "use strict";

    t.exports = function (t) {
      return !(!t || !t.__CANCEL__);
    };
  }, function (t, e, n) {
    "use strict";

    (function (e) {
      var r = n(0),
          i = n(31),
          o = {
        "Content-Type": "application/x-www-form-urlencoded"
      };

      function u(t, e) {
        !r.isUndefined(t) && r.isUndefined(t["Content-Type"]) && (t["Content-Type"] = e);
      }

      var a = {
        adapter: function () {
          var t;
          return "undefined" !== typeof e && "[object process]" === Object.prototype.toString.call(e) ? t = n(10) : "undefined" !== typeof XMLHttpRequest && (t = n(10)), t;
        }(),
        transformRequest: [function (t, e) {
          return i(e, "Accept"), i(e, "Content-Type"), r.isFormData(t) || r.isArrayBuffer(t) || r.isBuffer(t) || r.isStream(t) || r.isFile(t) || r.isBlob(t) ? t : r.isArrayBufferView(t) ? t.buffer : r.isURLSearchParams(t) ? (u(e, "application/x-www-form-urlencoded;charset=utf-8"), t.toString()) : r.isObject(t) ? (u(e, "application/json;charset=utf-8"), JSON.stringify(t)) : t;
        }],
        transformResponse: [function (t) {
          if ("string" === typeof t) try {
            t = JSON.parse(t);
          } catch (e) {}
          return t;
        }],
        timeout: 0,
        xsrfCookieName: "XSRF-TOKEN",
        xsrfHeaderName: "X-XSRF-TOKEN",
        maxContentLength: -1,
        validateStatus: function validateStatus(t) {
          return t >= 200 && t < 300;
        },
        headers: {
          common: {
            Accept: "application/json, text/plain, */*"
          }
        }
      };
      r.forEach(["delete", "get", "head"], function (t) {
        a.headers[t] = {};
      }), r.forEach(["post", "put", "patch"], function (t) {
        a.headers[t] = r.merge(o);
      }), t.exports = a;
    }).call(this, n(30));
  }, function (t, e, n) {
    "use strict";

    var r = n(0),
        i = n(32),
        o = n(7),
        u = n(34),
        a = n(35),
        c = n(11);

    t.exports = function (t) {
      return new Promise(function (e, s) {
        var f = t.data,
            l = t.headers;
        r.isFormData(f) && delete l["Content-Type"];
        var h = new XMLHttpRequest();

        if (t.auth) {
          var p = t.auth.username || "",
              v = t.auth.password || "";
          l.Authorization = "Basic " + btoa(p + ":" + v);
        }

        if (h.open(t.method.toUpperCase(), o(t.url, t.params, t.paramsSerializer), !0), h.timeout = t.timeout, h.onreadystatechange = function () {
          if (h && 4 === h.readyState && (0 !== h.status || h.responseURL && 0 === h.responseURL.indexOf("file:"))) {
            var n = "getAllResponseHeaders" in h ? u(h.getAllResponseHeaders()) : null,
                r = {
              data: t.responseType && "text" !== t.responseType ? h.response : h.responseText,
              status: h.status,
              statusText: h.statusText,
              headers: n,
              config: t,
              request: h
            };
            i(e, s, r), h = null;
          }
        }, h.onabort = function () {
          h && (s(c("Request aborted", t, "ECONNABORTED", h)), h = null);
        }, h.onerror = function () {
          s(c("Network Error", t, null, h)), h = null;
        }, h.ontimeout = function () {
          s(c("timeout of " + t.timeout + "ms exceeded", t, "ECONNABORTED", h)), h = null;
        }, r.isStandardBrowserEnv()) {
          var d = n(36),
              y = (t.withCredentials || a(t.url)) && t.xsrfCookieName ? d.read(t.xsrfCookieName) : void 0;
          y && (l[t.xsrfHeaderName] = y);
        }

        if ("setRequestHeader" in h && r.forEach(l, function (t, e) {
          "undefined" === typeof f && "content-type" === e.toLowerCase() ? delete l[e] : h.setRequestHeader(e, t);
        }), t.withCredentials && (h.withCredentials = !0), t.responseType) try {
          h.responseType = t.responseType;
        } catch (g) {
          if ("json" !== t.responseType) throw g;
        }
        "function" === typeof t.onDownloadProgress && h.addEventListener("progress", t.onDownloadProgress), "function" === typeof t.onUploadProgress && h.upload && h.upload.addEventListener("progress", t.onUploadProgress), t.cancelToken && t.cancelToken.promise.then(function (t) {
          h && (h.abort(), s(t), h = null);
        }), void 0 === f && (f = null), h.send(f);
      });
    };
  }, function (t, e, n) {
    "use strict";

    var r = n(33);

    t.exports = function (t, e, n, i, o) {
      var u = new Error(t);
      return r(u, e, n, i, o);
    };
  }, function (t, e, n) {
    "use strict";

    var r = n(0);

    t.exports = function (t, e) {
      e = e || {};
      var n = {};
      return r.forEach(["url", "method", "params", "data"], function (t) {
        "undefined" !== typeof e[t] && (n[t] = e[t]);
      }), r.forEach(["headers", "auth", "proxy"], function (i) {
        r.isObject(e[i]) ? n[i] = r.deepMerge(t[i], e[i]) : "undefined" !== typeof e[i] ? n[i] = e[i] : r.isObject(t[i]) ? n[i] = r.deepMerge(t[i]) : "undefined" !== typeof t[i] && (n[i] = t[i]);
      }), r.forEach(["baseURL", "transformRequest", "transformResponse", "paramsSerializer", "timeout", "withCredentials", "adapter", "responseType", "xsrfCookieName", "xsrfHeaderName", "onUploadProgress", "onDownloadProgress", "maxContentLength", "validateStatus", "maxRedirects", "httpAgent", "httpsAgent", "cancelToken", "socketPath"], function (r) {
        "undefined" !== typeof e[r] ? n[r] = e[r] : "undefined" !== typeof t[r] && (n[r] = t[r]);
      }), n;
    };
  }, function (t, e, n) {
    "use strict";

    function r(t) {
      this.message = t;
    }

    r.prototype.toString = function () {
      return "Cancel" + (this.message ? ": " + this.message : "");
    }, r.prototype.__CANCEL__ = !0, t.exports = r;
  }, function (t, e) {
    t.exports = function (t, e) {
      if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
    };
  }, function (t, e) {
    function n(t, e) {
      for (var n = 0; n < e.length; n++) {
        var r = e[n];
        r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r);
      }
    }

    t.exports = function (t, e, r) {
      return e && n(t.prototype, e), r && n(t, r), t;
    };
  }, function (t, e, n) {
    var r = n(4),
        i = n(22);

    t.exports = function (t, e) {
      return !e || "object" !== r(e) && "function" !== typeof e ? i(t) : e;
    };
  }, function (t, e) {
    function n(e) {
      return t.exports = n = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {
        return t.__proto__ || Object.getPrototypeOf(t);
      }, n(e);
    }

    t.exports = n;
  }, function (t, e, n) {
    var r = n(23);

    t.exports = function (t, e) {
      if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
      t.prototype = Object.create(e && e.prototype, {
        constructor: {
          value: t,
          writable: !0,
          configurable: !0
        }
      }), e && r(t, e);
    };
  }, function (t, e, n) {
    t.exports = n(20);
  }, function (t, e, n) {
    "use strict";

    n.r(e), n.d(e, "attach", function () {
      return o;
    });
    var r = n(5),
        i = n.n(r);

    function o(t) {
      t.use(n(21));
    }

    i.a.isBrowser && o(i.a);
  }, function (t, e, n) {
    "use strict";

    n.r(e), n.d(e, "attach", function () {
      return w;
    });
    var r = n(4),
        i = n.n(r),
        o = n(3),
        u = n.n(o),
        a = n(14),
        c = n.n(a),
        s = n(15),
        f = n.n(s),
        l = n(16),
        h = n.n(l),
        p = n(17),
        v = n.n(p),
        d = n(18),
        y = n.n(d),
        g = n(1),
        m = n.n(g),
        b = n(2),
        x = n.n(b);

    function w(t) {
      var e = t.Helper;
      t.has("axios") || t.hide("axios", x.a);

      var n = function (t) {
        function n() {
          return c()(this, n), h()(this, v()(n).apply(this, arguments));
        }

        return y()(n, t), f()(n, [{
          key: "initialize",
          value: function value() {
            var t = this;

            try {
              if (this.tryGet("initialize")) this.tryGet("initialize").call(this, this.options, this.context);else this.lazy("client", function () {
                return t.createProviderClient(t.options, t.context);
              });
            } catch (e) {
              this.initializationError = e;
            }

            try {
              this.applyInterface(this.interface, u()({
                insertOptions: !1,
                partial: [],
                scope: this
              }, this.tryResult("interfaceOptions", {})));
            } catch (e) {
              this.interfaceError = e;
            }
          }
        }, {
          key: "fetch",
          value: function value() {
            return this.client.apply(this, arguments);
          }
        }, {
          key: "GET",
          value: function value() {
            var t;
            return (t = this.client).get.apply(t, arguments);
          }
        }, {
          key: "PUT",
          value: function value() {
            var t;
            return (t = this.client).put.apply(t, arguments);
          }
        }, {
          key: "PATCH",
          value: function value() {
            var t;
            return (t = this.client).patch.apply(t, arguments);
          }
        }, {
          key: "DELETE",
          value: function value() {
            var t;
            return (t = this.client).delete.apply(t, arguments);
          }
        }, {
          key: "OPTIONS",
          value: function value() {
            var t;
            return (t = this.client).options.apply(t, arguments);
          }
        }, {
          key: "POST",
          value: function value() {
            var t;
            return (t = this.client).post.apply(t, arguments);
          }
        }, {
          key: "createProviderClient",
          value: function value() {
            var t = this,
                e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
            return (this.tryGet("createClient") || function () {
              return t.createAxiosClient(e);
            }).call(this, e);
          }
        }, {
          key: "createAxiosClient",
          value: function value() {
            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                e = this.lodash.pick(u()({
              baseURL: this.baseURL
            }, this.options, this.get("options.axios", {}), this.get("options.axiosOptions", {}), t), "adapter", "transformRequest", "transformResponse", "timeout", "xsrfCookieName", "xsrfHeaderName", "maxContentLength", "validateStatus", "headers", "baseURL");
            return x.a.create(e);
          }
        }, {
          key: "headers",
          value: function value() {
            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                e = this.lodash,
                n = e.mapValues,
                r = e.omit,
                i = this.client;
            n(r(t, "common", "get", "post", "put"), function (t, e) {
              i.defaults.headers.common[e] = t;
            }), n(t.common || {}, function (t, e) {
              i.defaults.headers.common[e] = t;
            }), n(t.post || {}, function (t, e) {
              i.defaults.headers.post[e] = t;
            }), n(t.put || {}, function (t, e) {
              i.defaults.headers.put[e] = t;
            }), n(t.get || {}, function (t, e) {
              i.defaults.headers.get[e] = t;
            });
          }
        }, {
          key: "interface",
          get: function get() {
            var t = this;
            return this.tryResult("interface", function () {
              var e = t.tryResult("methods", function () {
                return t.tryResult("interfaceMethods");
              }) || [];
              return t.chain.plant(e).keyBy(function (t) {
                return t;
              }).mapValues(function (e) {
                return t.tryGet(e);
              }).pickBy(function (t) {
                return "function" === typeof t;
              }).value();
            });
          }
        }, {
          key: "baseUrl",
          get: function get() {
            return this.tryResult("baseUrl") || this.tryResult("baseURL");
          }
        }, {
          key: "baseURL",
          get: function get() {
            return this.baseUrl;
          }
        }, {
          key: "axios",
          get: function get() {
            return x.a;
          }
        }], [{
          key: "attach",
          value: function value(t) {
            var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            return e.attach(t, n, u()({
              registry: e.createContextRegistry("clients", {
                context: e.createMockContext()
              })
            }, r));
          }
        }]), n;
      }(e);

      m()(n, "isCacheable", !0), m()(n, "allowAnonymousProviders", !0), m()(n, "strictMode", !1), m()(n, "axios", x.a), t.setState({
        typeofClient: i()(n)
      });

      try {
        e.registerHelper("client", function () {
          return n;
        }), e.attach(t, n, {
          registry: e.createContextRegistry("clients", {
            context: e.createMockContext()
          }),
          registryProp: "clients",
          lookupProp: "client"
        });
      } catch (r) {
        t.setState({
          error: r
        });
      }

      return t;
    }
  }, function (t, e) {
    t.exports = function (t) {
      if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return t;
    };
  }, function (t, e) {
    function n(e, r) {
      return t.exports = n = Object.setPrototypeOf || function (t, e) {
        return t.__proto__ = e, t;
      }, n(e, r);
    }

    t.exports = n;
  }, function (t, e, n) {
    "use strict";

    var r = n(0),
        i = n(6),
        o = n(26),
        u = n(12);

    function a(t) {
      var e = new o(t),
          n = i(o.prototype.request, e);
      return r.extend(n, o.prototype, e), r.extend(n, e), n;
    }

    var c = a(n(9));
    c.Axios = o, c.create = function (t) {
      return a(u(c.defaults, t));
    }, c.Cancel = n(13), c.CancelToken = n(39), c.isCancel = n(8), c.all = function (t) {
      return Promise.all(t);
    }, c.spread = n(40), t.exports = c, t.exports.default = c;
  }, function (t, e) {
    t.exports = function (t) {
      return null != t && null != t.constructor && "function" === typeof t.constructor.isBuffer && t.constructor.isBuffer(t);
    };
  }, function (t, e, n) {
    "use strict";

    var r = n(0),
        i = n(7),
        o = n(27),
        u = n(28),
        a = n(12);

    function c(t) {
      this.defaults = t, this.interceptors = {
        request: new o(),
        response: new o()
      };
    }

    c.prototype.request = function (t) {
      "string" === typeof t ? (t = arguments[1] || {}).url = arguments[0] : t = t || {}, (t = a(this.defaults, t)).method = t.method ? t.method.toLowerCase() : "get";
      var e = [u, void 0],
          n = Promise.resolve(t);

      for (this.interceptors.request.forEach(function (t) {
        e.unshift(t.fulfilled, t.rejected);
      }), this.interceptors.response.forEach(function (t) {
        e.push(t.fulfilled, t.rejected);
      }); e.length;) {
        n = n.then(e.shift(), e.shift());
      }

      return n;
    }, c.prototype.getUri = function (t) {
      return t = a(this.defaults, t), i(t.url, t.params, t.paramsSerializer).replace(/^\?/, "");
    }, r.forEach(["delete", "get", "head", "options"], function (t) {
      c.prototype[t] = function (e, n) {
        return this.request(r.merge(n || {}, {
          method: t,
          url: e
        }));
      };
    }), r.forEach(["post", "put", "patch"], function (t) {
      c.prototype[t] = function (e, n, i) {
        return this.request(r.merge(i || {}, {
          method: t,
          url: e,
          data: n
        }));
      };
    }), t.exports = c;
  }, function (t, e, n) {
    "use strict";

    var r = n(0);

    function i() {
      this.handlers = [];
    }

    i.prototype.use = function (t, e) {
      return this.handlers.push({
        fulfilled: t,
        rejected: e
      }), this.handlers.length - 1;
    }, i.prototype.eject = function (t) {
      this.handlers[t] && (this.handlers[t] = null);
    }, i.prototype.forEach = function (t) {
      r.forEach(this.handlers, function (e) {
        null !== e && t(e);
      });
    }, t.exports = i;
  }, function (t, e, n) {
    "use strict";

    var r = n(0),
        i = n(29),
        o = n(8),
        u = n(9),
        a = n(37),
        c = n(38);

    function s(t) {
      t.cancelToken && t.cancelToken.throwIfRequested();
    }

    t.exports = function (t) {
      return s(t), t.baseURL && !a(t.url) && (t.url = c(t.baseURL, t.url)), t.headers = t.headers || {}, t.data = i(t.data, t.headers, t.transformRequest), t.headers = r.merge(t.headers.common || {}, t.headers[t.method] || {}, t.headers || {}), r.forEach(["delete", "get", "head", "post", "put", "patch", "common"], function (e) {
        delete t.headers[e];
      }), (t.adapter || u.adapter)(t).then(function (e) {
        return s(t), e.data = i(e.data, e.headers, t.transformResponse), e;
      }, function (e) {
        return o(e) || (s(t), e && e.response && (e.response.data = i(e.response.data, e.response.headers, t.transformResponse))), Promise.reject(e);
      });
    };
  }, function (t, e, n) {
    "use strict";

    var r = n(0);

    t.exports = function (t, e, n) {
      return r.forEach(n, function (n) {
        t = n(t, e);
      }), t;
    };
  }, function (t, e) {
    var n,
        r,
        i = t.exports = {};

    function o() {
      throw new Error("setTimeout has not been defined");
    }

    function u() {
      throw new Error("clearTimeout has not been defined");
    }

    function a(t) {
      if (n === setTimeout) return setTimeout(t, 0);
      if ((n === o || !n) && setTimeout) return n = setTimeout, setTimeout(t, 0);

      try {
        return n(t, 0);
      } catch (e) {
        try {
          return n.call(null, t, 0);
        } catch (e) {
          return n.call(this, t, 0);
        }
      }
    }

    !function () {
      try {
        n = "function" === typeof setTimeout ? setTimeout : o;
      } catch (t) {
        n = o;
      }

      try {
        r = "function" === typeof clearTimeout ? clearTimeout : u;
      } catch (t) {
        r = u;
      }
    }();
    var c,
        s = [],
        f = !1,
        l = -1;

    function h() {
      f && c && (f = !1, c.length ? s = c.concat(s) : l = -1, s.length && p());
    }

    function p() {
      if (!f) {
        var t = a(h);
        f = !0;

        for (var e = s.length; e;) {
          for (c = s, s = []; ++l < e;) {
            c && c[l].run();
          }

          l = -1, e = s.length;
        }

        c = null, f = !1, function (t) {
          if (r === clearTimeout) return clearTimeout(t);
          if ((r === u || !r) && clearTimeout) return r = clearTimeout, clearTimeout(t);

          try {
            r(t);
          } catch (e) {
            try {
              return r.call(null, t);
            } catch (e) {
              return r.call(this, t);
            }
          }
        }(t);
      }
    }

    function v(t, e) {
      this.fun = t, this.array = e;
    }

    function d() {}

    i.nextTick = function (t) {
      var e = new Array(arguments.length - 1);
      if (arguments.length > 1) for (var n = 1; n < arguments.length; n++) {
        e[n - 1] = arguments[n];
      }
      s.push(new v(t, e)), 1 !== s.length || f || a(p);
    }, v.prototype.run = function () {
      this.fun.apply(null, this.array);
    }, i.title = "browser", i.browser = !0, i.env = {}, i.argv = [], i.version = "", i.versions = {}, i.on = d, i.addListener = d, i.once = d, i.off = d, i.removeListener = d, i.removeAllListeners = d, i.emit = d, i.prependListener = d, i.prependOnceListener = d, i.listeners = function (t) {
      return [];
    }, i.binding = function (t) {
      throw new Error("process.binding is not supported");
    }, i.cwd = function () {
      return "/";
    }, i.chdir = function (t) {
      throw new Error("process.chdir is not supported");
    }, i.umask = function () {
      return 0;
    };
  }, function (t, e, n) {
    "use strict";

    var r = n(0);

    t.exports = function (t, e) {
      r.forEach(t, function (n, r) {
        r !== e && r.toUpperCase() === e.toUpperCase() && (t[e] = n, delete t[r]);
      });
    };
  }, function (t, e, n) {
    "use strict";

    var r = n(11);

    t.exports = function (t, e, n) {
      var i = n.config.validateStatus;
      !i || i(n.status) ? t(n) : e(r("Request failed with status code " + n.status, n.config, null, n.request, n));
    };
  }, function (t, e, n) {
    "use strict";

    t.exports = function (t, e, n, r, i) {
      return t.config = e, n && (t.code = n), t.request = r, t.response = i, t.isAxiosError = !0, t.toJSON = function () {
        return {
          message: this.message,
          name: this.name,
          description: this.description,
          number: this.number,
          fileName: this.fileName,
          lineNumber: this.lineNumber,
          columnNumber: this.columnNumber,
          stack: this.stack,
          config: this.config,
          code: this.code
        };
      }, t;
    };
  }, function (t, e, n) {
    "use strict";

    var r = n(0),
        i = ["age", "authorization", "content-length", "content-type", "etag", "expires", "from", "host", "if-modified-since", "if-unmodified-since", "last-modified", "location", "max-forwards", "proxy-authorization", "referer", "retry-after", "user-agent"];

    t.exports = function (t) {
      var e,
          n,
          o,
          u = {};
      return t ? (r.forEach(t.split("\n"), function (t) {
        if (o = t.indexOf(":"), e = r.trim(t.substr(0, o)).toLowerCase(), n = r.trim(t.substr(o + 1)), e) {
          if (u[e] && i.indexOf(e) >= 0) return;
          u[e] = "set-cookie" === e ? (u[e] ? u[e] : []).concat([n]) : u[e] ? u[e] + ", " + n : n;
        }
      }), u) : u;
    };
  }, function (t, e, n) {
    "use strict";

    var r = n(0);
    t.exports = r.isStandardBrowserEnv() ? function () {
      var t,
          e = /(msie|trident)/i.test(navigator.userAgent),
          n = document.createElement("a");

      function i(t) {
        var r = t;
        return e && (n.setAttribute("href", r), r = n.href), n.setAttribute("href", r), {
          href: n.href,
          protocol: n.protocol ? n.protocol.replace(/:$/, "") : "",
          host: n.host,
          search: n.search ? n.search.replace(/^\?/, "") : "",
          hash: n.hash ? n.hash.replace(/^#/, "") : "",
          hostname: n.hostname,
          port: n.port,
          pathname: "/" === n.pathname.charAt(0) ? n.pathname : "/" + n.pathname
        };
      }

      return t = i(window.location.href), function (e) {
        var n = r.isString(e) ? i(e) : e;
        return n.protocol === t.protocol && n.host === t.host;
      };
    }() : function () {
      return !0;
    };
  }, function (t, e, n) {
    "use strict";

    var r = n(0);
    t.exports = r.isStandardBrowserEnv() ? {
      write: function write(t, e, n, i, o, u) {
        var a = [];
        a.push(t + "=" + encodeURIComponent(e)), r.isNumber(n) && a.push("expires=" + new Date(n).toGMTString()), r.isString(i) && a.push("path=" + i), r.isString(o) && a.push("domain=" + o), !0 === u && a.push("secure"), document.cookie = a.join("; ");
      },
      read: function read(t) {
        var e = document.cookie.match(new RegExp("(^|;\\s*)(" + t + ")=([^;]*)"));
        return e ? decodeURIComponent(e[3]) : null;
      },
      remove: function remove(t) {
        this.write(t, "", Date.now() - 864e5);
      }
    } : {
      write: function write() {},
      read: function read() {
        return null;
      },
      remove: function remove() {}
    };
  }, function (t, e, n) {
    "use strict";

    t.exports = function (t) {
      return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(t);
    };
  }, function (t, e, n) {
    "use strict";

    t.exports = function (t, e) {
      return e ? t.replace(/\/+$/, "") + "/" + e.replace(/^\/+/, "") : t;
    };
  }, function (t, e, n) {
    "use strict";

    var r = n(13);

    function i(t) {
      if ("function" !== typeof t) throw new TypeError("executor must be a function.");
      var e;
      this.promise = new Promise(function (t) {
        e = t;
      });
      var n = this;
      t(function (t) {
        n.reason || (n.reason = new r(t), e(n.reason));
      });
    }

    i.prototype.throwIfRequested = function () {
      if (this.reason) throw this.reason;
    }, i.source = function () {
      var t;
      return {
        token: new i(function (e) {
          t = e;
        }),
        cancel: t
      };
    }, t.exports = i;
  }, function (t, e, n) {
    "use strict";

    t.exports = function (t) {
      return function (e) {
        return t.apply(null, e);
      };
    };
  }]);
});

/***/ }),
/* 169 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AssetLoader; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(46);
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(170);
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(76);
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(92);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(93);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(94);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(95);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(75);
/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(96);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(61);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _skypager_runtime__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(69);
/**
 * @class AssetLoader
 * @extends Feature
 * @classdesc The AssetLoader feature provides async helpers for injecting static asset elements into the page,
 * as well as helpers for loading javascript packages into the global scope from unpkg.com
 */var AssetLoader=/*#__PURE__*/function(_Feature){_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_8___default()(AssetLoader,_Feature);function AssetLoader(){var _getPrototypeOf2;var _this;_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3___default()(this,AssetLoader);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5___default()(this,(_getPrototypeOf2=_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default()(AssetLoader)).call.apply(_getPrototypeOf2,[this].concat(args)));_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7___default()(_this),"shortcut",'assetLoader');return _this;}_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4___default()(AssetLoader,[{key:"initialize",value:function initialize(){var _this2=this;this.lazy('inject',function(){return _this2.lazyInject();});}/**
   * Injects an image tag into the DOM
   *
   * @param {String} url - the url of the image
   * @param {Object} [options={}] - options for element creation
   * @returns {PromiseLike<HtmlElement>}
   * @memberof AssetLoader
   */},{key:"image",value:function image(url){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return this.inject.img(url,options);}/**
   * Injects a stylesheet link tag into the DOM
   *
   * @param {String} url - the url of the stylesheet
   * @param {Object} [options={}] - options for element creation
   * @returns {PromiseLike<HtmlElement>}
   * @memberof AssetLoader
   */},{key:"css",value:function css(url){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return this.inject.css(url,options);}/**
   * Injects a stylesheet link tag into the DOM
   *
   * @param {String} url - the url of the stylesheet
   * @param {Object} [options={}] - options for element creation
   * @returns {PromiseLike<HtmlElement>}
   * @memberof AssetLoader
   */},{key:"stylesheet",value:function stylesheet(url){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return this.inject.css(url,options);}/**
   * Injects a script tag into the DOM
   *
   * @param {String} url - the url of the stylesheet
   * @param {Object} [options={}] - options for element creation
   * @returns {PromiseLike<HtmlElement>}
   * @memberof AssetLoader
   */},{key:"script",value:function script(url){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return this.inject.js(url,options);}/**
   * Load assets from unpkg.com by name, will asynchronously load them
   * by injecting a script tag.  The Promise will resolve when the asset
   * has been loaded.
   *
   * @param {Object} dependencies - an object whose keys are the global variable name of the package,
   * @param {Object} options - an options hash
   * @param {String} options.protocol - http or https
   * @returns {Object<String,Object>} returns an object whose keys are the global variable name, and whose values are the libraries that were injected
   * @memberof AssetLoader
   *
   * @example
   *
   *  runtime.assetLoader.unpkg({
   *    React: 'react@16.7.0/umd/react.production.min.js',
   *    ReactDOM: 'react-dom@16.7.0/umd/react-dom.production.min.js'
   *  })
   */},{key:"unpkg",value:function(){var _unpkg=_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default()(/*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(){var _this3=this;var dependencies,_ref,_ref$protocol,protocol,_this$lodash,entries,fromPairs,modules,_args=arguments;return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dependencies=_args.length>0&&_args[0]!==undefined?_args[0]:{};_ref=_args.length>1&&_args[1]!==undefined?_args[1]:{},_ref$protocol=_ref.protocol,protocol=_ref$protocol===void 0?'https':_ref$protocol;_this$lodash=this.lodash,entries=_this$lodash.entries,fromPairs=_this$lodash.fromPairs;_context.next=5;return Promise.all(entries(dependencies).map(function(_ref2){var _ref3=_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default()(_ref2,2),globalVariableName=_ref3[0],packageName=_ref3[1];var unpkgUrl=packageName.startsWith('http')?packageName:"".concat(protocol,"://unpkg.com/").concat(packageName);if(global[globalVariableName]){return[globalVariableName,global[globalVariableName]];}return _this3.inject.js(unpkgUrl).then(function(){return[globalVariableName,global[globalVariableName]];});})).then(fromPairs);case 5:modules=_context.sent;return _context.abrupt("return",modules);case 7:case"end":return _context.stop();}}},_callee,this);}));function unpkg(){return _unpkg.apply(this,arguments);}return unpkg;}()},{key:"lazyInject",value:function lazyInject(){// Function which returns a function: https://davidwalsh.name/javascript-functions
function _load(tag){return function(url){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};// This promise will be used by Promise.all to determine success or failure
return new Promise(function(resolve,reject){var element=document.createElement(tag);var parent='body';var attr='src';// Important success and error for the promise
element.onload=function(){resolve(url);};element.onerror=function(){reject(url);};// Need to set different attributes depending on tag type
switch(tag){case'script':if(options.babel){element.type='text/babel';// element['data-presets'] = 'es2015,stage-2,react'
}if(options.async!==false){element.async=true;}break;case'link':element.type='text/css';element.rel='stylesheet';attr='href';parent='head';}// Inject into document to kick off loading
element[attr]=url;var result=document[parent].appendChild(element);});};}return{css:_load('link'),js:_load('script'),img:_load('img')};}}]);return AssetLoader;}(_skypager_runtime__WEBPACK_IMPORTED_MODULE_10__[/* Feature */ "a"]);_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(AssetLoader,"shortcut",'assetLoader');
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(58)))

/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithHoles = __webpack_require__(367);

var iterableToArrayLimit = __webpack_require__(368);

var nonIterableRest = __webpack_require__(369);

function _slicedToArray(arr, i) {
  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();
}

module.exports = _slicedToArray;

/***/ }),
/* 171 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shortcut", function() { return shortcut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "featureMethods", function() { return featureMethods; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "featureMixinOptions", function() { return featureMixinOptions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "featureWasEnabled", function() { return featureWasEnabled; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "send", function() { return send; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "listen", function() { return listen; });
/* harmony import */ var _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0__);
var shortcut='ipc';var featureMethods=['listen','send'];var featureMixinOptions={insertOptions:false,partial:[]};function featureWasEnabled(){}function send(){var receiver=arguments.length>0&&arguments[0]!==undefined?arguments[0]:global;var channel=arguments.length>1?arguments[1]:undefined;var data=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var isFunction=this.lodash.isFunction;if(!isFunction(receiver.postMessage)){throw new Error('Receiver does not have a postMessage function.');}receiver.postMessage(_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default()({channel:channel},data),global.origin);}function listen(channel,handler,condition){var isFunction=this.lodash.isFunction;if(typeof window!=='undefined'){var fn=function fn(_ref){var origin=_ref.origin,source=_ref.source,data=_ref.data;if(isFunction(condition)&&!!condition({origin:origin,source:source,data:data})){return;}console.log('Received IPC Message',data,{origin:origin,source:source});if(data.channel===channel){Promise.resolve(handler({channel:channel,source:source,data:data,origin:origin}));}};window.addEventListener('message',fn);return function(){return window.removeEventListener('message',fn);};}}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(58)))

/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(173);


/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {if(typeof window!=='undefined'){window.global=window;if(typeof process==='undefined'){window.process={env:{}};}}var webRuntime=__webpack_require__(372)["default"];/**
 * The runtime singleton
 */module.exports=webRuntime;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(98)))

/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__(175);

__webpack_require__(318);

__webpack_require__(320);

__webpack_require__(323);

__webpack_require__(325);

__webpack_require__(327);

__webpack_require__(329);

__webpack_require__(331);

__webpack_require__(333);

__webpack_require__(335);

__webpack_require__(337);

__webpack_require__(339);

__webpack_require__(341);

__webpack_require__(345);

/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(176);

__webpack_require__(179);

__webpack_require__(180);

__webpack_require__(181);

__webpack_require__(182);

__webpack_require__(183);

__webpack_require__(184);

__webpack_require__(185);

__webpack_require__(186);

__webpack_require__(187);

__webpack_require__(188);

__webpack_require__(189);

__webpack_require__(190);

__webpack_require__(191);

__webpack_require__(192);

__webpack_require__(193);

__webpack_require__(194);

__webpack_require__(195);

__webpack_require__(196);

__webpack_require__(197);

__webpack_require__(198);

__webpack_require__(199);

__webpack_require__(200);

__webpack_require__(201);

__webpack_require__(202);

__webpack_require__(203);

__webpack_require__(204);

__webpack_require__(205);

__webpack_require__(206);

__webpack_require__(207);

__webpack_require__(208);

__webpack_require__(209);

__webpack_require__(210);

__webpack_require__(211);

__webpack_require__(212);

__webpack_require__(213);

__webpack_require__(214);

__webpack_require__(215);

__webpack_require__(216);

__webpack_require__(217);

__webpack_require__(218);

__webpack_require__(219);

__webpack_require__(220);

__webpack_require__(222);

__webpack_require__(223);

__webpack_require__(224);

__webpack_require__(225);

__webpack_require__(226);

__webpack_require__(227);

__webpack_require__(228);

__webpack_require__(229);

__webpack_require__(230);

__webpack_require__(231);

__webpack_require__(232);

__webpack_require__(233);

__webpack_require__(234);

__webpack_require__(235);

__webpack_require__(236);

__webpack_require__(237);

__webpack_require__(238);

__webpack_require__(239);

__webpack_require__(240);

__webpack_require__(241);

__webpack_require__(242);

__webpack_require__(243);

__webpack_require__(244);

__webpack_require__(245);

__webpack_require__(246);

__webpack_require__(247);

__webpack_require__(248);

__webpack_require__(249);

__webpack_require__(250);

__webpack_require__(251);

__webpack_require__(252);

__webpack_require__(253);

__webpack_require__(254);

__webpack_require__(255);

__webpack_require__(257);

__webpack_require__(258);

__webpack_require__(260);

__webpack_require__(261);

__webpack_require__(262);

__webpack_require__(263);

__webpack_require__(264);

__webpack_require__(265);

__webpack_require__(266);

__webpack_require__(268);

__webpack_require__(269);

__webpack_require__(270);

__webpack_require__(271);

__webpack_require__(272);

__webpack_require__(273);

__webpack_require__(274);

__webpack_require__(275);

__webpack_require__(276);

__webpack_require__(277);

__webpack_require__(278);

__webpack_require__(279);

__webpack_require__(280);

__webpack_require__(119);

__webpack_require__(281);

__webpack_require__(148);

__webpack_require__(282);

__webpack_require__(149);

__webpack_require__(283);

__webpack_require__(284);

__webpack_require__(285);

__webpack_require__(286);

__webpack_require__(150);

__webpack_require__(289);

__webpack_require__(290);

__webpack_require__(291);

__webpack_require__(292);

__webpack_require__(293);

__webpack_require__(294);

__webpack_require__(295);

__webpack_require__(296);

__webpack_require__(297);

__webpack_require__(298);

__webpack_require__(299);

__webpack_require__(300);

__webpack_require__(301);

__webpack_require__(302);

__webpack_require__(303);

__webpack_require__(304);

__webpack_require__(305);

__webpack_require__(306);

__webpack_require__(307);

__webpack_require__(308);

__webpack_require__(309);

__webpack_require__(310);

__webpack_require__(311);

__webpack_require__(312);

__webpack_require__(313);

__webpack_require__(314);

__webpack_require__(315);

__webpack_require__(316);

__webpack_require__(317);

module.exports = __webpack_require__(17);

/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // ECMAScript 6 symbols shim

var global = __webpack_require__(5);

var has = __webpack_require__(28);

var DESCRIPTORS = __webpack_require__(20);

var $export = __webpack_require__(1);

var redefine = __webpack_require__(26);

var META = __webpack_require__(45).KEY;

var $fails = __webpack_require__(6);

var shared = __webpack_require__(79);

var setToStringTag = __webpack_require__(63);

var uid = __webpack_require__(49);

var wks = __webpack_require__(13);

var wksExt = __webpack_require__(100);

var wksDefine = __webpack_require__(129);

var enumKeys = __webpack_require__(178);

var isArray = __webpack_require__(82);

var anObject = __webpack_require__(7);

var isObject = __webpack_require__(8);

var toIObject = __webpack_require__(30);

var toPrimitive = __webpack_require__(44);

var createDesc = __webpack_require__(48);

var _create = __webpack_require__(53);

var gOPNExt = __webpack_require__(132);

var $GOPD = __webpack_require__(37);

var $DP = __webpack_require__(19);

var $keys = __webpack_require__(51);

var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global.Symbol;
var $JSON = global.JSON;

var _stringify = $JSON && $JSON.stringify;

var PROTOTYPE = 'prototype';
var HIDDEN = wks('_hidden');
var TO_PRIMITIVE = wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var OPSymbols = shared('op-symbols');
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == 'function';
var QObject = global.QObject; // Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173

var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild; // fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687

var setSymbolDesc = DESCRIPTORS && $fails(function () {
  return _create(dP({}, 'a', {
    get: function get() {
      return dP(this, 'a', {
        value: 7
      }).a;
    }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD(ObjectProto, key);
  if (protoDesc) delete ObjectProto[key];
  dP(it, key, D);
  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function wrap(tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);

  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);

  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _create(D, {
        enumerable: createDesc(0, false)
      });
    }

    return setSymbolDesc(it, key, D);
  }

  return dP(it, key, D);
};

var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys.length;
  var key;

  while (l > i) {
    $defineProperty(it, key = keys[i++], P[key]);
  }

  return it;
};

var $create = function create(it, P) {
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};

var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};

var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
  var D = gOPD(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};

var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key;

  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  }

  return result;
};

var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key;

  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
  }

  return result;
}; // 19.4.1.1 Symbol([description])


if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);

    var $set = function $set(value) {
      if (this === ObjectProto) $set.call(OPSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };

    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, {
      configurable: true,
      set: $set
    });
    return wrap(tag);
  };

  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return this._k;
  });
  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty;
  __webpack_require__(54).f = gOPNExt.f = $getOwnPropertyNames;
  __webpack_require__(71).f = $propertyIsEnumerable;
  __webpack_require__(81).f = $getOwnPropertySymbols;

  if (DESCRIPTORS && !__webpack_require__(50)) {
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function (name) {
    return wrap(wks(name));
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, {
  Symbol: $Symbol
});

for (var es6Symbols = // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'.split(','), j = 0; es6Symbols.length > j;) {
  wks(es6Symbols[j++]);
}

for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) {
  wksDefine(wellKnownSymbols[k++]);
}

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function _for(key) {
    return has(SymbolRegistry, key += '') ? SymbolRegistry[key] : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');

    for (var key in SymbolRegistry) {
      if (SymbolRegistry[key] === sym) return key;
    }
  },
  useSetter: function useSetter() {
    setter = true;
  },
  useSimple: function useSimple() {
    setter = false;
  }
});
$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
}); // 24.3.2 JSON.stringify(value [, replacer [, space]])

$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
  var S = $Symbol(); // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols

  return _stringify([S]) != '[null]' || _stringify({
    a: S
  }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;

    while (arguments.length > i) {
      args.push(arguments[i++]);
    }

    $replacer = replacer = args[1];
    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined

    if (!isArray(replacer)) replacer = function replacer(key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
}); // 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)

$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(29)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf); // 19.4.3.5 Symbol.prototype[@@toStringTag]

setToStringTag($Symbol, 'Symbol'); // 20.2.1.9 Math[@@toStringTag]

setToStringTag(Math, 'Math', true); // 24.3.3 JSON[@@toStringTag]

setToStringTag(global.JSON, 'JSON', true);

/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(79)('native-function-to-string', Function.toString);

/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

// all enumerable object keys, includes symbols
var getKeys = __webpack_require__(51);

var gOPS = __webpack_require__(81);

var pIE = __webpack_require__(71);

module.exports = function (it) {
  var result = getKeys(it);
  var getSymbols = gOPS.f;

  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = pIE.f;
    var i = 0;
    var key;

    while (symbols.length > i) {
      if (isEnum.call(it, key = symbols[i++])) result.push(key);
    }
  }

  return result;
};

/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(1); // 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])


$export($export.S, 'Object', {
  create: __webpack_require__(53)
});

/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(1); // 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)


$export($export.S + $export.F * !__webpack_require__(20), 'Object', {
  defineProperty: __webpack_require__(19).f
});

/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(1); // 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)


$export($export.S + $export.F * !__webpack_require__(20), 'Object', {
  defineProperties: __webpack_require__(131)
});

/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
var toIObject = __webpack_require__(30);

var $getOwnPropertyDescriptor = __webpack_require__(37).f;

__webpack_require__(38)('getOwnPropertyDescriptor', function () {
  return function getOwnPropertyDescriptor(it, key) {
    return $getOwnPropertyDescriptor(toIObject(it), key);
  };
});

/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 Object.getPrototypeOf(O)
var toObject = __webpack_require__(24);

var $getPrototypeOf = __webpack_require__(55);

__webpack_require__(38)('getPrototypeOf', function () {
  return function getPrototypeOf(it) {
    return $getPrototypeOf(toObject(it));
  };
});

/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 Object.keys(O)
var toObject = __webpack_require__(24);

var $keys = __webpack_require__(51);

__webpack_require__(38)('keys', function () {
  return function keys(it) {
    return $keys(toObject(it));
  };
});

/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 Object.getOwnPropertyNames(O)
__webpack_require__(38)('getOwnPropertyNames', function () {
  return __webpack_require__(132).f;
});

/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.5 Object.freeze(O)
var isObject = __webpack_require__(8);

var meta = __webpack_require__(45).onFreeze;

__webpack_require__(38)('freeze', function ($freeze) {
  return function freeze(it) {
    return $freeze && isObject(it) ? $freeze(meta(it)) : it;
  };
});

/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.17 Object.seal(O)
var isObject = __webpack_require__(8);

var meta = __webpack_require__(45).onFreeze;

__webpack_require__(38)('seal', function ($seal) {
  return function seal(it) {
    return $seal && isObject(it) ? $seal(meta(it)) : it;
  };
});

/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.15 Object.preventExtensions(O)
var isObject = __webpack_require__(8);

var meta = __webpack_require__(45).onFreeze;

__webpack_require__(38)('preventExtensions', function ($preventExtensions) {
  return function preventExtensions(it) {
    return $preventExtensions && isObject(it) ? $preventExtensions(meta(it)) : it;
  };
});

/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.12 Object.isFrozen(O)
var isObject = __webpack_require__(8);

__webpack_require__(38)('isFrozen', function ($isFrozen) {
  return function isFrozen(it) {
    return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;
  };
});

/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.13 Object.isSealed(O)
var isObject = __webpack_require__(8);

__webpack_require__(38)('isSealed', function ($isSealed) {
  return function isSealed(it) {
    return isObject(it) ? $isSealed ? $isSealed(it) : false : true;
  };
});

/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.11 Object.isExtensible(O)
var isObject = __webpack_require__(8);

__webpack_require__(38)('isExtensible', function ($isExtensible) {
  return function isExtensible(it) {
    return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;
  };
});

/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.1 Object.assign(target, source)
var $export = __webpack_require__(1);

$export($export.S + $export.F, 'Object', {
  assign: __webpack_require__(133)
});

/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.10 Object.is(value1, value2)
var $export = __webpack_require__(1);

$export($export.S, 'Object', {
  is: __webpack_require__(134)
});

/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.19 Object.setPrototypeOf(O, proto)
var $export = __webpack_require__(1);

$export($export.S, 'Object', {
  setPrototypeOf: __webpack_require__(104).set
});

/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // 19.1.3.6 Object.prototype.toString()

var classof = __webpack_require__(72);

var test = {};
test[__webpack_require__(13)('toStringTag')] = 'z';

if (test + '' != '[object z]') {
  __webpack_require__(26)(Object.prototype, 'toString', function toString() {
    return '[object ' + classof(this) + ']';
  }, true);
}

/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)
var $export = __webpack_require__(1);

$export($export.P, 'Function', {
  bind: __webpack_require__(135)
});

/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(19).f;

var FProto = Function.prototype;
var nameRE = /^\s*function ([^ (]*)/;
var NAME = 'name'; // 19.2.4.2 name

NAME in FProto || __webpack_require__(20) && dP(FProto, NAME, {
  configurable: true,
  get: function get() {
    try {
      return ('' + this).match(nameRE)[1];
    } catch (e) {
      return '';
    }
  }
});

/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var isObject = __webpack_require__(8);

var getPrototypeOf = __webpack_require__(55);

var HAS_INSTANCE = __webpack_require__(13)('hasInstance');

var FunctionProto = Function.prototype; // 19.2.3.6 Function.prototype[@@hasInstance](V)

if (!(HAS_INSTANCE in FunctionProto)) __webpack_require__(19).f(FunctionProto, HAS_INSTANCE, {
  value: function value(O) {
    if (typeof this != 'function' || !isObject(O)) return false;
    if (!isObject(this.prototype)) return O instanceof this; // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:

    while (O = getPrototypeOf(O)) {
      if (this.prototype === O) return true;
    }

    return false;
  }
});

/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(1);

var $parseInt = __webpack_require__(137); // 18.2.5 parseInt(string, radix)


$export($export.G + $export.F * (parseInt != $parseInt), {
  parseInt: $parseInt
});

/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(1);

var $parseFloat = __webpack_require__(138); // 18.2.4 parseFloat(string)


$export($export.G + $export.F * (parseFloat != $parseFloat), {
  parseFloat: $parseFloat
});

/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var global = __webpack_require__(5);

var has = __webpack_require__(28);

var cof = __webpack_require__(40);

var inheritIfRequired = __webpack_require__(106);

var toPrimitive = __webpack_require__(44);

var fails = __webpack_require__(6);

var gOPN = __webpack_require__(54).f;

var gOPD = __webpack_require__(37).f;

var dP = __webpack_require__(19).f;

var $trim = __webpack_require__(64).trim;

var NUMBER = 'Number';
var $Number = global[NUMBER];
var Base = $Number;
var proto = $Number.prototype; // Opera ~12 has broken Object#toString

var BROKEN_COF = cof(__webpack_require__(53)(proto)) == NUMBER;
var TRIM = 'trim' in String.prototype; // 7.1.3 ToNumber(argument)

var toNumber = function toNumber(argument) {
  var it = toPrimitive(argument, false);

  if (typeof it == 'string' && it.length > 2) {
    it = TRIM ? it.trim() : $trim(it, 3);
    var first = it.charCodeAt(0);
    var third, radix, maxCode;

    if (first === 43 || first === 45) {
      third = it.charCodeAt(2);
      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix
    } else if (first === 48) {
      switch (it.charCodeAt(1)) {
        case 66:
        case 98:
          radix = 2;
          maxCode = 49;
          break;
        // fast equal /^0b[01]+$/i

        case 79:
        case 111:
          radix = 8;
          maxCode = 55;
          break;
        // fast equal /^0o[0-7]+$/i

        default:
          return +it;
      }

      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {
        code = digits.charCodeAt(i); // parseInt parses a string to a first unavailable symbol
        // but ToNumber should return NaN if a string contains unavailable symbols

        if (code < 48 || code > maxCode) return NaN;
      }

      return parseInt(digits, radix);
    }
  }

  return +it;
};

if (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {
  $Number = function Number(value) {
    var it = arguments.length < 1 ? 0 : value;
    var that = this;
    return that instanceof $Number // check on 1..constructor(foo) case
    && (BROKEN_COF ? fails(function () {
      proto.valueOf.call(that);
    }) : cof(that) != NUMBER) ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);
  };

  for (var keys = __webpack_require__(20) ? gOPN(Base) : ( // ES3:
  'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' + // ES6 (in case, if modules with ES6 Number statics required before):
  'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' + 'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger').split(','), j = 0, key; keys.length > j; j++) {
    if (has(Base, key = keys[j]) && !has($Number, key)) {
      dP($Number, key, gOPD(Base, key));
    }
  }

  $Number.prototype = proto;
  proto.constructor = $Number;

  __webpack_require__(26)(global, NUMBER, $Number);
}

/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $export = __webpack_require__(1);

var toInteger = __webpack_require__(36);

var aNumberValue = __webpack_require__(139);

var repeat = __webpack_require__(107);

var $toFixed = 1.0.toFixed;
var floor = Math.floor;
var data = [0, 0, 0, 0, 0, 0];
var ERROR = 'Number.toFixed: incorrect invocation!';
var ZERO = '0';

var multiply = function multiply(n, c) {
  var i = -1;
  var c2 = c;

  while (++i < 6) {
    c2 += n * data[i];
    data[i] = c2 % 1e7;
    c2 = floor(c2 / 1e7);
  }
};

var divide = function divide(n) {
  var i = 6;
  var c = 0;

  while (--i >= 0) {
    c += data[i];
    data[i] = floor(c / n);
    c = c % n * 1e7;
  }
};

var numToString = function numToString() {
  var i = 6;
  var s = '';

  while (--i >= 0) {
    if (s !== '' || i === 0 || data[i] !== 0) {
      var t = String(data[i]);
      s = s === '' ? t : s + repeat.call(ZERO, 7 - t.length) + t;
    }
  }

  return s;
};

var pow = function pow(x, n, acc) {
  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);
};

var log = function log(x) {
  var n = 0;
  var x2 = x;

  while (x2 >= 4096) {
    n += 12;
    x2 /= 4096;
  }

  while (x2 >= 2) {
    n += 1;
    x2 /= 2;
  }

  return n;
};

$export($export.P + $export.F * (!!$toFixed && (0.00008.toFixed(3) !== '0.000' || 0.9.toFixed(0) !== '1' || 1.255.toFixed(2) !== '1.25' || 1000000000000000128.0.toFixed(0) !== '1000000000000000128') || !__webpack_require__(6)(function () {
  // V8 ~ Android 4.3-
  $toFixed.call({});
})), 'Number', {
  toFixed: function toFixed(fractionDigits) {
    var x = aNumberValue(this, ERROR);
    var f = toInteger(fractionDigits);
    var s = '';
    var m = ZERO;
    var e, z, j, k;
    if (f < 0 || f > 20) throw RangeError(ERROR); // eslint-disable-next-line no-self-compare

    if (x != x) return 'NaN';
    if (x <= -1e21 || x >= 1e21) return String(x);

    if (x < 0) {
      s = '-';
      x = -x;
    }

    if (x > 1e-21) {
      e = log(x * pow(2, 69, 1)) - 69;
      z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);
      z *= 0x10000000000000;
      e = 52 - e;

      if (e > 0) {
        multiply(0, z);
        j = f;

        while (j >= 7) {
          multiply(1e7, 0);
          j -= 7;
        }

        multiply(pow(10, j, 1), 0);
        j = e - 1;

        while (j >= 23) {
          divide(1 << 23);
          j -= 23;
        }

        divide(1 << j);
        multiply(1, 1);
        divide(2);
        m = numToString();
      } else {
        multiply(0, z);
        multiply(1 << -e, 0);
        m = numToString() + repeat.call(ZERO, f);
      }
    }

    if (f > 0) {
      k = m.length;
      m = s + (k <= f ? '0.' + repeat.call(ZERO, f - k) + m : m.slice(0, k - f) + '.' + m.slice(k - f));
    } else {
      m = s + m;
    }

    return m;
  }
});

/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $export = __webpack_require__(1);

var $fails = __webpack_require__(6);

var aNumberValue = __webpack_require__(139);

var $toPrecision = 1.0.toPrecision;
$export($export.P + $export.F * ($fails(function () {
  // IE7-
  return $toPrecision.call(1, undefined) !== '1';
}) || !$fails(function () {
  // V8 ~ Android 4.3-
  $toPrecision.call({});
})), 'Number', {
  toPrecision: function toPrecision(precision) {
    var that = aNumberValue(this, 'Number#toPrecision: incorrect invocation!');
    return precision === undefined ? $toPrecision.call(that) : $toPrecision.call(that, precision);
  }
});

/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

// 20.1.2.1 Number.EPSILON
var $export = __webpack_require__(1);

$export($export.S, 'Number', {
  EPSILON: Math.pow(2, -52)
});

/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

// 20.1.2.2 Number.isFinite(number)
var $export = __webpack_require__(1);

var _isFinite = __webpack_require__(5).isFinite;

$export($export.S, 'Number', {
  isFinite: function isFinite(it) {
    return typeof it == 'number' && _isFinite(it);
  }
});

/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

// 20.1.2.3 Number.isInteger(number)
var $export = __webpack_require__(1);

$export($export.S, 'Number', {
  isInteger: __webpack_require__(140)
});

/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

// 20.1.2.4 Number.isNaN(number)
var $export = __webpack_require__(1);

$export($export.S, 'Number', {
  isNaN: function isNaN(number) {
    // eslint-disable-next-line no-self-compare
    return number != number;
  }
});

/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

// 20.1.2.5 Number.isSafeInteger(number)
var $export = __webpack_require__(1);

var isInteger = __webpack_require__(140);

var abs = Math.abs;
$export($export.S, 'Number', {
  isSafeInteger: function isSafeInteger(number) {
    return isInteger(number) && abs(number) <= 0x1fffffffffffff;
  }
});

/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

// 20.1.2.6 Number.MAX_SAFE_INTEGER
var $export = __webpack_require__(1);

$export($export.S, 'Number', {
  MAX_SAFE_INTEGER: 0x1fffffffffffff
});

/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

// 20.1.2.10 Number.MIN_SAFE_INTEGER
var $export = __webpack_require__(1);

$export($export.S, 'Number', {
  MIN_SAFE_INTEGER: -0x1fffffffffffff
});

/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(1);

var $parseFloat = __webpack_require__(138); // 20.1.2.12 Number.parseFloat(string)


$export($export.S + $export.F * (Number.parseFloat != $parseFloat), 'Number', {
  parseFloat: $parseFloat
});

/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(1);

var $parseInt = __webpack_require__(137); // 20.1.2.13 Number.parseInt(string, radix)


$export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', {
  parseInt: $parseInt
});

/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.3 Math.acosh(x)
var $export = __webpack_require__(1);

var log1p = __webpack_require__(141);

var sqrt = Math.sqrt;
var $acosh = Math.acosh;
$export($export.S + $export.F * !($acosh // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509
&& Math.floor($acosh(Number.MAX_VALUE)) == 710 // Tor Browser bug: Math.acosh(Infinity) -> NaN
&& $acosh(Infinity) == Infinity), 'Math', {
  acosh: function acosh(x) {
    return (x = +x) < 1 ? NaN : x > 94906265.62425156 ? Math.log(x) + Math.LN2 : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));
  }
});

/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.5 Math.asinh(x)
var $export = __webpack_require__(1);

var $asinh = Math.asinh;

function asinh(x) {
  return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));
} // Tor Browser bug: Math.asinh(0) -> -0


$export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', {
  asinh: asinh
});

/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.7 Math.atanh(x)
var $export = __webpack_require__(1);

var $atanh = Math.atanh; // Tor Browser bug: Math.atanh(-0) -> 0

$export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {
  atanh: function atanh(x) {
    return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;
  }
});

/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.9 Math.cbrt(x)
var $export = __webpack_require__(1);

var sign = __webpack_require__(108);

$export($export.S, 'Math', {
  cbrt: function cbrt(x) {
    return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);
  }
});

/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.11 Math.clz32(x)
var $export = __webpack_require__(1);

$export($export.S, 'Math', {
  clz32: function clz32(x) {
    return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;
  }
});

/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.12 Math.cosh(x)
var $export = __webpack_require__(1);

var exp = Math.exp;
$export($export.S, 'Math', {
  cosh: function cosh(x) {
    return (exp(x = +x) + exp(-x)) / 2;
  }
});

/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.14 Math.expm1(x)
var $export = __webpack_require__(1);

var $expm1 = __webpack_require__(109);

$export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', {
  expm1: $expm1
});

/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.16 Math.fround(x)
var $export = __webpack_require__(1);

$export($export.S, 'Math', {
  fround: __webpack_require__(221)
});

/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.16 Math.fround(x)
var sign = __webpack_require__(108);

var pow = Math.pow;
var EPSILON = pow(2, -52);
var EPSILON32 = pow(2, -23);
var MAX32 = pow(2, 127) * (2 - EPSILON32);
var MIN32 = pow(2, -126);

var roundTiesToEven = function roundTiesToEven(n) {
  return n + 1 / EPSILON - 1 / EPSILON;
};

module.exports = Math.fround || function fround(x) {
  var $abs = Math.abs(x);
  var $sign = sign(x);
  var a, result;
  if ($abs < MIN32) return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;
  a = (1 + EPSILON32 / EPSILON) * $abs;
  result = a - (a - $abs); // eslint-disable-next-line no-self-compare

  if (result > MAX32 || result != result) return $sign * Infinity;
  return $sign * result;
};

/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])
var $export = __webpack_require__(1);

var abs = Math.abs;
$export($export.S, 'Math', {
  hypot: function hypot(value1, value2) {
    // eslint-disable-line no-unused-vars
    var sum = 0;
    var i = 0;
    var aLen = arguments.length;
    var larg = 0;
    var arg, div;

    while (i < aLen) {
      arg = abs(arguments[i++]);

      if (larg < arg) {
        div = larg / arg;
        sum = sum * div * div + 1;
        larg = arg;
      } else if (arg > 0) {
        div = arg / larg;
        sum += div * div;
      } else sum += arg;
    }

    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);
  }
});

/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.18 Math.imul(x, y)
var $export = __webpack_require__(1);

var $imul = Math.imul; // some WebKit versions fails with big numbers, some has wrong arity

$export($export.S + $export.F * __webpack_require__(6)(function () {
  return $imul(0xffffffff, 5) != -5 || $imul.length != 2;
}), 'Math', {
  imul: function imul(x, y) {
    var UINT16 = 0xffff;
    var xn = +x;
    var yn = +y;
    var xl = UINT16 & xn;
    var yl = UINT16 & yn;
    return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);
  }
});

/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.21 Math.log10(x)
var $export = __webpack_require__(1);

$export($export.S, 'Math', {
  log10: function log10(x) {
    return Math.log(x) * Math.LOG10E;
  }
});

/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.20 Math.log1p(x)
var $export = __webpack_require__(1);

$export($export.S, 'Math', {
  log1p: __webpack_require__(141)
});

/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.22 Math.log2(x)
var $export = __webpack_require__(1);

$export($export.S, 'Math', {
  log2: function log2(x) {
    return Math.log(x) / Math.LN2;
  }
});

/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.28 Math.sign(x)
var $export = __webpack_require__(1);

$export($export.S, 'Math', {
  sign: __webpack_require__(108)
});

/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.30 Math.sinh(x)
var $export = __webpack_require__(1);

var expm1 = __webpack_require__(109);

var exp = Math.exp; // V8 near Chromium 38 has a problem with very small numbers

$export($export.S + $export.F * __webpack_require__(6)(function () {
  return !Math.sinh(-2e-17) != -2e-17;
}), 'Math', {
  sinh: function sinh(x) {
    return Math.abs(x = +x) < 1 ? (expm1(x) - expm1(-x)) / 2 : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);
  }
});

/***/ }),
/* 229 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.33 Math.tanh(x)
var $export = __webpack_require__(1);

var expm1 = __webpack_require__(109);

var exp = Math.exp;
$export($export.S, 'Math', {
  tanh: function tanh(x) {
    var a = expm1(x = +x);
    var b = expm1(-x);
    return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));
  }
});

/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.34 Math.trunc(x)
var $export = __webpack_require__(1);

$export($export.S, 'Math', {
  trunc: function trunc(it) {
    return (it > 0 ? Math.floor : Math.ceil)(it);
  }
});

/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(1);

var toAbsoluteIndex = __webpack_require__(52);

var fromCharCode = String.fromCharCode;
var $fromCodePoint = String.fromCodePoint; // length should be 1, old FF problem

$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {
  // 21.1.2.2 String.fromCodePoint(...codePoints)
  fromCodePoint: function fromCodePoint(x) {
    // eslint-disable-line no-unused-vars
    var res = [];
    var aLen = arguments.length;
    var i = 0;
    var code;

    while (aLen > i) {
      code = +arguments[i++];
      if (toAbsoluteIndex(code, 0x10ffff) !== code) throw RangeError(code + ' is not a valid code point');
      res.push(code < 0x10000 ? fromCharCode(code) : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00));
    }

    return res.join('');
  }
});

/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(1);

var toIObject = __webpack_require__(30);

var toLength = __webpack_require__(16);

$export($export.S, 'String', {
  // 21.1.2.4 String.raw(callSite, ...substitutions)
  raw: function raw(callSite) {
    var tpl = toIObject(callSite.raw);
    var len = toLength(tpl.length);
    var aLen = arguments.length;
    var res = [];
    var i = 0;

    while (len > i) {
      res.push(String(tpl[i++]));
      if (i < aLen) res.push(String(arguments[i]));
    }

    return res.join('');
  }
});

/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // 21.1.3.25 String.prototype.trim()

__webpack_require__(64)('trim', function ($trim) {
  return function trim() {
    return $trim(this, 3);
  };
});

/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $at = __webpack_require__(110)(true); // 21.1.3.27 String.prototype[@@iterator]()


__webpack_require__(111)(String, 'String', function (iterated) {
  this._t = String(iterated); // target

  this._i = 0; // next index
  // 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return {
    value: undefined,
    done: true
  };
  point = $at(O, index);
  this._i += point.length;
  return {
    value: point,
    done: false
  };
});

/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $export = __webpack_require__(1);

var $at = __webpack_require__(110)(false);

$export($export.P, 'String', {
  // 21.1.3.3 String.prototype.codePointAt(pos)
  codePointAt: function codePointAt(pos) {
    return $at(this, pos);
  }
});

/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])


var $export = __webpack_require__(1);

var toLength = __webpack_require__(16);

var context = __webpack_require__(112);

var ENDS_WITH = 'endsWith';
var $endsWith = ''[ENDS_WITH];
$export($export.P + $export.F * __webpack_require__(114)(ENDS_WITH), 'String', {
  endsWith: function endsWith(searchString
  /* , endPosition = @length */
  ) {
    var that = context(this, searchString, ENDS_WITH);
    var endPosition = arguments.length > 1 ? arguments[1] : undefined;
    var len = toLength(that.length);
    var end = endPosition === undefined ? len : Math.min(toLength(endPosition), len);
    var search = String(searchString);
    return $endsWith ? $endsWith.call(that, search, end) : that.slice(end - search.length, end) === search;
  }
});

/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// 21.1.3.7 String.prototype.includes(searchString, position = 0)


var $export = __webpack_require__(1);

var context = __webpack_require__(112);

var INCLUDES = 'includes';
$export($export.P + $export.F * __webpack_require__(114)(INCLUDES), 'String', {
  includes: function includes(searchString
  /* , position = 0 */
  ) {
    return !!~context(this, searchString, INCLUDES).indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
  }
});

/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(1);

$export($export.P, 'String', {
  // 21.1.3.13 String.prototype.repeat(count)
  repeat: __webpack_require__(107)
});

/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// 21.1.3.18 String.prototype.startsWith(searchString [, position ])


var $export = __webpack_require__(1);

var toLength = __webpack_require__(16);

var context = __webpack_require__(112);

var STARTS_WITH = 'startsWith';
var $startsWith = ''[STARTS_WITH];
$export($export.P + $export.F * __webpack_require__(114)(STARTS_WITH), 'String', {
  startsWith: function startsWith(searchString
  /* , position = 0 */
  ) {
    var that = context(this, searchString, STARTS_WITH);
    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));
    var search = String(searchString);
    return $startsWith ? $startsWith.call(that, search, index) : that.slice(index, index + search.length) === search;
  }
});

/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // B.2.3.2 String.prototype.anchor(name)

__webpack_require__(27)('anchor', function (createHTML) {
  return function anchor(name) {
    return createHTML(this, 'a', 'name', name);
  };
});

/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // B.2.3.3 String.prototype.big()

__webpack_require__(27)('big', function (createHTML) {
  return function big() {
    return createHTML(this, 'big', '', '');
  };
});

/***/ }),
/* 242 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // B.2.3.4 String.prototype.blink()

__webpack_require__(27)('blink', function (createHTML) {
  return function blink() {
    return createHTML(this, 'blink', '', '');
  };
});

/***/ }),
/* 243 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // B.2.3.5 String.prototype.bold()

__webpack_require__(27)('bold', function (createHTML) {
  return function bold() {
    return createHTML(this, 'b', '', '');
  };
});

/***/ }),
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // B.2.3.6 String.prototype.fixed()

__webpack_require__(27)('fixed', function (createHTML) {
  return function fixed() {
    return createHTML(this, 'tt', '', '');
  };
});

/***/ }),
/* 245 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // B.2.3.7 String.prototype.fontcolor(color)

__webpack_require__(27)('fontcolor', function (createHTML) {
  return function fontcolor(color) {
    return createHTML(this, 'font', 'color', color);
  };
});

/***/ }),
/* 246 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // B.2.3.8 String.prototype.fontsize(size)

__webpack_require__(27)('fontsize', function (createHTML) {
  return function fontsize(size) {
    return createHTML(this, 'font', 'size', size);
  };
});

/***/ }),
/* 247 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // B.2.3.9 String.prototype.italics()

__webpack_require__(27)('italics', function (createHTML) {
  return function italics() {
    return createHTML(this, 'i', '', '');
  };
});

/***/ }),
/* 248 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // B.2.3.10 String.prototype.link(url)

__webpack_require__(27)('link', function (createHTML) {
  return function link(url) {
    return createHTML(this, 'a', 'href', url);
  };
});

/***/ }),
/* 249 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // B.2.3.11 String.prototype.small()

__webpack_require__(27)('small', function (createHTML) {
  return function small() {
    return createHTML(this, 'small', '', '');
  };
});

/***/ }),
/* 250 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // B.2.3.12 String.prototype.strike()

__webpack_require__(27)('strike', function (createHTML) {
  return function strike() {
    return createHTML(this, 'strike', '', '');
  };
});

/***/ }),
/* 251 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // B.2.3.13 String.prototype.sub()

__webpack_require__(27)('sub', function (createHTML) {
  return function sub() {
    return createHTML(this, 'sub', '', '');
  };
});

/***/ }),
/* 252 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // B.2.3.14 String.prototype.sup()

__webpack_require__(27)('sup', function (createHTML) {
  return function sup() {
    return createHTML(this, 'sup', '', '');
  };
});

/***/ }),
/* 253 */
/***/ (function(module, exports, __webpack_require__) {

// 20.3.3.1 / 15.9.4.4 Date.now()
var $export = __webpack_require__(1);

$export($export.S, 'Date', {
  now: function now() {
    return new Date().getTime();
  }
});

/***/ }),
/* 254 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $export = __webpack_require__(1);

var toObject = __webpack_require__(24);

var toPrimitive = __webpack_require__(44);

$export($export.P + $export.F * __webpack_require__(6)(function () {
  return new Date(NaN).toJSON() !== null || Date.prototype.toJSON.call({
    toISOString: function toISOString() {
      return 1;
    }
  }) !== 1;
}), 'Date', {
  // eslint-disable-next-line no-unused-vars
  toJSON: function toJSON(key) {
    var O = toObject(this);
    var pv = toPrimitive(O);
    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();
  }
});

/***/ }),
/* 255 */
/***/ (function(module, exports, __webpack_require__) {

// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()
var $export = __webpack_require__(1);

var toISOString = __webpack_require__(256); // PhantomJS / old WebKit has a broken implementations


$export($export.P + $export.F * (Date.prototype.toISOString !== toISOString), 'Date', {
  toISOString: toISOString
});

/***/ }),
/* 256 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()

var fails = __webpack_require__(6);

var getTime = Date.prototype.getTime;
var $toISOString = Date.prototype.toISOString;

var lz = function lz(num) {
  return num > 9 ? num : '0' + num;
}; // PhantomJS / old WebKit has a broken implementations


module.exports = fails(function () {
  return $toISOString.call(new Date(-5e13 - 1)) != '0385-07-25T07:06:39.999Z';
}) || !fails(function () {
  $toISOString.call(new Date(NaN));
}) ? function toISOString() {
  if (!isFinite(getTime.call(this))) throw RangeError('Invalid time value');
  var d = this;
  var y = d.getUTCFullYear();
  var m = d.getUTCMilliseconds();
  var s = y < 0 ? '-' : y > 9999 ? '+' : '';
  return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) + '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) + 'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) + ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';
} : $toISOString;

/***/ }),
/* 257 */
/***/ (function(module, exports, __webpack_require__) {

var DateProto = Date.prototype;
var INVALID_DATE = 'Invalid Date';
var TO_STRING = 'toString';
var $toString = DateProto[TO_STRING];
var getTime = DateProto.getTime;

if (new Date(NaN) + '' != INVALID_DATE) {
  __webpack_require__(26)(DateProto, TO_STRING, function toString() {
    var value = getTime.call(this); // eslint-disable-next-line no-self-compare

    return value === value ? $toString.call(this) : INVALID_DATE;
  });
}

/***/ }),
/* 258 */
/***/ (function(module, exports, __webpack_require__) {

var TO_PRIMITIVE = __webpack_require__(13)('toPrimitive');

var proto = Date.prototype;
if (!(TO_PRIMITIVE in proto)) __webpack_require__(29)(proto, TO_PRIMITIVE, __webpack_require__(259));

/***/ }),
/* 259 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var anObject = __webpack_require__(7);

var toPrimitive = __webpack_require__(44);

var NUMBER = 'number';

module.exports = function (hint) {
  if (hint !== 'string' && hint !== NUMBER && hint !== 'default') throw TypeError('Incorrect hint');
  return toPrimitive(anObject(this), hint != NUMBER);
};

/***/ }),
/* 260 */
/***/ (function(module, exports, __webpack_require__) {

// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)
var $export = __webpack_require__(1);

$export($export.S, 'Array', {
  isArray: __webpack_require__(82)
});

/***/ }),
/* 261 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var ctx = __webpack_require__(34);

var $export = __webpack_require__(1);

var toObject = __webpack_require__(24);

var call = __webpack_require__(143);

var isArrayIter = __webpack_require__(115);

var toLength = __webpack_require__(16);

var createProperty = __webpack_require__(116);

var getIterFn = __webpack_require__(117);

$export($export.S + $export.F * !__webpack_require__(83)(function (iter) {
  Array.from(iter);
}), 'Array', {
  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
  from: function from(arrayLike
  /* , mapfn = undefined, thisArg = undefined */
  ) {
    var O = toObject(arrayLike);
    var C = typeof this == 'function' ? this : Array;
    var aLen = arguments.length;
    var mapfn = aLen > 1 ? arguments[1] : undefined;
    var mapping = mapfn !== undefined;
    var index = 0;
    var iterFn = getIterFn(O);
    var length, result, step, iterator;
    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2); // if object isn't iterable or it's array with default iterator - use simple case

    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
      }
    } else {
      length = toLength(O.length);

      for (result = new C(length); length > index; index++) {
        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
      }
    }

    result.length = index;
    return result;
  }
});

/***/ }),
/* 262 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $export = __webpack_require__(1);

var createProperty = __webpack_require__(116); // WebKit Array.of isn't generic


$export($export.S + $export.F * __webpack_require__(6)(function () {
  function F() {
    /* empty */
  }

  return !(Array.of.call(F) instanceof F);
}), 'Array', {
  // 22.1.2.3 Array.of( ...items)
  of: function of()
  /* ...args */
  {
    var index = 0;
    var aLen = arguments.length;
    var result = new (typeof this == 'function' ? this : Array)(aLen);

    while (aLen > index) {
      createProperty(result, index, arguments[index++]);
    }

    result.length = aLen;
    return result;
  }
});

/***/ }),
/* 263 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // 22.1.3.13 Array.prototype.join(separator)

var $export = __webpack_require__(1);

var toIObject = __webpack_require__(30);

var arrayJoin = [].join; // fallback for not array-like strings

$export($export.P + $export.F * (__webpack_require__(70) != Object || !__webpack_require__(32)(arrayJoin)), 'Array', {
  join: function join(separator) {
    return arrayJoin.call(toIObject(this), separator === undefined ? ',' : separator);
  }
});

/***/ }),
/* 264 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $export = __webpack_require__(1);

var html = __webpack_require__(103);

var cof = __webpack_require__(40);

var toAbsoluteIndex = __webpack_require__(52);

var toLength = __webpack_require__(16);

var arraySlice = [].slice; // fallback for not array-like ES3 strings and DOM objects

$export($export.P + $export.F * __webpack_require__(6)(function () {
  if (html) arraySlice.call(html);
}), 'Array', {
  slice: function slice(begin, end) {
    var len = toLength(this.length);
    var klass = cof(this);
    end = end === undefined ? len : end;
    if (klass == 'Array') return arraySlice.call(this, begin, end);
    var start = toAbsoluteIndex(begin, len);
    var upTo = toAbsoluteIndex(end, len);
    var size = toLength(upTo - start);
    var cloned = new Array(size);
    var i = 0;

    for (; i < size; i++) {
      cloned[i] = klass == 'String' ? this.charAt(start + i) : this[start + i];
    }

    return cloned;
  }
});

/***/ }),
/* 265 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $export = __webpack_require__(1);

var aFunction = __webpack_require__(35);

var toObject = __webpack_require__(24);

var fails = __webpack_require__(6);

var $sort = [].sort;
var test = [1, 2, 3];
$export($export.P + $export.F * (fails(function () {
  // IE8-
  test.sort(undefined);
}) || !fails(function () {
  // V8 bug
  test.sort(null); // Old WebKit
}) || !__webpack_require__(32)($sort)), 'Array', {
  // 22.1.3.25 Array.prototype.sort(comparefn)
  sort: function sort(comparefn) {
    return comparefn === undefined ? $sort.call(toObject(this)) : $sort.call(toObject(this), aFunction(comparefn));
  }
});

/***/ }),
/* 266 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $export = __webpack_require__(1);

var $forEach = __webpack_require__(39)(0);

var STRICT = __webpack_require__(32)([].forEach, true);

$export($export.P + $export.F * !STRICT, 'Array', {
  // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])
  forEach: function forEach(callbackfn
  /* , thisArg */
  ) {
    return $forEach(this, callbackfn, arguments[1]);
  }
});

/***/ }),
/* 267 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(8);

var isArray = __webpack_require__(82);

var SPECIES = __webpack_require__(13)('species');

module.exports = function (original) {
  var C;

  if (isArray(original)) {
    C = original.constructor; // cross-realm fallback

    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;

    if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  }

  return C === undefined ? Array : C;
};

/***/ }),
/* 268 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $export = __webpack_require__(1);

var $map = __webpack_require__(39)(1);

$export($export.P + $export.F * !__webpack_require__(32)([].map, true), 'Array', {
  // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])
  map: function map(callbackfn
  /* , thisArg */
  ) {
    return $map(this, callbackfn, arguments[1]);
  }
});

/***/ }),
/* 269 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $export = __webpack_require__(1);

var $filter = __webpack_require__(39)(2);

$export($export.P + $export.F * !__webpack_require__(32)([].filter, true), 'Array', {
  // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])
  filter: function filter(callbackfn
  /* , thisArg */
  ) {
    return $filter(this, callbackfn, arguments[1]);
  }
});

/***/ }),
/* 270 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $export = __webpack_require__(1);

var $some = __webpack_require__(39)(3);

$export($export.P + $export.F * !__webpack_require__(32)([].some, true), 'Array', {
  // 22.1.3.23 / 15.4.4.17 Array.prototype.some(callbackfn [, thisArg])
  some: function some(callbackfn
  /* , thisArg */
  ) {
    return $some(this, callbackfn, arguments[1]);
  }
});

/***/ }),
/* 271 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $export = __webpack_require__(1);

var $every = __webpack_require__(39)(4);

$export($export.P + $export.F * !__webpack_require__(32)([].every, true), 'Array', {
  // 22.1.3.5 / 15.4.4.16 Array.prototype.every(callbackfn [, thisArg])
  every: function every(callbackfn
  /* , thisArg */
  ) {
    return $every(this, callbackfn, arguments[1]);
  }
});

/***/ }),
/* 272 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $export = __webpack_require__(1);

var $reduce = __webpack_require__(145);

$export($export.P + $export.F * !__webpack_require__(32)([].reduce, true), 'Array', {
  // 22.1.3.18 / 15.4.4.21 Array.prototype.reduce(callbackfn [, initialValue])
  reduce: function reduce(callbackfn
  /* , initialValue */
  ) {
    return $reduce(this, callbackfn, arguments.length, arguments[1], false);
  }
});

/***/ }),
/* 273 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $export = __webpack_require__(1);

var $reduce = __webpack_require__(145);

$export($export.P + $export.F * !__webpack_require__(32)([].reduceRight, true), 'Array', {
  // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])
  reduceRight: function reduceRight(callbackfn
  /* , initialValue */
  ) {
    return $reduce(this, callbackfn, arguments.length, arguments[1], true);
  }
});

/***/ }),
/* 274 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $export = __webpack_require__(1);

var $indexOf = __webpack_require__(80)(false);

var $native = [].indexOf;
var NEGATIVE_ZERO = !!$native && 1 / [1].indexOf(1, -0) < 0;
$export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(32)($native)), 'Array', {
  // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])
  indexOf: function indexOf(searchElement
  /* , fromIndex = 0 */
  ) {
    return NEGATIVE_ZERO // convert -0 to +0
    ? $native.apply(this, arguments) || 0 : $indexOf(this, searchElement, arguments[1]);
  }
});

/***/ }),
/* 275 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $export = __webpack_require__(1);

var toIObject = __webpack_require__(30);

var toInteger = __webpack_require__(36);

var toLength = __webpack_require__(16);

var $native = [].lastIndexOf;
var NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;
$export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(32)($native)), 'Array', {
  // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])
  lastIndexOf: function lastIndexOf(searchElement
  /* , fromIndex = @[*-1] */
  ) {
    // convert -0 to +0
    if (NEGATIVE_ZERO) return $native.apply(this, arguments) || 0;
    var O = toIObject(this);
    var length = toLength(O.length);
    var index = length - 1;
    if (arguments.length > 1) index = Math.min(index, toInteger(arguments[1]));
    if (index < 0) index = length + index;

    for (; index >= 0; index--) {
      if (index in O) if (O[index] === searchElement) return index || 0;
    }

    return -1;
  }
});

/***/ }),
/* 276 */
/***/ (function(module, exports, __webpack_require__) {

// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
var $export = __webpack_require__(1);

$export($export.P, 'Array', {
  copyWithin: __webpack_require__(146)
});

__webpack_require__(56)('copyWithin');

/***/ }),
/* 277 */
/***/ (function(module, exports, __webpack_require__) {

// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
var $export = __webpack_require__(1);

$export($export.P, 'Array', {
  fill: __webpack_require__(118)
});

__webpack_require__(56)('fill');

/***/ }),
/* 278 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)

var $export = __webpack_require__(1);

var $find = __webpack_require__(39)(5);

var KEY = 'find';
var forced = true; // Shouldn't skip holes

if (KEY in []) Array(1)[KEY](function () {
  forced = false;
});
$export($export.P + $export.F * forced, 'Array', {
  find: function find(callbackfn
  /* , that = undefined */
  ) {
    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});

__webpack_require__(56)(KEY);

/***/ }),
/* 279 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)

var $export = __webpack_require__(1);

var $find = __webpack_require__(39)(6);

var KEY = 'findIndex';
var forced = true; // Shouldn't skip holes

if (KEY in []) Array(1)[KEY](function () {
  forced = false;
});
$export($export.P + $export.F * forced, 'Array', {
  findIndex: function findIndex(callbackfn
  /* , that = undefined */
  ) {
    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});

__webpack_require__(56)(KEY);

/***/ }),
/* 280 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(66)('Array');

/***/ }),
/* 281 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(5);

var inheritIfRequired = __webpack_require__(106);

var dP = __webpack_require__(19).f;

var gOPN = __webpack_require__(54).f;

var isRegExp = __webpack_require__(113);

var $flags = __webpack_require__(84);

var $RegExp = global.RegExp;
var Base = $RegExp;
var proto = $RegExp.prototype;
var re1 = /a/g;
var re2 = /a/g; // "new" creates a new object, old webkit buggy here

var CORRECT_NEW = new $RegExp(re1) !== re1;

if (__webpack_require__(20) && (!CORRECT_NEW || __webpack_require__(6)(function () {
  re2[__webpack_require__(13)('match')] = false; // RegExp constructor can alter flags and IsRegExp works correct with @@match

  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';
}))) {
  $RegExp = function RegExp(p, f) {
    var tiRE = this instanceof $RegExp;
    var piRE = isRegExp(p);
    var fiU = f === undefined;
    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p : inheritIfRequired(CORRECT_NEW ? new Base(piRE && !fiU ? p.source : p, f) : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f), tiRE ? this : proto, $RegExp);
  };

  var proxy = function proxy(key) {
    key in $RegExp || dP($RegExp, key, {
      configurable: true,
      get: function get() {
        return Base[key];
      },
      set: function set(it) {
        Base[key] = it;
      }
    });
  };

  for (var keys = gOPN(Base), i = 0; keys.length > i;) {
    proxy(keys[i++]);
  }

  proto.constructor = $RegExp;
  $RegExp.prototype = proto;

  __webpack_require__(26)(global, 'RegExp', $RegExp);
}

__webpack_require__(66)('RegExp');

/***/ }),
/* 282 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__(149);

var anObject = __webpack_require__(7);

var $flags = __webpack_require__(84);

var DESCRIPTORS = __webpack_require__(20);

var TO_STRING = 'toString';
var $toString = /./[TO_STRING];

var define = function define(fn) {
  __webpack_require__(26)(RegExp.prototype, TO_STRING, fn, true);
}; // 21.2.5.14 RegExp.prototype.toString()


if (__webpack_require__(6)(function () {
  return $toString.call({
    source: 'a',
    flags: 'b'
  }) != '/a/b';
})) {
  define(function toString() {
    var R = anObject(this);
    return '/'.concat(R.source, '/', 'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);
  }); // FF44- RegExp#toString has a wrong name
} else if ($toString.name != TO_STRING) {
  define(function toString() {
    return $toString.call(this);
  });
}

/***/ }),
/* 283 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var anObject = __webpack_require__(7);

var toLength = __webpack_require__(16);

var advanceStringIndex = __webpack_require__(121);

var regExpExec = __webpack_require__(85); // @@match logic


__webpack_require__(86)('match', 1, function (defined, MATCH, $match, maybeCallNative) {
  return [// `String.prototype.match` method
  // https://tc39.github.io/ecma262/#sec-string.prototype.match
  function match(regexp) {
    var O = defined(this);
    var fn = regexp == undefined ? undefined : regexp[MATCH];
    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
  }, // `RegExp.prototype[@@match]` method
  // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match
  function (regexp) {
    var res = maybeCallNative($match, regexp, this);
    if (res.done) return res.value;
    var rx = anObject(regexp);
    var S = String(this);
    if (!rx.global) return regExpExec(rx, S);
    var fullUnicode = rx.unicode;
    rx.lastIndex = 0;
    var A = [];
    var n = 0;
    var result;

    while ((result = regExpExec(rx, S)) !== null) {
      var matchStr = String(result[0]);
      A[n] = matchStr;
      if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
      n++;
    }

    return n === 0 ? null : A;
  }];
});

/***/ }),
/* 284 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var anObject = __webpack_require__(7);

var toObject = __webpack_require__(24);

var toLength = __webpack_require__(16);

var toInteger = __webpack_require__(36);

var advanceStringIndex = __webpack_require__(121);

var regExpExec = __webpack_require__(85);

var max = Math.max;
var min = Math.min;
var floor = Math.floor;
var SUBSTITUTION_SYMBOLS = /\$([$&`']|\d\d?|<[^>]*>)/g;
var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&`']|\d\d?)/g;

var maybeToString = function maybeToString(it) {
  return it === undefined ? it : String(it);
}; // @@replace logic


__webpack_require__(86)('replace', 2, function (defined, REPLACE, $replace, maybeCallNative) {
  return [// `String.prototype.replace` method
  // https://tc39.github.io/ecma262/#sec-string.prototype.replace
  function replace(searchValue, replaceValue) {
    var O = defined(this);
    var fn = searchValue == undefined ? undefined : searchValue[REPLACE];
    return fn !== undefined ? fn.call(searchValue, O, replaceValue) : $replace.call(String(O), searchValue, replaceValue);
  }, // `RegExp.prototype[@@replace]` method
  // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace
  function (regexp, replaceValue) {
    var res = maybeCallNative($replace, regexp, this, replaceValue);
    if (res.done) return res.value;
    var rx = anObject(regexp);
    var S = String(this);
    var functionalReplace = typeof replaceValue === 'function';
    if (!functionalReplace) replaceValue = String(replaceValue);
    var global = rx.global;

    if (global) {
      var fullUnicode = rx.unicode;
      rx.lastIndex = 0;
    }

    var results = [];

    while (true) {
      var result = regExpExec(rx, S);
      if (result === null) break;
      results.push(result);
      if (!global) break;
      var matchStr = String(result[0]);
      if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
    }

    var accumulatedResult = '';
    var nextSourcePosition = 0;

    for (var i = 0; i < results.length; i++) {
      result = results[i];
      var matched = String(result[0]);
      var position = max(min(toInteger(result.index), S.length), 0);
      var captures = []; // NOTE: This is equivalent to
      //   captures = result.slice(1).map(maybeToString)
      // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
      // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
      // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.

      for (var j = 1; j < result.length; j++) {
        captures.push(maybeToString(result[j]));
      }

      var namedCaptures = result.groups;

      if (functionalReplace) {
        var replacerArgs = [matched].concat(captures, position, S);
        if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);
        var replacement = String(replaceValue.apply(undefined, replacerArgs));
      } else {
        replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
      }

      if (position >= nextSourcePosition) {
        accumulatedResult += S.slice(nextSourcePosition, position) + replacement;
        nextSourcePosition = position + matched.length;
      }
    }

    return accumulatedResult + S.slice(nextSourcePosition);
  }]; // https://tc39.github.io/ecma262/#sec-getsubstitution

  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {
    var tailPos = position + matched.length;
    var m = captures.length;
    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;

    if (namedCaptures !== undefined) {
      namedCaptures = toObject(namedCaptures);
      symbols = SUBSTITUTION_SYMBOLS;
    }

    return $replace.call(replacement, symbols, function (match, ch) {
      var capture;

      switch (ch.charAt(0)) {
        case '$':
          return '$';

        case '&':
          return matched;

        case '`':
          return str.slice(0, position);

        case "'":
          return str.slice(tailPos);

        case '<':
          capture = namedCaptures[ch.slice(1, -1)];
          break;

        default:
          // \d\d?
          var n = +ch;
          if (n === 0) return match;

          if (n > m) {
            var f = floor(n / 10);
            if (f === 0) return match;
            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);
            return match;
          }

          capture = captures[n - 1];
      }

      return capture === undefined ? '' : capture;
    });
  }
});

/***/ }),
/* 285 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var anObject = __webpack_require__(7);

var sameValue = __webpack_require__(134);

var regExpExec = __webpack_require__(85); // @@search logic


__webpack_require__(86)('search', 1, function (defined, SEARCH, $search, maybeCallNative) {
  return [// `String.prototype.search` method
  // https://tc39.github.io/ecma262/#sec-string.prototype.search
  function search(regexp) {
    var O = defined(this);
    var fn = regexp == undefined ? undefined : regexp[SEARCH];
    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
  }, // `RegExp.prototype[@@search]` method
  // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@search
  function (regexp) {
    var res = maybeCallNative($search, regexp, this);
    if (res.done) return res.value;
    var rx = anObject(regexp);
    var S = String(this);
    var previousLastIndex = rx.lastIndex;
    if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;
    var result = regExpExec(rx, S);
    if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;
    return result === null ? -1 : result.index;
  }];
});

/***/ }),
/* 286 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var isRegExp = __webpack_require__(113);

var anObject = __webpack_require__(7);

var speciesConstructor = __webpack_require__(73);

var advanceStringIndex = __webpack_require__(121);

var toLength = __webpack_require__(16);

var callRegExpExec = __webpack_require__(85);

var regexpExec = __webpack_require__(120);

var fails = __webpack_require__(6);

var $min = Math.min;
var $push = [].push;
var $SPLIT = 'split';
var LENGTH = 'length';
var LAST_INDEX = 'lastIndex';
var MAX_UINT32 = 0xffffffff; // babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError

var SUPPORTS_Y = !fails(function () {
  RegExp(MAX_UINT32, 'y');
}); // @@split logic

__webpack_require__(86)('split', 2, function (defined, SPLIT, $split, maybeCallNative) {
  var internalSplit;

  if ('abbc'[$SPLIT](/(b)*/)[1] == 'c' || 'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 || 'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 || '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 || '.'[$SPLIT](/()()/)[LENGTH] > 1 || ''[$SPLIT](/.?/)[LENGTH]) {
    // based on es5-shim implementation, need to rework it
    internalSplit = function internalSplit(separator, limit) {
      var string = String(this);
      if (separator === undefined && limit === 0) return []; // If `separator` is not a regex, use native split

      if (!isRegExp(separator)) return $split.call(string, separator, limit);
      var output = [];
      var flags = (separator.ignoreCase ? 'i' : '') + (separator.multiline ? 'm' : '') + (separator.unicode ? 'u' : '') + (separator.sticky ? 'y' : '');
      var lastLastIndex = 0;
      var splitLimit = limit === undefined ? MAX_UINT32 : limit >>> 0; // Make `global` and avoid `lastIndex` issues by working with a copy

      var separatorCopy = new RegExp(separator.source, flags + 'g');
      var match, lastIndex, lastLength;

      while (match = regexpExec.call(separatorCopy, string)) {
        lastIndex = separatorCopy[LAST_INDEX];

        if (lastIndex > lastLastIndex) {
          output.push(string.slice(lastLastIndex, match.index));
          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));
          lastLength = match[0][LENGTH];
          lastLastIndex = lastIndex;
          if (output[LENGTH] >= splitLimit) break;
        }

        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop
      }

      if (lastLastIndex === string[LENGTH]) {
        if (lastLength || !separatorCopy.test('')) output.push('');
      } else output.push(string.slice(lastLastIndex));

      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;
    }; // Chakra, V8

  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {
    internalSplit = function internalSplit(separator, limit) {
      return separator === undefined && limit === 0 ? [] : $split.call(this, separator, limit);
    };
  } else {
    internalSplit = $split;
  }

  return [// `String.prototype.split` method
  // https://tc39.github.io/ecma262/#sec-string.prototype.split
  function split(separator, limit) {
    var O = defined(this);
    var splitter = separator == undefined ? undefined : separator[SPLIT];
    return splitter !== undefined ? splitter.call(separator, O, limit) : internalSplit.call(String(O), separator, limit);
  }, // `RegExp.prototype[@@split]` method
  // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split
  //
  // NOTE: This cannot be properly polyfilled in engines that don't support
  // the 'y' flag.
  function (regexp, limit) {
    var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== $split);
    if (res.done) return res.value;
    var rx = anObject(regexp);
    var S = String(this);
    var C = speciesConstructor(rx, RegExp);
    var unicodeMatching = rx.unicode;
    var flags = (rx.ignoreCase ? 'i' : '') + (rx.multiline ? 'm' : '') + (rx.unicode ? 'u' : '') + (SUPPORTS_Y ? 'y' : 'g'); // ^(? + rx + ) is needed, in combination with some S slicing, to
    // simulate the 'y' flag.

    var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);
    var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
    if (lim === 0) return [];
    if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];
    var p = 0;
    var q = 0;
    var A = [];

    while (q < S.length) {
      splitter.lastIndex = SUPPORTS_Y ? q : 0;
      var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));
      var e;

      if (z === null || (e = $min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p) {
        q = advanceStringIndex(S, q, unicodeMatching);
      } else {
        A.push(S.slice(p, q));
        if (A.length === lim) return A;

        for (var i = 1; i <= z.length - 1; i++) {
          A.push(z[i]);
          if (A.length === lim) return A;
        }

        q = p = e;
      }
    }

    A.push(S.slice(p));
    return A;
  }];
});

/***/ }),
/* 287 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(5);

var macrotask = __webpack_require__(122).set;

var Observer = global.MutationObserver || global.WebKitMutationObserver;
var process = global.process;
var Promise = global.Promise;
var isNode = __webpack_require__(40)(process) == 'process';

module.exports = function () {
  var head, last, notify;

  var flush = function flush() {
    var parent, fn;
    if (isNode && (parent = process.domain)) parent.exit();

    while (head) {
      fn = head.fn;
      head = head.next;

      try {
        fn();
      } catch (e) {
        if (head) notify();else last = undefined;
        throw e;
      }
    }

    last = undefined;
    if (parent) parent.enter();
  }; // Node.js


  if (isNode) {
    notify = function notify() {
      process.nextTick(flush);
    }; // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339

  } else if (Observer && !(global.navigator && global.navigator.standalone)) {
    var toggle = true;
    var node = document.createTextNode('');
    new Observer(flush).observe(node, {
      characterData: true
    }); // eslint-disable-line no-new

    notify = function notify() {
      node.data = toggle = !toggle;
    }; // environments with maybe non-completely correct, but existent Promise

  } else if (Promise && Promise.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    var promise = Promise.resolve(undefined);

    notify = function notify() {
      promise.then(flush);
    }; // for other environments - macrotask based on:
    // - setImmediate
    // - MessageChannel
    // - window.postMessag
    // - onreadystatechange
    // - setTimeout

  } else {
    notify = function notify() {
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }

  return function (fn) {
    var task = {
      fn: fn,
      next: undefined
    };
    if (last) last.next = task;

    if (!head) {
      head = task;
      notify();
    }

    last = task;
  };
};

/***/ }),
/* 288 */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return {
      e: false,
      v: exec()
    };
  } catch (e) {
    return {
      e: true,
      v: e
    };
  }
};

/***/ }),
/* 289 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var strong = __webpack_require__(153);

var validate = __webpack_require__(57);

var MAP = 'Map'; // 23.1 Map Objects

module.exports = __webpack_require__(89)(MAP, function (get) {
  return function Map() {
    return get(this, arguments.length > 0 ? arguments[0] : undefined);
  };
}, {
  // 23.1.3.6 Map.prototype.get(key)
  get: function get(key) {
    var entry = strong.getEntry(validate(this, MAP), key);
    return entry && entry.v;
  },
  // 23.1.3.9 Map.prototype.set(key, value)
  set: function set(key, value) {
    return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);
  }
}, strong, true);

/***/ }),
/* 290 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var strong = __webpack_require__(153);

var validate = __webpack_require__(57);

var SET = 'Set'; // 23.2 Set Objects

module.exports = __webpack_require__(89)(SET, function (get) {
  return function Set() {
    return get(this, arguments.length > 0 ? arguments[0] : undefined);
  };
}, {
  // 23.2.3.1 Set.prototype.add(value)
  add: function add(value) {
    return strong.def(validate(this, SET), value = value === 0 ? 0 : value, value);
  }
}, strong);

/***/ }),
/* 291 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var global = __webpack_require__(5);

var each = __webpack_require__(39)(0);

var redefine = __webpack_require__(26);

var meta = __webpack_require__(45);

var assign = __webpack_require__(133);

var weak = __webpack_require__(154);

var isObject = __webpack_require__(8);

var validate = __webpack_require__(57);

var NATIVE_WEAK_MAP = __webpack_require__(57);

var IS_IE11 = !global.ActiveXObject && 'ActiveXObject' in global;
var WEAK_MAP = 'WeakMap';
var getWeak = meta.getWeak;
var isExtensible = Object.isExtensible;
var uncaughtFrozenStore = weak.ufstore;
var InternalMap;

var wrapper = function wrapper(get) {
  return function WeakMap() {
    return get(this, arguments.length > 0 ? arguments[0] : undefined);
  };
};

var methods = {
  // 23.3.3.3 WeakMap.prototype.get(key)
  get: function get(key) {
    if (isObject(key)) {
      var data = getWeak(key);
      if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);
      return data ? data[this._i] : undefined;
    }
  },
  // 23.3.3.5 WeakMap.prototype.set(key, value)
  set: function set(key, value) {
    return weak.def(validate(this, WEAK_MAP), key, value);
  }
}; // 23.3 WeakMap Objects

var $WeakMap = module.exports = __webpack_require__(89)(WEAK_MAP, wrapper, methods, weak, true, true); // IE11 WeakMap frozen keys fix


if (NATIVE_WEAK_MAP && IS_IE11) {
  InternalMap = weak.getConstructor(wrapper, WEAK_MAP);
  assign(InternalMap.prototype, methods);
  meta.NEED = true;
  each(['delete', 'has', 'get', 'set'], function (key) {
    var proto = $WeakMap.prototype;
    var method = proto[key];
    redefine(proto, key, function (a, b) {
      // store frozen objects on internal weakmap shim
      if (isObject(a) && !isExtensible(a)) {
        if (!this._f) this._f = new InternalMap();

        var result = this._f[key](a, b);

        return key == 'set' ? this : result; // store all the rest on native weakmap
      }

      return method.call(this, a, b);
    });
  });
}

/***/ }),
/* 292 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var weak = __webpack_require__(154);

var validate = __webpack_require__(57);

var WEAK_SET = 'WeakSet'; // 23.4 WeakSet Objects

__webpack_require__(89)(WEAK_SET, function (get) {
  return function WeakSet() {
    return get(this, arguments.length > 0 ? arguments[0] : undefined);
  };
}, {
  // 23.4.3.1 WeakSet.prototype.add(value)
  add: function add(value) {
    return weak.def(validate(this, WEAK_SET), value, true);
  }
}, weak, false, true);

/***/ }),
/* 293 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $export = __webpack_require__(1);

var $typed = __webpack_require__(90);

var buffer = __webpack_require__(123);

var anObject = __webpack_require__(7);

var toAbsoluteIndex = __webpack_require__(52);

var toLength = __webpack_require__(16);

var isObject = __webpack_require__(8);

var ArrayBuffer = __webpack_require__(5).ArrayBuffer;

var speciesConstructor = __webpack_require__(73);

var $ArrayBuffer = buffer.ArrayBuffer;
var $DataView = buffer.DataView;
var $isView = $typed.ABV && ArrayBuffer.isView;
var $slice = $ArrayBuffer.prototype.slice;
var VIEW = $typed.VIEW;
var ARRAY_BUFFER = 'ArrayBuffer';
$export($export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer), {
  ArrayBuffer: $ArrayBuffer
});
$export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {
  // 24.1.3.1 ArrayBuffer.isView(arg)
  isView: function isView(it) {
    return $isView && $isView(it) || isObject(it) && VIEW in it;
  }
});
$export($export.P + $export.U + $export.F * __webpack_require__(6)(function () {
  return !new $ArrayBuffer(2).slice(1, undefined).byteLength;
}), ARRAY_BUFFER, {
  // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)
  slice: function slice(start, end) {
    if ($slice !== undefined && end === undefined) return $slice.call(anObject(this), start); // FF fix

    var len = anObject(this).byteLength;
    var first = toAbsoluteIndex(start, len);
    var fin = toAbsoluteIndex(end === undefined ? len : end, len);
    var result = new (speciesConstructor(this, $ArrayBuffer))(toLength(fin - first));
    var viewS = new $DataView(this);
    var viewT = new $DataView(result);
    var index = 0;

    while (first < fin) {
      viewT.setUint8(index++, viewS.getUint8(first++));
    }

    return result;
  }
});

__webpack_require__(66)(ARRAY_BUFFER);

/***/ }),
/* 294 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(1);

$export($export.G + $export.W + $export.F * !__webpack_require__(90).ABV, {
  DataView: __webpack_require__(123).DataView
});

/***/ }),
/* 295 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(42)('Int8', 1, function (init) {
  return function Int8Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

/***/ }),
/* 296 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(42)('Uint8', 1, function (init) {
  return function Uint8Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

/***/ }),
/* 297 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(42)('Uint8', 1, function (init) {
  return function Uint8ClampedArray(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
}, true);

/***/ }),
/* 298 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(42)('Int16', 2, function (init) {
  return function Int16Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

/***/ }),
/* 299 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(42)('Uint16', 2, function (init) {
  return function Uint16Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

/***/ }),
/* 300 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(42)('Int32', 4, function (init) {
  return function Int32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

/***/ }),
/* 301 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(42)('Uint32', 4, function (init) {
  return function Uint32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

/***/ }),
/* 302 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(42)('Float32', 4, function (init) {
  return function Float32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

/***/ }),
/* 303 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(42)('Float64', 8, function (init) {
  return function Float64Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

/***/ }),
/* 304 */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.1 Reflect.apply(target, thisArgument, argumentsList)
var $export = __webpack_require__(1);

var aFunction = __webpack_require__(35);

var anObject = __webpack_require__(7);

var rApply = (__webpack_require__(5).Reflect || {}).apply;
var fApply = Function.apply; // MS Edge argumentsList argument is optional

$export($export.S + $export.F * !__webpack_require__(6)(function () {
  rApply(function () {
    /* empty */
  });
}), 'Reflect', {
  apply: function apply(target, thisArgument, argumentsList) {
    var T = aFunction(target);
    var L = anObject(argumentsList);
    return rApply ? rApply(T, thisArgument, L) : fApply.call(T, thisArgument, L);
  }
});

/***/ }),
/* 305 */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])
var $export = __webpack_require__(1);

var create = __webpack_require__(53);

var aFunction = __webpack_require__(35);

var anObject = __webpack_require__(7);

var isObject = __webpack_require__(8);

var fails = __webpack_require__(6);

var bind = __webpack_require__(135);

var rConstruct = (__webpack_require__(5).Reflect || {}).construct; // MS Edge supports only 2 arguments and argumentsList argument is optional
// FF Nightly sets third argument as `new.target`, but does not create `this` from it

var NEW_TARGET_BUG = fails(function () {
  function F() {
    /* empty */
  }

  return !(rConstruct(function () {
    /* empty */
  }, [], F) instanceof F);
});
var ARGS_BUG = !fails(function () {
  rConstruct(function () {
    /* empty */
  });
});
$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {
  construct: function construct(Target, args
  /* , newTarget */
  ) {
    aFunction(Target);
    anObject(args);
    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);

    if (Target == newTarget) {
      // w/o altered newTarget, optimization for 0-4 arguments
      switch (args.length) {
        case 0:
          return new Target();

        case 1:
          return new Target(args[0]);

        case 2:
          return new Target(args[0], args[1]);

        case 3:
          return new Target(args[0], args[1], args[2]);

        case 4:
          return new Target(args[0], args[1], args[2], args[3]);
      } // w/o altered newTarget, lot of arguments case


      var $args = [null];
      $args.push.apply($args, args);
      return new (bind.apply(Target, $args))();
    } // with altered newTarget, not support built-in constructors


    var proto = newTarget.prototype;
    var instance = create(isObject(proto) ? proto : Object.prototype);
    var result = Function.apply.call(Target, instance, args);
    return isObject(result) ? result : instance;
  }
});

/***/ }),
/* 306 */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)
var dP = __webpack_require__(19);

var $export = __webpack_require__(1);

var anObject = __webpack_require__(7);

var toPrimitive = __webpack_require__(44); // MS Edge has broken Reflect.defineProperty - throwing instead of returning false


$export($export.S + $export.F * __webpack_require__(6)(function () {
  // eslint-disable-next-line no-undef
  Reflect.defineProperty(dP.f({}, 1, {
    value: 1
  }), 1, {
    value: 2
  });
}), 'Reflect', {
  defineProperty: function defineProperty(target, propertyKey, attributes) {
    anObject(target);
    propertyKey = toPrimitive(propertyKey, true);
    anObject(attributes);

    try {
      dP.f(target, propertyKey, attributes);
      return true;
    } catch (e) {
      return false;
    }
  }
});

/***/ }),
/* 307 */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.4 Reflect.deleteProperty(target, propertyKey)
var $export = __webpack_require__(1);

var gOPD = __webpack_require__(37).f;

var anObject = __webpack_require__(7);

$export($export.S, 'Reflect', {
  deleteProperty: function deleteProperty(target, propertyKey) {
    var desc = gOPD(anObject(target), propertyKey);
    return desc && !desc.configurable ? false : delete target[propertyKey];
  }
});

/***/ }),
/* 308 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // 26.1.5 Reflect.enumerate(target)

var $export = __webpack_require__(1);

var anObject = __webpack_require__(7);

var Enumerate = function Enumerate(iterated) {
  this._t = anObject(iterated); // target

  this._i = 0; // next index

  var keys = this._k = []; // keys

  var key;

  for (key in iterated) {
    keys.push(key);
  }
};

__webpack_require__(142)(Enumerate, 'Object', function () {
  var that = this;
  var keys = that._k;
  var key;

  do {
    if (that._i >= keys.length) return {
      value: undefined,
      done: true
    };
  } while (!((key = keys[that._i++]) in that._t));

  return {
    value: key,
    done: false
  };
});

$export($export.S, 'Reflect', {
  enumerate: function enumerate(target) {
    return new Enumerate(target);
  }
});

/***/ }),
/* 309 */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.6 Reflect.get(target, propertyKey [, receiver])
var gOPD = __webpack_require__(37);

var getPrototypeOf = __webpack_require__(55);

var has = __webpack_require__(28);

var $export = __webpack_require__(1);

var isObject = __webpack_require__(8);

var anObject = __webpack_require__(7);

function get(target, propertyKey
/* , receiver */
) {
  var receiver = arguments.length < 3 ? target : arguments[2];
  var desc, proto;
  if (anObject(target) === receiver) return target[propertyKey];
  if (desc = gOPD.f(target, propertyKey)) return has(desc, 'value') ? desc.value : desc.get !== undefined ? desc.get.call(receiver) : undefined;
  if (isObject(proto = getPrototypeOf(target))) return get(proto, propertyKey, receiver);
}

$export($export.S, 'Reflect', {
  get: get
});

/***/ }),
/* 310 */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)
var gOPD = __webpack_require__(37);

var $export = __webpack_require__(1);

var anObject = __webpack_require__(7);

$export($export.S, 'Reflect', {
  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {
    return gOPD.f(anObject(target), propertyKey);
  }
});

/***/ }),
/* 311 */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.8 Reflect.getPrototypeOf(target)
var $export = __webpack_require__(1);

var getProto = __webpack_require__(55);

var anObject = __webpack_require__(7);

$export($export.S, 'Reflect', {
  getPrototypeOf: function getPrototypeOf(target) {
    return getProto(anObject(target));
  }
});

/***/ }),
/* 312 */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.9 Reflect.has(target, propertyKey)
var $export = __webpack_require__(1);

$export($export.S, 'Reflect', {
  has: function has(target, propertyKey) {
    return propertyKey in target;
  }
});

/***/ }),
/* 313 */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.10 Reflect.isExtensible(target)
var $export = __webpack_require__(1);

var anObject = __webpack_require__(7);

var $isExtensible = Object.isExtensible;
$export($export.S, 'Reflect', {
  isExtensible: function isExtensible(target) {
    anObject(target);
    return $isExtensible ? $isExtensible(target) : true;
  }
});

/***/ }),
/* 314 */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.11 Reflect.ownKeys(target)
var $export = __webpack_require__(1);

$export($export.S, 'Reflect', {
  ownKeys: __webpack_require__(156)
});

/***/ }),
/* 315 */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.12 Reflect.preventExtensions(target)
var $export = __webpack_require__(1);

var anObject = __webpack_require__(7);

var $preventExtensions = Object.preventExtensions;
$export($export.S, 'Reflect', {
  preventExtensions: function preventExtensions(target) {
    anObject(target);

    try {
      if ($preventExtensions) $preventExtensions(target);
      return true;
    } catch (e) {
      return false;
    }
  }
});

/***/ }),
/* 316 */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])
var dP = __webpack_require__(19);

var gOPD = __webpack_require__(37);

var getPrototypeOf = __webpack_require__(55);

var has = __webpack_require__(28);

var $export = __webpack_require__(1);

var createDesc = __webpack_require__(48);

var anObject = __webpack_require__(7);

var isObject = __webpack_require__(8);

function set(target, propertyKey, V
/* , receiver */
) {
  var receiver = arguments.length < 4 ? target : arguments[3];
  var ownDesc = gOPD.f(anObject(target), propertyKey);
  var existingDescriptor, proto;

  if (!ownDesc) {
    if (isObject(proto = getPrototypeOf(target))) {
      return set(proto, propertyKey, V, receiver);
    }

    ownDesc = createDesc(0);
  }

  if (has(ownDesc, 'value')) {
    if (ownDesc.writable === false || !isObject(receiver)) return false;

    if (existingDescriptor = gOPD.f(receiver, propertyKey)) {
      if (existingDescriptor.get || existingDescriptor.set || existingDescriptor.writable === false) return false;
      existingDescriptor.value = V;
      dP.f(receiver, propertyKey, existingDescriptor);
    } else dP.f(receiver, propertyKey, createDesc(0, V));

    return true;
  }

  return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);
}

$export($export.S, 'Reflect', {
  set: set
});

/***/ }),
/* 317 */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.14 Reflect.setPrototypeOf(target, proto)
var $export = __webpack_require__(1);

var setProto = __webpack_require__(104);

if (setProto) $export($export.S, 'Reflect', {
  setPrototypeOf: function setPrototypeOf(target, proto) {
    setProto.check(target, proto);

    try {
      setProto.set(target, proto);
      return true;
    } catch (e) {
      return false;
    }
  }
});

/***/ }),
/* 318 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(319);

module.exports = __webpack_require__(17).Array.includes;

/***/ }),
/* 319 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // https://github.com/tc39/Array.prototype.includes

var $export = __webpack_require__(1);

var $includes = __webpack_require__(80)(true);

$export($export.P, 'Array', {
  includes: function includes(el
  /* , fromIndex = 0 */
  ) {
    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
  }
});

__webpack_require__(56)('includes');

/***/ }),
/* 320 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(321);

module.exports = __webpack_require__(17).Array.flatMap;

/***/ }),
/* 321 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatMap

var $export = __webpack_require__(1);

var flattenIntoArray = __webpack_require__(322);

var toObject = __webpack_require__(24);

var toLength = __webpack_require__(16);

var aFunction = __webpack_require__(35);

var arraySpeciesCreate = __webpack_require__(144);

$export($export.P, 'Array', {
  flatMap: function flatMap(callbackfn
  /* , thisArg */
  ) {
    var O = toObject(this);
    var sourceLen, A;
    aFunction(callbackfn);
    sourceLen = toLength(O.length);
    A = arraySpeciesCreate(O, 0);
    flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments[1]);
    return A;
  }
});

__webpack_require__(56)('flatMap');

/***/ }),
/* 322 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray

var isArray = __webpack_require__(82);

var isObject = __webpack_require__(8);

var toLength = __webpack_require__(16);

var ctx = __webpack_require__(34);

var IS_CONCAT_SPREADABLE = __webpack_require__(13)('isConcatSpreadable');

function flattenIntoArray(target, original, source, sourceLen, start, depth, mapper, thisArg) {
  var targetIndex = start;
  var sourceIndex = 0;
  var mapFn = mapper ? ctx(mapper, thisArg, 3) : false;
  var element, spreadable;

  while (sourceIndex < sourceLen) {
    if (sourceIndex in source) {
      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];
      spreadable = false;

      if (isObject(element)) {
        spreadable = element[IS_CONCAT_SPREADABLE];
        spreadable = spreadable !== undefined ? !!spreadable : isArray(element);
      }

      if (spreadable && depth > 0) {
        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;
      } else {
        if (targetIndex >= 0x1fffffffffffff) throw TypeError();
        target[targetIndex] = element;
      }

      targetIndex++;
    }

    sourceIndex++;
  }

  return targetIndex;
}

module.exports = flattenIntoArray;

/***/ }),
/* 323 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(324);

module.exports = __webpack_require__(17).String.padStart;

/***/ }),
/* 324 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // https://github.com/tc39/proposal-string-pad-start-end

var $export = __webpack_require__(1);

var $pad = __webpack_require__(157);

var userAgent = __webpack_require__(88); // https://github.com/zloirock/core-js/issues/280


var WEBKIT_BUG = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(userAgent);
$export($export.P + $export.F * WEBKIT_BUG, 'String', {
  padStart: function padStart(maxLength
  /* , fillString = ' ' */
  ) {
    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);
  }
});

/***/ }),
/* 325 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(326);

module.exports = __webpack_require__(17).String.padEnd;

/***/ }),
/* 326 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // https://github.com/tc39/proposal-string-pad-start-end

var $export = __webpack_require__(1);

var $pad = __webpack_require__(157);

var userAgent = __webpack_require__(88); // https://github.com/zloirock/core-js/issues/280


var WEBKIT_BUG = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(userAgent);
$export($export.P + $export.F * WEBKIT_BUG, 'String', {
  padEnd: function padEnd(maxLength
  /* , fillString = ' ' */
  ) {
    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);
  }
});

/***/ }),
/* 327 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(328);

module.exports = __webpack_require__(17).String.trimLeft;

/***/ }),
/* 328 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // https://github.com/sebmarkbage/ecmascript-string-left-right-trim

__webpack_require__(64)('trimLeft', function ($trim) {
  return function trimLeft() {
    return $trim(this, 1);
  };
}, 'trimStart');

/***/ }),
/* 329 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(330);

module.exports = __webpack_require__(17).String.trimRight;

/***/ }),
/* 330 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // https://github.com/sebmarkbage/ecmascript-string-left-right-trim

__webpack_require__(64)('trimRight', function ($trim) {
  return function trimRight() {
    return $trim(this, 2);
  };
}, 'trimEnd');

/***/ }),
/* 331 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(332);

module.exports = __webpack_require__(100).f('asyncIterator');

/***/ }),
/* 332 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(129)('asyncIterator');

/***/ }),
/* 333 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(334);

module.exports = __webpack_require__(17).Object.getOwnPropertyDescriptors;

/***/ }),
/* 334 */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-object-getownpropertydescriptors
var $export = __webpack_require__(1);

var ownKeys = __webpack_require__(156);

var toIObject = __webpack_require__(30);

var gOPD = __webpack_require__(37);

var createProperty = __webpack_require__(116);

$export($export.S, 'Object', {
  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
    var O = toIObject(object);
    var getDesc = gOPD.f;
    var keys = ownKeys(O);
    var result = {};
    var i = 0;
    var key, desc;

    while (keys.length > i) {
      desc = getDesc(O, key = keys[i++]);
      if (desc !== undefined) createProperty(result, key, desc);
    }

    return result;
  }
});

/***/ }),
/* 335 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(336);

module.exports = __webpack_require__(17).Object.values;

/***/ }),
/* 336 */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-object-values-entries
var $export = __webpack_require__(1);

var $values = __webpack_require__(158)(false);

$export($export.S, 'Object', {
  values: function values(it) {
    return $values(it);
  }
});

/***/ }),
/* 337 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(338);

module.exports = __webpack_require__(17).Object.entries;

/***/ }),
/* 338 */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-object-values-entries
var $export = __webpack_require__(1);

var $entries = __webpack_require__(158)(true);

$export($export.S, 'Object', {
  entries: function entries(it) {
    return $entries(it);
  }
});

/***/ }),
/* 339 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__(150);

__webpack_require__(340);

module.exports = __webpack_require__(17).Promise['finally'];

/***/ }),
/* 340 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// https://github.com/tc39/proposal-promise-finally


var $export = __webpack_require__(1);

var core = __webpack_require__(17);

var global = __webpack_require__(5);

var speciesConstructor = __webpack_require__(73);

var promiseResolve = __webpack_require__(152);

$export($export.P + $export.R, 'Promise', {
  'finally': function _finally(onFinally) {
    var C = speciesConstructor(this, core.Promise || global.Promise);
    var isFunction = typeof onFinally == 'function';
    return this.then(isFunction ? function (x) {
      return promiseResolve(C, onFinally()).then(function () {
        return x;
      });
    } : onFinally, isFunction ? function (e) {
      return promiseResolve(C, onFinally()).then(function () {
        throw e;
      });
    } : onFinally);
  }
});

/***/ }),
/* 341 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(342);

__webpack_require__(343);

__webpack_require__(344);

module.exports = __webpack_require__(17);

/***/ }),
/* 342 */
/***/ (function(module, exports, __webpack_require__) {

// ie9- setTimeout & setInterval additional parameters fix
var global = __webpack_require__(5);

var $export = __webpack_require__(1);

var userAgent = __webpack_require__(88);

var slice = [].slice;
var MSIE = /MSIE .\./.test(userAgent); // <- dirty ie9- check

var wrap = function wrap(set) {
  return function (fn, time
  /* , ...args */
  ) {
    var boundArgs = arguments.length > 2;
    var args = boundArgs ? slice.call(arguments, 2) : false;
    return set(boundArgs ? function () {
      // eslint-disable-next-line no-new-func
      (typeof fn == 'function' ? fn : Function(fn)).apply(this, args);
    } : fn, time);
  };
};

$export($export.G + $export.B + $export.F * MSIE, {
  setTimeout: wrap(global.setTimeout),
  setInterval: wrap(global.setInterval)
});

/***/ }),
/* 343 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(1);

var $task = __webpack_require__(122);

$export($export.G + $export.B, {
  setImmediate: $task.set,
  clearImmediate: $task.clear
});

/***/ }),
/* 344 */
/***/ (function(module, exports, __webpack_require__) {

var $iterators = __webpack_require__(119);

var getKeys = __webpack_require__(51);

var redefine = __webpack_require__(26);

var global = __webpack_require__(5);

var hide = __webpack_require__(29);

var Iterators = __webpack_require__(65);

var wks = __webpack_require__(13);

var ITERATOR = wks('iterator');
var TO_STRING_TAG = wks('toStringTag');
var ArrayValues = Iterators.Array;
var DOMIterables = {
  CSSRuleList: true,
  // TODO: Not spec compliant, should be false.
  CSSStyleDeclaration: false,
  CSSValueList: false,
  ClientRectList: false,
  DOMRectList: false,
  DOMStringList: false,
  DOMTokenList: true,
  DataTransferItemList: false,
  FileList: false,
  HTMLAllCollection: false,
  HTMLCollection: false,
  HTMLFormElement: false,
  HTMLSelectElement: false,
  MediaList: true,
  // TODO: Not spec compliant, should be false.
  MimeTypeArray: false,
  NamedNodeMap: false,
  NodeList: true,
  PaintRequestList: false,
  Plugin: false,
  PluginArray: false,
  SVGLengthList: false,
  SVGNumberList: false,
  SVGPathSegList: false,
  SVGPointList: false,
  SVGStringList: false,
  SVGTransformList: false,
  SourceBufferList: false,
  StyleSheetList: true,
  // TODO: Not spec compliant, should be false.
  TextTrackCueList: false,
  TextTrackList: false,
  TouchList: false
};

for (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {
  var NAME = collections[i];
  var explicit = DOMIterables[NAME];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  var key;

  if (proto) {
    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);
    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
    Iterators[NAME] = ArrayValues;
    if (explicit) for (key in $iterators) {
      if (!proto[key]) redefine(proto, key, $iterators[key], true);
    }
  }
}

/***/ }),
/* 345 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var runtime = function (exports) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.

  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.

    generator._invoke = makeInvokeMethod(innerFn, self, context);
    return generator;
  }

  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.

  function tryCatch(fn, obj, arg) {
    try {
      return {
        type: "normal",
        arg: fn.call(obj, arg)
      };
    } catch (err) {
      return {
        type: "throw",
        arg: err
      };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed"; // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.

  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.

  function Generator() {}

  function GeneratorFunction() {}

  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.


  var IteratorPrototype = {};

  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));

  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = "GeneratorFunction"; // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.

  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function (method) {
      prototype[method] = function (arg) {
        return this._invoke(method, arg);
      };
    });
  }

  exports.isGeneratorFunction = function (genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can
    // do is to check its .name property.
    (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
  };

  exports.mark = function (genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;

      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }

    genFun.prototype = Object.create(Gp);
    return genFun;
  }; // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.


  exports.awrap = function (arg) {
    return {
      __await: arg
    };
  };

  function AsyncIterator(generator) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);

      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;

        if (value && typeof value === "object" && hasOwn.call(value, "__await")) {
          return Promise.resolve(value.__await).then(function (value) {
            invoke("next", value, resolve, reject);
          }, function (err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return Promise.resolve(value).then(function (unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function (error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new Promise(function (resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise = // If enqueue has been called before, then we want to wait until
      // all previous Promises have been resolved before calling invoke,
      // so that results are always delivered in the correct order. If
      // enqueue has not been called before, then it is important to
      // call invoke immediately, without waiting on a callback to fire,
      // so that the async generator function has the opportunity to do
      // any necessary setup in a predictable way. This predictability
      // is why the Promise constructor synchronously invokes its
      // executor callback, and why async functions synchronously
      // execute code before the first await. Since we implement simple
      // async functions in terms of async generators, it is especially
      // important to get this right, even though it requires care.
      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later
      // invocations of the iterator.
      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
    } // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).


    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);

  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };

  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.

  exports.async = function (innerFn, outerFn, self, tryLocsList) {
    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));
    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.
    : iter.next().then(function (result) {
      return result.done ? result.value : iter.next();
    });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;
    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        } // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume


        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;

        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);

          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;
        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);
        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;
        var record = tryCatch(innerFn, self, context);

        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done ? GenStateCompleted : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };
        } else if (record.type === "throw") {
          state = GenStateCompleted; // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.

          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  } // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.


  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];

    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError("The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (!info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).

      context.next = delegate.nextLoc; // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.

      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }
    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    } // The delegate iterator is finished, so forget it and continue with
    // the outer generator.


    context.delegate = null;
    return ContinueSentinel;
  } // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.


  defineIteratorMethods(Gp);
  Gp[toStringTagSymbol] = "Generator"; // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.

  Gp[iteratorSymbol] = function () {
    return this;
  };

  Gp.toString = function () {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = {
      tryLoc: locs[0]
    };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{
      tryLoc: "root"
    }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  exports.keys = function (object) {
    var keys = [];

    for (var key in object) {
      keys.push(key);
    }

    keys.reverse(); // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.

    return function next() {
      while (keys.length) {
        var key = keys.pop();

        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      } // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.


      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];

      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1,
            next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;
          return next;
        };

        return next.next = next;
      }
    } // Return an iterator with no values.


    return {
      next: doneResult
    };
  }

  exports.values = values;

  function doneResult() {
    return {
      value: undefined,
      done: true
    };
  }

  Context.prototype = {
    constructor: Context,
    reset: function reset(skipTempReset) {
      this.prev = 0;
      this.next = 0; // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.

      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;
      this.method = "next";
      this.arg = undefined;
      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },
    stop: function stop() {
      this.done = true;
      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;

      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },
    dispatchException: function dispatchException(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;

      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !!caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }
          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }
          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }
          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },
    abrupt: function abrupt(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];

        if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },
    complete: function complete(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" || record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },
    finish: function finish(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];

        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },
    "catch": function _catch(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];

        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;

          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }

          return thrown;
        }
      } // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.


      throw new Error("illegal catch attempt");
    },
    delegateYield: function delegateYield(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  }; // Regardless of whether this script is executing as a CommonJS module
  // or not, return the runtime object so that we can declare the variable
  // regeneratorRuntime in the outer scope, which allows this module to be
  // injected easily by `bin/regenerator --include-runtime script.js`.

  return exports;
}( // If this script is executing as a CommonJS module, use module.exports
// as the regeneratorRuntime namespace. Otherwise create a new empty
// object. Either way, the resulting object will be used to initialize
// the regeneratorRuntime variable at the top of this file.
 true ? module.exports : undefined);

try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  // This module should not be running in strict mode, so the above
  // assignment should always work unless something is misconfigured. Just
  // in case runtime.js accidentally runs in strict mode, we can escape
  // strict mode using a global Function call. This could conceivably fail
  // if a Content Security Policy forbids using Function, but in that case
  // the proper solution is to fix the accidental strict mode problem. If
  // you've misconfigured your bundler to force strict mode and applied a
  // CSP to forbid Function, and you're not willing to fix either of those
  // problems, please detail your unique predicament in a GitHub issue.
  Function("r", "regeneratorRuntime = r")(runtime);
}

/***/ }),
/* 346 */
/***/ (function(module, exports) {

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  }
}

module.exports = _arrayWithoutHoles;

/***/ }),
/* 347 */
/***/ (function(module, exports) {

function _iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

module.exports = _iterableToArray;

/***/ }),
/* 348 */
/***/ (function(module, exports) {

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

module.exports = _nonIterableSpread;

/***/ }),
/* 349 */
/***/ (function(module, exports) {

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

module.exports = _arrayWithHoles;

/***/ }),
/* 350 */
/***/ (function(module, exports) {

function _iterableToArrayLimit(arr, i) {
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

module.exports = _iterableToArrayLimit;

/***/ }),
/* 351 */
/***/ (function(module, exports) {

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance");
}

module.exports = _nonIterableRest;

/***/ }),
/* 352 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var runtime = function (exports) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.

  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.

    generator._invoke = makeInvokeMethod(innerFn, self, context);
    return generator;
  }

  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.

  function tryCatch(fn, obj, arg) {
    try {
      return {
        type: "normal",
        arg: fn.call(obj, arg)
      };
    } catch (err) {
      return {
        type: "throw",
        arg: err
      };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed"; // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.

  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.

  function Generator() {}

  function GeneratorFunction() {}

  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.


  var IteratorPrototype = {};

  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));

  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = "GeneratorFunction"; // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.

  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function (method) {
      prototype[method] = function (arg) {
        return this._invoke(method, arg);
      };
    });
  }

  exports.isGeneratorFunction = function (genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can
    // do is to check its .name property.
    (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
  };

  exports.mark = function (genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;

      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }

    genFun.prototype = Object.create(Gp);
    return genFun;
  }; // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.


  exports.awrap = function (arg) {
    return {
      __await: arg
    };
  };

  function AsyncIterator(generator) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);

      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;

        if (value && typeof value === "object" && hasOwn.call(value, "__await")) {
          return Promise.resolve(value.__await).then(function (value) {
            invoke("next", value, resolve, reject);
          }, function (err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return Promise.resolve(value).then(function (unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function (error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new Promise(function (resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise = // If enqueue has been called before, then we want to wait until
      // all previous Promises have been resolved before calling invoke,
      // so that results are always delivered in the correct order. If
      // enqueue has not been called before, then it is important to
      // call invoke immediately, without waiting on a callback to fire,
      // so that the async generator function has the opportunity to do
      // any necessary setup in a predictable way. This predictability
      // is why the Promise constructor synchronously invokes its
      // executor callback, and why async functions synchronously
      // execute code before the first await. Since we implement simple
      // async functions in terms of async generators, it is especially
      // important to get this right, even though it requires care.
      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later
      // invocations of the iterator.
      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
    } // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).


    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);

  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };

  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.

  exports.async = function (innerFn, outerFn, self, tryLocsList) {
    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));
    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.
    : iter.next().then(function (result) {
      return result.done ? result.value : iter.next();
    });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;
    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        } // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume


        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;

        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);

          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;
        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);
        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;
        var record = tryCatch(innerFn, self, context);

        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done ? GenStateCompleted : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };
        } else if (record.type === "throw") {
          state = GenStateCompleted; // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.

          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  } // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.


  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];

    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError("The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (!info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).

      context.next = delegate.nextLoc; // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.

      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }
    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    } // The delegate iterator is finished, so forget it and continue with
    // the outer generator.


    context.delegate = null;
    return ContinueSentinel;
  } // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.


  defineIteratorMethods(Gp);
  Gp[toStringTagSymbol] = "Generator"; // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.

  Gp[iteratorSymbol] = function () {
    return this;
  };

  Gp.toString = function () {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = {
      tryLoc: locs[0]
    };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{
      tryLoc: "root"
    }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  exports.keys = function (object) {
    var keys = [];

    for (var key in object) {
      keys.push(key);
    }

    keys.reverse(); // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.

    return function next() {
      while (keys.length) {
        var key = keys.pop();

        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      } // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.


      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];

      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1,
            next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;
          return next;
        };

        return next.next = next;
      }
    } // Return an iterator with no values.


    return {
      next: doneResult
    };
  }

  exports.values = values;

  function doneResult() {
    return {
      value: undefined,
      done: true
    };
  }

  Context.prototype = {
    constructor: Context,
    reset: function reset(skipTempReset) {
      this.prev = 0;
      this.next = 0; // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.

      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;
      this.method = "next";
      this.arg = undefined;
      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },
    stop: function stop() {
      this.done = true;
      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;

      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },
    dispatchException: function dispatchException(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;

      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !!caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }
          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }
          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }
          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },
    abrupt: function abrupt(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];

        if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },
    complete: function complete(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" || record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },
    finish: function finish(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];

        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },
    "catch": function _catch(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];

        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;

          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }

          return thrown;
        }
      } // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.


      throw new Error("illegal catch attempt");
    },
    delegateYield: function delegateYield(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  }; // Regardless of whether this script is executing as a CommonJS module
  // or not, return the runtime object so that we can declare the variable
  // regeneratorRuntime in the outer scope, which allows this module to be
  // injected easily by `bin/regenerator --include-runtime script.js`.

  return exports;
}( // If this script is executing as a CommonJS module, use module.exports
// as the regeneratorRuntime namespace. Otherwise create a new empty
// object. Either way, the resulting object will be used to initialize
// the regeneratorRuntime variable at the top of this file.
 true ? module.exports : undefined);

try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  // This module should not be running in strict mode, so the above
  // assignment should always work unless something is misconfigured. Just
  // in case runtime.js accidentally runs in strict mode, we can escape
  // strict mode using a global Function call. This could conceivably fail
  // if a Content Security Policy forbids using Function, but in that case
  // the proper solution is to fix the accidental strict mode problem. If
  // you've misconfigured your bundler to force strict mode and applied a
  // CSP to forbid Function, and you're not willing to fix either of those
  // problems, please detail your unique predicament in a GitHub issue.
  Function("r", "regeneratorRuntime = r")(runtime);
}

/***/ }),
/* 353 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
 // If obj.hasOwnProperty has been overridden, then calling
// obj.hasOwnProperty(prop) will break.
// See: https://github.com/joyent/node/issues/1707

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

module.exports = function (qs, sep, eq, options) {
  sep = sep || '&';
  eq = eq || '=';
  var obj = {};

  if (typeof qs !== 'string' || qs.length === 0) {
    return obj;
  }

  var regexp = /\+/g;
  qs = qs.split(sep);
  var maxKeys = 1000;

  if (options && typeof options.maxKeys === 'number') {
    maxKeys = options.maxKeys;
  }

  var len = qs.length; // maxKeys <= 0 means that we should not limit keys count

  if (maxKeys > 0 && len > maxKeys) {
    len = maxKeys;
  }

  for (var i = 0; i < len; ++i) {
    var x = qs[i].replace(regexp, '%20'),
        idx = x.indexOf(eq),
        kstr,
        vstr,
        k,
        v;

    if (idx >= 0) {
      kstr = x.substr(0, idx);
      vstr = x.substr(idx + 1);
    } else {
      kstr = x;
      vstr = '';
    }

    k = decodeURIComponent(kstr);
    v = decodeURIComponent(vstr);

    if (!hasOwnProperty(obj, k)) {
      obj[k] = v;
    } else if (isArray(obj[k])) {
      obj[k].push(v);
    } else {
      obj[k] = [obj[k], v];
    }
  }

  return obj;
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

/***/ }),
/* 354 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.


var stringifyPrimitive = function stringifyPrimitive(v) {
  switch (typeof v) {
    case 'string':
      return v;

    case 'boolean':
      return v ? 'true' : 'false';

    case 'number':
      return isFinite(v) ? v : '';

    default:
      return '';
  }
};

module.exports = function (obj, sep, eq, name) {
  sep = sep || '&';
  eq = eq || '=';

  if (obj === null) {
    obj = undefined;
  }

  if (typeof obj === 'object') {
    return map(objectKeys(obj), function (k) {
      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;

      if (isArray(obj[k])) {
        return map(obj[k], function (v) {
          return ks + encodeURIComponent(stringifyPrimitive(v));
        }).join(sep);
      } else {
        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
      }
    }).join(sep);
  }

  if (!name) return '';
  return encodeURIComponent(stringifyPrimitive(name)) + eq + encodeURIComponent(stringifyPrimitive(obj));
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

function map(xs, f) {
  if (xs.map) return xs.map(f);
  var res = [];

  for (var i = 0; i < xs.length; i++) {
    res.push(f(xs[i], i));
  }

  return res;
}

var objectKeys = Object.keys || function (obj) {
  var res = [];

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
  }

  return res;
};

/***/ }),
/* 355 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/*! https://mths.be/punycode v1.4.1 by @mathias */
;

(function (root) {
  /** Detect free variables */
  var freeExports =  true && exports && !exports.nodeType && exports;
  var freeModule =  true && module && !module.nodeType && module;
  var freeGlobal = typeof global == 'object' && global;

  if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal) {
    root = freeGlobal;
  }
  /**
   * The `punycode` object.
   * @name punycode
   * @type Object
   */


  var punycode,

  /** Highest positive signed 32-bit float value */
  maxInt = 2147483647,
      // aka. 0x7FFFFFFF or 2^31-1

  /** Bootstring parameters */
  base = 36,
      tMin = 1,
      tMax = 26,
      skew = 38,
      damp = 700,
      initialBias = 72,
      initialN = 128,
      // 0x80
  delimiter = '-',
      // '\x2D'

  /** Regular expressions */
  regexPunycode = /^xn--/,
      regexNonASCII = /[^\x20-\x7E]/,
      // unprintable ASCII chars + non-ASCII chars
  regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g,
      // RFC 3490 separators

  /** Error messages */
  errors = {
    'overflow': 'Overflow: input needs wider integers to process',
    'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
    'invalid-input': 'Invalid input'
  },

  /** Convenience shortcuts */
  baseMinusTMin = base - tMin,
      floor = Math.floor,
      stringFromCharCode = String.fromCharCode,

  /** Temporary variable */
  key;
  /*--------------------------------------------------------------------------*/

  /**
   * A generic error utility function.
   * @private
   * @param {String} type The error type.
   * @returns {Error} Throws a `RangeError` with the applicable error message.
   */

  function error(type) {
    throw new RangeError(errors[type]);
  }
  /**
   * A generic `Array#map` utility function.
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} callback The function that gets called for every array
   * item.
   * @returns {Array} A new array of values returned by the callback function.
   */


  function map(array, fn) {
    var length = array.length;
    var result = [];

    while (length--) {
      result[length] = fn(array[length]);
    }

    return result;
  }
  /**
   * A simple `Array#map`-like wrapper to work with domain name strings or email
   * addresses.
   * @private
   * @param {String} domain The domain name or email address.
   * @param {Function} callback The function that gets called for every
   * character.
   * @returns {Array} A new string of characters returned by the callback
   * function.
   */


  function mapDomain(string, fn) {
    var parts = string.split('@');
    var result = '';

    if (parts.length > 1) {
      // In email addresses, only the domain name should be punycoded. Leave
      // the local part (i.e. everything up to `@`) intact.
      result = parts[0] + '@';
      string = parts[1];
    } // Avoid `split(regex)` for IE8 compatibility. See #17.


    string = string.replace(regexSeparators, '\x2E');
    var labels = string.split('.');
    var encoded = map(labels, fn).join('.');
    return result + encoded;
  }
  /**
   * Creates an array containing the numeric code points of each Unicode
   * character in the string. While JavaScript uses UCS-2 internally,
   * this function will convert a pair of surrogate halves (each of which
   * UCS-2 exposes as separate characters) into a single code point,
   * matching UTF-16.
   * @see `punycode.ucs2.encode`
   * @see <https://mathiasbynens.be/notes/javascript-encoding>
   * @memberOf punycode.ucs2
   * @name decode
   * @param {String} string The Unicode input string (UCS-2).
   * @returns {Array} The new array of code points.
   */


  function ucs2decode(string) {
    var output = [],
        counter = 0,
        length = string.length,
        value,
        extra;

    while (counter < length) {
      value = string.charCodeAt(counter++);

      if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
        // high surrogate, and there is a next character
        extra = string.charCodeAt(counter++);

        if ((extra & 0xFC00) == 0xDC00) {
          // low surrogate
          output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
        } else {
          // unmatched surrogate; only append this code unit, in case the next
          // code unit is the high surrogate of a surrogate pair
          output.push(value);
          counter--;
        }
      } else {
        output.push(value);
      }
    }

    return output;
  }
  /**
   * Creates a string based on an array of numeric code points.
   * @see `punycode.ucs2.decode`
   * @memberOf punycode.ucs2
   * @name encode
   * @param {Array} codePoints The array of numeric code points.
   * @returns {String} The new Unicode string (UCS-2).
   */


  function ucs2encode(array) {
    return map(array, function (value) {
      var output = '';

      if (value > 0xFFFF) {
        value -= 0x10000;
        output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
        value = 0xDC00 | value & 0x3FF;
      }

      output += stringFromCharCode(value);
      return output;
    }).join('');
  }
  /**
   * Converts a basic code point into a digit/integer.
   * @see `digitToBasic()`
   * @private
   * @param {Number} codePoint The basic numeric code point value.
   * @returns {Number} The numeric value of a basic code point (for use in
   * representing integers) in the range `0` to `base - 1`, or `base` if
   * the code point does not represent a value.
   */


  function basicToDigit(codePoint) {
    if (codePoint - 48 < 10) {
      return codePoint - 22;
    }

    if (codePoint - 65 < 26) {
      return codePoint - 65;
    }

    if (codePoint - 97 < 26) {
      return codePoint - 97;
    }

    return base;
  }
  /**
   * Converts a digit/integer into a basic code point.
   * @see `basicToDigit()`
   * @private
   * @param {Number} digit The numeric value of a basic code point.
   * @returns {Number} The basic code point whose value (when used for
   * representing integers) is `digit`, which needs to be in the range
   * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
   * used; else, the lowercase form is used. The behavior is undefined
   * if `flag` is non-zero and `digit` has no uppercase form.
   */


  function digitToBasic(digit, flag) {
    //  0..25 map to ASCII a..z or A..Z
    // 26..35 map to ASCII 0..9
    return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
  }
  /**
   * Bias adaptation function as per section 3.4 of RFC 3492.
   * https://tools.ietf.org/html/rfc3492#section-3.4
   * @private
   */


  function adapt(delta, numPoints, firstTime) {
    var k = 0;
    delta = firstTime ? floor(delta / damp) : delta >> 1;
    delta += floor(delta / numPoints);

    for (;
    /* no initialization */
    delta > baseMinusTMin * tMax >> 1; k += base) {
      delta = floor(delta / baseMinusTMin);
    }

    return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
  }
  /**
   * Converts a Punycode string of ASCII-only symbols to a string of Unicode
   * symbols.
   * @memberOf punycode
   * @param {String} input The Punycode string of ASCII-only symbols.
   * @returns {String} The resulting string of Unicode symbols.
   */


  function decode(input) {
    // Don't use UCS-2
    var output = [],
        inputLength = input.length,
        out,
        i = 0,
        n = initialN,
        bias = initialBias,
        basic,
        j,
        index,
        oldi,
        w,
        k,
        digit,
        t,

    /** Cached calculation results */
    baseMinusT; // Handle the basic code points: let `basic` be the number of input code
    // points before the last delimiter, or `0` if there is none, then copy
    // the first basic code points to the output.

    basic = input.lastIndexOf(delimiter);

    if (basic < 0) {
      basic = 0;
    }

    for (j = 0; j < basic; ++j) {
      // if it's not a basic code point
      if (input.charCodeAt(j) >= 0x80) {
        error('not-basic');
      }

      output.push(input.charCodeAt(j));
    } // Main decoding loop: start just after the last delimiter if any basic code
    // points were copied; start at the beginning otherwise.


    for (index = basic > 0 ? basic + 1 : 0; index < inputLength;)
    /* no final expression */
    {
      // `index` is the index of the next character to be consumed.
      // Decode a generalized variable-length integer into `delta`,
      // which gets added to `i`. The overflow checking is easier
      // if we increase `i` as we go, then subtract off its starting
      // value at the end to obtain `delta`.
      for (oldi = i, w = 1, k = base;;
      /* no condition */
      k += base) {
        if (index >= inputLength) {
          error('invalid-input');
        }

        digit = basicToDigit(input.charCodeAt(index++));

        if (digit >= base || digit > floor((maxInt - i) / w)) {
          error('overflow');
        }

        i += digit * w;
        t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;

        if (digit < t) {
          break;
        }

        baseMinusT = base - t;

        if (w > floor(maxInt / baseMinusT)) {
          error('overflow');
        }

        w *= baseMinusT;
      }

      out = output.length + 1;
      bias = adapt(i - oldi, out, oldi == 0); // `i` was supposed to wrap around from `out` to `0`,
      // incrementing `n` each time, so we'll fix that now:

      if (floor(i / out) > maxInt - n) {
        error('overflow');
      }

      n += floor(i / out);
      i %= out; // Insert `n` at position `i` of the output

      output.splice(i++, 0, n);
    }

    return ucs2encode(output);
  }
  /**
   * Converts a string of Unicode symbols (e.g. a domain name label) to a
   * Punycode string of ASCII-only symbols.
   * @memberOf punycode
   * @param {String} input The string of Unicode symbols.
   * @returns {String} The resulting Punycode string of ASCII-only symbols.
   */


  function encode(input) {
    var n,
        delta,
        handledCPCount,
        basicLength,
        bias,
        j,
        m,
        q,
        k,
        t,
        currentValue,
        output = [],

    /** `inputLength` will hold the number of code points in `input`. */
    inputLength,

    /** Cached calculation results */
    handledCPCountPlusOne,
        baseMinusT,
        qMinusT; // Convert the input in UCS-2 to Unicode

    input = ucs2decode(input); // Cache the length

    inputLength = input.length; // Initialize the state

    n = initialN;
    delta = 0;
    bias = initialBias; // Handle the basic code points

    for (j = 0; j < inputLength; ++j) {
      currentValue = input[j];

      if (currentValue < 0x80) {
        output.push(stringFromCharCode(currentValue));
      }
    }

    handledCPCount = basicLength = output.length; // `handledCPCount` is the number of code points that have been handled;
    // `basicLength` is the number of basic code points.
    // Finish the basic string - if it is not empty - with a delimiter

    if (basicLength) {
      output.push(delimiter);
    } // Main encoding loop:


    while (handledCPCount < inputLength) {
      // All non-basic code points < n have been handled already. Find the next
      // larger one:
      for (m = maxInt, j = 0; j < inputLength; ++j) {
        currentValue = input[j];

        if (currentValue >= n && currentValue < m) {
          m = currentValue;
        }
      } // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
      // but guard against overflow


      handledCPCountPlusOne = handledCPCount + 1;

      if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
        error('overflow');
      }

      delta += (m - n) * handledCPCountPlusOne;
      n = m;

      for (j = 0; j < inputLength; ++j) {
        currentValue = input[j];

        if (currentValue < n && ++delta > maxInt) {
          error('overflow');
        }

        if (currentValue == n) {
          // Represent delta as a generalized variable-length integer
          for (q = delta, k = base;;
          /* no condition */
          k += base) {
            t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;

            if (q < t) {
              break;
            }

            qMinusT = q - t;
            baseMinusT = base - t;
            output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0)));
            q = floor(qMinusT / baseMinusT);
          }

          output.push(stringFromCharCode(digitToBasic(q, 0)));
          bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
          delta = 0;
          ++handledCPCount;
        }
      }

      ++delta;
      ++n;
    }

    return output.join('');
  }
  /**
   * Converts a Punycode string representing a domain name or an email address
   * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
   * it doesn't matter if you call it on a string that has already been
   * converted to Unicode.
   * @memberOf punycode
   * @param {String} input The Punycoded domain name or email address to
   * convert to Unicode.
   * @returns {String} The Unicode representation of the given Punycode
   * string.
   */


  function toUnicode(input) {
    return mapDomain(input, function (string) {
      return regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;
    });
  }
  /**
   * Converts a Unicode string representing a domain name or an email address to
   * Punycode. Only the non-ASCII parts of the domain name will be converted,
   * i.e. it doesn't matter if you call it with a domain that's already in
   * ASCII.
   * @memberOf punycode
   * @param {String} input The domain name or email address to convert, as a
   * Unicode string.
   * @returns {String} The Punycode representation of the given domain name or
   * email address.
   */


  function toASCII(input) {
    return mapDomain(input, function (string) {
      return regexNonASCII.test(string) ? 'xn--' + encode(string) : string;
    });
  }
  /*--------------------------------------------------------------------------*/

  /** Define the public API */


  punycode = {
    /**
     * A string representing the current Punycode.js version number.
     * @memberOf punycode
     * @type String
     */
    'version': '1.4.1',

    /**
     * An object of methods to convert from JavaScript's internal character
     * representation (UCS-2) to Unicode code points, and back.
     * @see <https://mathiasbynens.be/notes/javascript-encoding>
     * @memberOf punycode
     * @type Object
     */
    'ucs2': {
      'decode': ucs2decode,
      'encode': ucs2encode
    },
    'decode': decode,
    'encode': encode,
    'toASCII': toASCII,
    'toUnicode': toUnicode
  };
  /** Expose `punycode` */
  // Some AMD build optimizers, like r.js, check for specific condition patterns
  // like the following:

  if (true) {
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
      return punycode;
    }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(159)(module), __webpack_require__(58)))

/***/ }),
/* 356 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {
  isString: function isString(arg) {
    return typeof arg === 'string';
  },
  isObject: function isObject(arg) {
    return typeof arg === 'object' && arg !== null;
  },
  isNull: function isNull(arg) {
    return arg === null;
  },
  isNullOrUndefined: function isNullOrUndefined(arg) {
    return arg == null;
  }
};

/***/ }),
/* 357 */
/***/ (function(module, exports, __webpack_require__) {

var rng = __webpack_require__(160);

var bytesToUuid = __webpack_require__(161); // **`v1()` - Generate time-based UUID**
//
// Inspired by https://github.com/LiosK/UUID.js
// and http://docs.python.org/library/uuid.html


var _nodeId;

var _clockseq; // Previous uuid creation time


var _lastMSecs = 0;
var _lastNSecs = 0; // See https://github.com/broofa/node-uuid for API details

function v1(options, buf, offset) {
  var i = buf && offset || 0;
  var b = buf || [];
  options = options || {};
  var node = options.node || _nodeId;
  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not
  // specified.  We do this lazily to minimize issues related to insufficient
  // system entropy.  See #189

  if (node == null || clockseq == null) {
    var seedBytes = rng();

    if (node == null) {
      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)
      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];
    }

    if (clockseq == null) {
      // Per 4.2.2, randomize (14 bit) clockseq
      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;
    }
  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,
  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so
  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'
  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.


  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime(); // Per 4.2.1.2, use count of uuid's generated during the current clock
  // cycle to simulate higher resolution clock

  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)

  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression

  if (dt < 0 && options.clockseq === undefined) {
    clockseq = clockseq + 1 & 0x3fff;
  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new
  // time interval


  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {
    nsecs = 0;
  } // Per 4.2.1.2 Throw error if too many uuids are requested


  if (nsecs >= 10000) {
    throw new Error('uuid.v1(): Can\'t create more than 10M uuids/sec');
  }

  _lastMSecs = msecs;
  _lastNSecs = nsecs;
  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch

  msecs += 12219292800000; // `time_low`

  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;
  b[i++] = tl >>> 24 & 0xff;
  b[i++] = tl >>> 16 & 0xff;
  b[i++] = tl >>> 8 & 0xff;
  b[i++] = tl & 0xff; // `time_mid`

  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;
  b[i++] = tmh >>> 8 & 0xff;
  b[i++] = tmh & 0xff; // `time_high_and_version`

  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version

  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)

  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`

  b[i++] = clockseq & 0xff; // `node`

  for (var n = 0; n < 6; ++n) {
    b[i + n] = node[n];
  }

  return buf ? buf : bytesToUuid(b);
}

module.exports = v1;

/***/ }),
/* 358 */
/***/ (function(module, exports, __webpack_require__) {

var rng = __webpack_require__(160);

var bytesToUuid = __webpack_require__(161);

function v4(options, buf, offset) {
  var i = buf && offset || 0;

  if (typeof options == 'string') {
    buf = options === 'binary' ? new Array(16) : null;
    options = null;
  }

  options = options || {};
  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`

  rnds[6] = rnds[6] & 0x0f | 0x40;
  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided

  if (buf) {
    for (var ii = 0; ii < 16; ++ii) {
      buf[i + ii] = rnds[ii];
    }
  }

  return buf || bytesToUuid(rnds);
}

module.exports = v4;

/***/ }),
/* 359 */
/***/ (function(module, exports) {

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

module.exports = _objectWithoutPropertiesLoose;

/***/ }),
/* 360 */
/***/ (function(module, exports) {

function _isNativeFunction(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}

module.exports = _isNativeFunction;

/***/ }),
/* 361 */
/***/ (function(module, exports) {

module.exports = function () {
  var object = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return md5(JSON.stringify(object, null));
};

function md5(string) {
  function cmn(q, a, b, x, s, t) {
    a = add32(add32(a, q), add32(x, t));
    return add32(a << s | a >>> 32 - s, b);
  }

  function ff(a, b, c, d, x, s, t) {
    return cmn(b & c | ~b & d, a, b, x, s, t);
  }

  function gg(a, b, c, d, x, s, t) {
    return cmn(b & d | c & ~d, a, b, x, s, t);
  }

  function hh(a, b, c, d, x, s, t) {
    return cmn(b ^ c ^ d, a, b, x, s, t);
  }

  function ii(a, b, c, d, x, s, t) {
    return cmn(c ^ (b | ~d), a, b, x, s, t);
  }

  function md5cycle(x, k) {
    var a = x[0],
        b = x[1],
        c = x[2],
        d = x[3];
    a = ff(a, b, c, d, k[0], 7, -680876936);
    d = ff(d, a, b, c, k[1], 12, -389564586);
    c = ff(c, d, a, b, k[2], 17, 606105819);
    b = ff(b, c, d, a, k[3], 22, -1044525330);
    a = ff(a, b, c, d, k[4], 7, -176418897);
    d = ff(d, a, b, c, k[5], 12, 1200080426);
    c = ff(c, d, a, b, k[6], 17, -1473231341);
    b = ff(b, c, d, a, k[7], 22, -45705983);
    a = ff(a, b, c, d, k[8], 7, 1770035416);
    d = ff(d, a, b, c, k[9], 12, -1958414417);
    c = ff(c, d, a, b, k[10], 17, -42063);
    b = ff(b, c, d, a, k[11], 22, -1990404162);
    a = ff(a, b, c, d, k[12], 7, 1804603682);
    d = ff(d, a, b, c, k[13], 12, -40341101);
    c = ff(c, d, a, b, k[14], 17, -1502002290);
    b = ff(b, c, d, a, k[15], 22, 1236535329);
    a = gg(a, b, c, d, k[1], 5, -165796510);
    d = gg(d, a, b, c, k[6], 9, -1069501632);
    c = gg(c, d, a, b, k[11], 14, 643717713);
    b = gg(b, c, d, a, k[0], 20, -373897302);
    a = gg(a, b, c, d, k[5], 5, -701558691);
    d = gg(d, a, b, c, k[10], 9, 38016083);
    c = gg(c, d, a, b, k[15], 14, -660478335);
    b = gg(b, c, d, a, k[4], 20, -405537848);
    a = gg(a, b, c, d, k[9], 5, 568446438);
    d = gg(d, a, b, c, k[14], 9, -1019803690);
    c = gg(c, d, a, b, k[3], 14, -187363961);
    b = gg(b, c, d, a, k[8], 20, 1163531501);
    a = gg(a, b, c, d, k[13], 5, -1444681467);
    d = gg(d, a, b, c, k[2], 9, -51403784);
    c = gg(c, d, a, b, k[7], 14, 1735328473);
    b = gg(b, c, d, a, k[12], 20, -1926607734);
    a = hh(a, b, c, d, k[5], 4, -378558);
    d = hh(d, a, b, c, k[8], 11, -2022574463);
    c = hh(c, d, a, b, k[11], 16, 1839030562);
    b = hh(b, c, d, a, k[14], 23, -35309556);
    a = hh(a, b, c, d, k[1], 4, -1530992060);
    d = hh(d, a, b, c, k[4], 11, 1272893353);
    c = hh(c, d, a, b, k[7], 16, -155497632);
    b = hh(b, c, d, a, k[10], 23, -1094730640);
    a = hh(a, b, c, d, k[13], 4, 681279174);
    d = hh(d, a, b, c, k[0], 11, -358537222);
    c = hh(c, d, a, b, k[3], 16, -722521979);
    b = hh(b, c, d, a, k[6], 23, 76029189);
    a = hh(a, b, c, d, k[9], 4, -640364487);
    d = hh(d, a, b, c, k[12], 11, -421815835);
    c = hh(c, d, a, b, k[15], 16, 530742520);
    b = hh(b, c, d, a, k[2], 23, -995338651);
    a = ii(a, b, c, d, k[0], 6, -198630844);
    d = ii(d, a, b, c, k[7], 10, 1126891415);
    c = ii(c, d, a, b, k[14], 15, -1416354905);
    b = ii(b, c, d, a, k[5], 21, -57434055);
    a = ii(a, b, c, d, k[12], 6, 1700485571);
    d = ii(d, a, b, c, k[3], 10, -1894986606);
    c = ii(c, d, a, b, k[10], 15, -1051523);
    b = ii(b, c, d, a, k[1], 21, -2054922799);
    a = ii(a, b, c, d, k[8], 6, 1873313359);
    d = ii(d, a, b, c, k[15], 10, -30611744);
    c = ii(c, d, a, b, k[6], 15, -1560198380);
    b = ii(b, c, d, a, k[13], 21, 1309151649);
    a = ii(a, b, c, d, k[4], 6, -145523070);
    d = ii(d, a, b, c, k[11], 10, -1120210379);
    c = ii(c, d, a, b, k[2], 15, 718787259);
    b = ii(b, c, d, a, k[9], 21, -343485551);
    x[0] = add32(a, x[0]);
    x[1] = add32(b, x[1]);
    x[2] = add32(c, x[2]);
    x[3] = add32(d, x[3]);
  }

  function md51(s) {
    var txt,
        n = s.length,
        state = [1732584193, -271733879, -1732584194, 271733878],
        i;

    for (i = 64; i <= n; i += 64) {
      md5cycle(state, md5blk(s.substring(i - 64, i)));
    }

    s = s.substring(i - 64);
    var tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        sl = s.length;

    for (i = 0; i < sl; i++) {
      tail[i >> 2] |= s.charCodeAt(i) << (i % 4 << 3);
    }

    tail[i >> 2] |= 0x80 << (i % 4 << 3);

    if (i > 55) {
      md5cycle(state, tail);
      i = 16;

      while (i--) {
        tail[i] = 0;
      } //			for (i=0; i<16; i++) tail[i] = 0;

    }

    tail[14] = n * 8;
    md5cycle(state, tail);
    return state;
  }
  /* there needs to be support for Unicode here,
   * unless we pretend that we can redefine the MD-5
   * algorithm for multi-byte characters (perhaps
   * by adding every four 16-bit characters and
   * shortening the sum to 32 bits). Otherwise
   * I suggest performing MD-5 as if every character
   * was two bytes--e.g., 0040 0025 = @%--but then
   * how will an ordinary MD-5 sum be matched?
   * There is no way to standardize text to something
   * like UTF-8 before transformation; speed cost is
   * utterly prohibitive. The JavaScript standard
   * itself needs to look at this: it should start
   * providing access to strings as preformed UTF-8
   * 8-bit unsigned value arrays.
   */


  function md5blk(s) {
    /* I figured global was faster.   */
    var md5blks = [],
        i;
    /* Andy King said do it this way. */

    for (i = 0; i < 64; i += 4) {
      md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);
    }

    return md5blks;
  }

  var hex_chr = '0123456789abcdef'.split('');

  function rhex(n) {
    var s = '',
        j = 0;

    for (; j < 4; j++) {
      s += hex_chr[n >> j * 8 + 4 & 0x0f] + hex_chr[n >> j * 8 & 0x0f];
    }

    return s;
  }

  function hex(x) {
    var l = x.length;

    for (var i = 0; i < l; i++) {
      x[i] = rhex(x[i]);
    }

    return x.join('');
  }
  /* this function is much faster,
  so if possible we use it. Some IEs
  are the only ones I know of that
  need the idiotic second function,
  generated by an if clause.  */


  function add32(a, b) {
    return a + b & 0xffffffff;
  }

  if (hex(md51('hello')) != '5d41402abc4b2a76b9719d911017c592') {
    var _add = function _add(x, y) {
      var lsw = (x & 0xffff) + (y & 0xffff),
          msw = (x >> 16) + (y >> 16) + (lsw >> 16);
      return msw << 16 | lsw & 0xffff;
    };
  }

  return hex(md51(string));
}

/***/ }),
/* 362 */
/***/ (function(module, exports, __webpack_require__) {

var indexOf = __webpack_require__(363);

var Object_keys = function Object_keys(obj) {
  if (Object.keys) return Object.keys(obj);else {
    var res = [];

    for (var key in obj) {
      res.push(key);
    }

    return res;
  }
};

var forEach = function forEach(xs, fn) {
  if (xs.forEach) return xs.forEach(fn);else for (var i = 0; i < xs.length; i++) {
    fn(xs[i], i, xs);
  }
};

var defineProp = function () {
  try {
    Object.defineProperty({}, '_', {});
    return function (obj, name, value) {
      Object.defineProperty(obj, name, {
        writable: true,
        enumerable: false,
        configurable: true,
        value: value
      });
    };
  } catch (e) {
    return function (obj, name, value) {
      obj[name] = value;
    };
  }
}();

var globals = ['Array', 'Boolean', 'Date', 'Error', 'EvalError', 'Function', 'Infinity', 'JSON', 'Math', 'NaN', 'Number', 'Object', 'RangeError', 'ReferenceError', 'RegExp', 'String', 'SyntaxError', 'TypeError', 'URIError', 'decodeURI', 'decodeURIComponent', 'encodeURI', 'encodeURIComponent', 'escape', 'eval', 'isFinite', 'isNaN', 'parseFloat', 'parseInt', 'undefined', 'unescape'];

function Context() {}

Context.prototype = {};

var Script = exports.Script = function NodeScript(code) {
  if (!(this instanceof Script)) return new Script(code);
  this.code = code;
};

Script.prototype.runInContext = function (context) {
  if (!(context instanceof Context)) {
    throw new TypeError("needs a 'context' argument.");
  }

  var iframe = document.createElement('iframe');
  if (!iframe.style) iframe.style = {};
  iframe.style.display = 'none';
  document.body.appendChild(iframe);
  var win = iframe.contentWindow;
  var wEval = win.eval,
      wExecScript = win.execScript;

  if (!wEval && wExecScript) {
    // win.eval() magically appears when this is called in IE:
    wExecScript.call(win, 'null');
    wEval = win.eval;
  }

  forEach(Object_keys(context), function (key) {
    win[key] = context[key];
  });
  forEach(globals, function (key) {
    if (context[key]) {
      win[key] = context[key];
    }
  });
  var winKeys = Object_keys(win);
  var res = wEval.call(win, this.code);
  forEach(Object_keys(win), function (key) {
    // Avoid copying circular objects like `top` and `window` by only
    // updating existing context properties or new properties in the `win`
    // that was only introduced after the eval.
    if (key in context || indexOf(winKeys, key) === -1) {
      context[key] = win[key];
    }
  });
  forEach(globals, function (key) {
    if (!(key in context)) {
      defineProp(context, key, win[key]);
    }
  });
  document.body.removeChild(iframe);
  return res;
};

Script.prototype.runInThisContext = function () {
  return eval(this.code); // maybe...
};

Script.prototype.runInNewContext = function (context) {
  var ctx = Script.createContext(context);
  var res = this.runInContext(ctx);
  forEach(Object_keys(ctx), function (key) {
    context[key] = ctx[key];
  });
  return res;
};

forEach(Object_keys(Script.prototype), function (name) {
  exports[name] = Script[name] = function (code) {
    var s = Script(code);
    return s[name].apply(s, [].slice.call(arguments, 1));
  };
});

exports.createScript = function (code) {
  return exports.Script(code);
};

exports.createContext = Script.createContext = function (context) {
  var copy = new Context();

  if (typeof context === 'object') {
    forEach(Object_keys(context), function (key) {
      copy[key] = context[key];
    });
  }

  return copy;
};

/***/ }),
/* 363 */
/***/ (function(module, exports) {

var indexOf = [].indexOf;

module.exports = function (arr, obj) {
  if (indexOf) return arr.indexOf(obj);

  for (var i = 0; i < arr.length; ++i) {
    if (arr[i] === obj) return i;
  }

  return -1;
};

/***/ }),
/* 364 */
/***/ (function(module, exports) {

var indexOf = function indexOf(xs, item) {
  if (xs.indexOf) return xs.indexOf(item);else for (var i = 0; i < xs.length; i++) {
    if (xs[i] === item) return i;
  }
  return -1;
};

var Object_keys = function Object_keys(obj) {
  if (Object.keys) return Object.keys(obj);else {
    var res = [];

    for (var key in obj) {
      res.push(key);
    }

    return res;
  }
};

var forEach = function forEach(xs, fn) {
  if (xs.forEach) return xs.forEach(fn);else for (var i = 0; i < xs.length; i++) {
    fn(xs[i], i, xs);
  }
};

var defineProp = function () {
  try {
    Object.defineProperty({}, '_', {});
    return function (obj, name, value) {
      Object.defineProperty(obj, name, {
        writable: true,
        enumerable: false,
        configurable: true,
        value: value
      });
    };
  } catch (e) {
    return function (obj, name, value) {
      obj[name] = value;
    };
  }
}();

var globals = ['Array', 'Boolean', 'Date', 'Error', 'EvalError', 'Function', 'Infinity', 'JSON', 'Math', 'NaN', 'Number', 'Object', 'RangeError', 'ReferenceError', 'RegExp', 'String', 'SyntaxError', 'TypeError', 'URIError', 'decodeURI', 'decodeURIComponent', 'encodeURI', 'encodeURIComponent', 'escape', 'eval', 'isFinite', 'isNaN', 'parseFloat', 'parseInt', 'undefined', 'unescape'];

function Context() {}

Context.prototype = {};

var Script = exports.Script = function NodeScript(code) {
  if (!(this instanceof Script)) return new Script(code);
  this.code = code;
};

Script.prototype.runInContext = function (context) {
  if (!(context instanceof Context)) {
    throw new TypeError("needs a 'context' argument.");
  }

  var iframe = document.createElement('iframe');
  if (!iframe.style) iframe.style = {};
  iframe.style.display = 'none';
  document.body.appendChild(iframe);
  var win = iframe.contentWindow;
  var wEval = win.eval,
      wExecScript = win.execScript;

  if (!wEval && wExecScript) {
    // win.eval() magically appears when this is called in IE:
    wExecScript.call(win, 'null');
    wEval = win.eval;
  }

  forEach(Object_keys(context), function (key) {
    win[key] = context[key];
  });
  forEach(globals, function (key) {
    if (context[key]) {
      win[key] = context[key];
    }
  });
  var winKeys = Object_keys(win);
  var res = wEval.call(win, this.code);
  forEach(Object_keys(win), function (key) {
    // Avoid copying circular objects like `top` and `window` by only
    // updating existing context properties or new properties in the `win`
    // that was only introduced after the eval.
    if (key in context || indexOf(winKeys, key) === -1) {
      context[key] = win[key];
    }
  });
  forEach(globals, function (key) {
    if (!(key in context)) {
      defineProp(context, key, win[key]);
    }
  });
  document.body.removeChild(iframe);
  return res;
};

Script.prototype.runInThisContext = function () {
  return eval(this.code); // maybe...
};

Script.prototype.runInNewContext = function (context) {
  var ctx = Script.createContext(context);
  var res = this.runInContext(ctx);

  if (context) {
    forEach(Object_keys(ctx), function (key) {
      context[key] = ctx[key];
    });
  }

  return res;
};

forEach(Object_keys(Script.prototype), function (name) {
  exports[name] = Script[name] = function (code) {
    var s = Script(code);
    return s[name].apply(s, [].slice.call(arguments, 1));
  };
});

exports.isContext = function (context) {
  return context instanceof Context;
};

exports.createScript = function (code) {
  return exports.Script(code);
};

exports.createContext = Script.createContext = function (context) {
  var copy = new Context();

  if (typeof context === 'object') {
    forEach(Object_keys(context), function (key) {
      copy[key] = context[key];
    });
  }

  return copy;
};

/***/ }),
/* 365 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
// This method of obtaining a reference to the global object needs to be
// kept identical to the way it is obtained in runtime.js
var g = function () {
  return this || typeof self === "object" && self;
}() || Function("return this")(); // Use `getOwnPropertyNames` because not all browsers support calling
// `hasOwnProperty` on the global `self` object in a worker. See #183.


var hadRuntime = g.regeneratorRuntime && Object.getOwnPropertyNames(g).indexOf("regeneratorRuntime") >= 0; // Save the old regeneratorRuntime in case it needs to be restored later.

var oldRuntime = hadRuntime && g.regeneratorRuntime; // Force reevalutation of runtime.js.

g.regeneratorRuntime = undefined;
module.exports = __webpack_require__(366);

if (hadRuntime) {
  // Restore the original runtime.
  g.regeneratorRuntime = oldRuntime;
} else {
  // Remove the global property added by runtime.js.
  try {
    delete g.regeneratorRuntime;
  } catch (e) {
    g.regeneratorRuntime = undefined;
  }
}

/***/ }),
/* 366 */
/***/ (function(module, exports) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
!function (global) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.

  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";
  var inModule = typeof module === "object";
  var runtime = global.regeneratorRuntime;

  if (runtime) {
    if (inModule) {
      // If regeneratorRuntime is defined globally and we're in a module,
      // make the exports object identical to regeneratorRuntime.
      module.exports = runtime;
    } // Don't bother evaluating the rest of this file if the runtime was
    // already defined globally.


    return;
  } // Define the runtime globally (as expected by generated code) as either
  // module.exports (if we're in a module) or a new, empty object.


  runtime = global.regeneratorRuntime = inModule ? module.exports : {};

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.

    generator._invoke = makeInvokeMethod(innerFn, self, context);
    return generator;
  }

  runtime.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.

  function tryCatch(fn, obj, arg) {
    try {
      return {
        type: "normal",
        arg: fn.call(obj, arg)
      };
    } catch (err) {
      return {
        type: "throw",
        arg: err
      };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed"; // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.

  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.

  function Generator() {}

  function GeneratorFunction() {}

  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.


  var IteratorPrototype = {};

  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));

  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = "GeneratorFunction"; // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.

  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function (method) {
      prototype[method] = function (arg) {
        return this._invoke(method, arg);
      };
    });
  }

  runtime.isGeneratorFunction = function (genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can
    // do is to check its .name property.
    (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
  };

  runtime.mark = function (genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;

      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }

    genFun.prototype = Object.create(Gp);
    return genFun;
  }; // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.


  runtime.awrap = function (arg) {
    return {
      __await: arg
    };
  };

  function AsyncIterator(generator) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);

      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;

        if (value && typeof value === "object" && hasOwn.call(value, "__await")) {
          return Promise.resolve(value.__await).then(function (value) {
            invoke("next", value, resolve, reject);
          }, function (err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return Promise.resolve(value).then(function (unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function (error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new Promise(function (resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise = // If enqueue has been called before, then we want to wait until
      // all previous Promises have been resolved before calling invoke,
      // so that results are always delivered in the correct order. If
      // enqueue has not been called before, then it is important to
      // call invoke immediately, without waiting on a callback to fire,
      // so that the async generator function has the opportunity to do
      // any necessary setup in a predictable way. This predictability
      // is why the Promise constructor synchronously invokes its
      // executor callback, and why async functions synchronously
      // execute code before the first await. Since we implement simple
      // async functions in terms of async generators, it is especially
      // important to get this right, even though it requires care.
      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later
      // invocations of the iterator.
      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
    } // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).


    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);

  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };

  runtime.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.

  runtime.async = function (innerFn, outerFn, self, tryLocsList) {
    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));
    return runtime.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.
    : iter.next().then(function (result) {
      return result.done ? result.value : iter.next();
    });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;
    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        } // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume


        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;

        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);

          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;
        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);
        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;
        var record = tryCatch(innerFn, self, context);

        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done ? GenStateCompleted : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };
        } else if (record.type === "throw") {
          state = GenStateCompleted; // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.

          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  } // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.


  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];

    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        if (delegate.iterator.return) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError("The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (!info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).

      context.next = delegate.nextLoc; // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.

      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }
    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    } // The delegate iterator is finished, so forget it and continue with
    // the outer generator.


    context.delegate = null;
    return ContinueSentinel;
  } // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.


  defineIteratorMethods(Gp);
  Gp[toStringTagSymbol] = "Generator"; // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.

  Gp[iteratorSymbol] = function () {
    return this;
  };

  Gp.toString = function () {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = {
      tryLoc: locs[0]
    };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{
      tryLoc: "root"
    }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  runtime.keys = function (object) {
    var keys = [];

    for (var key in object) {
      keys.push(key);
    }

    keys.reverse(); // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.

    return function next() {
      while (keys.length) {
        var key = keys.pop();

        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      } // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.


      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];

      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1,
            next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;
          return next;
        };

        return next.next = next;
      }
    } // Return an iterator with no values.


    return {
      next: doneResult
    };
  }

  runtime.values = values;

  function doneResult() {
    return {
      value: undefined,
      done: true
    };
  }

  Context.prototype = {
    constructor: Context,
    reset: function reset(skipTempReset) {
      this.prev = 0;
      this.next = 0; // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.

      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;
      this.method = "next";
      this.arg = undefined;
      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },
    stop: function stop() {
      this.done = true;
      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;

      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },
    dispatchException: function dispatchException(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;

      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !!caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }
          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }
          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }
          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },
    abrupt: function abrupt(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];

        if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },
    complete: function complete(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" || record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },
    finish: function finish(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];

        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },
    "catch": function _catch(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];

        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;

          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }

          return thrown;
        }
      } // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.


      throw new Error("illegal catch attempt");
    },
    delegateYield: function delegateYield(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };
}( // In sloppy mode, unbound `this` refers to the global object, fallback to
// Function constructor if we're in global strict mode. That is sadly a form
// of indirect eval which violates Content Security Policy.
function () {
  return this || typeof self === "object" && self;
}() || Function("return this")());

/***/ }),
/* 367 */
/***/ (function(module, exports) {

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

module.exports = _arrayWithHoles;

/***/ }),
/* 368 */
/***/ (function(module, exports) {

function _iterableToArrayLimit(arr, i) {
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

module.exports = _iterableToArrayLimit;

/***/ }),
/* 369 */
/***/ (function(module, exports) {

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance");
}

module.exports = _nonIterableRest;

/***/ }),
/* 370 */
/***/ (function(module, exports) {

function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    module.exports = _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    module.exports = _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

module.exports = _typeof;

/***/ }),
/* 371 */
/***/ (function(module, exports) {

function _setPrototypeOf(o, p) {
  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

module.exports = _setPrototypeOf;

/***/ }),
/* 372 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: /Users/jon/Projects/@skypager/src/runtime/lib/es/index.js
var es = __webpack_require__(69);

// EXTERNAL MODULE: /Users/jon/Projects/@skypager/src/helpers/client/lib/skypager-helpers-client.min.js
var skypager_helpers_client_min = __webpack_require__(168);

// EXTERNAL MODULE: ./src/features/asset-loaders.js
var asset_loaders = __webpack_require__(169);

// EXTERNAL MODULE: /Users/jon/Projects/@skypager/node_modules/@babel/runtime/helpers/objectSpread.js
var objectSpread = __webpack_require__(77);
var objectSpread_default = /*#__PURE__*/__webpack_require__.n(objectSpread);

// EXTERNAL MODULE: /Users/jon/Projects/@skypager/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__(46);
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: /Users/jon/Projects/@skypager/node_modules/@babel/runtime/helpers/asyncToGenerator.js
var asyncToGenerator = __webpack_require__(76);
var asyncToGenerator_default = /*#__PURE__*/__webpack_require__.n(asyncToGenerator);

// EXTERNAL MODULE: /Users/jon/Projects/@skypager/node_modules/@babel/runtime/helpers/classCallCheck.js
var classCallCheck = __webpack_require__(92);
var classCallCheck_default = /*#__PURE__*/__webpack_require__.n(classCallCheck);

// EXTERNAL MODULE: /Users/jon/Projects/@skypager/node_modules/@babel/runtime/helpers/createClass.js
var createClass = __webpack_require__(93);
var createClass_default = /*#__PURE__*/__webpack_require__.n(createClass);

// EXTERNAL MODULE: /Users/jon/Projects/@skypager/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js
var possibleConstructorReturn = __webpack_require__(94);
var possibleConstructorReturn_default = /*#__PURE__*/__webpack_require__.n(possibleConstructorReturn);

// EXTERNAL MODULE: /Users/jon/Projects/@skypager/node_modules/@babel/runtime/helpers/getPrototypeOf.js
var getPrototypeOf = __webpack_require__(95);
var getPrototypeOf_default = /*#__PURE__*/__webpack_require__.n(getPrototypeOf);

// EXTERNAL MODULE: /Users/jon/Projects/@skypager/node_modules/@babel/runtime/helpers/assertThisInitialized.js
var assertThisInitialized = __webpack_require__(75);
var assertThisInitialized_default = /*#__PURE__*/__webpack_require__.n(assertThisInitialized);

// EXTERNAL MODULE: /Users/jon/Projects/@skypager/node_modules/@babel/runtime/helpers/inherits.js
var inherits = __webpack_require__(96);
var inherits_default = /*#__PURE__*/__webpack_require__.n(inherits);

// EXTERNAL MODULE: /Users/jon/Projects/@skypager/node_modules/@babel/runtime/helpers/defineProperty.js
var defineProperty = __webpack_require__(61);
var defineProperty_default = /*#__PURE__*/__webpack_require__.n(defineProperty);

// CONCATENATED MODULE: ./src/features/babel.js
var Feature=es["b" /* default */].Feature;/**
 * @class BabelCompiler
 * @extends Feature
 * @classdesc loads the babel standalone library from a CDN and provides a way to run code written with the latest features
 * directly in the browser.  Can be used to power editable code blocks that contain JSX for example, and render the output as
 * the editor is saved.
 *
 * @example
 *
 * import skypager from '@skypager/web'
 * import React, { Component } from 'react'
 * import AceEditor from 'react-ace'
 *
 * skypager.use('babel')
 *
 * class ComponentSandbox extends Component {
 *   state = {
 *     es6Source: '',
 *     transpiledOutput: '',
 *   }
 *
 *   async componentDidMount() {
 *      const { debounce } = skypager.lodash
 *      await skypager.babel.whenReady()
 *      // give the programmer a chance to finish typing
 *      this.handleCodeChange = debounce(this.compileCode, 300)
 *   }
 *
 *   compileCode = () => {
 *      const transpiledOutput = await skypager.babel.compile(this.state.es6Source)
 *      this.setState({ transpiledOutput })
 *   }
 *
 *   handleEdit = (es6Source) => {
 *     this.setState({ es6Source }, this.handleCodeChange)
 *     const transpiledOutput = skypager.babel.compile(source)
 *   }
 *
 *   render() {
 *
 *      return (
 *        <div>
 *          <AceEditor
 *            onChange={this.handleEdit}
 *            value={this.state.es6Source} />
 *          <br/>
 *          <ComponentRenderer source={this.transpiledOutput} />
 *        </div>
 *      )
 *   }
 * }
 *
 */var babel_BabelCompiler=/*#__PURE__*/function(_Feature){inherits_default()(BabelCompiler,_Feature);function BabelCompiler(){var _getPrototypeOf2;var _this;classCallCheck_default()(this,BabelCompiler);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=possibleConstructorReturn_default()(this,(_getPrototypeOf2=getPrototypeOf_default()(BabelCompiler)).call.apply(_getPrototypeOf2,[this].concat(args)));defineProperty_default()(assertThisInitialized_default()(_this),"shortcut",'babel');return _this;}createClass_default()(BabelCompiler,[{key:"featureWasEnabled",value:function(){var _featureWasEnabled=asyncToGenerator_default()(/*#__PURE__*/regenerator_default.a.mark(function _callee(){var _this2=this;var options,_args=arguments;return regenerator_default.a.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:options=_args.length>0&&_args[0]!==undefined?_args[0]:{};this.hide('babelConfig',this.lodash.pick(options,'presets','plugins'));_context.next=4;return this.loadBabel(options)["catch"](function(error){_this2.runtime.error("Error loading babel: ".concat(error.message));});case 4:case"end":return _context.stop();}}},_callee,this);}));function featureWasEnabled(){return _featureWasEnabled.apply(this,arguments);}return featureWasEnabled;}()/**
   * @param {String} code the code you wish to compile a sandbox
   * @param {Object} options options for the code runner
   * @param {Object} context things to inject into the context
   * @returns {Function} a function which will compile your code and run it in a sandbox. This function accepts an object which will be added to the sandbox scope
   *
   * @example
   *
   * const babel = runtime.feature('babel')
   * const runner = babel.createCodeRunner(`console.log(myVar)`)
   *
   * runner({ myVar: 1 }).then((result) => {
   *   console.log(result)
   * })
   */},{key:"createCodeRunner",value:function createCodeRunner(code){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var context=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var runtime=this.runtime;var vm=runtime.vm;var _this$lodash=this.lodash,mapValues=_this$lodash.mapValues,pick=_this$lodash.pick;var compiled=this.compile(code,options);var script=vm.createScript(compiled);var me=this;return codeRunner;/**
     * @param {Object} vars variables that will be considered part of window inside your code
     */function codeRunner(){var vars=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var sandbox=options.vmContext||vm.createContext(objectSpread_default()({runtime:runtime,skypager:runtime},context));mapValues(vars,function(v,k){sandbox[k]=v;});var result=options.thisContext?script.runInThisContext():script.runInContext(sandbox);me.lastSandbox=sandbox;return options.sandbox?{vars:vars,result:result,sandbox:sandbox,compiled:compiled}:result;}}/**
   * Compile es6 code with babel
   *
   * @param {String} code
   * @param {Object} [options={}] options to pass to babel
   * @returns {String} the compiled code
   * @memberof BabelCompiler
   */},{key:"compile",value:function compile(code){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var _window=window,Babel=_window.Babel;var omit=this.lodash.omit;var babelOptions=objectSpread_default()({presets:['es2015',['stage-2',{decoratorsLegacy:true}],'react']},this.babelConfig||{},omit(options,'sandbox'));return Babel.transform(code,babelOptions).code;}/**
   * @property {{ createScript: function, createContext: function, runInContext: function, runInThisContext: function }} vm the vm module interface
   * @memberof BabelCompiler
   */},{key:"whenReady",/**
   * Waits until Babel standalone compiler is available
   *
   * @param {Function} [fn] use a callback style, omitting this value will return a promise
   * @returns {PromiseLike}
   * @memberof BabelCompiler
   */value:function whenReady(fn){var _this3=this;if(typeof fn==='undefined'){return new Promise(function(resolve,reject){_this3.whenReady(function(err,Babel){err?reject(err):resolve(Babel);});});}if(this.ready){fn(null,window.Babel);}else{this.once('ready',function(Babel){fn(null,Babel);});}}/**
   * Loads the Babel standalone library
   * @private
   */},{key:"loadBabel",value:function(){var _loadBabel=asyncToGenerator_default()(/*#__PURE__*/regenerator_default.a.mark(function _callee2(){var _this4=this;var options,runtime,assetLoader,_args2=arguments;return regenerator_default.a.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:options=_args2.length>0&&_args2[0]!==undefined?_args2[0]:{};runtime=this.runtime;assetLoader=runtime.assetLoader;if(!this.loading){_context2.next=5;break;}return _context2.abrupt("return",new Promise(function(resolve){setTimeout(resolve,20);}).then(function(){return _this4.loadBabel();}));case 5:if(!window.Babel){_context2.next=9;break;}this.ready=true;this.emit('ready',window.Babel);return _context2.abrupt("return",window.Babel);case 9:this.loading=true;_context2.next=12;return assetLoader.inject.js("https://unpkg.com/@babel/standalone@7.0.0/babel.min.js");case 12:this.ready=true;this.loading=false;this.emit('ready',window.Babel);return _context2.abrupt("return",window.Babel);case 16:case"end":return _context2.stop();}}},_callee2,this);}));function loadBabel(){return _loadBabel.apply(this,arguments);}return loadBabel;}()},{key:"vm",get:function get(){return this.runtime.vm;}}]);return BabelCompiler;}(Feature);defineProperty_default()(babel_BabelCompiler,"shortcut",'babel');
// EXTERNAL MODULE: ./src/features/window-messaging.js
var window_messaging = __webpack_require__(171);

// CONCATENATED MODULE: ./src/index.js
var webRuntime=es["b" /* default */];webRuntime.features.register('asset-loaders',function(){return asset_loaders["a" /* default */];});webRuntime.features.register('babel',function(){return babel_BabelCompiler;});webRuntime.features.register('window-messaging',window_messaging);webRuntime/**
   * The @skypager/web runtime bundles the ClientHelper which lets build REST clients using the axios library.
   */.use(skypager_helpers_client_min)/**
   * The asset loaders feature is enabled by default
   */.use('asset-loaders');/**
 * @typedef {Object} WebRuntime
 * @property {Function} client
 *//* harmony default export */ var src = __webpack_exports__["default"] = (webRuntime);

/***/ })
/******/ ]);
});